[{"name":"AVIF","description":"com.github.panpf.sketch.decode.internal.ImageFormat.AVIF","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/-a-v-i-f/index.html","searchKeys":["AVIF","AVIF","com.github.panpf.sketch.decode.internal.ImageFormat.AVIF"]},{"name":"Assert","description":"com.github.panpf.sketch.util.Logger.Level.Assert","location":"sketch-core/com.github.panpf.sketch.util/-logger/-level/-assert/index.html","searchKeys":["Assert","Assert","com.github.panpf.sketch.util.Logger.Level.Assert"]},{"name":"BMP","description":"com.github.panpf.sketch.decode.internal.ImageFormat.BMP","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/-b-m-p/index.html","searchKeys":["BMP","BMP","com.github.panpf.sketch.decode.internal.ImageFormat.BMP"]},{"name":"CENTER_CROP","description":"com.github.panpf.sketch.resize.Scale.CENTER_CROP","location":"sketch-core/com.github.panpf.sketch.resize/-scale/-c-e-n-t-e-r_-c-r-o-p/index.html","searchKeys":["CENTER_CROP","CENTER_CROP","com.github.panpf.sketch.resize.Scale.CENTER_CROP"]},{"name":"DISABLED","description":"com.github.panpf.sketch.cache.CachePolicy.DISABLED","location":"sketch-core/com.github.panpf.sketch.cache/-cache-policy/-d-i-s-a-b-l-e-d/index.html","searchKeys":["DISABLED","DISABLED","com.github.panpf.sketch.cache.CachePolicy.DISABLED"]},{"name":"DOWNLOAD_CACHE","description":"com.github.panpf.sketch.source.DataFrom.DOWNLOAD_CACHE","location":"sketch-core/com.github.panpf.sketch.source/-data-from/-d-o-w-n-l-o-a-d_-c-a-c-h-e/index.html","searchKeys":["DOWNLOAD_CACHE","DOWNLOAD_CACHE","com.github.panpf.sketch.source.DataFrom.DOWNLOAD_CACHE"]},{"name":"Debug","description":"com.github.panpf.sketch.util.Logger.Level.Debug","location":"sketch-core/com.github.panpf.sketch.util/-logger/-level/-debug/index.html","searchKeys":["Debug","Debug","com.github.panpf.sketch.util.Logger.Level.Debug"]},{"name":"Default","description":"com.github.panpf.sketch.fetch.Base64Spec.Default","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-spec/-default/index.html","searchKeys":["Default","Default","com.github.panpf.sketch.fetch.Base64Spec.Default"]},{"name":"ENABLED","description":"com.github.panpf.sketch.cache.CachePolicy.ENABLED","location":"sketch-core/com.github.panpf.sketch.cache/-cache-policy/-e-n-a-b-l-e-d/index.html","searchKeys":["ENABLED","ENABLED","com.github.panpf.sketch.cache.CachePolicy.ENABLED"]},{"name":"END_CROP","description":"com.github.panpf.sketch.resize.Scale.END_CROP","location":"sketch-core/com.github.panpf.sketch.resize/-scale/-e-n-d_-c-r-o-p/index.html","searchKeys":["END_CROP","END_CROP","com.github.panpf.sketch.resize.Scale.END_CROP"]},{"name":"EXACTLY","description":"com.github.panpf.sketch.resize.Precision.EXACTLY","location":"sketch-core/com.github.panpf.sketch.resize/-precision/-e-x-a-c-t-l-y/index.html","searchKeys":["EXACTLY","EXACTLY","com.github.panpf.sketch.resize.Precision.EXACTLY"]},{"name":"Error","description":"com.github.panpf.sketch.util.Logger.Level.Error","location":"sketch-core/com.github.panpf.sketch.util/-logger/-level/-error/index.html","searchKeys":["Error","Error","com.github.panpf.sketch.util.Logger.Level.Error"]},{"name":"FILL","description":"com.github.panpf.sketch.resize.Scale.FILL","location":"sketch-core/com.github.panpf.sketch.resize/-scale/-f-i-l-l/index.html","searchKeys":["FILL","FILL","com.github.panpf.sketch.resize.Scale.FILL"]},{"name":"GIF","description":"com.github.panpf.sketch.decode.internal.ImageFormat.GIF","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/-g-i-f/index.html","searchKeys":["GIF","GIF","com.github.panpf.sketch.decode.internal.ImageFormat.GIF"]},{"name":"HEIC","description":"com.github.panpf.sketch.decode.internal.ImageFormat.HEIC","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/-h-e-i-c/index.html","searchKeys":["HEIC","HEIC","com.github.panpf.sketch.decode.internal.ImageFormat.HEIC"]},{"name":"HEIF","description":"com.github.panpf.sketch.decode.internal.ImageFormat.HEIF","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/-h-e-i-f/index.html","searchKeys":["HEIF","HEIF","com.github.panpf.sketch.decode.internal.ImageFormat.HEIF"]},{"name":"Info","description":"com.github.panpf.sketch.util.Logger.Level.Info","location":"sketch-core/com.github.panpf.sketch.util/-logger/-level/-info/index.html","searchKeys":["Info","Info","com.github.panpf.sketch.util.Logger.Level.Info"]},{"name":"JPEG","description":"com.github.panpf.sketch.decode.internal.ImageFormat.JPEG","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/-j-p-e-g/index.html","searchKeys":["JPEG","JPEG","com.github.panpf.sketch.decode.internal.ImageFormat.JPEG"]},{"name":"LESS_PIXELS","description":"com.github.panpf.sketch.resize.Precision.LESS_PIXELS","location":"sketch-core/com.github.panpf.sketch.resize/-precision/-l-e-s-s_-p-i-x-e-l-s/index.html","searchKeys":["LESS_PIXELS","LESS_PIXELS","com.github.panpf.sketch.resize.Precision.LESS_PIXELS"]},{"name":"LOCAL","description":"com.github.panpf.sketch.request.Depth.LOCAL","location":"sketch-core/com.github.panpf.sketch.request/-depth/-l-o-c-a-l/index.html","searchKeys":["LOCAL","LOCAL","com.github.panpf.sketch.request.Depth.LOCAL"]},{"name":"LOCAL","description":"com.github.panpf.sketch.source.DataFrom.LOCAL","location":"sketch-core/com.github.panpf.sketch.source/-data-from/-l-o-c-a-l/index.html","searchKeys":["LOCAL","LOCAL","com.github.panpf.sketch.source.DataFrom.LOCAL"]},{"name":"MEMORY","description":"com.github.panpf.sketch.request.Depth.MEMORY","location":"sketch-core/com.github.panpf.sketch.request/-depth/-m-e-m-o-r-y/index.html","searchKeys":["MEMORY","MEMORY","com.github.panpf.sketch.request.Depth.MEMORY"]},{"name":"MEMORY","description":"com.github.panpf.sketch.source.DataFrom.MEMORY","location":"sketch-core/com.github.panpf.sketch.source/-data-from/-m-e-m-o-r-y/index.html","searchKeys":["MEMORY","MEMORY","com.github.panpf.sketch.source.DataFrom.MEMORY"]},{"name":"MEMORY_CACHE","description":"com.github.panpf.sketch.source.DataFrom.MEMORY_CACHE","location":"sketch-core/com.github.panpf.sketch.source/-data-from/-m-e-m-o-r-y_-c-a-c-h-e/index.html","searchKeys":["MEMORY_CACHE","MEMORY_CACHE","com.github.panpf.sketch.source.DataFrom.MEMORY_CACHE"]},{"name":"Mime","description":"com.github.panpf.sketch.fetch.Base64Spec.Mime","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-spec/-mime/index.html","searchKeys":["Mime","Mime","com.github.panpf.sketch.fetch.Base64Spec.Mime"]},{"name":"NETWORK","description":"com.github.panpf.sketch.request.Depth.NETWORK","location":"sketch-core/com.github.panpf.sketch.request/-depth/-n-e-t-w-o-r-k/index.html","searchKeys":["NETWORK","NETWORK","com.github.panpf.sketch.request.Depth.NETWORK"]},{"name":"NETWORK","description":"com.github.panpf.sketch.source.DataFrom.NETWORK","location":"sketch-core/com.github.panpf.sketch.source/-data-from/-n-e-t-w-o-r-k/index.html","searchKeys":["NETWORK","NETWORK","com.github.panpf.sketch.source.DataFrom.NETWORK"]},{"name":"PNG","description":"com.github.panpf.sketch.decode.internal.ImageFormat.PNG","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/-p-n-g/index.html","searchKeys":["PNG","PNG","com.github.panpf.sketch.decode.internal.ImageFormat.PNG"]},{"name":"READ_ONLY","description":"com.github.panpf.sketch.cache.CachePolicy.READ_ONLY","location":"sketch-core/com.github.panpf.sketch.cache/-cache-policy/-r-e-a-d_-o-n-l-y/index.html","searchKeys":["READ_ONLY","READ_ONLY","com.github.panpf.sketch.cache.CachePolicy.READ_ONLY"]},{"name":"RESULT_CACHE","description":"com.github.panpf.sketch.source.DataFrom.RESULT_CACHE","location":"sketch-core/com.github.panpf.sketch.source/-data-from/-r-e-s-u-l-t_-c-a-c-h-e/index.html","searchKeys":["RESULT_CACHE","RESULT_CACHE","com.github.panpf.sketch.source.DataFrom.RESULT_CACHE"]},{"name":"SAME_ASPECT_RATIO","description":"com.github.panpf.sketch.resize.Precision.SAME_ASPECT_RATIO","location":"sketch-core/com.github.panpf.sketch.resize/-precision/-s-a-m-e_-a-s-p-e-c-t_-r-a-t-i-o/index.html","searchKeys":["SAME_ASPECT_RATIO","SAME_ASPECT_RATIO","com.github.panpf.sketch.resize.Precision.SAME_ASPECT_RATIO"]},{"name":"SMALLER_SIZE","description":"com.github.panpf.sketch.resize.Precision.SMALLER_SIZE","location":"sketch-core/com.github.panpf.sketch.resize/-precision/-s-m-a-l-l-e-r_-s-i-z-e/index.html","searchKeys":["SMALLER_SIZE","SMALLER_SIZE","com.github.panpf.sketch.resize.Precision.SMALLER_SIZE"]},{"name":"START_CROP","description":"com.github.panpf.sketch.resize.Scale.START_CROP","location":"sketch-core/com.github.panpf.sketch.resize/-scale/-s-t-a-r-t_-c-r-o-p/index.html","searchKeys":["START_CROP","START_CROP","com.github.panpf.sketch.resize.Scale.START_CROP"]},{"name":"SVG","description":"com.github.panpf.sketch.decode.internal.ImageFormat.SVG","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/-s-v-g/index.html","searchKeys":["SVG","SVG","com.github.panpf.sketch.decode.internal.ImageFormat.SVG"]},{"name":"UrlSafe","description":"com.github.panpf.sketch.fetch.Base64Spec.UrlSafe","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-spec/-url-safe/index.html","searchKeys":["UrlSafe","UrlSafe","com.github.panpf.sketch.fetch.Base64Spec.UrlSafe"]},{"name":"Verbose","description":"com.github.panpf.sketch.util.Logger.Level.Verbose","location":"sketch-core/com.github.panpf.sketch.util/-logger/-level/-verbose/index.html","searchKeys":["Verbose","Verbose","com.github.panpf.sketch.util.Logger.Level.Verbose"]},{"name":"WEBP","description":"com.github.panpf.sketch.decode.internal.ImageFormat.WEBP","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/-w-e-b-p/index.html","searchKeys":["WEBP","WEBP","com.github.panpf.sketch.decode.internal.ImageFormat.WEBP"]},{"name":"WRITE_ONLY","description":"com.github.panpf.sketch.cache.CachePolicy.WRITE_ONLY","location":"sketch-core/com.github.panpf.sketch.cache/-cache-policy/-w-r-i-t-e_-o-n-l-y/index.html","searchKeys":["WRITE_ONLY","WRITE_ONLY","com.github.panpf.sketch.cache.CachePolicy.WRITE_ONLY"]},{"name":"Warn","description":"com.github.panpf.sketch.util.Logger.Level.Warn","location":"sketch-core/com.github.panpf.sketch.util/-logger/-level/-warn/index.html","searchKeys":["Warn","Warn","com.github.panpf.sketch.util.Logger.Level.Warn"]},{"name":"abstract class BaseRequestDelegate(val sketch: Sketch, val initialRequest: ImageRequest, target: Target?, job: Job) : RequestDelegate, AttachObserver, LifecycleEventObserver","description":"com.github.panpf.sketch.request.internal.BaseRequestDelegate","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-delegate/index.html","searchKeys":["BaseRequestDelegate","abstract class BaseRequestDelegate(val sketch: Sketch, val initialRequest: ImageRequest, target: Target?, job: Job) : RequestDelegate, AttachObserver, LifecycleEventObserver","com.github.panpf.sketch.request.internal.BaseRequestDelegate"]},{"name":"abstract class BaseRequestManager : RequestManager","description":"com.github.panpf.sketch.request.internal.BaseRequestManager","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-manager/index.html","searchKeys":["BaseRequestManager","abstract class BaseRequestManager : RequestManager","com.github.panpf.sketch.request.internal.BaseRequestManager"]},{"name":"abstract class SketchException(message: String, cause: Throwable? = null) : Exception","description":"com.github.panpf.sketch.util.SketchException","location":"sketch-core/com.github.panpf.sketch.util/-sketch-exception/index.html","searchKeys":["SketchException","abstract class SketchException(message: String, cause: Throwable? = null) : Exception","com.github.panpf.sketch.util.SketchException"]},{"name":"abstract fun abort()","description":"com.github.panpf.sketch.cache.DiskCache.Editor.abort","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-editor/abort.html","searchKeys":["abort","abstract fun abort()","com.github.panpf.sketch.cache.DiskCache.Editor.abort"]},{"name":"abstract fun accept(request: ImageRequest, throwable: Throwable?): Boolean","description":"com.github.panpf.sketch.state.ConditionStateImage.Condition.accept","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/-condition/accept.html","searchKeys":["accept","abstract fun accept(request: ImageRequest, throwable: Throwable?): Boolean","com.github.panpf.sketch.state.ConditionStateImage.Condition.accept"]},{"name":"abstract fun assertActive()","description":"com.github.panpf.sketch.request.internal.RequestDelegate.assertActive","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-delegate/assert-active.html","searchKeys":["assertActive","abstract fun assertActive()","com.github.panpf.sketch.request.internal.RequestDelegate.assertActive"]},{"name":"abstract fun checkValid(): Boolean","description":"com.github.panpf.sketch.Image.checkValid","location":"sketch-core/com.github.panpf.sketch/-image/check-valid.html","searchKeys":["checkValid","abstract fun checkValid(): Boolean","com.github.panpf.sketch.Image.checkValid"]},{"name":"abstract fun checkValid(): Boolean","description":"com.github.panpf.sketch.cache.MemoryCache.Value.checkValid","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/-value/check-valid.html","searchKeys":["checkValid","abstract fun checkValid(): Boolean","com.github.panpf.sketch.cache.MemoryCache.Value.checkValid"]},{"name":"abstract fun clear()","description":"com.github.panpf.sketch.cache.DiskCache.clear","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/clear.html","searchKeys":["clear","abstract fun clear()","com.github.panpf.sketch.cache.DiskCache.clear"]},{"name":"abstract fun clear()","description":"com.github.panpf.sketch.cache.MemoryCache.clear","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/clear.html","searchKeys":["clear","abstract fun clear()","com.github.panpf.sketch.cache.MemoryCache.clear"]},{"name":"abstract fun closeAndOpenEditor(): DiskCache.Editor?","description":"com.github.panpf.sketch.cache.DiskCache.Snapshot.closeAndOpenEditor","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-snapshot/close-and-open-editor.html","searchKeys":["closeAndOpenEditor","abstract fun closeAndOpenEditor(): DiskCache.Editor?","com.github.panpf.sketch.cache.DiskCache.Snapshot.closeAndOpenEditor"]},{"name":"abstract fun commit()","description":"com.github.panpf.sketch.cache.DiskCache.Editor.commit","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-editor/commit.html","searchKeys":["commit","abstract fun commit()","com.github.panpf.sketch.cache.DiskCache.Editor.commit"]},{"name":"abstract fun commitAndOpenSnapshot(): DiskCache.Snapshot?","description":"com.github.panpf.sketch.cache.DiskCache.Editor.commitAndOpenSnapshot","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-editor/commit-and-open-snapshot.html","searchKeys":["commitAndOpenSnapshot","abstract fun commitAndOpenSnapshot(): DiskCache.Snapshot?","com.github.panpf.sketch.cache.DiskCache.Editor.commitAndOpenSnapshot"]},{"name":"abstract fun compress(image: Image, sink: BufferedSink)","description":"com.github.panpf.sketch.cache.ImageSerializer.compress","location":"sketch-core/com.github.panpf.sketch.cache/-image-serializer/compress.html","searchKeys":["compress","abstract fun compress(image: Image, sink: BufferedSink)","com.github.panpf.sketch.cache.ImageSerializer.compress"]},{"name":"abstract fun create(requestContext: RequestContext): Fetcher?","description":"com.github.panpf.sketch.fetch.Fetcher.Factory.create","location":"sketch-core/com.github.panpf.sketch.fetch/-fetcher/-factory/create.html","searchKeys":["create","abstract fun create(requestContext: RequestContext): Fetcher?","com.github.panpf.sketch.fetch.Fetcher.Factory.create"]},{"name":"abstract fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","description":"com.github.panpf.sketch.decode.Decoder.Factory.create","location":"sketch-core/com.github.panpf.sketch.decode/-decoder/-factory/create.html","searchKeys":["create","abstract fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","com.github.panpf.sketch.decode.Decoder.Factory.create"]},{"name":"abstract fun create(sketch: Sketch, request: ImageRequest, target: Target, result: ImageResult): Transition?","description":"com.github.panpf.sketch.transition.Transition.Factory.create","location":"sketch-core/com.github.panpf.sketch.transition/-transition/-factory/create.html","searchKeys":["create","abstract fun create(sketch: Sketch, request: ImageRequest, target: Target, result: ImageResult): Transition?","com.github.panpf.sketch.transition.Transition.Factory.create"]},{"name":"abstract fun createFrameBitmap(width: Int = this.width, height: Int = this.height): Bitmap","description":"com.github.panpf.sketch.AnimatedImage.createFrameBitmap","location":"sketch-core/com.github.panpf.sketch/-animated-image/create-frame-bitmap.html","searchKeys":["createFrameBitmap","abstract fun createFrameBitmap(width: Int = this.width, height: Int = this.height): Bitmap","com.github.panpf.sketch.AnimatedImage.createFrameBitmap"]},{"name":"abstract fun decode(): DecodeResult","description":"com.github.panpf.sketch.decode.Decoder.decode","location":"sketch-core/com.github.panpf.sketch.decode/-decoder/decode.html","searchKeys":["decode","abstract fun decode(): DecodeResult","com.github.panpf.sketch.decode.Decoder.decode"]},{"name":"abstract fun decode(requestContext: RequestContext, imageInfo: ImageInfo, dataSource: DataSource): Image","description":"com.github.panpf.sketch.cache.ImageSerializer.decode","location":"sketch-core/com.github.panpf.sketch.cache/-image-serializer/decode.html","searchKeys":["decode","abstract fun decode(requestContext: RequestContext, imageInfo: ImageInfo, dataSource: DataSource): Image","com.github.panpf.sketch.cache.ImageSerializer.decode"]},{"name":"abstract fun decode(sampleSize: Int): Image","description":"com.github.panpf.sketch.decode.internal.DecodeHelper.decode","location":"sketch-core/com.github.panpf.sketch.decode.internal/-decode-helper/decode.html","searchKeys":["decode","abstract fun decode(sampleSize: Int): Image","com.github.panpf.sketch.decode.internal.DecodeHelper.decode"]},{"name":"abstract fun decodeRegion(region: Rect, sampleSize: Int): Image","description":"com.github.panpf.sketch.decode.internal.DecodeHelper.decodeRegion","location":"sketch-core/com.github.panpf.sketch.decode.internal/-decode-helper/decode-region.html","searchKeys":["decodeRegion","abstract fun decodeRegion(region: Rect, sampleSize: Int): Image","com.github.panpf.sketch.decode.internal.DecodeHelper.decodeRegion"]},{"name":"abstract fun dispose()","description":"com.github.panpf.sketch.request.Disposable.dispose","location":"sketch-core/com.github.panpf.sketch.request/-disposable/dispose.html","searchKeys":["dispose","abstract fun dispose()","com.github.panpf.sketch.request.Disposable.dispose"]},{"name":"abstract fun dispose()","description":"com.github.panpf.sketch.request.internal.RequestDelegate.dispose","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-delegate/dispose.html","searchKeys":["dispose","abstract fun dispose()","com.github.panpf.sketch.request.internal.RequestDelegate.dispose"]},{"name":"abstract fun dispose()","description":"com.github.panpf.sketch.request.internal.RequestManager.dispose","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-manager/dispose.html","searchKeys":["dispose","abstract fun dispose()","com.github.panpf.sketch.request.internal.RequestManager.dispose"]},{"name":"abstract fun entries(): Set<Map.Entry<String, MemoryCache.Value>>","description":"com.github.panpf.sketch.cache.MemoryCache.entries","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/entries.html","searchKeys":["entries","abstract fun entries(): Set<Map.Entry<String, MemoryCache.Value>>","com.github.panpf.sketch.cache.MemoryCache.entries"]},{"name":"abstract fun exist(key: String): Boolean","description":"com.github.panpf.sketch.cache.MemoryCache.exist","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/exist.html","searchKeys":["exist","abstract fun exist(key: String): Boolean","com.github.panpf.sketch.cache.MemoryCache.exist"]},{"name":"abstract fun finish()","description":"com.github.panpf.sketch.request.internal.RequestDelegate.finish","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-delegate/finish.html","searchKeys":["finish","abstract fun finish()","com.github.panpf.sketch.request.internal.RequestDelegate.finish"]},{"name":"abstract fun flush()","description":"com.github.panpf.sketch.util.Logger.Pipeline.flush","location":"sketch-core/com.github.panpf.sketch.util/-logger/-pipeline/flush.html","searchKeys":["flush","abstract fun flush()","com.github.panpf.sketch.util.Logger.Pipeline.flush"]},{"name":"abstract fun get(imageSize: Size, targetSize: Size): Precision","description":"com.github.panpf.sketch.resize.PrecisionDecider.get","location":"sketch-core/com.github.panpf.sketch.resize/-precision-decider/get.html","searchKeys":["get","abstract fun get(imageSize: Size, targetSize: Size): Precision","com.github.panpf.sketch.resize.PrecisionDecider.get"]},{"name":"abstract fun get(imageSize: Size, targetSize: Size): Scale","description":"com.github.panpf.sketch.resize.ScaleDecider.get","location":"sketch-core/com.github.panpf.sketch.resize/-scale-decider/get.html","searchKeys":["get","abstract fun get(imageSize: Size, targetSize: Size): Scale","com.github.panpf.sketch.resize.ScaleDecider.get"]},{"name":"abstract fun getColor(context: Context): Int","description":"com.github.panpf.sketch.util.ColorFetcher.getColor","location":"sketch-core/com.github.panpf.sketch.util/-color-fetcher/get-color.html","searchKeys":["getColor","abstract fun getColor(context: Context): Int","com.github.panpf.sketch.util.ColorFetcher.getColor"]},{"name":"abstract fun getColorSpace(mimeType: String?, isOpaque: Boolean): PlatformColorSpace?","description":"com.github.panpf.sketch.decode.BitmapColorSpace.getColorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-space/get-color-space.html","searchKeys":["getColorSpace","abstract fun getColorSpace(mimeType: String?, isOpaque: Boolean): PlatformColorSpace?","com.github.panpf.sketch.decode.BitmapColorSpace.getColorSpace"]},{"name":"abstract fun getColorType(mimeType: String?, isOpaque: Boolean): PlatformColorType?","description":"com.github.panpf.sketch.decode.BitmapColorType.getColorType","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-type/get-color-type.html","searchKeys":["getColorType","abstract fun getColorType(mimeType: String?, isOpaque: Boolean): PlatformColorType?","com.github.panpf.sketch.decode.BitmapColorType.getColorType"]},{"name":"abstract fun getDisposable(job: Deferred<ImageResult>): Disposable","description":"com.github.panpf.sketch.request.internal.RequestManager.getDisposable","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-manager/get-disposable.html","searchKeys":["getDisposable","abstract fun getDisposable(job: Deferred<ImageResult>): Disposable","com.github.panpf.sketch.request.internal.RequestManager.getDisposable"]},{"name":"abstract fun getDrawable(context: Context): Drawable","description":"com.github.panpf.sketch.drawable.DrawableFetcher.getDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-drawable-fetcher/get-drawable.html","searchKeys":["getDrawable","abstract fun getDrawable(context: Context): Drawable","com.github.panpf.sketch.drawable.DrawableFetcher.getDrawable"]},{"name":"abstract fun getFile(sketch: Sketch): Path","description":"com.github.panpf.sketch.source.DataSource.getFile","location":"sketch-core/com.github.panpf.sketch.source/-data-source/get-file.html","searchKeys":["getFile","abstract fun getFile(sketch: Sketch): Path","com.github.panpf.sketch.source.DataSource.getFile"]},{"name":"abstract fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image?","description":"com.github.panpf.sketch.state.StateImage.getImage","location":"sketch-core/com.github.panpf.sketch.state/-state-image/get-image.html","searchKeys":["getImage","abstract fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image?","com.github.panpf.sketch.state.StateImage.getImage"]},{"name":"abstract fun getListener(): Listener?","description":"com.github.panpf.sketch.request.ListenerProvider.getListener","location":"sketch-core/com.github.panpf.sketch.request/-listener-provider/get-listener.html","searchKeys":["getListener","abstract fun getListener(): Listener?","com.github.panpf.sketch.request.ListenerProvider.getListener"]},{"name":"abstract fun getMaxSize(): Int?","description":"com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl.getMaxSize","location":"sketch-core/com.github.panpf.sketch.decode.internal/-open-g-l-texture-helper/-impl/get-max-size.html","searchKeys":["getMaxSize","abstract fun getMaxSize(): Int?","com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl.getMaxSize"]},{"name":"abstract fun getProgressListener(): ProgressListener?","description":"com.github.panpf.sketch.request.ListenerProvider.getProgressListener","location":"sketch-core/com.github.panpf.sketch.request/-listener-provider/get-progress-listener.html","searchKeys":["getProgressListener","abstract fun getProgressListener(): ProgressListener?","com.github.panpf.sketch.request.ListenerProvider.getProgressListener"]},{"name":"abstract fun getRequest(): ImageRequest?","description":"com.github.panpf.sketch.request.internal.RequestManager.getRequest","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-manager/get-request.html","searchKeys":["getRequest","abstract fun getRequest(): ImageRequest?","com.github.panpf.sketch.request.internal.RequestManager.getRequest"]},{"name":"abstract fun getResult(): ImageResult?","description":"com.github.panpf.sketch.request.internal.RequestManager.getResult","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-manager/get-result.html","searchKeys":["getResult","abstract fun getResult(): ImageResult?","com.github.panpf.sketch.request.internal.RequestManager.getResult"]},{"name":"abstract fun getSketch(): Sketch?","description":"com.github.panpf.sketch.request.internal.RequestManager.getSketch","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-manager/get-sketch.html","searchKeys":["getSketch","abstract fun getSketch(): Sketch?","com.github.panpf.sketch.request.internal.RequestManager.getSketch"]},{"name":"abstract fun isAttached(): Boolean","description":"com.github.panpf.sketch.request.internal.BaseRequestManager.isAttached","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-manager/is-attached.html","searchKeys":["isAttached","abstract fun isAttached(): Boolean","com.github.panpf.sketch.request.internal.BaseRequestManager.isAttached"]},{"name":"abstract fun isDisposed(disposable: Disposable): Boolean","description":"com.github.panpf.sketch.request.internal.RequestManager.isDisposed","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-manager/is-disposed.html","searchKeys":["isDisposed","abstract fun isDisposed(disposable: Disposable): Boolean","com.github.panpf.sketch.request.internal.RequestManager.isDisposed"]},{"name":"abstract fun isLongImage(imageSize: Size, targetSize: Size): Boolean","description":"com.github.panpf.sketch.resize.LongImageDecider.isLongImage","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-decider/is-long-image.html","searchKeys":["isLongImage","abstract fun isLongImage(imageSize: Size, targetSize: Size): Boolean","com.github.panpf.sketch.resize.LongImageDecider.isLongImage"]},{"name":"abstract fun keys(): Set<String>","description":"com.github.panpf.sketch.cache.MemoryCache.keys","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/keys.html","searchKeys":["keys","abstract fun keys(): Set<String>","com.github.panpf.sketch.cache.MemoryCache.keys"]},{"name":"abstract fun log(level: Logger.Level, tag: String, msg: String, tr: Throwable?)","description":"com.github.panpf.sketch.util.Logger.Pipeline.log","location":"sketch-core/com.github.panpf.sketch.util/-logger/-pipeline/log.html","searchKeys":["log","abstract fun log(level: Logger.Level, tag: String, msg: String, tr: Throwable?)","com.github.panpf.sketch.util.Logger.Pipeline.log"]},{"name":"abstract fun map(key: String): String","description":"com.github.panpf.sketch.cache.CacheKeyMapper.map","location":"sketch-core/com.github.panpf.sketch.cache/-cache-key-mapper/map.html","searchKeys":["map","abstract fun map(key: String): String","com.github.panpf.sketch.cache.CacheKeyMapper.map"]},{"name":"abstract fun merge(other: Mergeable): Mergeable","description":"com.github.panpf.sketch.util.Mergeable.merge","location":"sketch-core/com.github.panpf.sketch.util/-mergeable/merge.html","searchKeys":["merge","abstract fun merge(other: Mergeable): Mergeable","com.github.panpf.sketch.util.Mergeable.merge"]},{"name":"abstract fun onAttachedChanged(attached: Boolean)","description":"com.github.panpf.sketch.request.internal.AttachObserver.onAttachedChanged","location":"sketch-core/com.github.panpf.sketch.request.internal/-attach-observer/on-attached-changed.html","searchKeys":["onAttachedChanged","abstract fun onAttachedChanged(attached: Boolean)","com.github.panpf.sketch.request.internal.AttachObserver.onAttachedChanged"]},{"name":"abstract fun onUpdateProgress(request: ImageRequest, progress: Progress)","description":"com.github.panpf.sketch.request.ProgressListener.onUpdateProgress","location":"sketch-core/com.github.panpf.sketch.request/-progress-listener/on-update-progress.html","searchKeys":["onUpdateProgress","abstract fun onUpdateProgress(request: ImageRequest, progress: Progress)","com.github.panpf.sketch.request.ProgressListener.onUpdateProgress"]},{"name":"abstract fun openEditor(key: String): DiskCache.Editor?","description":"com.github.panpf.sketch.cache.DiskCache.openEditor","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/open-editor.html","searchKeys":["openEditor","abstract fun openEditor(key: String): DiskCache.Editor?","com.github.panpf.sketch.cache.DiskCache.openEditor"]},{"name":"abstract fun openSnapshot(key: String): DiskCache.Snapshot?","description":"com.github.panpf.sketch.cache.DiskCache.openSnapshot","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/open-snapshot.html","searchKeys":["openSnapshot","abstract fun openSnapshot(key: String): DiskCache.Snapshot?","com.github.panpf.sketch.cache.DiskCache.openSnapshot"]},{"name":"abstract fun openSource(): Source","description":"com.github.panpf.sketch.source.DataSource.openSource","location":"sketch-core/com.github.panpf.sketch.source/-data-source/open-source.html","searchKeys":["openSource","abstract fun openSource(): Source","com.github.panpf.sketch.source.DataSource.openSource"]},{"name":"abstract fun put(key: String, value: MemoryCache.Value): Int","description":"com.github.panpf.sketch.cache.MemoryCache.put","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/put.html","searchKeys":["put","abstract fun put(key: String, value: MemoryCache.Value): Int","com.github.panpf.sketch.cache.MemoryCache.put"]},{"name":"abstract fun readFrame(bitmap: Bitmap, frameIndex: Int)","description":"com.github.panpf.sketch.AnimatedImage.readFrame","location":"sketch-core/com.github.panpf.sketch/-animated-image/read-frame.html","searchKeys":["readFrame","abstract fun readFrame(bitmap: Bitmap, frameIndex: Int)","com.github.panpf.sketch.AnimatedImage.readFrame"]},{"name":"abstract fun register()","description":"com.github.panpf.sketch.util.SystemCallbacks.register","location":"sketch-core/com.github.panpf.sketch.util/-system-callbacks/register.html","searchKeys":["register","abstract fun register()","com.github.panpf.sketch.util.SystemCallbacks.register"]},{"name":"abstract fun remove(key: String): Boolean","description":"com.github.panpf.sketch.cache.DiskCache.remove","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/remove.html","searchKeys":["remove","abstract fun remove(key: String): Boolean","com.github.panpf.sketch.cache.DiskCache.remove"]},{"name":"abstract fun remove(key: String): MemoryCache.Value?","description":"com.github.panpf.sketch.cache.MemoryCache.remove","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/remove.html","searchKeys":["remove","abstract fun remove(key: String): MemoryCache.Value?","com.github.panpf.sketch.cache.MemoryCache.remove"]},{"name":"abstract fun resize(request: ImageRequest, size: Size, image: Image): Image","description":"com.github.panpf.sketch.resize.ResizeOnDrawHelper.resize","location":"sketch-core/com.github.panpf.sketch.resize/-resize-on-draw-helper/resize.html","searchKeys":["resize","abstract fun resize(request: ImageRequest, size: Size, image: Image): Image","com.github.panpf.sketch.resize.ResizeOnDrawHelper.resize"]},{"name":"abstract fun restart()","description":"com.github.panpf.sketch.request.internal.RequestManager.restart","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-manager/restart.html","searchKeys":["restart","abstract fun restart()","com.github.panpf.sketch.request.internal.RequestManager.restart"]},{"name":"abstract fun setRequest(requestDelegate: RequestDelegate?)","description":"com.github.panpf.sketch.request.internal.RequestManager.setRequest","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-manager/set-request.html","searchKeys":["setRequest","abstract fun setRequest(requestDelegate: RequestDelegate?)","com.github.panpf.sketch.request.internal.RequestManager.setRequest"]},{"name":"abstract fun shutdown()","description":"com.github.panpf.sketch.util.NetworkObserver.shutdown","location":"sketch-core/com.github.panpf.sketch.util/-network-observer/shutdown.html","searchKeys":["shutdown","abstract fun shutdown()","com.github.panpf.sketch.util.NetworkObserver.shutdown"]},{"name":"abstract fun shutdown()","description":"com.github.panpf.sketch.util.SystemCallbacks.shutdown","location":"sketch-core/com.github.panpf.sketch.util/-system-callbacks/shutdown.html","searchKeys":["shutdown","abstract fun shutdown()","com.github.panpf.sketch.util.SystemCallbacks.shutdown"]},{"name":"abstract fun start(lifecycle: Lifecycle)","description":"com.github.panpf.sketch.request.internal.RequestDelegate.start","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-delegate/start.html","searchKeys":["start","abstract fun start(lifecycle: Lifecycle)","com.github.panpf.sketch.request.internal.RequestDelegate.start"]},{"name":"abstract fun supportImage(image: Image): Boolean","description":"com.github.panpf.sketch.cache.ImageSerializer.supportImage","location":"sketch-core/com.github.panpf.sketch.cache/-image-serializer/support-image.html","searchKeys":["supportImage","abstract fun supportImage(image: Image): Boolean","com.github.panpf.sketch.cache.ImageSerializer.supportImage"]},{"name":"abstract fun transform(requestContext: RequestContext, input: Image): TransformResult?","description":"com.github.panpf.sketch.transform.Transformation.transform","location":"sketch-core/com.github.panpf.sketch.transform/-transformation/transform.html","searchKeys":["transform","abstract fun transform(requestContext: RequestContext, input: Image): TransformResult?","com.github.panpf.sketch.transform.Transformation.transform"]},{"name":"abstract fun transition()","description":"com.github.panpf.sketch.transition.Transition.transition","location":"sketch-core/com.github.panpf.sketch.transition/-transition/transition.html","searchKeys":["transition","abstract fun transition()","com.github.panpf.sketch.transition.Transition.transition"]},{"name":"abstract fun trim(targetSize: Long)","description":"com.github.panpf.sketch.cache.MemoryCache.trim","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/trim.html","searchKeys":["trim","abstract fun trim(targetSize: Long)","com.github.panpf.sketch.cache.MemoryCache.trim"]},{"name":"abstract operator fun get(key: String): MemoryCache.Value?","description":"com.github.panpf.sketch.cache.MemoryCache.get","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/get.html","searchKeys":["get","abstract operator fun get(key: String): MemoryCache.Value?","com.github.panpf.sketch.cache.MemoryCache.get"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.Image.equals","location":"sketch-core/com.github.panpf.sketch/-image/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.Image.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.cache.CacheKeyMapper.equals","location":"sketch-core/com.github.panpf.sketch.cache/-cache-key-mapper/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.cache.CacheKeyMapper.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.BitmapColorSpace.equals","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-space/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.BitmapColorSpace.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.BitmapColorType.equals","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-type/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.BitmapColorType.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.DecodeInterceptor.equals","location":"sketch-core/com.github.panpf.sketch.decode/-decode-interceptor/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.DecodeInterceptor.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.Decoder.Factory.equals","location":"sketch-core/com.github.panpf.sketch.decode/-decoder/-factory/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.Decoder.Factory.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.DrawableFetcher.equals","location":"sketch-core/com.github.panpf.sketch.drawable/-drawable-fetcher/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.DrawableFetcher.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.SketchDrawable.equals","location":"sketch-core/com.github.panpf.sketch.drawable/-sketch-drawable/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.SketchDrawable.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.Fetcher.Factory.equals","location":"sketch-core/com.github.panpf.sketch.fetch/-fetcher/-factory/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.Fetcher.Factory.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.request.ImageResult.equals","location":"sketch-core/com.github.panpf.sketch.request/-image-result/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.request.ImageResult.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.request.LifecycleResolver.equals","location":"sketch-core/com.github.panpf.sketch.request/-lifecycle-resolver/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.request.LifecycleResolver.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.request.RequestInterceptor.equals","location":"sketch-core/com.github.panpf.sketch.request/-request-interceptor/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.request.RequestInterceptor.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.resize.PrecisionDecider.equals","location":"sketch-core/com.github.panpf.sketch.resize/-precision-decider/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.resize.PrecisionDecider.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.resize.ResizeOnDrawHelper.equals","location":"sketch-core/com.github.panpf.sketch.resize/-resize-on-draw-helper/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.resize.ResizeOnDrawHelper.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.resize.ScaleDecider.equals","location":"sketch-core/com.github.panpf.sketch.resize/-scale-decider/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.resize.ScaleDecider.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.resize.SizeResolver.equals","location":"sketch-core/com.github.panpf.sketch.resize/-size-resolver/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.resize.SizeResolver.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.state.ConditionStateImage.Condition.equals","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/-condition/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.state.ConditionStateImage.Condition.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.state.StateImage.equals","location":"sketch-core/com.github.panpf.sketch.state/-state-image/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.state.StateImage.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.target.Target.equals","location":"sketch-core/com.github.panpf.sketch.target/-target/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.target.Target.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.transform.Transformation.equals","location":"sketch-core/com.github.panpf.sketch.transform/-transformation/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.transform.Transformation.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.transition.Transition.Factory.equals","location":"sketch-core/com.github.panpf.sketch.transition/-transition/-factory/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.transition.Transition.Factory.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.util.ColorFetcher.equals","location":"sketch-core/com.github.panpf.sketch.util/-color-fetcher/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.util.ColorFetcher.equals"]},{"name":"abstract override fun assertActive()","description":"com.github.panpf.sketch.request.internal.BaseRequestDelegate.assertActive","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-delegate/assert-active.html","searchKeys":["assertActive","abstract override fun assertActive()","com.github.panpf.sketch.request.internal.BaseRequestDelegate.assertActive"]},{"name":"abstract override fun close()","description":"com.github.panpf.sketch.cache.DiskCache.Snapshot.close","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-snapshot/close.html","searchKeys":["close","abstract override fun close()","com.github.panpf.sketch.cache.DiskCache.Snapshot.close"]},{"name":"abstract override fun finish()","description":"com.github.panpf.sketch.request.internal.BaseRequestDelegate.finish","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-delegate/finish.html","searchKeys":["finish","abstract override fun finish()","com.github.panpf.sketch.request.internal.BaseRequestDelegate.finish"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.Image.hashCode","location":"sketch-core/com.github.panpf.sketch/-image/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.Image.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.cache.CacheKeyMapper.hashCode","location":"sketch-core/com.github.panpf.sketch.cache/-cache-key-mapper/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.cache.CacheKeyMapper.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.BitmapColorSpace.hashCode","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-space/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.decode.BitmapColorSpace.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.BitmapColorType.hashCode","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-type/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.decode.BitmapColorType.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.DecodeInterceptor.hashCode","location":"sketch-core/com.github.panpf.sketch.decode/-decode-interceptor/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.decode.DecodeInterceptor.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.Decoder.Factory.hashCode","location":"sketch-core/com.github.panpf.sketch.decode/-decoder/-factory/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.decode.Decoder.Factory.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.DrawableFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.drawable/-drawable-fetcher/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.drawable.DrawableFetcher.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.SketchDrawable.hashCode","location":"sketch-core/com.github.panpf.sketch.drawable/-sketch-drawable/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.drawable.SketchDrawable.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.Fetcher.Factory.hashCode","location":"sketch-core/com.github.panpf.sketch.fetch/-fetcher/-factory/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.fetch.Fetcher.Factory.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.request.ImageResult.hashCode","location":"sketch-core/com.github.panpf.sketch.request/-image-result/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.request.ImageResult.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.request.LifecycleResolver.hashCode","location":"sketch-core/com.github.panpf.sketch.request/-lifecycle-resolver/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.request.LifecycleResolver.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.request.RequestInterceptor.hashCode","location":"sketch-core/com.github.panpf.sketch.request/-request-interceptor/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.request.RequestInterceptor.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.resize.PrecisionDecider.hashCode","location":"sketch-core/com.github.panpf.sketch.resize/-precision-decider/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.resize.PrecisionDecider.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.resize.ResizeOnDrawHelper.hashCode","location":"sketch-core/com.github.panpf.sketch.resize/-resize-on-draw-helper/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.resize.ResizeOnDrawHelper.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.resize.ScaleDecider.hashCode","location":"sketch-core/com.github.panpf.sketch.resize/-scale-decider/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.resize.ScaleDecider.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.resize.SizeResolver.hashCode","location":"sketch-core/com.github.panpf.sketch.resize/-size-resolver/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.resize.SizeResolver.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.state.ConditionStateImage.Condition.hashCode","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/-condition/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.state.ConditionStateImage.Condition.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.state.StateImage.hashCode","location":"sketch-core/com.github.panpf.sketch.state/-state-image/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.state.StateImage.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.target.Target.hashCode","location":"sketch-core/com.github.panpf.sketch.target/-target/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.target.Target.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.transform.Transformation.hashCode","location":"sketch-core/com.github.panpf.sketch.transform/-transformation/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.transform.Transformation.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.transition.Transition.Factory.hashCode","location":"sketch-core/com.github.panpf.sketch.transition/-transition/-factory/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.transition.Transition.Factory.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.util.ColorFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.util/-color-fetcher/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.util.ColorFetcher.hashCode"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.Image.toString","location":"sketch-core/com.github.panpf.sketch/-image/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.Image.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.cache.CacheKeyMapper.toString","location":"sketch-core/com.github.panpf.sketch.cache/-cache-key-mapper/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.cache.CacheKeyMapper.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.decode.BitmapColorSpace.toString","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-space/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.decode.BitmapColorSpace.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.decode.BitmapColorType.toString","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-type/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.decode.BitmapColorType.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.decode.DecodeInterceptor.toString","location":"sketch-core/com.github.panpf.sketch.decode/-decode-interceptor/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.decode.DecodeInterceptor.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.decode.Decoder.Factory.toString","location":"sketch-core/com.github.panpf.sketch.decode/-decoder/-factory/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.decode.Decoder.Factory.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.drawable.DrawableFetcher.toString","location":"sketch-core/com.github.panpf.sketch.drawable/-drawable-fetcher/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.drawable.DrawableFetcher.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.drawable.SketchDrawable.toString","location":"sketch-core/com.github.panpf.sketch.drawable/-sketch-drawable/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.drawable.SketchDrawable.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.fetch.Fetcher.Factory.toString","location":"sketch-core/com.github.panpf.sketch.fetch/-fetcher/-factory/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.fetch.Fetcher.Factory.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.request.ImageResult.toString","location":"sketch-core/com.github.panpf.sketch.request/-image-result/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.request.ImageResult.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.request.LifecycleResolver.toString","location":"sketch-core/com.github.panpf.sketch.request/-lifecycle-resolver/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.request.LifecycleResolver.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.request.RequestInterceptor.toString","location":"sketch-core/com.github.panpf.sketch.request/-request-interceptor/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.request.RequestInterceptor.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.resize.PrecisionDecider.toString","location":"sketch-core/com.github.panpf.sketch.resize/-precision-decider/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.resize.PrecisionDecider.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.resize.ResizeOnDrawHelper.toString","location":"sketch-core/com.github.panpf.sketch.resize/-resize-on-draw-helper/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.resize.ResizeOnDrawHelper.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.resize.ScaleDecider.toString","location":"sketch-core/com.github.panpf.sketch.resize/-scale-decider/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.resize.ScaleDecider.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.resize.SizeResolver.toString","location":"sketch-core/com.github.panpf.sketch.resize/-size-resolver/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.resize.SizeResolver.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.state.ConditionStateImage.Condition.toString","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/-condition/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.state.ConditionStateImage.Condition.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.state.StateImage.toString","location":"sketch-core/com.github.panpf.sketch.state/-state-image/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.state.StateImage.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.target.Target.toString","location":"sketch-core/com.github.panpf.sketch.target/-target/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.target.Target.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.transform.Transformation.toString","location":"sketch-core/com.github.panpf.sketch.transform/-transformation/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.transform.Transformation.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.transition.Transition.Factory.toString","location":"sketch-core/com.github.panpf.sketch.transition/-transition/-factory/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.transition.Transition.Factory.toString"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.util.ColorFetcher.toString","location":"sketch-core/com.github.panpf.sketch.util/-color-fetcher/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.util.ColorFetcher.toString"]},{"name":"abstract override val key: String","description":"com.github.panpf.sketch.decode.Decoder.Factory.key","location":"sketch-core/com.github.panpf.sketch.decode/-decoder/-factory/key.html","searchKeys":["key","abstract override val key: String","com.github.panpf.sketch.decode.Decoder.Factory.key"]},{"name":"abstract override val key: String","description":"com.github.panpf.sketch.transform.Transformation.key","location":"sketch-core/com.github.panpf.sketch.transform/-transformation/key.html","searchKeys":["key","abstract override val key: String","com.github.panpf.sketch.transform.Transformation.key"]},{"name":"abstract override val key: String?","description":"com.github.panpf.sketch.decode.DecodeInterceptor.key","location":"sketch-core/com.github.panpf.sketch.decode/-decode-interceptor/key.html","searchKeys":["key","abstract override val key: String?","com.github.panpf.sketch.decode.DecodeInterceptor.key"]},{"name":"abstract override val key: String?","description":"com.github.panpf.sketch.request.RequestInterceptor.key","location":"sketch-core/com.github.panpf.sketch.request/-request-interceptor/key.html","searchKeys":["key","abstract override val key: String?","com.github.panpf.sketch.request.RequestInterceptor.key"]},{"name":"abstract suspend fun <R> withLock(key: String, action: suspend DiskCache.() -> R): R","description":"com.github.panpf.sketch.cache.DiskCache.withLock","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/with-lock.html","searchKeys":["withLock","abstract suspend fun <R> withLock(key: String, action: suspend DiskCache.() -> R): R","com.github.panpf.sketch.cache.DiskCache.withLock"]},{"name":"abstract suspend fun <R> withLock(key: String, action: suspend MemoryCache.() -> R): R","description":"com.github.panpf.sketch.cache.MemoryCache.withLock","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/with-lock.html","searchKeys":["withLock","abstract suspend fun <R> withLock(key: String, action: suspend MemoryCache.() -> R): R","com.github.panpf.sketch.cache.MemoryCache.withLock"]},{"name":"abstract suspend fun fetch(): Result<FetchResult>","description":"com.github.panpf.sketch.fetch.Fetcher.fetch","location":"sketch-core/com.github.panpf.sketch.fetch/-fetcher/fetch.html","searchKeys":["fetch","abstract suspend fun fetch(): Result<FetchResult>","com.github.panpf.sketch.fetch.Fetcher.fetch"]},{"name":"abstract suspend fun intercept(chain: DecodeInterceptor.Chain): Result<DecodeResult>","description":"com.github.panpf.sketch.decode.DecodeInterceptor.intercept","location":"sketch-core/com.github.panpf.sketch.decode/-decode-interceptor/intercept.html","searchKeys":["intercept","abstract suspend fun intercept(chain: DecodeInterceptor.Chain): Result<DecodeResult>","com.github.panpf.sketch.decode.DecodeInterceptor.intercept"]},{"name":"abstract suspend fun intercept(chain: RequestInterceptor.Chain): Result<ImageData>","description":"com.github.panpf.sketch.request.RequestInterceptor.intercept","location":"sketch-core/com.github.panpf.sketch.request/-request-interceptor/intercept.html","searchKeys":["intercept","abstract suspend fun intercept(chain: RequestInterceptor.Chain): Result<ImageData>","com.github.panpf.sketch.request.RequestInterceptor.intercept"]},{"name":"abstract suspend fun lifecycle(): Lifecycle","description":"com.github.panpf.sketch.request.LifecycleResolver.lifecycle","location":"sketch-core/com.github.panpf.sketch.request/-lifecycle-resolver/lifecycle.html","searchKeys":["lifecycle","abstract suspend fun lifecycle(): Lifecycle","com.github.panpf.sketch.request.LifecycleResolver.lifecycle"]},{"name":"abstract suspend fun proceed(): Result<DecodeResult>","description":"com.github.panpf.sketch.decode.DecodeInterceptor.Chain.proceed","location":"sketch-core/com.github.panpf.sketch.decode/-decode-interceptor/-chain/proceed.html","searchKeys":["proceed","abstract suspend fun proceed(): Result<DecodeResult>","com.github.panpf.sketch.decode.DecodeInterceptor.Chain.proceed"]},{"name":"abstract suspend fun proceed(request: ImageRequest): Result<ImageData>","description":"com.github.panpf.sketch.request.RequestInterceptor.Chain.proceed","location":"sketch-core/com.github.panpf.sketch.request/-request-interceptor/-chain/proceed.html","searchKeys":["proceed","abstract suspend fun proceed(request: ImageRequest): Result<ImageData>","com.github.panpf.sketch.request.RequestInterceptor.Chain.proceed"]},{"name":"abstract suspend fun size(): Size","description":"com.github.panpf.sketch.resize.SizeResolver.size","location":"sketch-core/com.github.panpf.sketch.resize/-size-resolver/size.html","searchKeys":["size","abstract suspend fun size(): Size","com.github.panpf.sketch.resize.SizeResolver.size"]},{"name":"abstract val appVersion: Int","description":"com.github.panpf.sketch.cache.DiskCache.appVersion","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/app-version.html","searchKeys":["appVersion","abstract val appVersion: Int","com.github.panpf.sketch.cache.DiskCache.appVersion"]},{"name":"abstract val byteCount: Long","description":"com.github.panpf.sketch.ByteCountProvider.byteCount","location":"sketch-core/com.github.panpf.sketch/-byte-count-provider/byte-count.html","searchKeys":["byteCount","abstract val byteCount: Long","com.github.panpf.sketch.ByteCountProvider.byteCount"]},{"name":"abstract val byteCount: Long","description":"com.github.panpf.sketch.Image.byteCount","location":"sketch-core/com.github.panpf.sketch/-image/byte-count.html","searchKeys":["byteCount","abstract val byteCount: Long","com.github.panpf.sketch.Image.byteCount"]},{"name":"abstract val cacheDecodeTimeoutFrame: Boolean","description":"com.github.panpf.sketch.AnimatedImage.cacheDecodeTimeoutFrame","location":"sketch-core/com.github.panpf.sketch/-animated-image/cache-decode-timeout-frame.html","searchKeys":["cacheDecodeTimeoutFrame","abstract val cacheDecodeTimeoutFrame: Boolean","com.github.panpf.sketch.AnimatedImage.cacheDecodeTimeoutFrame"]},{"name":"abstract val data: Path","description":"com.github.panpf.sketch.cache.DiskCache.Editor.data","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-editor/data.html","searchKeys":["data","abstract val data: Path","com.github.panpf.sketch.cache.DiskCache.Editor.data"]},{"name":"abstract val data: Path","description":"com.github.panpf.sketch.cache.DiskCache.Snapshot.data","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-snapshot/data.html","searchKeys":["data","abstract val data: Path","com.github.panpf.sketch.cache.DiskCache.Snapshot.data"]},{"name":"abstract val dataFrom: DataFrom","description":"com.github.panpf.sketch.source.DataSource.dataFrom","location":"sketch-core/com.github.panpf.sketch.source/-data-source/data-from.html","searchKeys":["dataFrom","abstract val dataFrom: DataFrom","com.github.panpf.sketch.source.DataSource.dataFrom"]},{"name":"abstract val directory: Path","description":"com.github.panpf.sketch.cache.DiskCache.directory","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/directory.html","searchKeys":["directory","abstract val directory: Path","com.github.panpf.sketch.cache.DiskCache.directory"]},{"name":"abstract val extras: Map<String, Any?>?","description":"com.github.panpf.sketch.cache.MemoryCache.Value.extras","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/-value/extras.html","searchKeys":["extras","abstract val extras: Map<String, Any?>?","com.github.panpf.sketch.cache.MemoryCache.Value.extras"]},{"name":"abstract val fetchResult: FetchResult?","description":"com.github.panpf.sketch.decode.DecodeInterceptor.Chain.fetchResult","location":"sketch-core/com.github.panpf.sketch.decode/-decode-interceptor/-chain/fetch-result.html","searchKeys":["fetchResult","abstract val fetchResult: FetchResult?","com.github.panpf.sketch.decode.DecodeInterceptor.Chain.fetchResult"]},{"name":"abstract val fileSystem: FileSystem","description":"com.github.panpf.sketch.cache.DiskCache.fileSystem","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/file-system.html","searchKeys":["fileSystem","abstract val fileSystem: FileSystem","com.github.panpf.sketch.cache.DiskCache.fileSystem"]},{"name":"abstract val fitScale: Boolean","description":"com.github.panpf.sketch.transition.TransitionTarget.fitScale","location":"sketch-core/com.github.panpf.sketch.transition/-transition-target/fit-scale.html","searchKeys":["fitScale","abstract val fitScale: Boolean","com.github.panpf.sketch.transition.TransitionTarget.fitScale"]},{"name":"abstract val frameCount: Int","description":"com.github.panpf.sketch.AnimatedImage.frameCount","location":"sketch-core/com.github.panpf.sketch/-animated-image/frame-count.html","searchKeys":["frameCount","abstract val frameCount: Int","com.github.panpf.sketch.AnimatedImage.frameCount"]},{"name":"abstract val frameDurations: Array<Int>","description":"com.github.panpf.sketch.AnimatedImage.frameDurations","location":"sketch-core/com.github.panpf.sketch/-animated-image/frame-durations.html","searchKeys":["frameDurations","abstract val frameDurations: Array<Int>","com.github.panpf.sketch.AnimatedImage.frameDurations"]},{"name":"abstract val height: Int","description":"com.github.panpf.sketch.Image.height","location":"sketch-core/com.github.panpf.sketch/-image/height.html","searchKeys":["height","abstract val height: Int","com.github.panpf.sketch.Image.height"]},{"name":"abstract val image: Image","description":"com.github.panpf.sketch.cache.MemoryCache.Value.image","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/-value/image.html","searchKeys":["image","abstract val image: Image","com.github.panpf.sketch.cache.MemoryCache.Value.image"]},{"name":"abstract val image: Image?","description":"com.github.panpf.sketch.request.ImageResult.image","location":"sketch-core/com.github.panpf.sketch.request/-image-result/image.html","searchKeys":["image","abstract val image: Image?","com.github.panpf.sketch.request.ImageResult.image"]},{"name":"abstract val imageInfo: ImageInfo","description":"com.github.panpf.sketch.decode.Decoder.imageInfo","location":"sketch-core/com.github.panpf.sketch.decode/-decoder/image-info.html","searchKeys":["imageInfo","abstract val imageInfo: ImageInfo","com.github.panpf.sketch.decode.Decoder.imageInfo"]},{"name":"abstract val imageInfo: ImageInfo","description":"com.github.panpf.sketch.decode.internal.DecodeHelper.imageInfo","location":"sketch-core/com.github.panpf.sketch.decode.internal/-decode-helper/image-info.html","searchKeys":["imageInfo","abstract val imageInfo: ImageInfo","com.github.panpf.sketch.decode.internal.DecodeHelper.imageInfo"]},{"name":"abstract val initialRequest: ImageRequest","description":"com.github.panpf.sketch.request.internal.RequestDelegate.initialRequest","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-delegate/initial-request.html","searchKeys":["initialRequest","abstract val initialRequest: ImageRequest","com.github.panpf.sketch.request.internal.RequestDelegate.initialRequest"]},{"name":"abstract val internalVersion: Int","description":"com.github.panpf.sketch.cache.DiskCache.internalVersion","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/internal-version.html","searchKeys":["internalVersion","abstract val internalVersion: Int","com.github.panpf.sketch.cache.DiskCache.internalVersion"]},{"name":"abstract val isCellularNetworkConnected: Boolean","description":"com.github.panpf.sketch.util.NetworkObserver.isCellularNetworkConnected","location":"sketch-core/com.github.panpf.sketch.util/-network-observer/is-cellular-network-connected.html","searchKeys":["isCellularNetworkConnected","abstract val isCellularNetworkConnected: Boolean","com.github.panpf.sketch.util.NetworkObserver.isCellularNetworkConnected"]},{"name":"abstract val isCellularNetworkConnected: Boolean","description":"com.github.panpf.sketch.util.SystemCallbacks.isCellularNetworkConnected","location":"sketch-core/com.github.panpf.sketch.util/-system-callbacks/is-cellular-network-connected.html","searchKeys":["isCellularNetworkConnected","abstract val isCellularNetworkConnected: Boolean","com.github.panpf.sketch.util.SystemCallbacks.isCellularNetworkConnected"]},{"name":"abstract val isDisposed: Boolean","description":"com.github.panpf.sketch.request.Disposable.isDisposed","location":"sketch-core/com.github.panpf.sketch.request/-disposable/is-disposed.html","searchKeys":["isDisposed","abstract val isDisposed: Boolean","com.github.panpf.sketch.request.Disposable.isDisposed"]},{"name":"abstract val isShutdown: Boolean","description":"com.github.panpf.sketch.util.SystemCallbacks.isShutdown","location":"sketch-core/com.github.panpf.sketch.util/-system-callbacks/is-shutdown.html","searchKeys":["isShutdown","abstract val isShutdown: Boolean","com.github.panpf.sketch.util.SystemCallbacks.isShutdown"]},{"name":"abstract val job: Deferred<ImageResult>","description":"com.github.panpf.sketch.request.Disposable.job","location":"sketch-core/com.github.panpf.sketch.request/-disposable/job.html","searchKeys":["job","abstract val job: Deferred<ImageResult>","com.github.panpf.sketch.request.Disposable.job"]},{"name":"abstract val key: String","description":"com.github.panpf.sketch.util.Key.key","location":"sketch-core/com.github.panpf.sketch.util/-key/key.html","searchKeys":["key","abstract val key: String","com.github.panpf.sketch.util.Key.key"]},{"name":"abstract val key: String?","description":"com.github.panpf.sketch.util.NullableKey.key","location":"sketch-core/com.github.panpf.sketch.util/-nullable-key/key.html","searchKeys":["key","abstract val key: String?","com.github.panpf.sketch.util.NullableKey.key"]},{"name":"abstract val maxSize: Long","description":"com.github.panpf.sketch.cache.DiskCache.maxSize","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/max-size.html","searchKeys":["maxSize","abstract val maxSize: Long","com.github.panpf.sketch.cache.DiskCache.maxSize"]},{"name":"abstract val maxSize: Long","description":"com.github.panpf.sketch.cache.MemoryCache.maxSize","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/max-size.html","searchKeys":["maxSize","abstract val maxSize: Long","com.github.panpf.sketch.cache.MemoryCache.maxSize"]},{"name":"abstract val metadata: Path","description":"com.github.panpf.sketch.cache.DiskCache.Editor.metadata","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-editor/metadata.html","searchKeys":["metadata","abstract val metadata: Path","com.github.panpf.sketch.cache.DiskCache.Editor.metadata"]},{"name":"abstract val metadata: Path","description":"com.github.panpf.sketch.cache.DiskCache.Snapshot.metadata","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-snapshot/metadata.html","searchKeys":["metadata","abstract val metadata: Path","com.github.panpf.sketch.cache.DiskCache.Snapshot.metadata"]},{"name":"abstract val repeatCount: Int","description":"com.github.panpf.sketch.AnimatedImage.repeatCount","location":"sketch-core/com.github.panpf.sketch/-animated-image/repeat-count.html","searchKeys":["repeatCount","abstract val repeatCount: Int","com.github.panpf.sketch.AnimatedImage.repeatCount"]},{"name":"abstract val request: ImageRequest","description":"com.github.panpf.sketch.request.ImageResult.request","location":"sketch-core/com.github.panpf.sketch.request/-image-result/request.html","searchKeys":["request","abstract val request: ImageRequest","com.github.panpf.sketch.request.ImageResult.request"]},{"name":"abstract val request: ImageRequest","description":"com.github.panpf.sketch.request.LoadState.request","location":"sketch-core/com.github.panpf.sketch.request/-load-state/request.html","searchKeys":["request","abstract val request: ImageRequest","com.github.panpf.sketch.request.LoadState.request"]},{"name":"abstract val requestContext: RequestContext","description":"com.github.panpf.sketch.decode.DecodeInterceptor.Chain.requestContext","location":"sketch-core/com.github.panpf.sketch.decode/-decode-interceptor/-chain/request-context.html","searchKeys":["requestContext","abstract val requestContext: RequestContext","com.github.panpf.sketch.decode.DecodeInterceptor.Chain.requestContext"]},{"name":"abstract val requestContext: RequestContext","description":"com.github.panpf.sketch.request.RequestInterceptor.Chain.requestContext","location":"sketch-core/com.github.panpf.sketch.request/-request-interceptor/-chain/request-context.html","searchKeys":["requestContext","abstract val requestContext: RequestContext","com.github.panpf.sketch.request.RequestInterceptor.Chain.requestContext"]},{"name":"abstract val shareable: Boolean","description":"com.github.panpf.sketch.Image.shareable","location":"sketch-core/com.github.panpf.sketch/-image/shareable.html","searchKeys":["shareable","abstract val shareable: Boolean","com.github.panpf.sketch.Image.shareable"]},{"name":"abstract val size: Long","description":"com.github.panpf.sketch.cache.DiskCache.size","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/size.html","searchKeys":["size","abstract val size: Long","com.github.panpf.sketch.cache.DiskCache.size"]},{"name":"abstract val size: Long","description":"com.github.panpf.sketch.cache.MemoryCache.Value.size","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/-value/size.html","searchKeys":["size","abstract val size: Long","com.github.panpf.sketch.cache.MemoryCache.Value.size"]},{"name":"abstract val size: Long","description":"com.github.panpf.sketch.cache.MemoryCache.size","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/size.html","searchKeys":["size","abstract val size: Long","com.github.panpf.sketch.cache.MemoryCache.size"]},{"name":"abstract val sketch: Sketch","description":"com.github.panpf.sketch.request.internal.RequestDelegate.sketch","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-delegate/sketch.html","searchKeys":["sketch","abstract val sketch: Sketch","com.github.panpf.sketch.request.internal.RequestDelegate.sketch"]},{"name":"abstract val sortWeight: Int","description":"com.github.panpf.sketch.decode.DecodeInterceptor.sortWeight","location":"sketch-core/com.github.panpf.sketch.decode/-decode-interceptor/sort-weight.html","searchKeys":["sortWeight","abstract val sortWeight: Int","com.github.panpf.sketch.decode.DecodeInterceptor.sortWeight"]},{"name":"abstract val sortWeight: Int","description":"com.github.panpf.sketch.request.RequestInterceptor.sortWeight","location":"sketch-core/com.github.panpf.sketch.request/-request-interceptor/sort-weight.html","searchKeys":["sortWeight","abstract val sortWeight: Int","com.github.panpf.sketch.request.RequestInterceptor.sortWeight"]},{"name":"abstract val supportRegion: Boolean","description":"com.github.panpf.sketch.decode.internal.DecodeHelper.supportRegion","location":"sketch-core/com.github.panpf.sketch.decode.internal/-decode-helper/support-region.html","searchKeys":["supportRegion","abstract val supportRegion: Boolean","com.github.panpf.sketch.decode.internal.DecodeHelper.supportRegion"]},{"name":"abstract val width: Int","description":"com.github.panpf.sketch.Image.width","location":"sketch-core/com.github.panpf.sketch/-image/width.html","searchKeys":["width","abstract val width: Int","com.github.panpf.sketch.Image.width"]},{"name":"abstract var animatedTransformation: (Any, Rect) -> Unit?","description":"com.github.panpf.sketch.AnimatedImage.animatedTransformation","location":"sketch-core/com.github.panpf.sketch/-animated-image/animated-transformation.html","searchKeys":["animatedTransformation","abstract var animatedTransformation: (Any, Rect) -> Unit?","com.github.panpf.sketch.AnimatedImage.animatedTransformation"]},{"name":"abstract var animationEndCallback: () -> Unit?","description":"com.github.panpf.sketch.AnimatedImage.animationEndCallback","location":"sketch-core/com.github.panpf.sketch/-animated-image/animation-end-callback.html","searchKeys":["animationEndCallback","abstract var animationEndCallback: () -> Unit?","com.github.panpf.sketch.AnimatedImage.animationEndCallback"]},{"name":"abstract var animationStartCallback: () -> Unit?","description":"com.github.panpf.sketch.AnimatedImage.animationStartCallback","location":"sketch-core/com.github.panpf.sketch/-animated-image/animation-start-callback.html","searchKeys":["animationStartCallback","abstract var animationStartCallback: () -> Unit?","com.github.panpf.sketch.AnimatedImage.animationStartCallback"]},{"name":"abstract var imageOptions: ImageOptions?","description":"com.github.panpf.sketch.request.ImageOptionsProvider.imageOptions","location":"sketch-core/com.github.panpf.sketch.request/-image-options-provider/image-options.html","searchKeys":["imageOptions","abstract var imageOptions: ImageOptions?","com.github.panpf.sketch.request.ImageOptionsProvider.imageOptions"]},{"name":"annotation class WorkerThread","description":"com.github.panpf.sketch.annotation.WorkerThread","location":"sketch-core/com.github.panpf.sketch.annotation/-worker-thread/index.html","searchKeys":["WorkerThread","annotation class WorkerThread","com.github.panpf.sketch.annotation.WorkerThread"]},{"name":"class AndroidSystemCallbacks(sketch: <Error class: unknown class>)","description":"com.github.panpf.sketch.util.AndroidSystemCallbacks","location":"sketch-core/com.github.panpf.sketch.util/-android-system-callbacks/index.html","searchKeys":["AndroidSystemCallbacks","class AndroidSystemCallbacks(sketch: <Error class: unknown class>)","com.github.panpf.sketch.util.AndroidSystemCallbacks"]},{"name":"class AnimatableCallbackHelper(drawable: Drawable)","description":"com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper","location":"sketch-core/com.github.panpf.sketch.drawable.internal/-animatable-callback-helper/index.html","searchKeys":["AnimatableCallbackHelper","class AnimatableCallbackHelper(drawable: Drawable)","com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper"]},{"name":"class AnimatableDrawable(drawable: Drawable) : DrawableWrapperCompat, Animatable2Compat, SketchDrawable","description":"com.github.panpf.sketch.drawable.AnimatableDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-animatable-drawable/index.html","searchKeys":["AnimatableDrawable","class AnimatableDrawable(drawable: Drawable) : DrawableWrapperCompat, Animatable2Compat, SketchDrawable","com.github.panpf.sketch.drawable.AnimatableDrawable"]},{"name":"class AssetDataSource(val context: Context, val fileName: String)","description":"com.github.panpf.sketch.source.AssetDataSource","location":"sketch-core/com.github.panpf.sketch.source/-asset-data-source/index.html","searchKeys":["AssetDataSource","class AssetDataSource(val context: Context, val fileName: String)","com.github.panpf.sketch.source.AssetDataSource"]},{"name":"class AssetUriFetcher(val context: Context, val fileName: String)","description":"com.github.panpf.sketch.fetch.AssetUriFetcher","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/index.html","searchKeys":["AssetUriFetcher","class AssetUriFetcher(val context: Context, val fileName: String)","com.github.panpf.sketch.fetch.AssetUriFetcher"]},{"name":"class Base64UriFetcher(val dataEncodedString: String, val mimeType: String, val spec: Base64Spec? = null) : Fetcher","description":"com.github.panpf.sketch.fetch.Base64UriFetcher","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/index.html","searchKeys":["Base64UriFetcher","class Base64UriFetcher(val dataEncodedString: String, val mimeType: String, val spec: Base64Spec? = null) : Fetcher","com.github.panpf.sketch.fetch.Base64UriFetcher"]},{"name":"class BitmapFactoryDecodeHelper(val request: <Error class: unknown class>, val dataSource: <Error class: unknown class>)","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decode-helper/index.html","searchKeys":["BitmapFactoryDecodeHelper","class BitmapFactoryDecodeHelper(val request: <Error class: unknown class>, val dataSource: <Error class: unknown class>)","com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper"]},{"name":"class Builder","description":"com.github.panpf.sketch.ComponentRegistry.Builder","location":"sketch-core/com.github.panpf.sketch/-component-registry/-builder/index.html","searchKeys":["Builder","class Builder","com.github.panpf.sketch.ComponentRegistry.Builder"]},{"name":"class Builder","description":"com.github.panpf.sketch.decode.DecodeResult.Builder","location":"sketch-core/com.github.panpf.sketch.decode/-decode-result/-builder/index.html","searchKeys":["Builder","class Builder","com.github.panpf.sketch.decode.DecodeResult.Builder"]},{"name":"class Builder","description":"com.github.panpf.sketch.request.Extras.Builder","location":"sketch-core/com.github.panpf.sketch.request/-extras/-builder/index.html","searchKeys":["Builder","class Builder","com.github.panpf.sketch.request.Extras.Builder"]},{"name":"class Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/index.html","searchKeys":["Builder","class Builder","com.github.panpf.sketch.request.ImageOptions.Builder"]},{"name":"class Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/index.html","searchKeys":["Builder","class Builder","com.github.panpf.sketch.request.ImageRequest.Builder"]},{"name":"class Builder","description":"com.github.panpf.sketch.request.internal.RequestOptions.Builder","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-options/-builder/index.html","searchKeys":["Builder","class Builder","com.github.panpf.sketch.request.internal.RequestOptions.Builder"]},{"name":"class Builder(context: PlatformContext)","description":"com.github.panpf.sketch.Sketch.Builder","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/index.html","searchKeys":["Builder","class Builder(context: PlatformContext)","com.github.panpf.sketch.Sketch.Builder"]},{"name":"class Builder(defaultImage: StateImage?)","description":"com.github.panpf.sketch.state.ConditionStateImage.Builder","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/-builder/index.html","searchKeys":["Builder","class Builder(defaultImage: StateImage?)","com.github.panpf.sketch.state.ConditionStateImage.Builder"]},{"name":"class Builder(val context: PlatformContext)","description":"com.github.panpf.sketch.cache.MemoryCache.Builder","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/-builder/index.html","searchKeys":["Builder","class Builder(val context: PlatformContext)","com.github.panpf.sketch.cache.MemoryCache.Builder"]},{"name":"class ByteArrayDataSource(val data: ByteArray, val dataFrom: DataFrom) : DataSource","description":"com.github.panpf.sketch.source.ByteArrayDataSource","location":"sketch-core/com.github.panpf.sketch.source/-byte-array-data-source/index.html","searchKeys":["ByteArrayDataSource","class ByteArrayDataSource(val data: ByteArray, val dataFrom: DataFrom) : DataSource","com.github.panpf.sketch.source.ByteArrayDataSource"]},{"name":"class Bytes(val bytes: ByteArray) : DownloadData","description":"com.github.panpf.sketch.util.DownloadData.Bytes","location":"sketch-core/com.github.panpf.sketch.util/-download-data/-bytes/index.html","searchKeys":["Bytes","class Bytes(val bytes: ByteArray) : DownloadData","com.github.panpf.sketch.util.DownloadData.Bytes"]},{"name":"class Cache(val fileSystem: FileSystem, val path: Path) : DownloadData","description":"com.github.panpf.sketch.util.DownloadData.Cache","location":"sketch-core/com.github.panpf.sketch.util/-download-data/-cache/index.html","searchKeys":["Cache","class Cache(val fileSystem: FileSystem, val path: Path) : DownloadData","com.github.panpf.sketch.util.DownloadData.Cache"]},{"name":"class CircleCropTransformation(val scale: Scale? = null) : Transformation","description":"com.github.panpf.sketch.transform.CircleCropTransformation","location":"sketch-core/com.github.panpf.sketch.transform/-circle-crop-transformation/index.html","searchKeys":["CircleCropTransformation","class CircleCropTransformation(val scale: Scale? = null) : Transformation","com.github.panpf.sketch.transform.CircleCropTransformation"]},{"name":"class ColorFetcherDrawableFetcher(val color: ColorFetcher) : DrawableFetcher","description":"com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher","location":"sketch-core/com.github.panpf.sketch.drawable/-color-fetcher-drawable-fetcher/index.html","searchKeys":["ColorFetcherDrawableFetcher","class ColorFetcherDrawableFetcher(val color: ColorFetcher) : DrawableFetcher","com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher"]},{"name":"class Components(val registry: ComponentRegistry)","description":"com.github.panpf.sketch.Components","location":"sketch-core/com.github.panpf.sketch/-components/index.html","searchKeys":["Components","class Components(val registry: ComponentRegistry)","com.github.panpf.sketch.Components"]},{"name":"class ContentDataSource(val context: Context, val contentUri: Uri)","description":"com.github.panpf.sketch.source.ContentDataSource","location":"sketch-core/com.github.panpf.sketch.source/-content-data-source/index.html","searchKeys":["ContentDataSource","class ContentDataSource(val context: Context, val contentUri: Uri)","com.github.panpf.sketch.source.ContentDataSource"]},{"name":"class ContentUriFetcher(val context: Context, val contentUri: Uri)","description":"com.github.panpf.sketch.fetch.ContentUriFetcher","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/index.html","searchKeys":["ContentUriFetcher","class ContentUriFetcher(val context: Context, val contentUri: Uri)","com.github.panpf.sketch.fetch.ContentUriFetcher"]},{"name":"class CrossfadeTransition(val wrappedTransition: Transition) : Transition","description":"com.github.panpf.sketch.transition.CrossfadeTransition","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/index.html","searchKeys":["CrossfadeTransition","class CrossfadeTransition(val wrappedTransition: Transition) : Transition","com.github.panpf.sketch.transition.CrossfadeTransition"]},{"name":"class DecodeException(message: String, cause: Throwable? = null) : SketchException","description":"com.github.panpf.sketch.decode.DecodeException","location":"sketch-core/com.github.panpf.sketch.decode/-decode-exception/index.html","searchKeys":["DecodeException","class DecodeException(message: String, cause: Throwable? = null) : SketchException","com.github.panpf.sketch.decode.DecodeException"]},{"name":"class DepthException(message: String) : SketchException","description":"com.github.panpf.sketch.request.DepthException","location":"sketch-core/com.github.panpf.sketch.request/-depth-exception/index.html","searchKeys":["DepthException","class DepthException(message: String) : SketchException","com.github.panpf.sketch.request.DepthException"]},{"name":"class DownloadBuilder(val context: PlatformContext, val fileSystem: FileSystem) : DiskCache.Builder","description":"com.github.panpf.sketch.cache.DiskCache.DownloadBuilder","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-download-builder/index.html","searchKeys":["DownloadBuilder","class DownloadBuilder(val context: PlatformContext, val fileSystem: FileSystem) : DiskCache.Builder","com.github.panpf.sketch.cache.DiskCache.DownloadBuilder"]},{"name":"class DrawableDataSource(val context: Context, val drawableFetcher: DrawableFetcher, val dataFrom: <Error class: unknown class>)","description":"com.github.panpf.sketch.source.DrawableDataSource","location":"sketch-core/com.github.panpf.sketch.source/-drawable-data-source/index.html","searchKeys":["DrawableDataSource","class DrawableDataSource(val context: Context, val drawableFetcher: DrawableFetcher, val dataFrom: <Error class: unknown class>)","com.github.panpf.sketch.source.DrawableDataSource"]},{"name":"class Elements(val scheme: String?, val authority: String?, val path: String?, val query: String?, val fragment: String?)","description":"com.github.panpf.sketch.util.Uri.Elements","location":"sketch-core/com.github.panpf.sketch.util/-uri/-elements/index.html","searchKeys":["Elements","class Elements(val scheme: String?, val authority: String?, val path: String?, val query: String?, val fragment: String?)","com.github.panpf.sketch.util.Uri.Elements"]},{"name":"class EmptyDiskCache(val fileSystem: FileSystem) : DiskCache","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/index.html","searchKeys":["EmptyDiskCache","class EmptyDiskCache(val fileSystem: FileSystem) : DiskCache","com.github.panpf.sketch.cache.internal.EmptyDiskCache"]},{"name":"class EngineDecodeInterceptor : DecodeInterceptor","description":"com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor","location":"sketch-core/com.github.panpf.sketch.decode.internal/-engine-decode-interceptor/index.html","searchKeys":["EngineDecodeInterceptor","class EngineDecodeInterceptor : DecodeInterceptor","com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor"]},{"name":"class EngineRequestInterceptor : RequestInterceptor","description":"com.github.panpf.sketch.request.internal.EngineRequestInterceptor","location":"sketch-core/com.github.panpf.sketch.request.internal/-engine-request-interceptor/index.html","searchKeys":["EngineRequestInterceptor","class EngineRequestInterceptor : RequestInterceptor","com.github.panpf.sketch.request.internal.EngineRequestInterceptor"]},{"name":"class ExifOrientationHelper(val exifOrientation: Int)","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/index.html","searchKeys":["ExifOrientationHelper","class ExifOrientationHelper(val exifOrientation: Int)","com.github.panpf.sketch.decode.internal.ExifOrientationHelper"]},{"name":"class Extras : Iterable<Pair<String, Extras.Entry>> , Key","description":"com.github.panpf.sketch.request.Extras","location":"sketch-core/com.github.panpf.sketch.request/-extras/index.html","searchKeys":["Extras","class Extras : Iterable<Pair<String, Extras.Entry>> , Key","com.github.panpf.sketch.request.Extras"]},{"name":"class Factory","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.Factory","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decoder/-factory/index.html","searchKeys":["Factory","class Factory","com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.Factory"]},{"name":"class Factory","description":"com.github.panpf.sketch.decode.internal.DrawableDecoder.Factory","location":"sketch-core/com.github.panpf.sketch.decode.internal/-drawable-decoder/-factory/index.html","searchKeys":["Factory","class Factory","com.github.panpf.sketch.decode.internal.DrawableDecoder.Factory"]},{"name":"class Factory","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.Factory","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/-factory/index.html","searchKeys":["Factory","class Factory","com.github.panpf.sketch.fetch.AssetUriFetcher.Factory"]},{"name":"class Factory","description":"com.github.panpf.sketch.fetch.ContentUriFetcher.Factory","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/-factory/index.html","searchKeys":["Factory","class Factory","com.github.panpf.sketch.fetch.ContentUriFetcher.Factory"]},{"name":"class Factory","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/-factory/index.html","searchKeys":["Factory","class Factory","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory"]},{"name":"class Factory","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/-factory/index.html","searchKeys":["Factory","class Factory","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory"]},{"name":"class Factory","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher.Factory","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/-factory/index.html","searchKeys":["Factory","class Factory","com.github.panpf.sketch.fetch.ResourceUriFetcher.Factory"]},{"name":"class Factory : Decoder.Factory","description":"com.github.panpf.sketch.decode.SkiaDecoder.Factory","location":"sketch-core/com.github.panpf.sketch.decode/-skia-decoder/-factory/index.html","searchKeys":["Factory","class Factory : Decoder.Factory","com.github.panpf.sketch.decode.SkiaDecoder.Factory"]},{"name":"class Factory : Fetcher.Factory","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.Factory","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/-factory/index.html","searchKeys":["Factory","class Factory : Fetcher.Factory","com.github.panpf.sketch.fetch.Base64UriFetcher.Factory"]},{"name":"class Factory : Fetcher.Factory","description":"com.github.panpf.sketch.fetch.FileUriFetcher.Factory","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/-factory/index.html","searchKeys":["Factory","class Factory : Fetcher.Factory","com.github.panpf.sketch.fetch.FileUriFetcher.Factory"]},{"name":"class Factory constructor(val durationMillis: Int = DEFAULT_DURATION_MILLIS, val fadeStart: Boolean = DEFAULT_FADE_START, val preferExactIntrinsicSize: Boolean = DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, val alwaysUse: Boolean = DEFAULT_ALWAYS_USE) : Transition.Factory","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Factory","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-factory/index.html","searchKeys":["Factory","class Factory constructor(val durationMillis: Int = DEFAULT_DURATION_MILLIS, val fadeStart: Boolean = DEFAULT_FADE_START, val preferExactIntrinsicSize: Boolean = DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, val alwaysUse: Boolean = DEFAULT_ALWAYS_USE) : Transition.Factory","com.github.panpf.sketch.transition.CrossfadeTransition.Factory"]},{"name":"class FileDataSource(val path: Path, val fileSystem: FileSystem = defaultFileSystem(), val dataFrom: DataFrom = LOCAL) : DataSource","description":"com.github.panpf.sketch.source.FileDataSource","location":"sketch-core/com.github.panpf.sketch.source/-file-data-source/index.html","searchKeys":["FileDataSource","class FileDataSource(val path: Path, val fileSystem: FileSystem = defaultFileSystem(), val dataFrom: DataFrom = LOCAL) : DataSource","com.github.panpf.sketch.source.FileDataSource"]},{"name":"class FileUriFetcher(val path: Path, val fileSystem: FileSystem = defaultFileSystem()) : Fetcher","description":"com.github.panpf.sketch.fetch.FileUriFetcher","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/index.html","searchKeys":["FileUriFetcher","class FileUriFetcher(val path: Path, val fileSystem: FileSystem = defaultFileSystem()) : Fetcher","com.github.panpf.sketch.fetch.FileUriFetcher"]},{"name":"class IconAnimatableDrawable(val icon: Drawable, val background: Drawable? = null, val iconSize: <Error class: unknown class>? = null, val iconTint: Int? = null) : IconDrawable, Drawable.Callback, Animatable2Compat, SketchDrawable","description":"com.github.panpf.sketch.drawable.IconAnimatableDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-animatable-drawable/index.html","searchKeys":["IconAnimatableDrawable","class IconAnimatableDrawable(val icon: Drawable, val background: Drawable? = null, val iconSize: <Error class: unknown class>? = null, val iconTint: Int? = null) : IconDrawable, Drawable.Callback, Animatable2Compat, SketchDrawable","com.github.panpf.sketch.drawable.IconAnimatableDrawable"]},{"name":"class ImageInvalidException(message: String) : SketchException","description":"com.github.panpf.sketch.decode.ImageInvalidException","location":"sketch-core/com.github.panpf.sketch.decode/-image-invalid-exception/index.html","searchKeys":["ImageInvalidException","class ImageInvalidException(message: String) : SketchException","com.github.panpf.sketch.decode.ImageInvalidException"]},{"name":"class Impl16 : OpenGLTextureHelper.Impl","description":"com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl16","location":"sketch-core/com.github.panpf.sketch.decode.internal/-open-g-l-texture-helper/-impl16/index.html","searchKeys":["Impl16","class Impl16 : OpenGLTextureHelper.Impl","com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl16"]},{"name":"class Impl17 : OpenGLTextureHelper.Impl","description":"com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl17","location":"sketch-core/com.github.panpf.sketch.decode.internal/-open-g-l-texture-helper/-impl17/index.html","searchKeys":["Impl17","class Impl17 : OpenGLTextureHelper.Impl","com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl17"]},{"name":"class IntColorFetcher(val color: Int) : ColorFetcher","description":"com.github.panpf.sketch.util.IntColorFetcher","location":"sketch-core/com.github.panpf.sketch.util/-int-color-fetcher/index.html","searchKeys":["IntColorFetcher","class IntColorFetcher(val color: Int) : ColorFetcher","com.github.panpf.sketch.util.IntColorFetcher"]},{"name":"class KotlinResourceDataSource(val resourcePath: String)","description":"com.github.panpf.sketch.source.KotlinResourceDataSource","location":"sketch-core/com.github.panpf.sketch.source/[desktop]-kotlin-resource-data-source/index.html","searchKeys":["KotlinResourceDataSource","class KotlinResourceDataSource(val resourcePath: String)","com.github.panpf.sketch.source.KotlinResourceDataSource"]},{"name":"class KotlinResourceDataSource(val resourcePath: String, val fileSystem: <Error class: unknown class> = defaultFileSystem())","description":"com.github.panpf.sketch.source.KotlinResourceDataSource","location":"sketch-core/com.github.panpf.sketch.source/[ios]-kotlin-resource-data-source/index.html","searchKeys":["KotlinResourceDataSource","class KotlinResourceDataSource(val resourcePath: String, val fileSystem: <Error class: unknown class> = defaultFileSystem())","com.github.panpf.sketch.source.KotlinResourceDataSource"]},{"name":"class KotlinResourceUriFetcher(val resourcePath: String)","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/index.html","searchKeys":["KotlinResourceUriFetcher","class KotlinResourceUriFetcher(val resourcePath: String)","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher"]},{"name":"class KotlinResourceUriFetcher(val resourcePath: String, val fileSystem: <Error class: unknown class> = defaultFileSystem())","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/index.html","searchKeys":["KotlinResourceUriFetcher","class KotlinResourceUriFetcher(val resourcePath: String, val fileSystem: <Error class: unknown class> = defaultFileSystem())","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher"]},{"name":"class Listeners(val list: List<Listener>) : Listener","description":"com.github.panpf.sketch.request.internal.Listeners","location":"sketch-core/com.github.panpf.sketch.request.internal/-listeners/index.html","searchKeys":["Listeners","class Listeners(val list: List<Listener>) : Listener","com.github.panpf.sketch.request.internal.Listeners"]},{"name":"class Logger(level: Logger.Level = Level.Info, pipeline: Logger.Pipeline = defaultLogPipeline())","description":"com.github.panpf.sketch.util.Logger","location":"sketch-core/com.github.panpf.sketch.util/-logger/index.html","searchKeys":["Logger","class Logger(level: Logger.Level = Level.Info, pipeline: Logger.Pipeline = defaultLogPipeline())","com.github.panpf.sketch.util.Logger"]},{"name":"class LruDiskCache(context: PlatformContext, val fileSystem: FileSystem, val maxSize: Long, directory: Path, val appVersion: Int, val internalVersion: Int) : DiskCache","description":"com.github.panpf.sketch.cache.internal.LruDiskCache","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/index.html","searchKeys":["LruDiskCache","class LruDiskCache(context: PlatformContext, val fileSystem: FileSystem, val maxSize: Long, directory: Path, val appVersion: Int, val internalVersion: Int) : DiskCache","com.github.panpf.sketch.cache.internal.LruDiskCache"]},{"name":"class LruMemoryCache(val maxSize: Long, val valueLimitedSize: Long = (maxSize * 0.3f).roundToLong()) : MemoryCache","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/index.html","searchKeys":["LruMemoryCache","class LruMemoryCache(val maxSize: Long, val valueLimitedSize: Long = (maxSize * 0.3f).roundToLong()) : MemoryCache","com.github.panpf.sketch.cache.internal.LruMemoryCache"]},{"name":"class MaskTransformation(val maskColor: Int) : Transformation","description":"com.github.panpf.sketch.transform.MaskTransformation","location":"sketch-core/com.github.panpf.sketch.transform/-mask-transformation/index.html","searchKeys":["MaskTransformation","class MaskTransformation(val maskColor: Int) : Transformation","com.github.panpf.sketch.transform.MaskTransformation"]},{"name":"class MemoryCacheRequestInterceptor : RequestInterceptor","description":"com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor","location":"sketch-core/com.github.panpf.sketch.cache.internal/-memory-cache-request-interceptor/index.html","searchKeys":["MemoryCacheRequestInterceptor","class MemoryCacheRequestInterceptor : RequestInterceptor","com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor"]},{"name":"class Metadata(val imageInfo: ImageInfo, val resize: Resize, val transformeds: List<String>?, val extras: Map<String, String>?)","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/-metadata/index.html","searchKeys":["Metadata","class Metadata(val imageInfo: ImageInfo, val resize: Resize, val transformeds: List<String>?, val extras: Map<String, String>?)","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata"]},{"name":"class NetworkObserver1(context: Context) : NetworkObserver","description":"com.github.panpf.sketch.util.NetworkObserver1","location":"sketch-core/com.github.panpf.sketch.util/-network-observer1/index.html","searchKeys":["NetworkObserver1","class NetworkObserver1(context: Context) : NetworkObserver","com.github.panpf.sketch.util.NetworkObserver1"]},{"name":"class NetworkObserver21(context: Context) : NetworkObserver","description":"com.github.panpf.sketch.util.NetworkObserver21","location":"sketch-core/com.github.panpf.sketch.util/-network-observer21/index.html","searchKeys":["NetworkObserver21","class NetworkObserver21(context: Context) : NetworkObserver","com.github.panpf.sketch.util.NetworkObserver21"]},{"name":"class NoTargetRequestDelegate(val sketch: Sketch, val initialRequest: ImageRequest, job: Job) : BaseRequestDelegate","description":"com.github.panpf.sketch.request.internal.NoTargetRequestDelegate","location":"sketch-core/com.github.panpf.sketch.request.internal/-no-target-request-delegate/index.html","searchKeys":["NoTargetRequestDelegate","class NoTargetRequestDelegate(val sketch: Sketch, val initialRequest: ImageRequest, job: Job) : BaseRequestDelegate","com.github.panpf.sketch.request.internal.NoTargetRequestDelegate"]},{"name":"class OneShotDisposable(val job: Deferred<ImageResult>) : Disposable","description":"com.github.panpf.sketch.request.OneShotDisposable","location":"sketch-core/com.github.panpf.sketch.request/-one-shot-disposable/index.html","searchKeys":["OneShotDisposable","class OneShotDisposable(val job: Deferred<ImageResult>) : Disposable","com.github.panpf.sketch.request.OneShotDisposable"]},{"name":"class OneShotRequestDelegate(val sketch: Sketch, val initialRequest: ImageRequest, target: Target, job: Job) : BaseRequestDelegate","description":"com.github.panpf.sketch.request.internal.OneShotRequestDelegate","location":"sketch-core/com.github.panpf.sketch.request.internal/-one-shot-request-delegate/index.html","searchKeys":["OneShotRequestDelegate","class OneShotRequestDelegate(val sketch: Sketch, val initialRequest: ImageRequest, target: Target, job: Job) : BaseRequestDelegate","com.github.panpf.sketch.request.internal.OneShotRequestDelegate"]},{"name":"class OneShotRequestManager : BaseRequestManager","description":"com.github.panpf.sketch.request.internal.OneShotRequestManager","location":"sketch-core/com.github.panpf.sketch.request.internal/-one-shot-request-manager/index.html","searchKeys":["OneShotRequestManager","class OneShotRequestManager : BaseRequestManager","com.github.panpf.sketch.request.internal.OneShotRequestManager"]},{"name":"class ProgressListenerDelegate(coroutineScope: CoroutineScope, progressListener: ProgressListener)","description":"com.github.panpf.sketch.request.internal.ProgressListenerDelegate","location":"sketch-core/com.github.panpf.sketch.request.internal/-progress-listener-delegate/index.html","searchKeys":["ProgressListenerDelegate","class ProgressListenerDelegate(coroutineScope: CoroutineScope, progressListener: ProgressListener)","com.github.panpf.sketch.request.internal.ProgressListenerDelegate"]},{"name":"class ProgressListeners(val list: List<ProgressListener>) : ProgressListener","description":"com.github.panpf.sketch.request.internal.ProgressListeners","location":"sketch-core/com.github.panpf.sketch.request.internal/-progress-listeners/index.html","searchKeys":["ProgressListeners","class ProgressListeners(val list: List<ProgressListener>) : ProgressListener","com.github.panpf.sketch.request.internal.ProgressListeners"]},{"name":"class RealColorDrawableFetcher(val color: Int) : DrawableFetcher","description":"com.github.panpf.sketch.drawable.RealColorDrawableFetcher","location":"sketch-core/com.github.panpf.sketch.drawable/-real-color-drawable-fetcher/index.html","searchKeys":["RealColorDrawableFetcher","class RealColorDrawableFetcher(val color: Int) : DrawableFetcher","com.github.panpf.sketch.drawable.RealColorDrawableFetcher"]},{"name":"class RealDrawableFetcher(val drawable: EquitableDrawable) : DrawableFetcher","description":"com.github.panpf.sketch.drawable.RealDrawableFetcher","location":"sketch-core/com.github.panpf.sketch.drawable/-real-drawable-fetcher/index.html","searchKeys":["RealDrawableFetcher","class RealDrawableFetcher(val drawable: EquitableDrawable) : DrawableFetcher","com.github.panpf.sketch.drawable.RealDrawableFetcher"]},{"name":"class Rect","description":"com.github.panpf.sketch.util.Rect","location":"sketch-core/com.github.panpf.sketch.util/-rect/index.html","searchKeys":["Rect","class Rect","com.github.panpf.sketch.util.Rect"]},{"name":"class RequestContext(val sketch: Sketch, val initialRequest: ImageRequest, size: Size)","description":"com.github.panpf.sketch.request.RequestContext","location":"sketch-core/com.github.panpf.sketch.request/-request-context/index.html","searchKeys":["RequestContext","class RequestContext(val sketch: Sketch, val initialRequest: ImageRequest, size: Size)","com.github.panpf.sketch.request.RequestContext"]},{"name":"class RequestExecutor(val sketch: Sketch)","description":"com.github.panpf.sketch.request.internal.RequestExecutor","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-executor/index.html","searchKeys":["RequestExecutor","class RequestExecutor(val sketch: Sketch)","com.github.panpf.sketch.request.internal.RequestExecutor"]},{"name":"class RequestState : Listener, ProgressListener","description":"com.github.panpf.sketch.request.RequestState","location":"sketch-core/com.github.panpf.sketch.request/-request-state/index.html","searchKeys":["RequestState","class RequestState : Listener, ProgressListener","com.github.panpf.sketch.request.RequestState"]},{"name":"class ResColorDrawableFetcher(val resId: Int) : DrawableFetcher","description":"com.github.panpf.sketch.drawable.ResColorDrawableFetcher","location":"sketch-core/com.github.panpf.sketch.drawable/-res-color-drawable-fetcher/index.html","searchKeys":["ResColorDrawableFetcher","class ResColorDrawableFetcher(val resId: Int) : DrawableFetcher","com.github.panpf.sketch.drawable.ResColorDrawableFetcher"]},{"name":"class ResColorFetcher(val resId: Int) : ColorFetcher","description":"com.github.panpf.sketch.util.ResColorFetcher","location":"sketch-core/com.github.panpf.sketch.util/-res-color-fetcher/index.html","searchKeys":["ResColorFetcher","class ResColorFetcher(val resId: Int) : ColorFetcher","com.github.panpf.sketch.util.ResColorFetcher"]},{"name":"class ResDrawableFetcher(val resId: Int, val resources: Resources? = null, val packageName: String? = null) : DrawableFetcher","description":"com.github.panpf.sketch.drawable.ResDrawableFetcher","location":"sketch-core/com.github.panpf.sketch.drawable/-res-drawable-fetcher/index.html","searchKeys":["ResDrawableFetcher","class ResDrawableFetcher(val resId: Int, val resources: Resources? = null, val packageName: String? = null) : DrawableFetcher","com.github.panpf.sketch.drawable.ResDrawableFetcher"]},{"name":"class ResetLazy<T>(initializer: () -> T) : Lazy<T> ","description":"com.github.panpf.sketch.util.ResetLazy","location":"sketch-core/com.github.panpf.sketch.util/-reset-lazy/index.html","searchKeys":["ResetLazy","class ResetLazy<T>(initializer: () -> T) : Lazy<T> ","com.github.panpf.sketch.util.ResetLazy"]},{"name":"class ResourceDataSource(val resources: Resources, val packageName: String, val resId: Int)","description":"com.github.panpf.sketch.source.ResourceDataSource","location":"sketch-core/com.github.panpf.sketch.source/-resource-data-source/index.html","searchKeys":["ResourceDataSource","class ResourceDataSource(val resources: Resources, val packageName: String, val resId: Int)","com.github.panpf.sketch.source.ResourceDataSource"]},{"name":"class ResourceUriFetcher(val context: Context, val resourceUri: <Error class: unknown class>)","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/index.html","searchKeys":["ResourceUriFetcher","class ResourceUriFetcher(val context: Context, val resourceUri: <Error class: unknown class>)","com.github.panpf.sketch.fetch.ResourceUriFetcher"]},{"name":"class ResultBuilder(val context: PlatformContext, val fileSystem: FileSystem) : DiskCache.Builder","description":"com.github.panpf.sketch.cache.DiskCache.ResultBuilder","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-result-builder/index.html","searchKeys":["ResultBuilder","class ResultBuilder(val context: PlatformContext, val fileSystem: FileSystem) : DiskCache.Builder","com.github.panpf.sketch.cache.DiskCache.ResultBuilder"]},{"name":"class ResultCacheDecodeInterceptor : DecodeInterceptor","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/index.html","searchKeys":["ResultCacheDecodeInterceptor","class ResultCacheDecodeInterceptor : DecodeInterceptor","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor"]},{"name":"class ReusableDisposable(val requestManager: RequestManager, var job: Deferred<ImageResult>) : Disposable","description":"com.github.panpf.sketch.request.ReusableDisposable","location":"sketch-core/com.github.panpf.sketch.request/-reusable-disposable/index.html","searchKeys":["ReusableDisposable","class ReusableDisposable(val requestManager: RequestManager, var job: Deferred<ImageResult>) : Disposable","com.github.panpf.sketch.request.ReusableDisposable"]},{"name":"class RotateTransformation(val degrees: Int) : Transformation","description":"com.github.panpf.sketch.transform.RotateTransformation","location":"sketch-core/com.github.panpf.sketch.transform/-rotate-transformation/index.html","searchKeys":["RotateTransformation","class RotateTransformation(val degrees: Int) : Transformation","com.github.panpf.sketch.transform.RotateTransformation"]},{"name":"class RoundedCornersTransformation(val radiusArray: FloatArray) : Transformation","description":"com.github.panpf.sketch.transform.RoundedCornersTransformation","location":"sketch-core/com.github.panpf.sketch.transform/-rounded-corners-transformation/index.html","searchKeys":["RoundedCornersTransformation","class RoundedCornersTransformation(val radiusArray: FloatArray) : Transformation","com.github.panpf.sketch.transform.RoundedCornersTransformation"]},{"name":"class Sketch","description":"com.github.panpf.sketch.Sketch","location":"sketch-core/com.github.panpf.sketch/-sketch/index.html","searchKeys":["Sketch","class Sketch","com.github.panpf.sketch.Sketch"]},{"name":"class SkiaDecodeHelper(val request: ImageRequest, val dataSource: DataSource) : DecodeHelper","description":"com.github.panpf.sketch.decode.internal.SkiaDecodeHelper","location":"sketch-core/com.github.panpf.sketch.decode.internal/-skia-decode-helper/index.html","searchKeys":["SkiaDecodeHelper","class SkiaDecodeHelper(val request: ImageRequest, val dataSource: DataSource) : DecodeHelper","com.github.panpf.sketch.decode.internal.SkiaDecodeHelper"]},{"name":"class SkiaDecoder(requestContext: RequestContext, dataSource: DataSource) : HelperDecoder","description":"com.github.panpf.sketch.decode.SkiaDecoder","location":"sketch-core/com.github.panpf.sketch.decode/-skia-decoder/index.html","searchKeys":["SkiaDecoder","class SkiaDecoder(requestContext: RequestContext, dataSource: DataSource) : HelperDecoder","com.github.panpf.sketch.decode.SkiaDecoder"]},{"name":"class TransformationDecodeInterceptor : DecodeInterceptor","description":"com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor","location":"sketch-core/com.github.panpf.sketch.transform.internal/-transformation-decode-interceptor/index.html","searchKeys":["TransformationDecodeInterceptor","class TransformationDecodeInterceptor : DecodeInterceptor","com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor"]},{"name":"class Uri","description":"com.github.panpf.sketch.util.Uri","location":"sketch-core/com.github.panpf.sketch.util/-uri/index.html","searchKeys":["Uri","class Uri","com.github.panpf.sketch.util.Uri"]},{"name":"class UriInvalidException(message: String) : SketchException","description":"com.github.panpf.sketch.request.UriInvalidException","location":"sketch-core/com.github.panpf.sketch.request/-uri-invalid-exception/index.html","searchKeys":["UriInvalidException","class UriInvalidException(message: String) : SketchException","com.github.panpf.sketch.request.UriInvalidException"]},{"name":"class UriSyntaxException(val input: String, internalReason: String, val index: Int = -1) : Exception","description":"com.github.panpf.sketch.util.UriCodec.UriSyntaxException","location":"sketch-core/com.github.panpf.sketch.util/-uri-codec/-uri-syntax-exception/index.html","searchKeys":["UriSyntaxException","class UriSyntaxException(val input: String, internalReason: String, val index: Int = -1) : Exception","com.github.panpf.sketch.util.UriCodec.UriSyntaxException"]},{"name":"const val BASE64_IDENTIFIER: String","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.Companion.BASE64_IDENTIFIER","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/-companion/-b-a-s-e64_-i-d-e-n-t-i-f-i-e-r.html","searchKeys":["BASE64_IDENTIFIER","const val BASE64_IDENTIFIER: String","com.github.panpf.sketch.fetch.Base64UriFetcher.Companion.BASE64_IDENTIFIER"]},{"name":"const val BASE64_URI_SPEC_KEY: String","description":"com.github.panpf.sketch.fetch.BASE64_URI_SPEC_KEY","location":"sketch-core/com.github.panpf.sketch.fetch/-b-a-s-e64_-u-r-i_-s-p-e-c_-k-e-y.html","searchKeys":["BASE64_URI_SPEC_KEY","const val BASE64_URI_SPEC_KEY: String","com.github.panpf.sketch.fetch.BASE64_URI_SPEC_KEY"]},{"name":"const val DEFAULT_ALWAYS_USE: Boolean = false","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Companion.DEFAULT_ALWAYS_USE","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-companion/-d-e-f-a-u-l-t_-a-l-w-a-y-s_-u-s-e.html","searchKeys":["DEFAULT_ALWAYS_USE","const val DEFAULT_ALWAYS_USE: Boolean = false","com.github.panpf.sketch.transition.CrossfadeTransition.Companion.DEFAULT_ALWAYS_USE"]},{"name":"const val DEFAULT_APP_VERSION: Int = 1","description":"com.github.panpf.sketch.cache.DiskCache.Builder.Companion.DEFAULT_APP_VERSION","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-builder/-companion/-d-e-f-a-u-l-t_-a-p-p_-v-e-r-s-i-o-n.html","searchKeys":["DEFAULT_APP_VERSION","const val DEFAULT_APP_VERSION: Int = 1","com.github.panpf.sketch.cache.DiskCache.Builder.Companion.DEFAULT_APP_VERSION"]},{"name":"const val DEFAULT_DURATION: Int = 200","description":"com.github.panpf.sketch.transition.Transition.Companion.DEFAULT_DURATION","location":"sketch-core/com.github.panpf.sketch.transition/-transition/-companion/-d-e-f-a-u-l-t_-d-u-r-a-t-i-o-n.html","searchKeys":["DEFAULT_DURATION","const val DEFAULT_DURATION: Int = 200","com.github.panpf.sketch.transition.Transition.Companion.DEFAULT_DURATION"]},{"name":"const val DEFAULT_DURATION_MILLIS: Int","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Companion.DEFAULT_DURATION_MILLIS","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-companion/-d-e-f-a-u-l-t_-d-u-r-a-t-i-o-n_-m-i-l-l-i-s.html","searchKeys":["DEFAULT_DURATION_MILLIS","const val DEFAULT_DURATION_MILLIS: Int","com.github.panpf.sketch.transition.CrossfadeTransition.Companion.DEFAULT_DURATION_MILLIS"]},{"name":"const val DEFAULT_FADE_START: Boolean = true","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Companion.DEFAULT_FADE_START","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-companion/-d-e-f-a-u-l-t_-f-a-d-e_-s-t-a-r-t.html","searchKeys":["DEFAULT_FADE_START","const val DEFAULT_FADE_START: Boolean = true","com.github.panpf.sketch.transition.CrossfadeTransition.Companion.DEFAULT_FADE_START"]},{"name":"const val DEFAULT_PREFER_EXACT_INTRINSIC_SIZE: Boolean = false","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Companion.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-companion/-d-e-f-a-u-l-t_-p-r-e-f-e-r_-e-x-a-c-t_-i-n-t-r-i-n-s-i-c_-s-i-z-e.html","searchKeys":["DEFAULT_PREFER_EXACT_INTRINSIC_SIZE","const val DEFAULT_PREFER_EXACT_INTRINSIC_SIZE: Boolean = false","com.github.panpf.sketch.transition.CrossfadeTransition.Companion.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE"]},{"name":"const val DIRECTORY_NAME: String","description":"com.github.panpf.sketch.cache.DiskCache.Companion.DIRECTORY_NAME","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-companion/-d-i-r-e-c-t-o-r-y_-n-a-m-e.html","searchKeys":["DIRECTORY_NAME","const val DIRECTORY_NAME: String","com.github.panpf.sketch.cache.DiskCache.Companion.DIRECTORY_NAME"]},{"name":"const val FLIP_HORIZONTAL: Int = 2","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.FLIP_HORIZONTAL","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/-companion/-f-l-i-p_-h-o-r-i-z-o-n-t-a-l.html","searchKeys":["FLIP_HORIZONTAL","const val FLIP_HORIZONTAL: Int = 2","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.FLIP_HORIZONTAL"]},{"name":"const val FLIP_VERTICAL: Int = 4","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.FLIP_VERTICAL","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/-companion/-f-l-i-p_-v-e-r-t-i-c-a-l.html","searchKeys":["FLIP_VERTICAL","const val FLIP_VERTICAL: Int = 4","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.FLIP_VERTICAL"]},{"name":"const val INTERNAL_VERSION: Int = 1","description":"com.github.panpf.sketch.cache.DiskCache.DownloadBuilder.Companion.INTERNAL_VERSION","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-download-builder/-companion/-i-n-t-e-r-n-a-l_-v-e-r-s-i-o-n.html","searchKeys":["INTERNAL_VERSION","const val INTERNAL_VERSION: Int = 1","com.github.panpf.sketch.cache.DiskCache.DownloadBuilder.Companion.INTERNAL_VERSION"]},{"name":"const val INTERNAL_VERSION: Int = 1","description":"com.github.panpf.sketch.cache.DiskCache.ResultBuilder.Companion.INTERNAL_VERSION","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-result-builder/-companion/-i-n-t-e-r-n-a-l_-v-e-r-s-i-o-n.html","searchKeys":["INTERNAL_VERSION","const val INTERNAL_VERSION: Int = 1","com.github.panpf.sketch.cache.DiskCache.ResultBuilder.Companion.INTERNAL_VERSION"]},{"name":"const val MAX_SIZE_PERCENT: Float = 0.4f","description":"com.github.panpf.sketch.cache.DiskCache.ResultBuilder.Companion.MAX_SIZE_PERCENT","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-result-builder/-companion/-m-a-x_-s-i-z-e_-p-e-r-c-e-n-t.html","searchKeys":["MAX_SIZE_PERCENT","const val MAX_SIZE_PERCENT: Float = 0.4f","com.github.panpf.sketch.cache.DiskCache.ResultBuilder.Companion.MAX_SIZE_PERCENT"]},{"name":"const val MAX_SIZE_PERCENT: Float = 0.6f","description":"com.github.panpf.sketch.cache.DiskCache.DownloadBuilder.Companion.MAX_SIZE_PERCENT","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-download-builder/-companion/-m-a-x_-s-i-z-e_-p-e-r-c-e-n-t.html","searchKeys":["MAX_SIZE_PERCENT","const val MAX_SIZE_PERCENT: Float = 0.6f","com.github.panpf.sketch.cache.DiskCache.DownloadBuilder.Companion.MAX_SIZE_PERCENT"]},{"name":"const val NORMAL: Int = 1","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.NORMAL","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/-companion/-n-o-r-m-a-l.html","searchKeys":["NORMAL","const val NORMAL: Int = 1","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.NORMAL"]},{"name":"const val PATH_ROOT: String","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.Companion.PATH_ROOT","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/-companion/-p-a-t-h_-r-o-o-t.html","searchKeys":["PATH_ROOT","const val PATH_ROOT: String","com.github.panpf.sketch.fetch.AssetUriFetcher.Companion.PATH_ROOT"]},{"name":"const val PATH_ROOT: String","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Companion.PATH_ROOT","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/-companion/-p-a-t-h_-r-o-o-t.html","searchKeys":["PATH_ROOT","const val PATH_ROOT: String","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Companion.PATH_ROOT"]},{"name":"const val PATH_ROOT: String","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Companion.PATH_ROOT","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/-companion/-p-a-t-h_-r-o-o-t.html","searchKeys":["PATH_ROOT","const val PATH_ROOT: String","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Companion.PATH_ROOT"]},{"name":"const val PREFER_QUALITY_OVER_SPEED_KEY: String","description":"com.github.panpf.sketch.request.PREFER_QUALITY_OVER_SPEED_KEY","location":"sketch-core/com.github.panpf.sketch.request/-p-r-e-f-e-r_-q-u-a-l-i-t-y_-o-v-e-r_-s-p-e-e-d_-k-e-y.html","searchKeys":["PREFER_QUALITY_OVER_SPEED_KEY","const val PREFER_QUALITY_OVER_SPEED_KEY: String","com.github.panpf.sketch.request.PREFER_QUALITY_OVER_SPEED_KEY"]},{"name":"const val ROTATE_180: Int = 3","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.ROTATE_180","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/-companion/-r-o-t-a-t-e_180.html","searchKeys":["ROTATE_180","const val ROTATE_180: Int = 3","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.ROTATE_180"]},{"name":"const val ROTATE_270: Int = 8","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.ROTATE_270","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/-companion/-r-o-t-a-t-e_270.html","searchKeys":["ROTATE_270","const val ROTATE_270: Int = 8","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.ROTATE_270"]},{"name":"const val ROTATE_90: Int = 6","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.ROTATE_90","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/-companion/-r-o-t-a-t-e_90.html","searchKeys":["ROTATE_90","const val ROTATE_90: Int = 6","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.ROTATE_90"]},{"name":"const val SCHEME: String","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.Companion.SCHEME","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/-companion/-s-c-h-e-m-e.html","searchKeys":["SCHEME","const val SCHEME: String","com.github.panpf.sketch.fetch.AssetUriFetcher.Companion.SCHEME"]},{"name":"const val SCHEME: String","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.Companion.SCHEME","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/-companion/-s-c-h-e-m-e.html","searchKeys":["SCHEME","const val SCHEME: String","com.github.panpf.sketch.fetch.Base64UriFetcher.Companion.SCHEME"]},{"name":"const val SCHEME: String","description":"com.github.panpf.sketch.fetch.ContentUriFetcher.Companion.SCHEME","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/-companion/-s-c-h-e-m-e.html","searchKeys":["SCHEME","const val SCHEME: String","com.github.panpf.sketch.fetch.ContentUriFetcher.Companion.SCHEME"]},{"name":"const val SCHEME: String","description":"com.github.panpf.sketch.fetch.FileUriFetcher.Companion.SCHEME","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/-companion/-s-c-h-e-m-e.html","searchKeys":["SCHEME","const val SCHEME: String","com.github.panpf.sketch.fetch.FileUriFetcher.Companion.SCHEME"]},{"name":"const val SCHEME: String","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Companion.SCHEME","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/-companion/-s-c-h-e-m-e.html","searchKeys":["SCHEME","const val SCHEME: String","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Companion.SCHEME"]},{"name":"const val SCHEME: String","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Companion.SCHEME","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/-companion/-s-c-h-e-m-e.html","searchKeys":["SCHEME","const val SCHEME: String","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Companion.SCHEME"]},{"name":"const val SCHEME: String","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher.Companion.SCHEME","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/-companion/-s-c-h-e-m-e.html","searchKeys":["SCHEME","const val SCHEME: String","com.github.panpf.sketch.fetch.ResourceUriFetcher.Companion.SCHEME"]},{"name":"const val SUB_DIRECTORY_NAME: String","description":"com.github.panpf.sketch.cache.DiskCache.DownloadBuilder.Companion.SUB_DIRECTORY_NAME","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-download-builder/-companion/-s-u-b_-d-i-r-e-c-t-o-r-y_-n-a-m-e.html","searchKeys":["SUB_DIRECTORY_NAME","const val SUB_DIRECTORY_NAME: String","com.github.panpf.sketch.cache.DiskCache.DownloadBuilder.Companion.SUB_DIRECTORY_NAME"]},{"name":"const val SUB_DIRECTORY_NAME: String","description":"com.github.panpf.sketch.cache.DiskCache.ResultBuilder.Companion.SUB_DIRECTORY_NAME","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-result-builder/-companion/-s-u-b_-d-i-r-e-c-t-o-r-y_-n-a-m-e.html","searchKeys":["SUB_DIRECTORY_NAME","const val SUB_DIRECTORY_NAME: String","com.github.panpf.sketch.cache.DiskCache.ResultBuilder.Companion.SUB_DIRECTORY_NAME"]},{"name":"const val TAG: String","description":"com.github.panpf.sketch.util.Logger.Companion.TAG","location":"sketch-core/com.github.panpf.sketch.util/-logger/-companion/-t-a-g.html","searchKeys":["TAG","const val TAG: String","com.github.panpf.sketch.util.Logger.Companion.TAG"]},{"name":"const val TRANSPOSE: Int = 5","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.TRANSPOSE","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/-companion/-t-r-a-n-s-p-o-s-e.html","searchKeys":["TRANSPOSE","const val TRANSPOSE: Int = 5","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.TRANSPOSE"]},{"name":"const val TRANSVERSE: Int = 7","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.TRANSVERSE","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/-companion/-t-r-a-n-s-v-e-r-s-e.html","searchKeys":["TRANSVERSE","const val TRANSVERSE: Int = 7","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.TRANSVERSE"]},{"name":"const val UNDEFINED: Int = 0","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.UNDEFINED","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/-companion/-u-n-d-e-f-i-n-e-d.html","searchKeys":["UNDEFINED","const val UNDEFINED: Int = 0","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.UNDEFINED"]},{"name":"constructor()","description":"com.github.panpf.sketch.ComponentRegistry.Builder.Builder","location":"sketch-core/com.github.panpf.sketch/-component-registry/-builder/-builder.html","searchKeys":["Builder","constructor()","com.github.panpf.sketch.ComponentRegistry.Builder.Builder"]},{"name":"constructor()","description":"com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor.MemoryCacheRequestInterceptor","location":"sketch-core/com.github.panpf.sketch.cache.internal/-memory-cache-request-interceptor/-memory-cache-request-interceptor.html","searchKeys":["MemoryCacheRequestInterceptor","constructor()","com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor.MemoryCacheRequestInterceptor"]},{"name":"constructor()","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.ResultCacheDecodeInterceptor","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/-result-cache-decode-interceptor.html","searchKeys":["ResultCacheDecodeInterceptor","constructor()","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.ResultCacheDecodeInterceptor"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.SkiaDecoder.Factory.Factory","location":"sketch-core/com.github.panpf.sketch.decode/-skia-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.SkiaDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.Factory.Factory","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.internal.DrawableDecoder.Factory.Factory","location":"sketch-core/com.github.panpf.sketch.decode.internal/-drawable-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.internal.DrawableDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor.EngineDecodeInterceptor","location":"sketch-core/com.github.panpf.sketch.decode.internal/-engine-decode-interceptor/-engine-decode-interceptor.html","searchKeys":["EngineDecodeInterceptor","constructor()","com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor.EngineDecodeInterceptor"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl16.Impl16","location":"sketch-core/com.github.panpf.sketch.decode.internal/-open-g-l-texture-helper/-impl16/-impl16.html","searchKeys":["Impl16","constructor()","com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl16.Impl16"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl17.Impl17","location":"sketch-core/com.github.panpf.sketch.decode.internal/-open-g-l-texture-helper/-impl17/-impl17.html","searchKeys":["Impl17","constructor()","com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl17.Impl17"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.Factory.Factory","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.fetch.AssetUriFetcher.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.Factory.Factory","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.fetch.Base64UriFetcher.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.ContentUriFetcher.Factory.Factory","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.fetch.ContentUriFetcher.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.FileUriFetcher.Factory.Factory","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.fetch.FileUriFetcher.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.Factory","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.Factory","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher.Factory.Factory","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.fetch.ResourceUriFetcher.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.request.Extras.Builder.Builder","location":"sketch-core/com.github.panpf.sketch.request/-extras/-builder/-builder.html","searchKeys":["Builder","constructor()","com.github.panpf.sketch.request.Extras.Builder.Builder"]},{"name":"constructor()","description":"com.github.panpf.sketch.request.Extras.Extras","location":"sketch-core/com.github.panpf.sketch.request/-extras/-extras.html","searchKeys":["Extras","constructor()","com.github.panpf.sketch.request.Extras.Extras"]},{"name":"constructor()","description":"com.github.panpf.sketch.request.ImageOptions.Builder.Builder","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/-builder.html","searchKeys":["Builder","constructor()","com.github.panpf.sketch.request.ImageOptions.Builder.Builder"]},{"name":"constructor()","description":"com.github.panpf.sketch.request.RequestState.RequestState","location":"sketch-core/com.github.panpf.sketch.request/-request-state/-request-state.html","searchKeys":["RequestState","constructor()","com.github.panpf.sketch.request.RequestState.RequestState"]},{"name":"constructor()","description":"com.github.panpf.sketch.request.internal.BaseRequestManager.BaseRequestManager","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-manager/-base-request-manager.html","searchKeys":["BaseRequestManager","constructor()","com.github.panpf.sketch.request.internal.BaseRequestManager.BaseRequestManager"]},{"name":"constructor()","description":"com.github.panpf.sketch.request.internal.EngineRequestInterceptor.EngineRequestInterceptor","location":"sketch-core/com.github.panpf.sketch.request.internal/-engine-request-interceptor/-engine-request-interceptor.html","searchKeys":["EngineRequestInterceptor","constructor()","com.github.panpf.sketch.request.internal.EngineRequestInterceptor.EngineRequestInterceptor"]},{"name":"constructor()","description":"com.github.panpf.sketch.request.internal.OneShotRequestManager.OneShotRequestManager","location":"sketch-core/com.github.panpf.sketch.request.internal/-one-shot-request-manager/-one-shot-request-manager.html","searchKeys":["OneShotRequestManager","constructor()","com.github.panpf.sketch.request.internal.OneShotRequestManager.OneShotRequestManager"]},{"name":"constructor()","description":"com.github.panpf.sketch.request.internal.RequestOptions.Builder.Builder","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-options/-builder/-builder.html","searchKeys":["Builder","constructor()","com.github.panpf.sketch.request.internal.RequestOptions.Builder.Builder"]},{"name":"constructor()","description":"com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor.TransformationDecodeInterceptor","location":"sketch-core/com.github.panpf.sketch.transform.internal/-transformation-decode-interceptor/-transformation-decode-interceptor.html","searchKeys":["TransformationDecodeInterceptor","constructor()","com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor.TransformationDecodeInterceptor"]},{"name":"constructor()","description":"com.github.panpf.sketch.util.Rect.Rect","location":"sketch-core/com.github.panpf.sketch.util/-rect/-rect.html","searchKeys":["Rect","constructor()","com.github.panpf.sketch.util.Rect.Rect"]},{"name":"constructor()","description":"com.github.panpf.sketch.util.Size.Size","location":"sketch-core/com.github.panpf.sketch.util/-size/-size.html","searchKeys":["Size","constructor()","com.github.panpf.sketch.util.Size.Size"]},{"name":"constructor(allRadius: Float)","description":"com.github.panpf.sketch.transform.RoundedCornersTransformation.RoundedCornersTransformation","location":"sketch-core/com.github.panpf.sketch.transform/-rounded-corners-transformation/-rounded-corners-transformation.html","searchKeys":["RoundedCornersTransformation","constructor(allRadius: Float)","com.github.panpf.sketch.transform.RoundedCornersTransformation.RoundedCornersTransformation"]},{"name":"constructor(bitmap: Bitmap, shareable: Boolean = true)","description":"com.github.panpf.sketch.BitmapImage.BitmapImage","location":"sketch-core/com.github.panpf.sketch/-bitmap-image/-bitmap-image.html","searchKeys":["BitmapImage","constructor(bitmap: Bitmap, shareable: Boolean = true)","com.github.panpf.sketch.BitmapImage.BitmapImage"]},{"name":"constructor(bitmap: Bitmap, shareable: Boolean = true)","description":"com.github.panpf.sketch.BitmapImage.BitmapImage","location":"sketch-core/com.github.panpf.sketch/-bitmap-image/-bitmap-image.html","searchKeys":["BitmapImage","constructor(bitmap: Bitmap, shareable: Boolean = true)","com.github.panpf.sketch.BitmapImage.BitmapImage"]},{"name":"constructor(bytes: ByteArray)","description":"com.github.panpf.sketch.util.DownloadData.Bytes.Bytes","location":"sketch-core/com.github.panpf.sketch.util/-download-data/-bytes/-bytes.html","searchKeys":["Bytes","constructor(bytes: ByteArray)","com.github.panpf.sketch.util.DownloadData.Bytes.Bytes"]},{"name":"constructor(cacheKey: String?, defaultImage: StateImage? = null)","description":"com.github.panpf.sketch.state.MemoryCacheStateImage.MemoryCacheStateImage","location":"sketch-core/com.github.panpf.sketch.state/-memory-cache-state-image/-memory-cache-state-image.html","searchKeys":["MemoryCacheStateImage","constructor(cacheKey: String?, defaultImage: StateImage? = null)","com.github.panpf.sketch.state.MemoryCacheStateImage.MemoryCacheStateImage"]},{"name":"constructor(color: ColorFetcher)","description":"com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher.ColorFetcherDrawableFetcher","location":"sketch-core/com.github.panpf.sketch.drawable/-color-fetcher-drawable-fetcher/-color-fetcher-drawable-fetcher.html","searchKeys":["ColorFetcherDrawableFetcher","constructor(color: ColorFetcher)","com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher.ColorFetcherDrawableFetcher"]},{"name":"constructor(color: ColorFetcher)","description":"com.github.panpf.sketch.state.ColorDrawableStateImage.ColorDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-color-drawable-state-image/-color-drawable-state-image.html","searchKeys":["ColorDrawableStateImage","constructor(color: ColorFetcher)","com.github.panpf.sketch.state.ColorDrawableStateImage.ColorDrawableStateImage"]},{"name":"constructor(color: Int)","description":"com.github.panpf.sketch.drawable.RealColorDrawableFetcher.RealColorDrawableFetcher","location":"sketch-core/com.github.panpf.sketch.drawable/-real-color-drawable-fetcher/-real-color-drawable-fetcher.html","searchKeys":["RealColorDrawableFetcher","constructor(color: Int)","com.github.panpf.sketch.drawable.RealColorDrawableFetcher.RealColorDrawableFetcher"]},{"name":"constructor(color: Int)","description":"com.github.panpf.sketch.util.IntColorFetcher.IntColorFetcher","location":"sketch-core/com.github.panpf.sketch.util/-int-color-fetcher/-int-color-fetcher.html","searchKeys":["IntColorFetcher","constructor(color: Int)","com.github.panpf.sketch.util.IntColorFetcher.IntColorFetcher"]},{"name":"constructor(colorSpace: ColorSpace)","description":"com.github.panpf.sketch.decode.FixedColorSpace.FixedColorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-space/-fixed-color-space.html","searchKeys":["FixedColorSpace","constructor(colorSpace: ColorSpace)","com.github.panpf.sketch.decode.FixedColorSpace.FixedColorSpace"]},{"name":"constructor(colorSpace: ColorSpace)","description":"com.github.panpf.sketch.decode.PlatformColorSpace.PlatformColorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-platform-color-space/-platform-color-space.html","searchKeys":["PlatformColorSpace","constructor(colorSpace: ColorSpace)","com.github.panpf.sketch.decode.PlatformColorSpace.PlatformColorSpace"]},{"name":"constructor(colorSpace: ColorSpace)","description":"com.github.panpf.sketch.decode.PlatformColorSpace.PlatformColorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-platform-color-space/-platform-color-space.html","searchKeys":["PlatformColorSpace","constructor(colorSpace: ColorSpace)","com.github.panpf.sketch.decode.PlatformColorSpace.PlatformColorSpace"]},{"name":"constructor(colorSpace: ColorSpace.Named)","description":"com.github.panpf.sketch.decode.FixedColorSpace.FixedColorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-space/-fixed-color-space.html","searchKeys":["FixedColorSpace","constructor(colorSpace: ColorSpace.Named)","com.github.panpf.sketch.decode.FixedColorSpace.FixedColorSpace"]},{"name":"constructor(colorSpace: ColorSpace.Named)","description":"com.github.panpf.sketch.decode.PlatformColorSpace.PlatformColorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-platform-color-space/-platform-color-space.html","searchKeys":["PlatformColorSpace","constructor(colorSpace: ColorSpace.Named)","com.github.panpf.sketch.decode.PlatformColorSpace.PlatformColorSpace"]},{"name":"constructor(colorType: ColorType)","description":"com.github.panpf.sketch.decode.FixedColorType.FixedColorType","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-type/-fixed-color-type.html","searchKeys":["FixedColorType","constructor(colorType: ColorType)","com.github.panpf.sketch.decode.FixedColorType.FixedColorType"]},{"name":"constructor(colorType: ColorType)","description":"com.github.panpf.sketch.decode.FixedColorType.FixedColorType","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-type/-fixed-color-type.html","searchKeys":["FixedColorType","constructor(colorType: ColorType)","com.github.panpf.sketch.decode.FixedColorType.FixedColorType"]},{"name":"constructor(colorType: ColorType)","description":"com.github.panpf.sketch.decode.PlatformColorType.PlatformColorType","location":"sketch-core/com.github.panpf.sketch.decode/-platform-color-type/-platform-color-type.html","searchKeys":["PlatformColorType","constructor(colorType: ColorType)","com.github.panpf.sketch.decode.PlatformColorType.PlatformColorType"]},{"name":"constructor(componentRegistry: ComponentRegistry)","description":"com.github.panpf.sketch.ComponentRegistry.Builder.Builder","location":"sketch-core/com.github.panpf.sketch/-component-registry/-builder/-builder.html","searchKeys":["Builder","constructor(componentRegistry: ComponentRegistry)","com.github.panpf.sketch.ComponentRegistry.Builder.Builder"]},{"name":"constructor(context: Context)","description":"com.github.panpf.sketch.util.NetworkObserver1.NetworkObserver1","location":"sketch-core/com.github.panpf.sketch.util/-network-observer1/-network-observer1.html","searchKeys":["NetworkObserver1","constructor(context: Context)","com.github.panpf.sketch.util.NetworkObserver1.NetworkObserver1"]},{"name":"constructor(context: Context)","description":"com.github.panpf.sketch.util.NetworkObserver21.NetworkObserver21","location":"sketch-core/com.github.panpf.sketch.util/-network-observer21/-network-observer21.html","searchKeys":["NetworkObserver21","constructor(context: Context)","com.github.panpf.sketch.util.NetworkObserver21.NetworkObserver21"]},{"name":"constructor(context: Context, contentUri: Uri)","description":"com.github.panpf.sketch.fetch.ContentUriFetcher.ContentUriFetcher","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/-content-uri-fetcher.html","searchKeys":["ContentUriFetcher","constructor(context: Context, contentUri: Uri)","com.github.panpf.sketch.fetch.ContentUriFetcher.ContentUriFetcher"]},{"name":"constructor(context: Context, contentUri: Uri)","description":"com.github.panpf.sketch.source.ContentDataSource.ContentDataSource","location":"sketch-core/com.github.panpf.sketch.source/-content-data-source/-content-data-source.html","searchKeys":["ContentDataSource","constructor(context: Context, contentUri: Uri)","com.github.panpf.sketch.source.ContentDataSource.ContentDataSource"]},{"name":"constructor(context: Context, drawableFetcher: DrawableFetcher, dataFrom: <Error class: unknown class>)","description":"com.github.panpf.sketch.source.DrawableDataSource.DrawableDataSource","location":"sketch-core/com.github.panpf.sketch.source/-drawable-data-source/-drawable-data-source.html","searchKeys":["DrawableDataSource","constructor(context: Context, drawableFetcher: DrawableFetcher, dataFrom: <Error class: unknown class>)","com.github.panpf.sketch.source.DrawableDataSource.DrawableDataSource"]},{"name":"constructor(context: Context, fileName: String)","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.AssetUriFetcher","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/-asset-uri-fetcher.html","searchKeys":["AssetUriFetcher","constructor(context: Context, fileName: String)","com.github.panpf.sketch.fetch.AssetUriFetcher.AssetUriFetcher"]},{"name":"constructor(context: Context, fileName: String)","description":"com.github.panpf.sketch.source.AssetDataSource.AssetDataSource","location":"sketch-core/com.github.panpf.sketch.source/-asset-data-source/-asset-data-source.html","searchKeys":["AssetDataSource","constructor(context: Context, fileName: String)","com.github.panpf.sketch.source.AssetDataSource.AssetDataSource"]},{"name":"constructor(context: Context, resourceUri: <Error class: unknown class>)","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher.ResourceUriFetcher","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/-resource-uri-fetcher.html","searchKeys":["ResourceUriFetcher","constructor(context: Context, resourceUri: <Error class: unknown class>)","com.github.panpf.sketch.fetch.ResourceUriFetcher.ResourceUriFetcher"]},{"name":"constructor(context: PlatformContext)","description":"com.github.panpf.sketch.Sketch.Builder.Builder","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/-builder.html","searchKeys":["Builder","constructor(context: PlatformContext)","com.github.panpf.sketch.Sketch.Builder.Builder"]},{"name":"constructor(context: PlatformContext)","description":"com.github.panpf.sketch.cache.MemoryCache.Builder.Builder","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/-builder/-builder.html","searchKeys":["Builder","constructor(context: PlatformContext)","com.github.panpf.sketch.cache.MemoryCache.Builder.Builder"]},{"name":"constructor(context: PlatformContext, fileSystem: FileSystem)","description":"com.github.panpf.sketch.cache.DiskCache.DownloadBuilder.DownloadBuilder","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-download-builder/-download-builder.html","searchKeys":["DownloadBuilder","constructor(context: PlatformContext, fileSystem: FileSystem)","com.github.panpf.sketch.cache.DiskCache.DownloadBuilder.DownloadBuilder"]},{"name":"constructor(context: PlatformContext, fileSystem: FileSystem)","description":"com.github.panpf.sketch.cache.DiskCache.ResultBuilder.ResultBuilder","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-result-builder/-result-builder.html","searchKeys":["ResultBuilder","constructor(context: PlatformContext, fileSystem: FileSystem)","com.github.panpf.sketch.cache.DiskCache.ResultBuilder.ResultBuilder"]},{"name":"constructor(context: PlatformContext, fileSystem: FileSystem, maxSize: Long, directory: Path, appVersion: Int, internalVersion: Int)","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.LruDiskCache","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/-lru-disk-cache.html","searchKeys":["LruDiskCache","constructor(context: PlatformContext, fileSystem: FileSystem, maxSize: Long, directory: Path, appVersion: Int, internalVersion: Int)","com.github.panpf.sketch.cache.internal.LruDiskCache.LruDiskCache"]},{"name":"constructor(context: PlatformContext, fileSystem: FileSystem, subDirectoryName: String? = null, maxSizePercent: Float = 1.0f, internalVersion: Int = 1)","description":"com.github.panpf.sketch.cache.DiskCache.Builder.Builder","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-builder/-builder.html","searchKeys":["Builder","constructor(context: PlatformContext, fileSystem: FileSystem, subDirectoryName: String? = null, maxSizePercent: Float = 1.0f, internalVersion: Int = 1)","com.github.panpf.sketch.cache.DiskCache.Builder.Builder"]},{"name":"constructor(context: PlatformContext, uri: String?)","description":"com.github.panpf.sketch.request.ImageRequest.Builder.Builder","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/-builder.html","searchKeys":["Builder","constructor(context: PlatformContext, uri: String?)","com.github.panpf.sketch.request.ImageRequest.Builder.Builder"]},{"name":"constructor(context: PlatformContext, uri: Uri, target: Target?, listener: Listener?, progressListener: ProgressListener?, lifecycleResolver: LifecycleResolver, definedRequestOptions: RequestOptions, definedOptions: ImageOptions, defaultOptions: ImageOptions?, depthHolder: DepthHolder, extras: Extras?, downloadCachePolicy: CachePolicy, colorType: BitmapColorType?, colorSpace: BitmapColorSpace?, sizeResolver: SizeResolver, sizeMultiplier: Float?, precisionDecider: PrecisionDecider, scaleDecider: ScaleDecider, transformations: List<Transformation>?, resultCachePolicy: CachePolicy, placeholder: StateImage?, fallback: StateImage?, error: StateImage?, transitionFactory: Transition.Factory?, resizeOnDraw: Boolean?, allowNullImage: Boolean?, memoryCachePolicy: CachePolicy, componentRegistry: ComponentRegistry?)","description":"com.github.panpf.sketch.request.ImageRequest.ImageRequest","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-image-request.html","searchKeys":["ImageRequest","constructor(context: PlatformContext, uri: Uri, target: Target?, listener: Listener?, progressListener: ProgressListener?, lifecycleResolver: LifecycleResolver, definedRequestOptions: RequestOptions, definedOptions: ImageOptions, defaultOptions: ImageOptions?, depthHolder: DepthHolder, extras: Extras?, downloadCachePolicy: CachePolicy, colorType: BitmapColorType?, colorSpace: BitmapColorSpace?, sizeResolver: SizeResolver, sizeMultiplier: Float?, precisionDecider: PrecisionDecider, scaleDecider: ScaleDecider, transformations: List<Transformation>?, resultCachePolicy: CachePolicy, placeholder: StateImage?, fallback: StateImage?, error: StateImage?, transitionFactory: Transition.Factory?, resizeOnDraw: Boolean?, allowNullImage: Boolean?, memoryCachePolicy: CachePolicy, componentRegistry: ComponentRegistry?)","com.github.panpf.sketch.request.ImageRequest.ImageRequest"]},{"name":"constructor(context: PlatformContext, uri: Uri, target: Target?, listener: Listener?, progressListener: ProgressListener?, lifecycleResolver: LifecycleResolver, definedRequestOptions: RequestOptions, definedOptions: ImageOptions, defaultOptions: ImageOptions?, depthHolder: DepthHolder, extras: Extras?, downloadCachePolicy: CachePolicy, downloadCacheKey: String?, downloadCacheKeyMapper: CacheKeyMapper?, colorType: BitmapColorType?, colorSpace: BitmapColorSpace?, sizeResolver: SizeResolver, sizeMultiplier: Float?, precisionDecider: PrecisionDecider, scaleDecider: ScaleDecider, transformations: List<Transformation>?, resultCachePolicy: CachePolicy, resultCacheKey: String?, resultCacheKeyMapper: CacheKeyMapper?, placeholder: StateImage?, fallback: StateImage?, error: StateImage?, transitionFactory: Transition.Factory?, resizeOnDraw: Boolean?, allowNullImage: Boolean?, memoryCachePolicy: CachePolicy, memoryCacheKey: String?, memoryCacheKeyMapper: CacheKeyMapper?, componentRegistry: ComponentRegistry?)","description":"com.github.panpf.sketch.request.ImageRequest.ImageRequest","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-image-request.html","searchKeys":["ImageRequest","constructor(context: PlatformContext, uri: Uri, target: Target?, listener: Listener?, progressListener: ProgressListener?, lifecycleResolver: LifecycleResolver, definedRequestOptions: RequestOptions, definedOptions: ImageOptions, defaultOptions: ImageOptions?, depthHolder: DepthHolder, extras: Extras?, downloadCachePolicy: CachePolicy, downloadCacheKey: String?, downloadCacheKeyMapper: CacheKeyMapper?, colorType: BitmapColorType?, colorSpace: BitmapColorSpace?, sizeResolver: SizeResolver, sizeMultiplier: Float?, precisionDecider: PrecisionDecider, scaleDecider: ScaleDecider, transformations: List<Transformation>?, resultCachePolicy: CachePolicy, resultCacheKey: String?, resultCacheKeyMapper: CacheKeyMapper?, placeholder: StateImage?, fallback: StateImage?, error: StateImage?, transitionFactory: Transition.Factory?, resizeOnDraw: Boolean?, allowNullImage: Boolean?, memoryCachePolicy: CachePolicy, memoryCacheKey: String?, memoryCacheKeyMapper: CacheKeyMapper?, componentRegistry: ComponentRegistry?)","com.github.panpf.sketch.request.ImageRequest.ImageRequest"]},{"name":"constructor(coroutineScope: CoroutineScope, progressListener: ProgressListener)","description":"com.github.panpf.sketch.request.internal.ProgressListenerDelegate.ProgressListenerDelegate","location":"sketch-core/com.github.panpf.sketch.request.internal/-progress-listener-delegate/-progress-listener-delegate.html","searchKeys":["ProgressListenerDelegate","constructor(coroutineScope: CoroutineScope, progressListener: ProgressListener)","com.github.panpf.sketch.request.internal.ProgressListenerDelegate.ProgressListenerDelegate"]},{"name":"constructor(data: ByteArray, dataFrom: DataFrom)","description":"com.github.panpf.sketch.source.ByteArrayDataSource.ByteArrayDataSource","location":"sketch-core/com.github.panpf.sketch.source/-byte-array-data-source/-byte-array-data-source.html","searchKeys":["ByteArrayDataSource","constructor(data: ByteArray, dataFrom: DataFrom)","com.github.panpf.sketch.source.ByteArrayDataSource.ByteArrayDataSource"]},{"name":"constructor(data: String, separator: String, elements: Uri.Elements)","description":"com.github.panpf.sketch.util.Uri.Uri","location":"sketch-core/com.github.panpf.sketch.util/-uri/-uri.html","searchKeys":["Uri","constructor(data: String, separator: String, elements: Uri.Elements)","com.github.panpf.sketch.util.Uri.Uri"]},{"name":"constructor(dataEncodedString: String, mimeType: String, spec: Base64Spec? = null)","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.Base64UriFetcher","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/-base64-uri-fetcher.html","searchKeys":["Base64UriFetcher","constructor(dataEncodedString: String, mimeType: String, spec: Base64Spec? = null)","com.github.panpf.sketch.fetch.Base64UriFetcher.Base64UriFetcher"]},{"name":"constructor(dataSource: DataSource, mimeType: String?)","description":"com.github.panpf.sketch.fetch.FetchResult.FetchResult","location":"sketch-core/com.github.panpf.sketch.fetch/-fetch-result/-fetch-result.html","searchKeys":["FetchResult","constructor(dataSource: DataSource, mimeType: String?)","com.github.panpf.sketch.fetch.FetchResult.FetchResult"]},{"name":"constructor(defaultImage: StateImage? = null)","description":"com.github.panpf.sketch.state.CurrentStateImage.CurrentStateImage","location":"sketch-core/com.github.panpf.sketch.state/-current-state-image/-current-state-image.html","searchKeys":["CurrentStateImage","constructor(defaultImage: StateImage? = null)","com.github.panpf.sketch.state.CurrentStateImage.CurrentStateImage"]},{"name":"constructor(defaultImage: StateImage?)","description":"com.github.panpf.sketch.state.ConditionStateImage.Builder.Builder","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/-builder/-builder.html","searchKeys":["Builder","constructor(defaultImage: StateImage?)","com.github.panpf.sketch.state.ConditionStateImage.Builder.Builder"]},{"name":"constructor(degrees: Int)","description":"com.github.panpf.sketch.transform.RotateTransformation.RotateTransformation","location":"sketch-core/com.github.panpf.sketch.transform/-rotate-transformation/-rotate-transformation.html","searchKeys":["RotateTransformation","constructor(degrees: Int)","com.github.panpf.sketch.transform.RotateTransformation.RotateTransformation"]},{"name":"constructor(depth: Depth, from: String? = null)","description":"com.github.panpf.sketch.request.DepthHolder.DepthHolder","location":"sketch-core/com.github.panpf.sketch.request/-depth-holder/-depth-holder.html","searchKeys":["DepthHolder","constructor(depth: Depth, from: String? = null)","com.github.panpf.sketch.request.DepthHolder.DepthHolder"]},{"name":"constructor(depthHolder: DepthHolder?, extras: Extras?, downloadCachePolicy: CachePolicy?, colorType: BitmapColorType?, colorSpace: BitmapColorSpace?, sizeResolver: SizeResolver?, sizeMultiplier: Float?, precisionDecider: PrecisionDecider?, scaleDecider: ScaleDecider?, transformations: List<Transformation>?, resultCachePolicy: CachePolicy?, placeholder: StateImage?, fallback: StateImage?, error: StateImage?, transitionFactory: Transition.Factory?, resizeOnDraw: Boolean?, allowNullImage: Boolean?, memoryCachePolicy: CachePolicy?, componentRegistry: ComponentRegistry?)","description":"com.github.panpf.sketch.request.ImageOptions.ImageOptions","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-image-options.html","searchKeys":["ImageOptions","constructor(depthHolder: DepthHolder?, extras: Extras?, downloadCachePolicy: CachePolicy?, colorType: BitmapColorType?, colorSpace: BitmapColorSpace?, sizeResolver: SizeResolver?, sizeMultiplier: Float?, precisionDecider: PrecisionDecider?, scaleDecider: ScaleDecider?, transformations: List<Transformation>?, resultCachePolicy: CachePolicy?, placeholder: StateImage?, fallback: StateImage?, error: StateImage?, transitionFactory: Transition.Factory?, resizeOnDraw: Boolean?, allowNullImage: Boolean?, memoryCachePolicy: CachePolicy?, componentRegistry: ComponentRegistry?)","com.github.panpf.sketch.request.ImageOptions.ImageOptions"]},{"name":"constructor(depthHolder: DepthHolder?, extras: Extras?, downloadCachePolicy: CachePolicy?, downloadCacheKey: String?, downloadCacheKeyMapper: CacheKeyMapper?, colorType: BitmapColorType?, colorSpace: BitmapColorSpace?, sizeResolver: SizeResolver?, sizeMultiplier: Float?, precisionDecider: PrecisionDecider?, scaleDecider: ScaleDecider?, transformations: List<Transformation>?, resultCachePolicy: CachePolicy?, resultCacheKey: String?, resultCacheKeyMapper: CacheKeyMapper?, placeholder: StateImage?, fallback: StateImage?, error: StateImage?, transitionFactory: Transition.Factory?, resizeOnDraw: Boolean?, allowNullImage: Boolean?, memoryCachePolicy: CachePolicy?, memoryCacheKey: String?, memoryCacheKeyMapper: CacheKeyMapper?, componentRegistry: ComponentRegistry?)","description":"com.github.panpf.sketch.request.ImageOptions.ImageOptions","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-image-options.html","searchKeys":["ImageOptions","constructor(depthHolder: DepthHolder?, extras: Extras?, downloadCachePolicy: CachePolicy?, downloadCacheKey: String?, downloadCacheKeyMapper: CacheKeyMapper?, colorType: BitmapColorType?, colorSpace: BitmapColorSpace?, sizeResolver: SizeResolver?, sizeMultiplier: Float?, precisionDecider: PrecisionDecider?, scaleDecider: ScaleDecider?, transformations: List<Transformation>?, resultCachePolicy: CachePolicy?, resultCacheKey: String?, resultCacheKeyMapper: CacheKeyMapper?, placeholder: StateImage?, fallback: StateImage?, error: StateImage?, transitionFactory: Transition.Factory?, resizeOnDraw: Boolean?, allowNullImage: Boolean?, memoryCachePolicy: CachePolicy?, memoryCacheKey: String?, memoryCacheKeyMapper: CacheKeyMapper?, componentRegistry: ComponentRegistry?)","com.github.panpf.sketch.request.ImageOptions.ImageOptions"]},{"name":"constructor(directory: Path? = null, appCacheDirectory: Path? = null, maxSize: Long? = null, appVersion: Int? = null)","description":"com.github.panpf.sketch.cache.DiskCache.Options.Options","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-options/-options.html","searchKeys":["Options","constructor(directory: Path? = null, appCacheDirectory: Path? = null, maxSize: Long? = null, appVersion: Int? = null)","com.github.panpf.sketch.cache.DiskCache.Options.Options"]},{"name":"constructor(drawable: Drawable)","description":"com.github.panpf.sketch.drawable.AnimatableDrawable.AnimatableDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-animatable-drawable/-animatable-drawable.html","searchKeys":["AnimatableDrawable","constructor(drawable: Drawable)","com.github.panpf.sketch.drawable.AnimatableDrawable.AnimatableDrawable"]},{"name":"constructor(drawable: Drawable)","description":"com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.AnimatableCallbackHelper","location":"sketch-core/com.github.panpf.sketch.drawable.internal/-animatable-callback-helper/-animatable-callback-helper.html","searchKeys":["AnimatableCallbackHelper","constructor(drawable: Drawable)","com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.AnimatableCallbackHelper"]},{"name":"constructor(drawable: Drawable, equalityKey: Any)","description":"com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.EquitableAnimatableDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-animatable-drawable/-equitable-animatable-drawable.html","searchKeys":["EquitableAnimatableDrawable","constructor(drawable: Drawable, equalityKey: Any)","com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.EquitableAnimatableDrawable"]},{"name":"constructor(drawable: Drawable, equalityKey: Any)","description":"com.github.panpf.sketch.drawable.EquitableDrawable.EquitableDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-drawable/-equitable-drawable.html","searchKeys":["EquitableDrawable","constructor(drawable: Drawable, equalityKey: Any)","com.github.panpf.sketch.drawable.EquitableDrawable.EquitableDrawable"]},{"name":"constructor(drawable: Drawable, shareable: Boolean = drawable !is Animatable)","description":"com.github.panpf.sketch.DrawableImage.DrawableImage","location":"sketch-core/com.github.panpf.sketch/-drawable-image/-drawable-image.html","searchKeys":["DrawableImage","constructor(drawable: Drawable, shareable: Boolean = drawable !is Animatable)","com.github.panpf.sketch.DrawableImage.DrawableImage"]},{"name":"constructor(drawable: EquitableDrawable)","description":"com.github.panpf.sketch.drawable.RealDrawableFetcher.RealDrawableFetcher","location":"sketch-core/com.github.panpf.sketch.drawable/-real-drawable-fetcher/-real-drawable-fetcher.html","searchKeys":["RealDrawableFetcher","constructor(drawable: EquitableDrawable)","com.github.panpf.sketch.drawable.RealDrawableFetcher.RealDrawableFetcher"]},{"name":"constructor(drawableFetcher: DrawableFetcher)","description":"com.github.panpf.sketch.state.DrawableStateImage.DrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-drawable-state-image/-drawable-state-image.html","searchKeys":["DrawableStateImage","constructor(drawableFetcher: DrawableFetcher)","com.github.panpf.sketch.state.DrawableStateImage.DrawableStateImage"]},{"name":"constructor(durationMillis: Int = DEFAULT_DURATION_MILLIS, fadeStart: Boolean = DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, alwaysUse: Boolean = DEFAULT_ALWAYS_USE)","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Factory.Factory","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-factory/-factory.html","searchKeys":["Factory","constructor(durationMillis: Int = DEFAULT_DURATION_MILLIS, fadeStart: Boolean = DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, alwaysUse: Boolean = DEFAULT_ALWAYS_USE)","com.github.panpf.sketch.transition.CrossfadeTransition.Factory.Factory"]},{"name":"constructor(exifOrientation: Int)","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.ExifOrientationHelper","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/-exif-orientation-helper.html","searchKeys":["ExifOrientationHelper","constructor(exifOrientation: Int)","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.ExifOrientationHelper"]},{"name":"constructor(extras: Extras)","description":"com.github.panpf.sketch.request.Extras.Builder.Builder","location":"sketch-core/com.github.panpf.sketch.request/-extras/-builder/-builder.html","searchKeys":["Builder","constructor(extras: Extras)","com.github.panpf.sketch.request.Extras.Builder.Builder"]},{"name":"constructor(fileSystem: FileSystem)","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.EmptyDiskCache","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/-empty-disk-cache.html","searchKeys":["EmptyDiskCache","constructor(fileSystem: FileSystem)","com.github.panpf.sketch.cache.internal.EmptyDiskCache.EmptyDiskCache"]},{"name":"constructor(fileSystem: FileSystem, path: Path)","description":"com.github.panpf.sketch.util.DownloadData.Cache.Cache","location":"sketch-core/com.github.panpf.sketch.util/-download-data/-cache/-cache.html","searchKeys":["Cache","constructor(fileSystem: FileSystem, path: Path)","com.github.panpf.sketch.util.DownloadData.Cache.Cache"]},{"name":"constructor(first: Listener, second: Listener)","description":"com.github.panpf.sketch.request.internal.PairListener.PairListener","location":"sketch-core/com.github.panpf.sketch.request.internal/-pair-listener/-pair-listener.html","searchKeys":["PairListener","constructor(first: Listener, second: Listener)","com.github.panpf.sketch.request.internal.PairListener.PairListener"]},{"name":"constructor(first: ProgressListener, second: ProgressListener)","description":"com.github.panpf.sketch.request.internal.PairProgressListener.PairProgressListener","location":"sketch-core/com.github.panpf.sketch.request.internal/-pair-progress-listener/-pair-progress-listener.html","searchKeys":["PairProgressListener","constructor(first: ProgressListener, second: ProgressListener)","com.github.panpf.sketch.request.internal.PairProgressListener.PairProgressListener"]},{"name":"constructor(icon: Drawable, background: Drawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null)","description":"com.github.panpf.sketch.drawable.IconAnimatableDrawable.IconAnimatableDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-animatable-drawable/-icon-animatable-drawable.html","searchKeys":["IconAnimatableDrawable","constructor(icon: Drawable, background: Drawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null)","com.github.panpf.sketch.drawable.IconAnimatableDrawable.IconAnimatableDrawable"]},{"name":"constructor(icon: Drawable, background: Drawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null)","description":"com.github.panpf.sketch.drawable.IconDrawable.IconDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/-icon-drawable.html","searchKeys":["IconDrawable","constructor(icon: Drawable, background: Drawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null)","com.github.panpf.sketch.drawable.IconDrawable.IconDrawable"]},{"name":"constructor(icon: DrawableFetcher, background: DrawableFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: ColorFetcher? = null)","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","constructor(icon: DrawableFetcher, background: DrawableFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: ColorFetcher? = null)","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.IconAnimatableDrawableStateImage"]},{"name":"constructor(icon: DrawableFetcher, background: DrawableFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: ColorFetcher? = null)","description":"com.github.panpf.sketch.state.IconDrawableStateImage.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","constructor(icon: DrawableFetcher, background: DrawableFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: ColorFetcher? = null)","com.github.panpf.sketch.state.IconDrawableStateImage.IconDrawableStateImage"]},{"name":"constructor(image: Image, extras: Map<String, Any?>? = null)","description":"com.github.panpf.sketch.cache.ImageCacheValue.ImageCacheValue","location":"sketch-core/com.github.panpf.sketch.cache/-image-cache-value/-image-cache-value.html","searchKeys":["ImageCacheValue","constructor(image: Image, extras: Map<String, Any?>? = null)","com.github.panpf.sketch.cache.ImageCacheValue.ImageCacheValue"]},{"name":"constructor(image: Image, imageInfo: ImageInfo, dataFrom: DataFrom, resize: Resize, transformeds: List<String>?, extras: Map<String, String>?)","description":"com.github.panpf.sketch.decode.DecodeResult.DecodeResult","location":"sketch-core/com.github.panpf.sketch.decode/-decode-result/-decode-result.html","searchKeys":["DecodeResult","constructor(image: Image, imageInfo: ImageInfo, dataFrom: DataFrom, resize: Resize, transformeds: List<String>?, extras: Map<String, String>?)","com.github.panpf.sketch.decode.DecodeResult.DecodeResult"]},{"name":"constructor(image: Image, imageInfo: ImageInfo, dataFrom: DataFrom, resize: Resize, transformeds: List<String>?, extras: Map<String, String>?)","description":"com.github.panpf.sketch.request.ImageData.ImageData","location":"sketch-core/com.github.panpf.sketch.request/-image-data/-image-data.html","searchKeys":["ImageData","constructor(image: Image, imageInfo: ImageInfo, dataFrom: DataFrom, resize: Resize, transformeds: List<String>?, extras: Map<String, String>?)","com.github.panpf.sketch.request.ImageData.ImageData"]},{"name":"constructor(image: Image, transformed: String)","description":"com.github.panpf.sketch.transform.TransformResult.TransformResult","location":"sketch-core/com.github.panpf.sketch.transform/-transform-result/-transform-result.html","searchKeys":["TransformResult","constructor(image: Image, transformed: String)","com.github.panpf.sketch.transform.TransformResult.TransformResult"]},{"name":"constructor(imageInfo: ImageInfo, resize: Resize, transformeds: List<String>?, extras: Map<String, String>?)","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.Metadata","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/-metadata/-metadata.html","searchKeys":["Metadata","constructor(imageInfo: ImageInfo, resize: Resize, transformeds: List<String>?, extras: Map<String, String>?)","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.Metadata"]},{"name":"constructor(initializer: () -> T)","description":"com.github.panpf.sketch.util.ResetLazy.ResetLazy","location":"sketch-core/com.github.panpf.sketch.util/-reset-lazy/-reset-lazy.html","searchKeys":["ResetLazy","constructor(initializer: () -> T)","com.github.panpf.sketch.util.ResetLazy.ResetLazy"]},{"name":"constructor(input: String, internalReason: String, index: Int = -1)","description":"com.github.panpf.sketch.util.UriCodec.UriSyntaxException.UriSyntaxException","location":"sketch-core/com.github.panpf.sketch.util/-uri-codec/-uri-syntax-exception/-uri-syntax-exception.html","searchKeys":["UriSyntaxException","constructor(input: String, internalReason: String, index: Int = -1)","com.github.panpf.sketch.util.UriCodec.UriSyntaxException.UriSyntaxException"]},{"name":"constructor(job: Deferred<ImageResult>)","description":"com.github.panpf.sketch.request.OneShotDisposable.OneShotDisposable","location":"sketch-core/com.github.panpf.sketch.request/-one-shot-disposable/-one-shot-disposable.html","searchKeys":["OneShotDisposable","constructor(job: Deferred<ImageResult>)","com.github.panpf.sketch.request.OneShotDisposable.OneShotDisposable"]},{"name":"constructor(left: Int, top: Int, right: Int, bottom: Int)","description":"com.github.panpf.sketch.util.Rect.Rect","location":"sketch-core/com.github.panpf.sketch.util/-rect/-rect.html","searchKeys":["Rect","constructor(left: Int, top: Int, right: Int, bottom: Int)","com.github.panpf.sketch.util.Rect.Rect"]},{"name":"constructor(level: Logger.Level = Level.Info, pipeline: Logger.Pipeline = defaultLogPipeline())","description":"com.github.panpf.sketch.util.Logger.Logger","location":"sketch-core/com.github.panpf.sketch.util/-logger/-logger.html","searchKeys":["Logger","constructor(level: Logger.Level = Level.Info, pipeline: Logger.Pipeline = defaultLogPipeline())","com.github.panpf.sketch.util.Logger.Logger"]},{"name":"constructor(lifecycle: Lifecycle)","description":"com.github.panpf.sketch.request.FixedLifecycleResolver.FixedLifecycleResolver","location":"sketch-core/com.github.panpf.sketch.request/-fixed-lifecycle-resolver/-fixed-lifecycle-resolver.html","searchKeys":["FixedLifecycleResolver","constructor(lifecycle: Lifecycle)","com.github.panpf.sketch.request.FixedLifecycleResolver.FixedLifecycleResolver"]},{"name":"constructor(list: List<Listener>)","description":"com.github.panpf.sketch.request.internal.Listeners.Listeners","location":"sketch-core/com.github.panpf.sketch.request.internal/-listeners/-listeners.html","searchKeys":["Listeners","constructor(list: List<Listener>)","com.github.panpf.sketch.request.internal.Listeners.Listeners"]},{"name":"constructor(list: List<ProgressListener>)","description":"com.github.panpf.sketch.request.internal.ProgressListeners.ProgressListeners","location":"sketch-core/com.github.panpf.sketch.request.internal/-progress-listeners/-progress-listeners.html","searchKeys":["ProgressListeners","constructor(list: List<ProgressListener>)","com.github.panpf.sketch.request.internal.ProgressListeners.ProgressListeners"]},{"name":"constructor(listener: Listener?, progressListener: ProgressListener?, lifecycleResolver: LifecycleResolver?)","description":"com.github.panpf.sketch.request.internal.RequestOptions.RequestOptions","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-options/-request-options.html","searchKeys":["RequestOptions","constructor(listener: Listener?, progressListener: ProgressListener?, lifecycleResolver: LifecycleResolver?)","com.github.panpf.sketch.request.internal.RequestOptions.RequestOptions"]},{"name":"constructor(longImage: Precision = Precision.SAME_ASPECT_RATIO, otherImage: Precision = Precision.LESS_PIXELS, longImageDecider: LongImageDecider = LongImageDecider())","description":"com.github.panpf.sketch.resize.LongImagePrecisionDecider.LongImagePrecisionDecider","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-precision-decider/-long-image-precision-decider.html","searchKeys":["LongImagePrecisionDecider","constructor(longImage: Precision = Precision.SAME_ASPECT_RATIO, otherImage: Precision = Precision.LESS_PIXELS, longImageDecider: LongImageDecider = LongImageDecider())","com.github.panpf.sketch.resize.LongImagePrecisionDecider.LongImagePrecisionDecider"]},{"name":"constructor(longImage: Scale = START_CROP, otherImage: Scale = CENTER_CROP, longImageDecider: LongImageDecider = LongImageDecider())","description":"com.github.panpf.sketch.resize.LongImageScaleDecider.LongImageScaleDecider","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-scale-decider/-long-image-scale-decider.html","searchKeys":["LongImageScaleDecider","constructor(longImage: Scale = START_CROP, otherImage: Scale = CENTER_CROP, longImageDecider: LongImageDecider = LongImageDecider())","com.github.panpf.sketch.resize.LongImageScaleDecider.LongImageScaleDecider"]},{"name":"constructor(maskColor: Int)","description":"com.github.panpf.sketch.transform.MaskTransformation.MaskTransformation","location":"sketch-core/com.github.panpf.sketch.transform/-mask-transformation/-mask-transformation.html","searchKeys":["MaskTransformation","constructor(maskColor: Int)","com.github.panpf.sketch.transform.MaskTransformation.MaskTransformation"]},{"name":"constructor(maxSize: Long, valueLimitedSize: Long = (maxSize * 0.3f).roundToLong())","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.LruMemoryCache","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/-lru-memory-cache.html","searchKeys":["LruMemoryCache","constructor(maxSize: Long, valueLimitedSize: Long = (maxSize * 0.3f).roundToLong())","com.github.panpf.sketch.cache.internal.LruMemoryCache.LruMemoryCache"]},{"name":"constructor(message: String)","description":"com.github.panpf.sketch.decode.ImageInvalidException.ImageInvalidException","location":"sketch-core/com.github.panpf.sketch.decode/-image-invalid-exception/-image-invalid-exception.html","searchKeys":["ImageInvalidException","constructor(message: String)","com.github.panpf.sketch.decode.ImageInvalidException.ImageInvalidException"]},{"name":"constructor(message: String)","description":"com.github.panpf.sketch.request.DepthException.DepthException","location":"sketch-core/com.github.panpf.sketch.request/-depth-exception/-depth-exception.html","searchKeys":["DepthException","constructor(message: String)","com.github.panpf.sketch.request.DepthException.DepthException"]},{"name":"constructor(message: String)","description":"com.github.panpf.sketch.request.UriInvalidException.UriInvalidException","location":"sketch-core/com.github.panpf.sketch.request/-uri-invalid-exception/-uri-invalid-exception.html","searchKeys":["UriInvalidException","constructor(message: String)","com.github.panpf.sketch.request.UriInvalidException.UriInvalidException"]},{"name":"constructor(message: String, cause: Throwable? = null)","description":"com.github.panpf.sketch.decode.DecodeException.DecodeException","location":"sketch-core/com.github.panpf.sketch.decode/-decode-exception/-decode-exception.html","searchKeys":["DecodeException","constructor(message: String, cause: Throwable? = null)","com.github.panpf.sketch.decode.DecodeException.DecodeException"]},{"name":"constructor(message: String, cause: Throwable? = null)","description":"com.github.panpf.sketch.util.SketchException.SketchException","location":"sketch-core/com.github.panpf.sketch.util/-sketch-exception/-sketch-exception.html","searchKeys":["SketchException","constructor(message: String, cause: Throwable? = null)","com.github.panpf.sketch.util.SketchException.SketchException"]},{"name":"constructor(path: Path, fileSystem: FileSystem = defaultFileSystem())","description":"com.github.panpf.sketch.fetch.FileUriFetcher.FileUriFetcher","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/-file-uri-fetcher.html","searchKeys":["FileUriFetcher","constructor(path: Path, fileSystem: FileSystem = defaultFileSystem())","com.github.panpf.sketch.fetch.FileUriFetcher.FileUriFetcher"]},{"name":"constructor(path: Path, fileSystem: FileSystem = defaultFileSystem(), dataFrom: DataFrom = LOCAL)","description":"com.github.panpf.sketch.source.FileDataSource.FileDataSource","location":"sketch-core/com.github.panpf.sketch.source/-file-data-source/-file-data-source.html","searchKeys":["FileDataSource","constructor(path: Path, fileSystem: FileSystem = defaultFileSystem(), dataFrom: DataFrom = LOCAL)","com.github.panpf.sketch.source.FileDataSource.FileDataSource"]},{"name":"constructor(precision: Precision)","description":"com.github.panpf.sketch.resize.FixedPrecisionDecider.FixedPrecisionDecider","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-precision-decider/-fixed-precision-decider.html","searchKeys":["FixedPrecisionDecider","constructor(precision: Precision)","com.github.panpf.sketch.resize.FixedPrecisionDecider.FixedPrecisionDecider"]},{"name":"constructor(r: Rect?)","description":"com.github.panpf.sketch.util.Rect.Rect","location":"sketch-core/com.github.panpf.sketch.util/-rect/-rect.html","searchKeys":["Rect","constructor(r: Rect?)","com.github.panpf.sketch.util.Rect.Rect"]},{"name":"constructor(radius: Int = 15, hasAlphaBitmapBgColor: Int? = 0xFF000000L.toInt(), maskColor: Int? = null)","description":"com.github.panpf.sketch.transform.BlurTransformation.BlurTransformation","location":"sketch-core/com.github.panpf.sketch.transform/-blur-transformation/-blur-transformation.html","searchKeys":["BlurTransformation","constructor(radius: Int = 15, hasAlphaBitmapBgColor: Int? = 0xFF000000L.toInt(), maskColor: Int? = null)","com.github.panpf.sketch.transform.BlurTransformation.BlurTransformation"]},{"name":"constructor(radiusArray: FloatArray)","description":"com.github.panpf.sketch.transform.RoundedCornersTransformation.RoundedCornersTransformation","location":"sketch-core/com.github.panpf.sketch.transform/-rounded-corners-transformation/-rounded-corners-transformation.html","searchKeys":["RoundedCornersTransformation","constructor(radiusArray: FloatArray)","com.github.panpf.sketch.transform.RoundedCornersTransformation.RoundedCornersTransformation"]},{"name":"constructor(registry: ComponentRegistry)","description":"com.github.panpf.sketch.Components.Components","location":"sketch-core/com.github.panpf.sketch/-components/-components.html","searchKeys":["Components","constructor(registry: ComponentRegistry)","com.github.panpf.sketch.Components.Components"]},{"name":"constructor(request: <Error class: unknown class>, dataSource: <Error class: unknown class>)","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.BitmapFactoryDecodeHelper","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decode-helper/-bitmap-factory-decode-helper.html","searchKeys":["BitmapFactoryDecodeHelper","constructor(request: <Error class: unknown class>, dataSource: <Error class: unknown class>)","com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.BitmapFactoryDecodeHelper"]},{"name":"constructor(request: ImageRequest)","description":"com.github.panpf.sketch.request.LoadState.Canceled.Canceled","location":"sketch-core/com.github.panpf.sketch.request/-load-state/-canceled/-canceled.html","searchKeys":["Canceled","constructor(request: ImageRequest)","com.github.panpf.sketch.request.LoadState.Canceled.Canceled"]},{"name":"constructor(request: ImageRequest)","description":"com.github.panpf.sketch.request.LoadState.Started.Started","location":"sketch-core/com.github.panpf.sketch.request/-load-state/-started/-started.html","searchKeys":["Started","constructor(request: ImageRequest)","com.github.panpf.sketch.request.LoadState.Started.Started"]},{"name":"constructor(request: ImageRequest, dataSource: DataSource)","description":"com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.SkiaDecodeHelper","location":"sketch-core/com.github.panpf.sketch.decode.internal/-skia-decode-helper/-skia-decode-helper.html","searchKeys":["SkiaDecodeHelper","constructor(request: ImageRequest, dataSource: DataSource)","com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.SkiaDecodeHelper"]},{"name":"constructor(request: ImageRequest, image: Image, cacheKey: String, memoryCacheKey: String, resultCacheKey: String, downloadCacheKey: String, imageInfo: ImageInfo, dataFrom: DataFrom, resize: Resize, transformeds: List<String>?, extras: Map<String, String>?)","description":"com.github.panpf.sketch.request.ImageResult.Success.Success","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-success/-success.html","searchKeys":["Success","constructor(request: ImageRequest, image: Image, cacheKey: String, memoryCacheKey: String, resultCacheKey: String, downloadCacheKey: String, imageInfo: ImageInfo, dataFrom: DataFrom, resize: Resize, transformeds: List<String>?, extras: Map<String, String>?)","com.github.panpf.sketch.request.ImageResult.Success.Success"]},{"name":"constructor(request: ImageRequest, image: Image?, throwable: Throwable)","description":"com.github.panpf.sketch.request.ImageResult.Error.Error","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-error/-error.html","searchKeys":["Error","constructor(request: ImageRequest, image: Image?, throwable: Throwable)","com.github.panpf.sketch.request.ImageResult.Error.Error"]},{"name":"constructor(request: ImageRequest, result: ImageResult.Error)","description":"com.github.panpf.sketch.request.LoadState.Error.Error","location":"sketch-core/com.github.panpf.sketch.request/-load-state/-error/-error.html","searchKeys":["Error","constructor(request: ImageRequest, result: ImageResult.Error)","com.github.panpf.sketch.request.LoadState.Error.Error"]},{"name":"constructor(request: ImageRequest, result: ImageResult.Success)","description":"com.github.panpf.sketch.request.LoadState.Success.Success","location":"sketch-core/com.github.panpf.sketch.request/-load-state/-success/-success.html","searchKeys":["Success","constructor(request: ImageRequest, result: ImageResult.Success)","com.github.panpf.sketch.request.LoadState.Success.Success"]},{"name":"constructor(request: ImageRequest, uri: String? = request.uri.toString())","description":"com.github.panpf.sketch.request.ImageRequest.Builder.Builder","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/-builder.html","searchKeys":["Builder","constructor(request: ImageRequest, uri: String? = request.uri.toString())","com.github.panpf.sketch.request.ImageRequest.Builder.Builder"]},{"name":"constructor(requestContext: <Error class: unknown class>, dataSource: <Error class: unknown class>)","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.BitmapFactoryDecoder","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decoder/-bitmap-factory-decoder.html","searchKeys":["BitmapFactoryDecoder","constructor(requestContext: <Error class: unknown class>, dataSource: <Error class: unknown class>)","com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.BitmapFactoryDecoder"]},{"name":"constructor(requestContext: <Error class: unknown class>, dataSource: DrawableDataSource, mimeType: String?)","description":"com.github.panpf.sketch.decode.internal.DrawableDecoder.DrawableDecoder","location":"sketch-core/com.github.panpf.sketch.decode.internal/-drawable-decoder/-drawable-decoder.html","searchKeys":["DrawableDecoder","constructor(requestContext: <Error class: unknown class>, dataSource: DrawableDataSource, mimeType: String?)","com.github.panpf.sketch.decode.internal.DrawableDecoder.DrawableDecoder"]},{"name":"constructor(requestContext: RequestContext, dataSource: DataSource)","description":"com.github.panpf.sketch.decode.SkiaDecoder.SkiaDecoder","location":"sketch-core/com.github.panpf.sketch.decode/-skia-decoder/-skia-decoder.html","searchKeys":["SkiaDecoder","constructor(requestContext: RequestContext, dataSource: DataSource)","com.github.panpf.sketch.decode.SkiaDecoder.SkiaDecoder"]},{"name":"constructor(requestContext: RequestContext, dataSource: DataSource, decodeHelperFactory: () -> DecodeHelper)","description":"com.github.panpf.sketch.decode.internal.HelperDecoder.HelperDecoder","location":"sketch-core/com.github.panpf.sketch.decode.internal/-helper-decoder/-helper-decoder.html","searchKeys":["HelperDecoder","constructor(requestContext: RequestContext, dataSource: DataSource, decodeHelperFactory: () -> DecodeHelper)","com.github.panpf.sketch.decode.internal.HelperDecoder.HelperDecoder"]},{"name":"constructor(requestManager: RequestManager, job: Deferred<ImageResult>)","description":"com.github.panpf.sketch.request.ReusableDisposable.ReusableDisposable","location":"sketch-core/com.github.panpf.sketch.request/-reusable-disposable/-reusable-disposable.html","searchKeys":["ReusableDisposable","constructor(requestManager: RequestManager, job: Deferred<ImageResult>)","com.github.panpf.sketch.request.ReusableDisposable.ReusableDisposable"]},{"name":"constructor(requestOptions: RequestOptions)","description":"com.github.panpf.sketch.request.internal.RequestOptions.Builder.Builder","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-options/-builder/-builder.html","searchKeys":["Builder","constructor(requestOptions: RequestOptions)","com.github.panpf.sketch.request.internal.RequestOptions.Builder.Builder"]},{"name":"constructor(resId: Int)","description":"com.github.panpf.sketch.drawable.ResColorDrawableFetcher.ResColorDrawableFetcher","location":"sketch-core/com.github.panpf.sketch.drawable/-res-color-drawable-fetcher/-res-color-drawable-fetcher.html","searchKeys":["ResColorDrawableFetcher","constructor(resId: Int)","com.github.panpf.sketch.drawable.ResColorDrawableFetcher.ResColorDrawableFetcher"]},{"name":"constructor(resId: Int)","description":"com.github.panpf.sketch.util.ResColorFetcher.ResColorFetcher","location":"sketch-core/com.github.panpf.sketch.util/-res-color-fetcher/-res-color-fetcher.html","searchKeys":["ResColorFetcher","constructor(resId: Int)","com.github.panpf.sketch.util.ResColorFetcher.ResColorFetcher"]},{"name":"constructor(resId: Int, resources: Resources? = null, packageName: String? = null)","description":"com.github.panpf.sketch.drawable.ResDrawableFetcher.ResDrawableFetcher","location":"sketch-core/com.github.panpf.sketch.drawable/-res-drawable-fetcher/-res-drawable-fetcher.html","searchKeys":["ResDrawableFetcher","constructor(resId: Int, resources: Resources? = null, packageName: String? = null)","com.github.panpf.sketch.drawable.ResDrawableFetcher.ResDrawableFetcher"]},{"name":"constructor(resourcePath: String)","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.KotlinResourceUriFetcher","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/-kotlin-resource-uri-fetcher.html","searchKeys":["KotlinResourceUriFetcher","constructor(resourcePath: String)","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.KotlinResourceUriFetcher"]},{"name":"constructor(resourcePath: String)","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.KotlinResourceDataSource","location":"sketch-core/com.github.panpf.sketch.source/[desktop]-kotlin-resource-data-source/-kotlin-resource-data-source.html","searchKeys":["KotlinResourceDataSource","constructor(resourcePath: String)","com.github.panpf.sketch.source.KotlinResourceDataSource.KotlinResourceDataSource"]},{"name":"constructor(resourcePath: String, fileSystem: <Error class: unknown class> = defaultFileSystem())","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.KotlinResourceUriFetcher","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/-kotlin-resource-uri-fetcher.html","searchKeys":["KotlinResourceUriFetcher","constructor(resourcePath: String, fileSystem: <Error class: unknown class> = defaultFileSystem())","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.KotlinResourceUriFetcher"]},{"name":"constructor(resourcePath: String, fileSystem: <Error class: unknown class> = defaultFileSystem())","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.KotlinResourceDataSource","location":"sketch-core/com.github.panpf.sketch.source/[ios]-kotlin-resource-data-source/-kotlin-resource-data-source.html","searchKeys":["KotlinResourceDataSource","constructor(resourcePath: String, fileSystem: <Error class: unknown class> = defaultFileSystem())","com.github.panpf.sketch.source.KotlinResourceDataSource.KotlinResourceDataSource"]},{"name":"constructor(resources: Resources, packageName: String, resId: Int)","description":"com.github.panpf.sketch.source.ResourceDataSource.ResourceDataSource","location":"sketch-core/com.github.panpf.sketch.source/-resource-data-source/-resource-data-source.html","searchKeys":["ResourceDataSource","constructor(resources: Resources, packageName: String, resId: Int)","com.github.panpf.sketch.source.ResourceDataSource.ResourceDataSource"]},{"name":"constructor(sameDirectionMultiple: Float = 2.5f, notSameDirectionMultiple: Float = 5.0f)","description":"com.github.panpf.sketch.resize.DefaultLongImageDecider.DefaultLongImageDecider","location":"sketch-core/com.github.panpf.sketch.resize/-default-long-image-decider/-default-long-image-decider.html","searchKeys":["DefaultLongImageDecider","constructor(sameDirectionMultiple: Float = 2.5f, notSameDirectionMultiple: Float = 5.0f)","com.github.panpf.sketch.resize.DefaultLongImageDecider.DefaultLongImageDecider"]},{"name":"constructor(sampleSize: Int? = null, colorType: ColorType? = null, colorSpace: ColorSpace? = null)","description":"com.github.panpf.sketch.decode.DecodeConfig.DecodeConfig","location":"sketch-core/com.github.panpf.sketch.decode/-decode-config/-decode-config.html","searchKeys":["DecodeConfig","constructor(sampleSize: Int? = null, colorType: ColorType? = null, colorSpace: ColorSpace? = null)","com.github.panpf.sketch.decode.DecodeConfig.DecodeConfig"]},{"name":"constructor(sampleSize: Int? = null, colorType: ColorType? = null, colorSpace: ColorSpace? = null, preferQualityOverSpeed: Boolean? = null)","description":"com.github.panpf.sketch.decode.DecodeConfig.DecodeConfig","location":"sketch-core/com.github.panpf.sketch.decode/-decode-config/-decode-config.html","searchKeys":["DecodeConfig","constructor(sampleSize: Int? = null, colorType: ColorType? = null, colorSpace: ColorSpace? = null, preferQualityOverSpeed: Boolean? = null)","com.github.panpf.sketch.decode.DecodeConfig.DecodeConfig"]},{"name":"constructor(scale: Scale)","description":"com.github.panpf.sketch.resize.FixedScaleDecider.FixedScaleDecider","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-scale-decider/-fixed-scale-decider.html","searchKeys":["FixedScaleDecider","constructor(scale: Scale)","com.github.panpf.sketch.resize.FixedScaleDecider.FixedScaleDecider"]},{"name":"constructor(scale: Scale? = null)","description":"com.github.panpf.sketch.transform.CircleCropTransformation.CircleCropTransformation","location":"sketch-core/com.github.panpf.sketch.transform/-circle-crop-transformation/-circle-crop-transformation.html","searchKeys":["CircleCropTransformation","constructor(scale: Scale? = null)","com.github.panpf.sketch.transform.CircleCropTransformation.CircleCropTransformation"]},{"name":"constructor(scheme: String?, authority: String?, path: String?, query: String?, fragment: String?)","description":"com.github.panpf.sketch.util.Uri.Elements.Elements","location":"sketch-core/com.github.panpf.sketch.util/-uri/-elements/-elements.html","searchKeys":["Elements","constructor(scheme: String?, authority: String?, path: String?, query: String?, fragment: String?)","com.github.panpf.sketch.util.Uri.Elements.Elements"]},{"name":"constructor(size: Size)","description":"com.github.panpf.sketch.resize.FixedSizeResolver.FixedSizeResolver","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-size-resolver/-fixed-size-resolver.html","searchKeys":["FixedSizeResolver","constructor(size: Size)","com.github.panpf.sketch.resize.FixedSizeResolver.FixedSizeResolver"]},{"name":"constructor(size: Size, mimeType: String)","description":"com.github.panpf.sketch.decode.ImageInfo.ImageInfo","location":"sketch-core/com.github.panpf.sketch.decode/-image-info/-image-info.html","searchKeys":["ImageInfo","constructor(size: Size, mimeType: String)","com.github.panpf.sketch.decode.ImageInfo.ImageInfo"]},{"name":"constructor(size: Size, precision: Precision, scale: Scale)","description":"com.github.panpf.sketch.resize.Resize.Resize","location":"sketch-core/com.github.panpf.sketch.resize/-resize/-resize.html","searchKeys":["Resize","constructor(size: Size, precision: Precision, scale: Scale)","com.github.panpf.sketch.resize.Resize.Resize"]},{"name":"constructor(sketch: <Error class: unknown class>)","description":"com.github.panpf.sketch.util.AndroidSystemCallbacks.AndroidSystemCallbacks","location":"sketch-core/com.github.panpf.sketch.util/-android-system-callbacks/-android-system-callbacks.html","searchKeys":["AndroidSystemCallbacks","constructor(sketch: <Error class: unknown class>)","com.github.panpf.sketch.util.AndroidSystemCallbacks.AndroidSystemCallbacks"]},{"name":"constructor(sketch: Sketch)","description":"com.github.panpf.sketch.request.internal.RequestExecutor.RequestExecutor","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-executor/-request-executor.html","searchKeys":["RequestExecutor","constructor(sketch: Sketch)","com.github.panpf.sketch.request.internal.RequestExecutor.RequestExecutor"]},{"name":"constructor(sketch: Sketch, initialRequest: ImageRequest, job: Job)","description":"com.github.panpf.sketch.request.internal.NoTargetRequestDelegate.NoTargetRequestDelegate","location":"sketch-core/com.github.panpf.sketch.request.internal/-no-target-request-delegate/-no-target-request-delegate.html","searchKeys":["NoTargetRequestDelegate","constructor(sketch: Sketch, initialRequest: ImageRequest, job: Job)","com.github.panpf.sketch.request.internal.NoTargetRequestDelegate.NoTargetRequestDelegate"]},{"name":"constructor(sketch: Sketch, initialRequest: ImageRequest, size: Size)","description":"com.github.panpf.sketch.request.RequestContext.RequestContext","location":"sketch-core/com.github.panpf.sketch.request/-request-context/-request-context.html","searchKeys":["RequestContext","constructor(sketch: Sketch, initialRequest: ImageRequest, size: Size)","com.github.panpf.sketch.request.RequestContext.RequestContext"]},{"name":"constructor(sketch: Sketch, initialRequest: ImageRequest, target: Target, job: Job)","description":"com.github.panpf.sketch.request.internal.OneShotRequestDelegate.OneShotRequestDelegate","location":"sketch-core/com.github.panpf.sketch.request.internal/-one-shot-request-delegate/-one-shot-request-delegate.html","searchKeys":["OneShotRequestDelegate","constructor(sketch: Sketch, initialRequest: ImageRequest, target: Target, job: Job)","com.github.panpf.sketch.request.internal.OneShotRequestDelegate.OneShotRequestDelegate"]},{"name":"constructor(sketch: Sketch, initialRequest: ImageRequest, target: Target?, job: Job)","description":"com.github.panpf.sketch.request.internal.BaseRequestDelegate.BaseRequestDelegate","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-delegate/-base-request-delegate.html","searchKeys":["BaseRequestDelegate","constructor(sketch: Sketch, initialRequest: ImageRequest, target: Target?, job: Job)","com.github.panpf.sketch.request.internal.BaseRequestDelegate.BaseRequestDelegate"]},{"name":"constructor(srcRect: Rect, dstRect: Rect)","description":"com.github.panpf.sketch.resize.ResizeMapping.ResizeMapping","location":"sketch-core/com.github.panpf.sketch.resize/-resize-mapping/-resize-mapping.html","searchKeys":["ResizeMapping","constructor(srcRect: Rect, dstRect: Rect)","com.github.panpf.sketch.resize.ResizeMapping.ResizeMapping"]},{"name":"constructor(stateList: List<Pair<ConditionStateImage.Condition, StateImage>>)","description":"com.github.panpf.sketch.state.ConditionStateImage.ConditionStateImage","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/-condition-state-image.html","searchKeys":["ConditionStateImage","constructor(stateList: List<Pair<ConditionStateImage.Condition, StateImage>>)","com.github.panpf.sketch.state.ConditionStateImage.ConditionStateImage"]},{"name":"constructor(topLeft: Float = 0.0f, topRight: Float = 0.0f, bottomLeft: Float = 0.0f, bottomRight: Float = 0.0f)","description":"com.github.panpf.sketch.transform.RoundedCornersTransformation.RoundedCornersTransformation","location":"sketch-core/com.github.panpf.sketch.transform/-rounded-corners-transformation/-rounded-corners-transformation.html","searchKeys":["RoundedCornersTransformation","constructor(topLeft: Float = 0.0f, topRight: Float = 0.0f, bottomLeft: Float = 0.0f, bottomRight: Float = 0.0f)","com.github.panpf.sketch.transform.RoundedCornersTransformation.RoundedCornersTransformation"]},{"name":"constructor(totalLength: Long, completedLength: Long)","description":"com.github.panpf.sketch.request.Progress.Progress","location":"sketch-core/com.github.panpf.sketch.request/-progress/-progress.html","searchKeys":["Progress","constructor(totalLength: Long, completedLength: Long)","com.github.panpf.sketch.request.Progress.Progress"]},{"name":"constructor(uri: String? = null, defaultImage: StateImage? = null)","description":"com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.ThumbnailMemoryCacheStateImage","location":"sketch-core/com.github.panpf.sketch.state/-thumbnail-memory-cache-state-image/-thumbnail-memory-cache-state-image.html","searchKeys":["ThumbnailMemoryCacheStateImage","constructor(uri: String? = null, defaultImage: StateImage? = null)","com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.ThumbnailMemoryCacheStateImage"]},{"name":"constructor(uri: String? = null, defaultImage: StateImage? = null, maxMismatchCount: Int = -1)","description":"com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.ThumbnailMemoryCacheStateImage","location":"sketch-core/com.github.panpf.sketch.state/-thumbnail-memory-cache-state-image/-thumbnail-memory-cache-state-image.html","searchKeys":["ThumbnailMemoryCacheStateImage","constructor(uri: String? = null, defaultImage: StateImage? = null, maxMismatchCount: Int = -1)","com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.ThumbnailMemoryCacheStateImage"]},{"name":"constructor(value: Any?, cacheKey: String?, requestKey: String?)","description":"com.github.panpf.sketch.request.Extras.Entry.Entry","location":"sketch-core/com.github.panpf.sketch.request/-extras/-entry/-entry.html","searchKeys":["Entry","constructor(value: Any?, cacheKey: String?, requestKey: String?)","com.github.panpf.sketch.request.Extras.Entry.Entry"]},{"name":"constructor(vararg listeners: Listener)","description":"com.github.panpf.sketch.request.internal.Listeners.Listeners","location":"sketch-core/com.github.panpf.sketch.request.internal/-listeners/-listeners.html","searchKeys":["Listeners","constructor(vararg listeners: Listener)","com.github.panpf.sketch.request.internal.Listeners.Listeners"]},{"name":"constructor(vararg listeners: ProgressListener)","description":"com.github.panpf.sketch.request.internal.ProgressListeners.ProgressListeners","location":"sketch-core/com.github.panpf.sketch.request.internal/-progress-listeners/-progress-listeners.html","searchKeys":["ProgressListeners","constructor(vararg listeners: ProgressListener)","com.github.panpf.sketch.request.internal.ProgressListeners.ProgressListeners"]},{"name":"constructor(width: Int, height: Int)","description":"com.github.panpf.sketch.resize.FixedSizeResolver.FixedSizeResolver","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-size-resolver/-fixed-size-resolver.html","searchKeys":["FixedSizeResolver","constructor(width: Int, height: Int)","com.github.panpf.sketch.resize.FixedSizeResolver.FixedSizeResolver"]},{"name":"constructor(width: Int, height: Int)","description":"com.github.panpf.sketch.resize.Resize.Resize","location":"sketch-core/com.github.panpf.sketch.resize/-resize/-resize.html","searchKeys":["Resize","constructor(width: Int, height: Int)","com.github.panpf.sketch.resize.Resize.Resize"]},{"name":"constructor(width: Int, height: Int)","description":"com.github.panpf.sketch.util.Size.Size","location":"sketch-core/com.github.panpf.sketch.util/-size/-size.html","searchKeys":["Size","constructor(width: Int, height: Int)","com.github.panpf.sketch.util.Size.Size"]},{"name":"constructor(width: Int, height: Int, mimeType: String)","description":"com.github.panpf.sketch.decode.ImageInfo.ImageInfo","location":"sketch-core/com.github.panpf.sketch.decode/-image-info/-image-info.html","searchKeys":["ImageInfo","constructor(width: Int, height: Int, mimeType: String)","com.github.panpf.sketch.decode.ImageInfo.ImageInfo"]},{"name":"constructor(width: Int, height: Int, precision: Precision)","description":"com.github.panpf.sketch.resize.Resize.Resize","location":"sketch-core/com.github.panpf.sketch.resize/-resize/-resize.html","searchKeys":["Resize","constructor(width: Int, height: Int, precision: Precision)","com.github.panpf.sketch.resize.Resize.Resize"]},{"name":"constructor(width: Int, height: Int, precision: Precision, scale: Scale)","description":"com.github.panpf.sketch.resize.Resize.Resize","location":"sketch-core/com.github.panpf.sketch.resize/-resize/-resize.html","searchKeys":["Resize","constructor(width: Int, height: Int, precision: Precision, scale: Scale)","com.github.panpf.sketch.resize.Resize.Resize"]},{"name":"constructor(width: Int, height: Int, scale: Scale)","description":"com.github.panpf.sketch.resize.Resize.Resize","location":"sketch-core/com.github.panpf.sketch.resize/-resize/-resize.html","searchKeys":["Resize","constructor(width: Int, height: Int, scale: Scale)","com.github.panpf.sketch.resize.Resize.Resize"]},{"name":"constructor(wrappedTransition: Transition)","description":"com.github.panpf.sketch.transition.CrossfadeTransition.CrossfadeTransition","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-crossfade-transition.html","searchKeys":["CrossfadeTransition","constructor(wrappedTransition: Transition)","com.github.panpf.sketch.transition.CrossfadeTransition.CrossfadeTransition"]},{"name":"data class BlurTransformation(val radius: Int = 15, val hasAlphaBitmapBgColor: Int? = 0xFF000000L.toInt(), val maskColor: Int? = null) : Transformation","description":"com.github.panpf.sketch.transform.BlurTransformation","location":"sketch-core/com.github.panpf.sketch.transform/-blur-transformation/index.html","searchKeys":["BlurTransformation","data class BlurTransformation(val radius: Int = 15, val hasAlphaBitmapBgColor: Int? = 0xFF000000L.toInt(), val maskColor: Int? = null) : Transformation","com.github.panpf.sketch.transform.BlurTransformation"]},{"name":"data class Canceled(val request: ImageRequest) : LoadState","description":"com.github.panpf.sketch.request.LoadState.Canceled","location":"sketch-core/com.github.panpf.sketch.request/-load-state/-canceled/index.html","searchKeys":["Canceled","data class Canceled(val request: ImageRequest) : LoadState","com.github.panpf.sketch.request.LoadState.Canceled"]},{"name":"data class ColorDrawableStateImage(val color: ColorFetcher)","description":"com.github.panpf.sketch.state.ColorDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-color-drawable-state-image/index.html","searchKeys":["ColorDrawableStateImage","data class ColorDrawableStateImage(val color: ColorFetcher)","com.github.panpf.sketch.state.ColorDrawableStateImage"]},{"name":"data class ConditionStateImage(val stateList: List<Pair<ConditionStateImage.Condition, StateImage>>) : StateImage","description":"com.github.panpf.sketch.state.ConditionStateImage","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/index.html","searchKeys":["ConditionStateImage","data class ConditionStateImage(val stateList: List<Pair<ConditionStateImage.Condition, StateImage>>) : StateImage","com.github.panpf.sketch.state.ConditionStateImage"]},{"name":"data class CurrentStateImage(val defaultImage: StateImage? = null) : StateImage","description":"com.github.panpf.sketch.state.CurrentStateImage","location":"sketch-core/com.github.panpf.sketch.state/-current-state-image/index.html","searchKeys":["CurrentStateImage","data class CurrentStateImage(val defaultImage: StateImage? = null) : StateImage","com.github.panpf.sketch.state.CurrentStateImage"]},{"name":"data class DecodeResult(val image: Image, val imageInfo: ImageInfo, val dataFrom: DataFrom, val resize: Resize, val transformeds: List<String>?, val extras: Map<String, String>?)","description":"com.github.panpf.sketch.decode.DecodeResult","location":"sketch-core/com.github.panpf.sketch.decode/-decode-result/index.html","searchKeys":["DecodeResult","data class DecodeResult(val image: Image, val imageInfo: ImageInfo, val dataFrom: DataFrom, val resize: Resize, val transformeds: List<String>?, val extras: Map<String, String>?)","com.github.panpf.sketch.decode.DecodeResult"]},{"name":"data class DepthHolder(val depth: Depth, val from: String? = null) : Key","description":"com.github.panpf.sketch.request.DepthHolder","location":"sketch-core/com.github.panpf.sketch.request/-depth-holder/index.html","searchKeys":["DepthHolder","data class DepthHolder(val depth: Depth, val from: String? = null) : Key","com.github.panpf.sketch.request.DepthHolder"]},{"name":"data class DrawableImage(val drawable: Drawable, val shareable: Boolean = drawable !is Animatable)","description":"com.github.panpf.sketch.DrawableImage","location":"sketch-core/com.github.panpf.sketch/-drawable-image/index.html","searchKeys":["DrawableImage","data class DrawableImage(val drawable: Drawable, val shareable: Boolean = drawable !is Animatable)","com.github.panpf.sketch.DrawableImage"]},{"name":"data class DrawableStateImage(val drawableFetcher: DrawableFetcher)","description":"com.github.panpf.sketch.state.DrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-drawable-state-image/index.html","searchKeys":["DrawableStateImage","data class DrawableStateImage(val drawableFetcher: DrawableFetcher)","com.github.panpf.sketch.state.DrawableStateImage"]},{"name":"data class Entry(val value: Any?, val cacheKey: String?, val requestKey: String?)","description":"com.github.panpf.sketch.request.Extras.Entry","location":"sketch-core/com.github.panpf.sketch.request/-extras/-entry/index.html","searchKeys":["Entry","data class Entry(val value: Any?, val cacheKey: String?, val requestKey: String?)","com.github.panpf.sketch.request.Extras.Entry"]},{"name":"data class Error(val request: ImageRequest, val image: Image?, val throwable: Throwable) : ImageResult","description":"com.github.panpf.sketch.request.ImageResult.Error","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-error/index.html","searchKeys":["Error","data class Error(val request: ImageRequest, val image: Image?, val throwable: Throwable) : ImageResult","com.github.panpf.sketch.request.ImageResult.Error"]},{"name":"data class Error(val request: ImageRequest, val result: ImageResult.Error) : LoadState","description":"com.github.panpf.sketch.request.LoadState.Error","location":"sketch-core/com.github.panpf.sketch.request/-load-state/-error/index.html","searchKeys":["Error","data class Error(val request: ImageRequest, val result: ImageResult.Error) : LoadState","com.github.panpf.sketch.request.LoadState.Error"]},{"name":"data class FetchResult(val dataSource: DataSource, val mimeType: String?)","description":"com.github.panpf.sketch.fetch.FetchResult","location":"sketch-core/com.github.panpf.sketch.fetch/-fetch-result/index.html","searchKeys":["FetchResult","data class FetchResult(val dataSource: DataSource, val mimeType: String?)","com.github.panpf.sketch.fetch.FetchResult"]},{"name":"data class FixedLifecycleResolver(lifecycle: Lifecycle) : LifecycleResolver","description":"com.github.panpf.sketch.request.FixedLifecycleResolver","location":"sketch-core/com.github.panpf.sketch.request/-fixed-lifecycle-resolver/index.html","searchKeys":["FixedLifecycleResolver","data class FixedLifecycleResolver(lifecycle: Lifecycle) : LifecycleResolver","com.github.panpf.sketch.request.FixedLifecycleResolver"]},{"name":"data class FixedPrecisionDecider(precision: Precision) : PrecisionDecider","description":"com.github.panpf.sketch.resize.FixedPrecisionDecider","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-precision-decider/index.html","searchKeys":["FixedPrecisionDecider","data class FixedPrecisionDecider(precision: Precision) : PrecisionDecider","com.github.panpf.sketch.resize.FixedPrecisionDecider"]},{"name":"data class FixedScaleDecider(scale: Scale) : ScaleDecider","description":"com.github.panpf.sketch.resize.FixedScaleDecider","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-scale-decider/index.html","searchKeys":["FixedScaleDecider","data class FixedScaleDecider(scale: Scale) : ScaleDecider","com.github.panpf.sketch.resize.FixedScaleDecider"]},{"name":"data class FixedSizeResolver(size: Size) : SizeResolver","description":"com.github.panpf.sketch.resize.FixedSizeResolver","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-size-resolver/index.html","searchKeys":["FixedSizeResolver","data class FixedSizeResolver(size: Size) : SizeResolver","com.github.panpf.sketch.resize.FixedSizeResolver"]},{"name":"data class IconAnimatableDrawableStateImage(val icon: DrawableFetcher, val background: DrawableFetcher? = null, val iconSize: <Error class: unknown class>? = null, val iconTint: ColorFetcher? = null)","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image/index.html","searchKeys":["IconAnimatableDrawableStateImage","data class IconAnimatableDrawableStateImage(val icon: DrawableFetcher, val background: DrawableFetcher? = null, val iconSize: <Error class: unknown class>? = null, val iconTint: ColorFetcher? = null)","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"data class IconDrawableStateImage(val icon: DrawableFetcher, val background: DrawableFetcher? = null, val iconSize: <Error class: unknown class>? = null, val iconTint: ColorFetcher? = null)","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image/index.html","searchKeys":["IconDrawableStateImage","data class IconDrawableStateImage(val icon: DrawableFetcher, val background: DrawableFetcher? = null, val iconSize: <Error class: unknown class>? = null, val iconTint: ColorFetcher? = null)","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"data class ImageCacheValue(val image: Image, val extras: Map<String, Any?>? = null) : MemoryCache.Value","description":"com.github.panpf.sketch.cache.ImageCacheValue","location":"sketch-core/com.github.panpf.sketch.cache/-image-cache-value/index.html","searchKeys":["ImageCacheValue","data class ImageCacheValue(val image: Image, val extras: Map<String, Any?>? = null) : MemoryCache.Value","com.github.panpf.sketch.cache.ImageCacheValue"]},{"name":"data class ImageData(val image: Image, val imageInfo: ImageInfo, val dataFrom: DataFrom, val resize: Resize, val transformeds: List<String>?, val extras: Map<String, String>?)","description":"com.github.panpf.sketch.request.ImageData","location":"sketch-core/com.github.panpf.sketch.request/-image-data/index.html","searchKeys":["ImageData","data class ImageData(val image: Image, val imageInfo: ImageInfo, val dataFrom: DataFrom, val resize: Resize, val transformeds: List<String>?, val extras: Map<String, String>?)","com.github.panpf.sketch.request.ImageData"]},{"name":"data class ImageInfo(val size: Size, val mimeType: String)","description":"com.github.panpf.sketch.decode.ImageInfo","location":"sketch-core/com.github.panpf.sketch.decode/-image-info/index.html","searchKeys":["ImageInfo","data class ImageInfo(val size: Size, val mimeType: String)","com.github.panpf.sketch.decode.ImageInfo"]},{"name":"data class ImageOptions(val depthHolder: DepthHolder?, val extras: Extras?, val downloadCachePolicy: CachePolicy?, val downloadCacheKey: String?, val downloadCacheKeyMapper: CacheKeyMapper?, val colorType: BitmapColorType?, val colorSpace: BitmapColorSpace?, val sizeResolver: SizeResolver?, val sizeMultiplier: Float?, val precisionDecider: PrecisionDecider?, val scaleDecider: ScaleDecider?, val transformations: List<Transformation>?, val resultCachePolicy: CachePolicy?, val resultCacheKey: String?, val resultCacheKeyMapper: CacheKeyMapper?, val placeholder: StateImage?, val fallback: StateImage?, val error: StateImage?, val transitionFactory: Transition.Factory?, val resizeOnDraw: Boolean?, val allowNullImage: Boolean?, val memoryCachePolicy: CachePolicy?, val memoryCacheKey: String?, val memoryCacheKeyMapper: CacheKeyMapper?, val componentRegistry: ComponentRegistry?)","description":"com.github.panpf.sketch.request.ImageOptions","location":"sketch-core/com.github.panpf.sketch.request/-image-options/index.html","searchKeys":["ImageOptions","data class ImageOptions(val depthHolder: DepthHolder?, val extras: Extras?, val downloadCachePolicy: CachePolicy?, val downloadCacheKey: String?, val downloadCacheKeyMapper: CacheKeyMapper?, val colorType: BitmapColorType?, val colorSpace: BitmapColorSpace?, val sizeResolver: SizeResolver?, val sizeMultiplier: Float?, val precisionDecider: PrecisionDecider?, val scaleDecider: ScaleDecider?, val transformations: List<Transformation>?, val resultCachePolicy: CachePolicy?, val resultCacheKey: String?, val resultCacheKeyMapper: CacheKeyMapper?, val placeholder: StateImage?, val fallback: StateImage?, val error: StateImage?, val transitionFactory: Transition.Factory?, val resizeOnDraw: Boolean?, val allowNullImage: Boolean?, val memoryCachePolicy: CachePolicy?, val memoryCacheKey: String?, val memoryCacheKeyMapper: CacheKeyMapper?, val componentRegistry: ComponentRegistry?)","com.github.panpf.sketch.request.ImageOptions"]},{"name":"data class ImageRequest(val context: PlatformContext, val uri: Uri, val target: Target?, val listener: Listener?, val progressListener: ProgressListener?, val lifecycleResolver: LifecycleResolver, val definedRequestOptions: RequestOptions, val definedOptions: ImageOptions, val defaultOptions: ImageOptions?, val depthHolder: DepthHolder, val extras: Extras?, val downloadCachePolicy: CachePolicy, val downloadCacheKey: String?, val downloadCacheKeyMapper: CacheKeyMapper?, val colorType: BitmapColorType?, val colorSpace: BitmapColorSpace?, val sizeResolver: SizeResolver, val sizeMultiplier: Float?, val precisionDecider: PrecisionDecider, val scaleDecider: ScaleDecider, val transformations: List<Transformation>?, val resultCachePolicy: CachePolicy, val resultCacheKey: String?, val resultCacheKeyMapper: CacheKeyMapper?, val placeholder: StateImage?, val fallback: StateImage?, val error: StateImage?, val transitionFactory: Transition.Factory?, val resizeOnDraw: Boolean?, val allowNullImage: Boolean?, val memoryCachePolicy: CachePolicy, val memoryCacheKey: String?, val memoryCacheKeyMapper: CacheKeyMapper?, val componentRegistry: ComponentRegistry?) : Key","description":"com.github.panpf.sketch.request.ImageRequest","location":"sketch-core/com.github.panpf.sketch.request/-image-request/index.html","searchKeys":["ImageRequest","data class ImageRequest(val context: PlatformContext, val uri: Uri, val target: Target?, val listener: Listener?, val progressListener: ProgressListener?, val lifecycleResolver: LifecycleResolver, val definedRequestOptions: RequestOptions, val definedOptions: ImageOptions, val defaultOptions: ImageOptions?, val depthHolder: DepthHolder, val extras: Extras?, val downloadCachePolicy: CachePolicy, val downloadCacheKey: String?, val downloadCacheKeyMapper: CacheKeyMapper?, val colorType: BitmapColorType?, val colorSpace: BitmapColorSpace?, val sizeResolver: SizeResolver, val sizeMultiplier: Float?, val precisionDecider: PrecisionDecider, val scaleDecider: ScaleDecider, val transformations: List<Transformation>?, val resultCachePolicy: CachePolicy, val resultCacheKey: String?, val resultCacheKeyMapper: CacheKeyMapper?, val placeholder: StateImage?, val fallback: StateImage?, val error: StateImage?, val transitionFactory: Transition.Factory?, val resizeOnDraw: Boolean?, val allowNullImage: Boolean?, val memoryCachePolicy: CachePolicy, val memoryCacheKey: String?, val memoryCacheKeyMapper: CacheKeyMapper?, val componentRegistry: ComponentRegistry?) : Key","com.github.panpf.sketch.request.ImageRequest"]},{"name":"data class LongImagePrecisionDecider(val longImage: Precision = Precision.SAME_ASPECT_RATIO, val otherImage: Precision = Precision.LESS_PIXELS, val longImageDecider: LongImageDecider = LongImageDecider()) : PrecisionDecider","description":"com.github.panpf.sketch.resize.LongImagePrecisionDecider","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-precision-decider/index.html","searchKeys":["LongImagePrecisionDecider","data class LongImagePrecisionDecider(val longImage: Precision = Precision.SAME_ASPECT_RATIO, val otherImage: Precision = Precision.LESS_PIXELS, val longImageDecider: LongImageDecider = LongImageDecider()) : PrecisionDecider","com.github.panpf.sketch.resize.LongImagePrecisionDecider"]},{"name":"data class LongImageScaleDecider(val longImage: Scale = START_CROP, val otherImage: Scale = CENTER_CROP, val longImageDecider: LongImageDecider = LongImageDecider()) : ScaleDecider","description":"com.github.panpf.sketch.resize.LongImageScaleDecider","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-scale-decider/index.html","searchKeys":["LongImageScaleDecider","data class LongImageScaleDecider(val longImage: Scale = START_CROP, val otherImage: Scale = CENTER_CROP, val longImageDecider: LongImageDecider = LongImageDecider()) : ScaleDecider","com.github.panpf.sketch.resize.LongImageScaleDecider"]},{"name":"data class MemoryCacheStateImage(val cacheKey: String?, val defaultImage: StateImage? = null) : StateImage","description":"com.github.panpf.sketch.state.MemoryCacheStateImage","location":"sketch-core/com.github.panpf.sketch.state/-memory-cache-state-image/index.html","searchKeys":["MemoryCacheStateImage","data class MemoryCacheStateImage(val cacheKey: String?, val defaultImage: StateImage? = null) : StateImage","com.github.panpf.sketch.state.MemoryCacheStateImage"]},{"name":"data class Options(val directory: Path? = null, val appCacheDirectory: Path? = null, val maxSize: Long? = null, val appVersion: Int? = null)","description":"com.github.panpf.sketch.cache.DiskCache.Options","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-options/index.html","searchKeys":["Options","data class Options(val directory: Path? = null, val appCacheDirectory: Path? = null, val maxSize: Long? = null, val appVersion: Int? = null)","com.github.panpf.sketch.cache.DiskCache.Options"]},{"name":"data class PairListener(val first: Listener, val second: Listener) : Listener","description":"com.github.panpf.sketch.request.internal.PairListener","location":"sketch-core/com.github.panpf.sketch.request.internal/-pair-listener/index.html","searchKeys":["PairListener","data class PairListener(val first: Listener, val second: Listener) : Listener","com.github.panpf.sketch.request.internal.PairListener"]},{"name":"data class PairProgressListener(val first: ProgressListener, val second: ProgressListener) : ProgressListener","description":"com.github.panpf.sketch.request.internal.PairProgressListener","location":"sketch-core/com.github.panpf.sketch.request.internal/-pair-progress-listener/index.html","searchKeys":["PairProgressListener","data class PairProgressListener(val first: ProgressListener, val second: ProgressListener) : ProgressListener","com.github.panpf.sketch.request.internal.PairProgressListener"]},{"name":"data class PlatformColorType(val colorType: ColorType)","description":"com.github.panpf.sketch.decode.PlatformColorType","location":"sketch-core/com.github.panpf.sketch.decode/-platform-color-type/index.html","searchKeys":["PlatformColorType","data class PlatformColorType(val colorType: ColorType)","com.github.panpf.sketch.decode.PlatformColorType"]},{"name":"data class Progress(val totalLength: Long, val completedLength: Long)","description":"com.github.panpf.sketch.request.Progress","location":"sketch-core/com.github.panpf.sketch.request/-progress/index.html","searchKeys":["Progress","data class Progress(val totalLength: Long, val completedLength: Long)","com.github.panpf.sketch.request.Progress"]},{"name":"data class RequestOptions(val listener: Listener?, val progressListener: ProgressListener?, val lifecycleResolver: LifecycleResolver?)","description":"com.github.panpf.sketch.request.internal.RequestOptions","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-options/index.html","searchKeys":["RequestOptions","data class RequestOptions(val listener: Listener?, val progressListener: ProgressListener?, val lifecycleResolver: LifecycleResolver?)","com.github.panpf.sketch.request.internal.RequestOptions"]},{"name":"data class Resize(val size: Size, val precision: Precision, val scale: Scale) : Key","description":"com.github.panpf.sketch.resize.Resize","location":"sketch-core/com.github.panpf.sketch.resize/-resize/index.html","searchKeys":["Resize","data class Resize(val size: Size, val precision: Precision, val scale: Scale) : Key","com.github.panpf.sketch.resize.Resize"]},{"name":"data class ResizeMapping(val srcRect: Rect, val dstRect: Rect)","description":"com.github.panpf.sketch.resize.ResizeMapping","location":"sketch-core/com.github.panpf.sketch.resize/-resize-mapping/index.html","searchKeys":["ResizeMapping","data class ResizeMapping(val srcRect: Rect, val dstRect: Rect)","com.github.panpf.sketch.resize.ResizeMapping"]},{"name":"data class Started(val request: ImageRequest) : LoadState","description":"com.github.panpf.sketch.request.LoadState.Started","location":"sketch-core/com.github.panpf.sketch.request/-load-state/-started/index.html","searchKeys":["Started","data class Started(val request: ImageRequest) : LoadState","com.github.panpf.sketch.request.LoadState.Started"]},{"name":"data class Success(val request: ImageRequest, val image: Image, val cacheKey: String, val memoryCacheKey: String, val resultCacheKey: String, val downloadCacheKey: String, val imageInfo: ImageInfo, val dataFrom: DataFrom, val resize: Resize, val transformeds: List<String>?, val extras: Map<String, String>?) : ImageResult","description":"com.github.panpf.sketch.request.ImageResult.Success","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-success/index.html","searchKeys":["Success","data class Success(val request: ImageRequest, val image: Image, val cacheKey: String, val memoryCacheKey: String, val resultCacheKey: String, val downloadCacheKey: String, val imageInfo: ImageInfo, val dataFrom: DataFrom, val resize: Resize, val transformeds: List<String>?, val extras: Map<String, String>?) : ImageResult","com.github.panpf.sketch.request.ImageResult.Success"]},{"name":"data class Success(val request: ImageRequest, val result: ImageResult.Success) : LoadState","description":"com.github.panpf.sketch.request.LoadState.Success","location":"sketch-core/com.github.panpf.sketch.request/-load-state/-success/index.html","searchKeys":["Success","data class Success(val request: ImageRequest, val result: ImageResult.Success) : LoadState","com.github.panpf.sketch.request.LoadState.Success"]},{"name":"data class ThumbnailMemoryCacheStateImage(val uri: String? = null, val defaultImage: StateImage? = null, val maxMismatchCount: Int = -1) : StateImage","description":"com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage","location":"sketch-core/com.github.panpf.sketch.state/-thumbnail-memory-cache-state-image/index.html","searchKeys":["ThumbnailMemoryCacheStateImage","data class ThumbnailMemoryCacheStateImage(val uri: String? = null, val defaultImage: StateImage? = null, val maxMismatchCount: Int = -1) : StateImage","com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage"]},{"name":"data class TransformResult(val image: Image, val transformed: String)","description":"com.github.panpf.sketch.transform.TransformResult","location":"sketch-core/com.github.panpf.sketch.transform/-transform-result/index.html","searchKeys":["TransformResult","data class TransformResult(val image: Image, val transformed: String)","com.github.panpf.sketch.transform.TransformResult"]},{"name":"data object AndroidLogPipeline","description":"com.github.panpf.sketch.util.AndroidLogPipeline","location":"sketch-core/com.github.panpf.sketch.util/-android-log-pipeline/index.html","searchKeys":["AndroidLogPipeline","data object AndroidLogPipeline","com.github.panpf.sketch.util.AndroidLogPipeline"]},{"name":"data object DefaultCondition : ConditionStateImage.Condition","description":"com.github.panpf.sketch.state.ConditionStateImage.DefaultCondition","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/-default-condition/index.html","searchKeys":["DefaultCondition","data object DefaultCondition : ConditionStateImage.Condition","com.github.panpf.sketch.state.ConditionStateImage.DefaultCondition"]},{"name":"data object EmptyMemoryCache : MemoryCache","description":"com.github.panpf.sketch.cache.internal.EmptyMemoryCache","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-memory-cache/index.html","searchKeys":["EmptyMemoryCache","data object EmptyMemoryCache : MemoryCache","com.github.panpf.sketch.cache.internal.EmptyMemoryCache"]},{"name":"data object GlobalLifecycle : Lifecycle","description":"com.github.panpf.sketch.request.GlobalLifecycle","location":"sketch-core/com.github.panpf.sketch.request/-global-lifecycle/index.html","searchKeys":["GlobalLifecycle","data object GlobalLifecycle : Lifecycle","com.github.panpf.sketch.request.GlobalLifecycle"]},{"name":"data object PrintLogPipeline : Logger.Pipeline","description":"com.github.panpf.sketch.util.PrintLogPipeline","location":"sketch-core/com.github.panpf.sketch.util/-print-log-pipeline/index.html","searchKeys":["PrintLogPipeline","data object PrintLogPipeline : Logger.Pipeline","com.github.panpf.sketch.util.PrintLogPipeline"]},{"name":"enum Base64Spec : Enum<Base64Spec> ","description":"com.github.panpf.sketch.fetch.Base64Spec","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-spec/index.html","searchKeys":["Base64Spec","enum Base64Spec : Enum<Base64Spec> ","com.github.panpf.sketch.fetch.Base64Spec"]},{"name":"enum CachePolicy : Enum<CachePolicy> ","description":"com.github.panpf.sketch.cache.CachePolicy","location":"sketch-core/com.github.panpf.sketch.cache/-cache-policy/index.html","searchKeys":["CachePolicy","enum CachePolicy : Enum<CachePolicy> ","com.github.panpf.sketch.cache.CachePolicy"]},{"name":"enum DataFrom : Enum<DataFrom> ","description":"com.github.panpf.sketch.source.DataFrom","location":"sketch-core/com.github.panpf.sketch.source/-data-from/index.html","searchKeys":["DataFrom","enum DataFrom : Enum<DataFrom> ","com.github.panpf.sketch.source.DataFrom"]},{"name":"enum Depth : Enum<Depth> ","description":"com.github.panpf.sketch.request.Depth","location":"sketch-core/com.github.panpf.sketch.request/-depth/index.html","searchKeys":["Depth","enum Depth : Enum<Depth> ","com.github.panpf.sketch.request.Depth"]},{"name":"enum ImageFormat : Enum<ImageFormat> ","description":"com.github.panpf.sketch.decode.internal.ImageFormat","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/index.html","searchKeys":["ImageFormat","enum ImageFormat : Enum<ImageFormat> ","com.github.panpf.sketch.decode.internal.ImageFormat"]},{"name":"enum Level : Enum<Logger.Level> ","description":"com.github.panpf.sketch.util.Logger.Level","location":"sketch-core/com.github.panpf.sketch.util/-logger/-level/index.html","searchKeys":["Level","enum Level : Enum<Logger.Level> ","com.github.panpf.sketch.util.Logger.Level"]},{"name":"enum Precision : Enum<Precision> ","description":"com.github.panpf.sketch.resize.Precision","location":"sketch-core/com.github.panpf.sketch.resize/-precision/index.html","searchKeys":["Precision","enum Precision : Enum<Precision> ","com.github.panpf.sketch.resize.Precision"]},{"name":"enum Scale : Enum<Scale> ","description":"com.github.panpf.sketch.resize.Scale","location":"sketch-core/com.github.panpf.sketch.resize/-scale/index.html","searchKeys":["Scale","enum Scale : Enum<Scale> ","com.github.panpf.sketch.resize.Scale"]},{"name":"expect abstract class PlatformContext","description":"com.github.panpf.sketch.PlatformContext","location":"sketch-core/com.github.panpf.sketch/-platform-context/index.html","searchKeys":["PlatformContext","expect abstract class PlatformContext","com.github.panpf.sketch.PlatformContext"]},{"name":"expect abstract fun factory(context: PlatformContext): Decoder.Factory?","description":"com.github.panpf.sketch.util.DecoderProvider.factory","location":"sketch-core/com.github.panpf.sketch.util/-decoder-provider/factory.html","searchKeys":["factory","expect abstract fun factory(context: PlatformContext): Decoder.Factory?","com.github.panpf.sketch.util.DecoderProvider.factory"]},{"name":"expect abstract fun factory(context: PlatformContext): Fetcher.Factory?","description":"com.github.panpf.sketch.util.FetcherProvider.factory","location":"sketch-core/com.github.panpf.sketch.util/-fetcher-provider/factory.html","searchKeys":["factory","expect abstract fun factory(context: PlatformContext): Fetcher.Factory?","com.github.panpf.sketch.util.FetcherProvider.factory"]},{"name":"expect class Bitmap","description":"com.github.panpf.sketch.Bitmap","location":"sketch-core/com.github.panpf.sketch/-bitmap/index.html","searchKeys":["Bitmap","expect class Bitmap","com.github.panpf.sketch.Bitmap"]},{"name":"expect class BitmapImage : Image","description":"com.github.panpf.sketch.BitmapImage","location":"sketch-core/com.github.panpf.sketch/-bitmap-image/index.html","searchKeys":["BitmapImage","expect class BitmapImage : Image","com.github.panpf.sketch.BitmapImage"]},{"name":"expect class DecodeConfig","description":"com.github.panpf.sketch.decode.DecodeConfig","location":"sketch-core/com.github.panpf.sketch.decode/-decode-config/index.html","searchKeys":["DecodeConfig","expect class DecodeConfig","com.github.panpf.sketch.decode.DecodeConfig"]},{"name":"expect class FixedColorSpace(value: String) : BitmapColorSpace","description":"com.github.panpf.sketch.decode.FixedColorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-space/index.html","searchKeys":["FixedColorSpace","expect class FixedColorSpace(value: String) : BitmapColorSpace","com.github.panpf.sketch.decode.FixedColorSpace"]},{"name":"expect class FixedColorType(value: String) : BitmapColorType","description":"com.github.panpf.sketch.decode.FixedColorType","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-type/index.html","searchKeys":["FixedColorType","expect class FixedColorType(value: String) : BitmapColorType","com.github.panpf.sketch.decode.FixedColorType"]},{"name":"expect class PlatformColorSpace","description":"com.github.panpf.sketch.decode.PlatformColorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-platform-color-space/index.html","searchKeys":["PlatformColorSpace","expect class PlatformColorSpace","com.github.panpf.sketch.decode.PlatformColorSpace"]},{"name":"expect constructor(value: String)","description":"com.github.panpf.sketch.decode.FixedColorSpace.FixedColorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-space/-fixed-color-space.html","searchKeys":["FixedColorSpace","expect constructor(value: String)","com.github.panpf.sketch.decode.FixedColorSpace.FixedColorSpace"]},{"name":"expect constructor(value: String)","description":"com.github.panpf.sketch.decode.FixedColorType.FixedColorType","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-type/-fixed-color-type.html","searchKeys":["FixedColorType","expect constructor(value: String)","com.github.panpf.sketch.decode.FixedColorType.FixedColorType"]},{"name":"expect enum ColorType : Enum<ColorType> ","description":"com.github.panpf.sketch.ColorType","location":"sketch-core/com.github.panpf.sketch/-color-type/index.html","searchKeys":["ColorType","expect enum ColorType : Enum<ColorType> ","com.github.panpf.sketch.ColorType"]},{"name":"expect fun Bitmap.asImage(shareable: Boolean = true): BitmapImage","description":"com.github.panpf.sketch.asImage","location":"sketch-core/com.github.panpf.sketch/as-image.html","searchKeys":["asImage","expect fun Bitmap.asImage(shareable: Boolean = true): BitmapImage","com.github.panpf.sketch.asImage"]},{"name":"expect fun Bitmap.background(color: Int): Bitmap","description":"com.github.panpf.sketch.util.background","location":"sketch-core/com.github.panpf.sketch.util/background.html","searchKeys":["background","expect fun Bitmap.background(color: Int): Bitmap","com.github.panpf.sketch.util.background"]},{"name":"expect fun Bitmap.blur(radius: Int, firstReuseSelf: Boolean = false): Bitmap","description":"com.github.panpf.sketch.util.blur","location":"sketch-core/com.github.panpf.sketch.util/blur.html","searchKeys":["blur","expect fun Bitmap.blur(radius: Int, firstReuseSelf: Boolean = false): Bitmap","com.github.panpf.sketch.util.blur"]},{"name":"expect fun Bitmap.circleCrop(scale: Scale): Bitmap","description":"com.github.panpf.sketch.util.circleCrop","location":"sketch-core/com.github.panpf.sketch.util/circle-crop.html","searchKeys":["circleCrop","expect fun Bitmap.circleCrop(scale: Scale): Bitmap","com.github.panpf.sketch.util.circleCrop"]},{"name":"expect fun Bitmap.copyPixelsFrom(fromBitmap: Bitmap)","description":"com.github.panpf.sketch.util.copyPixelsFrom","location":"sketch-core/com.github.panpf.sketch.util/copy-pixels-from.html","searchKeys":["copyPixelsFrom","expect fun Bitmap.copyPixelsFrom(fromBitmap: Bitmap)","com.github.panpf.sketch.util.copyPixelsFrom"]},{"name":"expect fun Bitmap.erase(color: Int)","description":"com.github.panpf.sketch.util.erase","location":"sketch-core/com.github.panpf.sketch.util/erase.html","searchKeys":["erase","expect fun Bitmap.erase(color: Int)","com.github.panpf.sketch.util.erase"]},{"name":"expect fun Bitmap.flip(horizontal: Boolean): Bitmap","description":"com.github.panpf.sketch.util.flip","location":"sketch-core/com.github.panpf.sketch.util/flip.html","searchKeys":["flip","expect fun Bitmap.flip(horizontal: Boolean): Bitmap","com.github.panpf.sketch.util.flip"]},{"name":"expect fun Bitmap.hasAlphaPixels(): Boolean","description":"com.github.panpf.sketch.util.hasAlphaPixels","location":"sketch-core/com.github.panpf.sketch.util/has-alpha-pixels.html","searchKeys":["hasAlphaPixels","expect fun Bitmap.hasAlphaPixels(): Boolean","com.github.panpf.sketch.util.hasAlphaPixels"]},{"name":"expect fun Bitmap.installIntPixels(intPixels: IntArray)","description":"com.github.panpf.sketch.util.installIntPixels","location":"sketch-core/com.github.panpf.sketch.util/install-int-pixels.html","searchKeys":["installIntPixels","expect fun Bitmap.installIntPixels(intPixels: IntArray)","com.github.panpf.sketch.util.installIntPixels"]},{"name":"expect fun Bitmap.installPixels(pixels: ByteArray)","description":"com.github.panpf.sketch.util.installPixels","location":"sketch-core/com.github.panpf.sketch.util/install-pixels.html","searchKeys":["installPixels","expect fun Bitmap.installPixels(pixels: ByteArray)","com.github.panpf.sketch.util.installPixels"]},{"name":"expect fun Bitmap.mapping(mapping: ResizeMapping): Bitmap","description":"com.github.panpf.sketch.util.mapping","location":"sketch-core/com.github.panpf.sketch.util/mapping.html","searchKeys":["mapping","expect fun Bitmap.mapping(mapping: ResizeMapping): Bitmap","com.github.panpf.sketch.util.mapping"]},{"name":"expect fun Bitmap.mask(maskColor: Int, firstReuseSelf: Boolean = false): Bitmap","description":"com.github.panpf.sketch.util.mask","location":"sketch-core/com.github.panpf.sketch.util/mask.html","searchKeys":["mask","expect fun Bitmap.mask(maskColor: Int, firstReuseSelf: Boolean = false): Bitmap","com.github.panpf.sketch.util.mask"]},{"name":"expect fun Bitmap.mutableCopy(): Bitmap","description":"com.github.panpf.sketch.util.mutableCopy","location":"sketch-core/com.github.panpf.sketch.util/mutable-copy.html","searchKeys":["mutableCopy","expect fun Bitmap.mutableCopy(): Bitmap","com.github.panpf.sketch.util.mutableCopy"]},{"name":"expect fun Bitmap.mutableCopyOrSelf(): Bitmap","description":"com.github.panpf.sketch.util.mutableCopyOrSelf","location":"sketch-core/com.github.panpf.sketch.util/mutable-copy-or-self.html","searchKeys":["mutableCopyOrSelf","expect fun Bitmap.mutableCopyOrSelf(): Bitmap","com.github.panpf.sketch.util.mutableCopyOrSelf"]},{"name":"expect fun Bitmap.readIntPixel(x: Int, y: Int): Int","description":"com.github.panpf.sketch.util.readIntPixel","location":"sketch-core/com.github.panpf.sketch.util/read-int-pixel.html","searchKeys":["readIntPixel","expect fun Bitmap.readIntPixel(x: Int, y: Int): Int","com.github.panpf.sketch.util.readIntPixel"]},{"name":"expect fun Bitmap.readIntPixels(x: Int = 0, y: Int = 0, width: Int = this.width, height: Int = this.height): IntArray","description":"com.github.panpf.sketch.util.readIntPixels","location":"sketch-core/com.github.panpf.sketch.util/read-int-pixels.html","searchKeys":["readIntPixels","expect fun Bitmap.readIntPixels(x: Int = 0, y: Int = 0, width: Int = this.width, height: Int = this.height): IntArray","com.github.panpf.sketch.util.readIntPixels"]},{"name":"expect fun Bitmap.readPixels(): ByteArray?","description":"com.github.panpf.sketch.util.readPixels","location":"sketch-core/com.github.panpf.sketch.util/read-pixels.html","searchKeys":["readPixels","expect fun Bitmap.readPixels(): ByteArray?","com.github.panpf.sketch.util.readPixels"]},{"name":"expect fun Bitmap.rotate(angle: Int): Bitmap","description":"com.github.panpf.sketch.util.rotate","location":"sketch-core/com.github.panpf.sketch.util/rotate.html","searchKeys":["rotate","expect fun Bitmap.rotate(angle: Int): Bitmap","com.github.panpf.sketch.util.rotate"]},{"name":"expect fun Bitmap.roundedCorners(radiusArray: FloatArray): Bitmap","description":"com.github.panpf.sketch.util.roundedCorners","location":"sketch-core/com.github.panpf.sketch.util/rounded-corners.html","searchKeys":["roundedCorners","expect fun Bitmap.roundedCorners(radiusArray: FloatArray): Bitmap","com.github.panpf.sketch.util.roundedCorners"]},{"name":"expect fun Bitmap.scale(scaleFactor: Float): Bitmap","description":"com.github.panpf.sketch.util.scale","location":"sketch-core/com.github.panpf.sketch.util/scale.html","searchKeys":["scale","expect fun Bitmap.scale(scaleFactor: Float): Bitmap","com.github.panpf.sketch.util.scale"]},{"name":"expect fun Bitmap.thumbnail(width: Int, height: Int): Bitmap","description":"com.github.panpf.sketch.util.thumbnail","location":"sketch-core/com.github.panpf.sketch.util/thumbnail.html","searchKeys":["thumbnail","expect fun Bitmap.thumbnail(width: Int, height: Int): Bitmap","com.github.panpf.sketch.util.thumbnail"]},{"name":"expect fun DataSource.readImageInfo(): ImageInfo","description":"com.github.panpf.sketch.decode.internal.readImageInfo","location":"sketch-core/com.github.panpf.sketch.decode.internal/read-image-info.html","searchKeys":["readImageInfo","expect fun DataSource.readImageInfo(): ImageInfo","com.github.panpf.sketch.decode.internal.readImageInfo"]},{"name":"expect fun DataSource.readImageInfoWithIgnoreExifOrientation(): ImageInfo","description":"com.github.panpf.sketch.decode.internal.readImageInfoWithIgnoreExifOrientation","location":"sketch-core/com.github.panpf.sketch.decode.internal/read-image-info-with-ignore-exif-orientation.html","searchKeys":["readImageInfoWithIgnoreExifOrientation","expect fun DataSource.readImageInfoWithIgnoreExifOrientation(): ImageInfo","com.github.panpf.sketch.decode.internal.readImageInfoWithIgnoreExifOrientation"]},{"name":"expect fun DecodeConfig(request: ImageRequest, mimeType: String? = null, isOpaque: Boolean = false): DecodeConfig","description":"com.github.panpf.sketch.decode.DecodeConfig","location":"sketch-core/com.github.panpf.sketch.decode/-decode-config.html","searchKeys":["DecodeConfig","expect fun DecodeConfig(request: ImageRequest, mimeType: String? = null, isOpaque: Boolean = false): DecodeConfig","com.github.panpf.sketch.decode.DecodeConfig"]},{"name":"expect fun PlatformContext.appCacheDirectory(): Path?","description":"com.github.panpf.sketch.util.appCacheDirectory","location":"sketch-core/com.github.panpf.sketch.util/app-cache-directory.html","searchKeys":["appCacheDirectory","expect fun PlatformContext.appCacheDirectory(): Path?","com.github.panpf.sketch.util.appCacheDirectory"]},{"name":"expect fun PlatformContext.maxMemory(): Long","description":"com.github.panpf.sketch.util.maxMemory","location":"sketch-core/com.github.panpf.sketch.util/max-memory.html","searchKeys":["maxMemory","expect fun PlatformContext.maxMemory(): Long","com.github.panpf.sketch.util.maxMemory"]},{"name":"expect fun PlatformContext.screenSize(): Size","description":"com.github.panpf.sketch.util.screenSize","location":"sketch-core/com.github.panpf.sketch.util/screen-size.html","searchKeys":["screenSize","expect fun PlatformContext.screenSize(): Size","com.github.panpf.sketch.util.screenSize"]},{"name":"expect fun calculateSampledBitmapSize(imageSize: Size, sampleSize: Int, mimeType: String? = null): Size","description":"com.github.panpf.sketch.decode.internal.calculateSampledBitmapSize","location":"sketch-core/com.github.panpf.sketch.decode.internal/calculate-sampled-bitmap-size.html","searchKeys":["calculateSampledBitmapSize","expect fun calculateSampledBitmapSize(imageSize: Size, sampleSize: Int, mimeType: String? = null): Size","com.github.panpf.sketch.decode.internal.calculateSampledBitmapSize"]},{"name":"expect fun calculateSampledBitmapSizeForRegion(regionSize: Size, sampleSize: Int, mimeType: String? = null, imageSize: Size? = null): Size","description":"com.github.panpf.sketch.decode.internal.calculateSampledBitmapSizeForRegion","location":"sketch-core/com.github.panpf.sketch.decode.internal/calculate-sampled-bitmap-size-for-region.html","searchKeys":["calculateSampledBitmapSizeForRegion","expect fun calculateSampledBitmapSizeForRegion(regionSize: Size, sampleSize: Int, mimeType: String? = null, imageSize: Size? = null): Size","com.github.panpf.sketch.decode.internal.calculateSampledBitmapSizeForRegion"]},{"name":"expect fun checkDiskCacheDirectory(context: PlatformContext, directory: Path): Path","description":"com.github.panpf.sketch.cache.internal.checkDiskCacheDirectory","location":"sketch-core/com.github.panpf.sketch.cache.internal/check-disk-cache-directory.html","searchKeys":["checkDiskCacheDirectory","expect fun checkDiskCacheDirectory(context: PlatformContext, directory: Path): Path","com.github.panpf.sketch.cache.internal.checkDiskCacheDirectory"]},{"name":"expect fun checkPlatformContext(context: PlatformContext)","description":"com.github.panpf.sketch.checkPlatformContext","location":"sketch-core/com.github.panpf.sketch/check-platform-context.html","searchKeys":["checkPlatformContext","expect fun checkPlatformContext(context: PlatformContext)","com.github.panpf.sketch.checkPlatformContext"]},{"name":"expect fun createImageSerializer(): ImageSerializer","description":"com.github.panpf.sketch.cache.createImageSerializer","location":"sketch-core/com.github.panpf.sketch.cache/create-image-serializer.html","searchKeys":["createImageSerializer","expect fun createImageSerializer(): ImageSerializer","com.github.panpf.sketch.cache.createImageSerializer"]},{"name":"expect fun getMaxBitmapSize(): Size?","description":"com.github.panpf.sketch.decode.internal.getMaxBitmapSize","location":"sketch-core/com.github.panpf.sketch.decode.internal/get-max-bitmap-size.html","searchKeys":["getMaxBitmapSize","expect fun getMaxBitmapSize(): Size?","com.github.panpf.sketch.decode.internal.getMaxBitmapSize"]},{"name":"expect fun ioCoroutineDispatcher(): CoroutineDispatcher","description":"com.github.panpf.sketch.util.ioCoroutineDispatcher","location":"sketch-core/com.github.panpf.sketch.util/io-coroutine-dispatcher.html","searchKeys":["ioCoroutineDispatcher","expect fun ioCoroutineDispatcher(): CoroutineDispatcher","com.github.panpf.sketch.util.ioCoroutineDispatcher"]},{"name":"expect fun register(decoder: DecoderProvider)","description":"com.github.panpf.sketch.util.ComponentLoader.register","location":"sketch-core/com.github.panpf.sketch.util/-component-loader/register.html","searchKeys":["register","expect fun register(decoder: DecoderProvider)","com.github.panpf.sketch.util.ComponentLoader.register"]},{"name":"expect fun register(fetcher: FetcherProvider)","description":"com.github.panpf.sketch.util.ComponentLoader.register","location":"sketch-core/com.github.panpf.sketch.util/-component-loader/register.html","searchKeys":["register","expect fun register(fetcher: FetcherProvider)","com.github.panpf.sketch.util.ComponentLoader.register"]},{"name":"expect fun requiredWorkThread()","description":"com.github.panpf.sketch.util.requiredWorkThread","location":"sketch-core/com.github.panpf.sketch.util/required-work-thread.html","searchKeys":["requiredWorkThread","expect fun requiredWorkThread()","com.github.panpf.sketch.util.requiredWorkThread"]},{"name":"expect interface DecoderProvider","description":"com.github.panpf.sketch.util.DecoderProvider","location":"sketch-core/com.github.panpf.sketch.util/-decoder-provider/index.html","searchKeys":["DecoderProvider","expect interface DecoderProvider","com.github.panpf.sketch.util.DecoderProvider"]},{"name":"expect interface FetcherProvider","description":"com.github.panpf.sketch.util.FetcherProvider","location":"sketch-core/com.github.panpf.sketch.util/-fetcher-provider/index.html","searchKeys":["FetcherProvider","expect interface FetcherProvider","com.github.panpf.sketch.util.FetcherProvider"]},{"name":"expect object ComponentLoader","description":"com.github.panpf.sketch.util.ComponentLoader","location":"sketch-core/com.github.panpf.sketch.util/-component-loader/index.html","searchKeys":["ComponentLoader","expect object ComponentLoader","com.github.panpf.sketch.util.ComponentLoader"]},{"name":"expect object HighQualityColorType : BitmapColorType","description":"com.github.panpf.sketch.decode.HighQualityColorType","location":"sketch-core/com.github.panpf.sketch.decode/-high-quality-color-type/index.html","searchKeys":["HighQualityColorType","expect object HighQualityColorType : BitmapColorType","com.github.panpf.sketch.decode.HighQualityColorType"]},{"name":"expect object LowQualityColorType : BitmapColorType","description":"com.github.panpf.sketch.decode.LowQualityColorType","location":"sketch-core/com.github.panpf.sketch.decode/-low-quality-color-type/index.html","searchKeys":["LowQualityColorType","expect object LowQualityColorType : BitmapColorType","com.github.panpf.sketch.decode.LowQualityColorType"]},{"name":"expect open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.BitmapImage.equals","location":"sketch-core/com.github.panpf.sketch/-bitmap-image/equals.html","searchKeys":["equals","expect open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.BitmapImage.equals"]},{"name":"expect open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.FixedColorSpace.equals","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-space/equals.html","searchKeys":["equals","expect open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.FixedColorSpace.equals"]},{"name":"expect open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.FixedColorType.equals","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-type/equals.html","searchKeys":["equals","expect open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.FixedColorType.equals"]},{"name":"expect open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.HighQualityColorType.equals","location":"sketch-core/com.github.panpf.sketch.decode/-high-quality-color-type/equals.html","searchKeys":["equals","expect open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.HighQualityColorType.equals"]},{"name":"expect open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.LowQualityColorType.equals","location":"sketch-core/com.github.panpf.sketch.decode/-low-quality-color-type/equals.html","searchKeys":["equals","expect open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.LowQualityColorType.equals"]},{"name":"expect open override fun checkValid(): Boolean","description":"com.github.panpf.sketch.BitmapImage.checkValid","location":"sketch-core/com.github.panpf.sketch/-bitmap-image/check-valid.html","searchKeys":["checkValid","expect open override fun checkValid(): Boolean","com.github.panpf.sketch.BitmapImage.checkValid"]},{"name":"expect open override fun getColorSpace(mimeType: String?, isOpaque: Boolean): PlatformColorSpace?","description":"com.github.panpf.sketch.decode.FixedColorSpace.getColorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-space/get-color-space.html","searchKeys":["getColorSpace","expect open override fun getColorSpace(mimeType: String?, isOpaque: Boolean): PlatformColorSpace?","com.github.panpf.sketch.decode.FixedColorSpace.getColorSpace"]},{"name":"expect open override fun getColorType(mimeType: String?, isOpaque: Boolean): PlatformColorType?","description":"com.github.panpf.sketch.decode.FixedColorType.getColorType","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-type/get-color-type.html","searchKeys":["getColorType","expect open override fun getColorType(mimeType: String?, isOpaque: Boolean): PlatformColorType?","com.github.panpf.sketch.decode.FixedColorType.getColorType"]},{"name":"expect open override fun getColorType(mimeType: String?, isOpaque: Boolean): PlatformColorType?","description":"com.github.panpf.sketch.decode.HighQualityColorType.getColorType","location":"sketch-core/com.github.panpf.sketch.decode/-high-quality-color-type/get-color-type.html","searchKeys":["getColorType","expect open override fun getColorType(mimeType: String?, isOpaque: Boolean): PlatformColorType?","com.github.panpf.sketch.decode.HighQualityColorType.getColorType"]},{"name":"expect open override fun getColorType(mimeType: String?, isOpaque: Boolean): PlatformColorType?","description":"com.github.panpf.sketch.decode.LowQualityColorType.getColorType","location":"sketch-core/com.github.panpf.sketch.decode/-low-quality-color-type/get-color-type.html","searchKeys":["getColorType","expect open override fun getColorType(mimeType: String?, isOpaque: Boolean): PlatformColorType?","com.github.panpf.sketch.decode.LowQualityColorType.getColorType"]},{"name":"expect open override fun hashCode(): Int","description":"com.github.panpf.sketch.BitmapImage.hashCode","location":"sketch-core/com.github.panpf.sketch/-bitmap-image/hash-code.html","searchKeys":["hashCode","expect open override fun hashCode(): Int","com.github.panpf.sketch.BitmapImage.hashCode"]},{"name":"expect open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.FixedColorSpace.hashCode","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-space/hash-code.html","searchKeys":["hashCode","expect open override fun hashCode(): Int","com.github.panpf.sketch.decode.FixedColorSpace.hashCode"]},{"name":"expect open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.FixedColorType.hashCode","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-type/hash-code.html","searchKeys":["hashCode","expect open override fun hashCode(): Int","com.github.panpf.sketch.decode.FixedColorType.hashCode"]},{"name":"expect open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.HighQualityColorType.hashCode","location":"sketch-core/com.github.panpf.sketch.decode/-high-quality-color-type/hash-code.html","searchKeys":["hashCode","expect open override fun hashCode(): Int","com.github.panpf.sketch.decode.HighQualityColorType.hashCode"]},{"name":"expect open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.LowQualityColorType.hashCode","location":"sketch-core/com.github.panpf.sketch.decode/-low-quality-color-type/hash-code.html","searchKeys":["hashCode","expect open override fun hashCode(): Int","com.github.panpf.sketch.decode.LowQualityColorType.hashCode"]},{"name":"expect open override fun toString(): String","description":"com.github.panpf.sketch.BitmapImage.toString","location":"sketch-core/com.github.panpf.sketch/-bitmap-image/to-string.html","searchKeys":["toString","expect open override fun toString(): String","com.github.panpf.sketch.BitmapImage.toString"]},{"name":"expect open override fun toString(): String","description":"com.github.panpf.sketch.decode.FixedColorSpace.toString","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-space/to-string.html","searchKeys":["toString","expect open override fun toString(): String","com.github.panpf.sketch.decode.FixedColorSpace.toString"]},{"name":"expect open override fun toString(): String","description":"com.github.panpf.sketch.decode.FixedColorType.toString","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-type/to-string.html","searchKeys":["toString","expect open override fun toString(): String","com.github.panpf.sketch.decode.FixedColorType.toString"]},{"name":"expect open override fun toString(): String","description":"com.github.panpf.sketch.decode.HighQualityColorType.toString","location":"sketch-core/com.github.panpf.sketch.decode/-high-quality-color-type/to-string.html","searchKeys":["toString","expect open override fun toString(): String","com.github.panpf.sketch.decode.HighQualityColorType.toString"]},{"name":"expect open override fun toString(): String","description":"com.github.panpf.sketch.decode.LowQualityColorType.toString","location":"sketch-core/com.github.panpf.sketch.decode/-low-quality-color-type/to-string.html","searchKeys":["toString","expect open override fun toString(): String","com.github.panpf.sketch.decode.LowQualityColorType.toString"]},{"name":"expect open override val byteCount: Long","description":"com.github.panpf.sketch.BitmapImage.byteCount","location":"sketch-core/com.github.panpf.sketch/-bitmap-image/byte-count.html","searchKeys":["byteCount","expect open override val byteCount: Long","com.github.panpf.sketch.BitmapImage.byteCount"]},{"name":"expect open override val height: Int","description":"com.github.panpf.sketch.BitmapImage.height","location":"sketch-core/com.github.panpf.sketch/-bitmap-image/height.html","searchKeys":["height","expect open override val height: Int","com.github.panpf.sketch.BitmapImage.height"]},{"name":"expect open override val key: String","description":"com.github.panpf.sketch.decode.FixedColorSpace.key","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-space/key.html","searchKeys":["key","expect open override val key: String","com.github.panpf.sketch.decode.FixedColorSpace.key"]},{"name":"expect open override val key: String","description":"com.github.panpf.sketch.decode.FixedColorType.key","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-type/key.html","searchKeys":["key","expect open override val key: String","com.github.panpf.sketch.decode.FixedColorType.key"]},{"name":"expect open override val key: String","description":"com.github.panpf.sketch.decode.HighQualityColorType.key","location":"sketch-core/com.github.panpf.sketch.decode/-high-quality-color-type/key.html","searchKeys":["key","expect open override val key: String","com.github.panpf.sketch.decode.HighQualityColorType.key"]},{"name":"expect open override val key: String","description":"com.github.panpf.sketch.decode.LowQualityColorType.key","location":"sketch-core/com.github.panpf.sketch.decode/-low-quality-color-type/key.html","searchKeys":["key","expect open override val key: String","com.github.panpf.sketch.decode.LowQualityColorType.key"]},{"name":"expect open override val shareable: Boolean","description":"com.github.panpf.sketch.BitmapImage.shareable","location":"sketch-core/com.github.panpf.sketch/-bitmap-image/shareable.html","searchKeys":["shareable","expect open override val shareable: Boolean","com.github.panpf.sketch.BitmapImage.shareable"]},{"name":"expect open override val width: Int","description":"com.github.panpf.sketch.BitmapImage.width","location":"sketch-core/com.github.panpf.sketch/-bitmap-image/width.html","searchKeys":["width","expect open override val width: Int","com.github.panpf.sketch.BitmapImage.width"]},{"name":"expect val Bitmap.byteCount: Long","description":"com.github.panpf.sketch.byteCount","location":"sketch-core/com.github.panpf.sketch/byte-count.html","searchKeys":["byteCount","expect val Bitmap.byteCount: Long","com.github.panpf.sketch.byteCount"]},{"name":"expect val Bitmap.height: Int","description":"com.github.panpf.sketch.height","location":"sketch-core/com.github.panpf.sketch/height.html","searchKeys":["height","expect val Bitmap.height: Int","com.github.panpf.sketch.height"]},{"name":"expect val Bitmap.isImmutable: Boolean","description":"com.github.panpf.sketch.isImmutable","location":"sketch-core/com.github.panpf.sketch/is-immutable.html","searchKeys":["isImmutable","expect val Bitmap.isImmutable: Boolean","com.github.panpf.sketch.isImmutable"]},{"name":"expect val Bitmap.isMutable: Boolean","description":"com.github.panpf.sketch.isMutable","location":"sketch-core/com.github.panpf.sketch/is-mutable.html","searchKeys":["isMutable","expect val Bitmap.isMutable: Boolean","com.github.panpf.sketch.isMutable"]},{"name":"expect val Bitmap.width: Int","description":"com.github.panpf.sketch.width","location":"sketch-core/com.github.panpf.sketch/width.html","searchKeys":["width","expect val Bitmap.width: Int","com.github.panpf.sketch.width"]},{"name":"expect val PlatformContext.application: PlatformContext","description":"com.github.panpf.sketch.util.application","location":"sketch-core/com.github.panpf.sketch.util/application.html","searchKeys":["application","expect val PlatformContext.application: PlatformContext","com.github.panpf.sketch.util.application"]},{"name":"expect val bitmap: Bitmap","description":"com.github.panpf.sketch.BitmapImage.bitmap","location":"sketch-core/com.github.panpf.sketch/-bitmap-image/bitmap.html","searchKeys":["bitmap","expect val bitmap: Bitmap","com.github.panpf.sketch.BitmapImage.bitmap"]},{"name":"expect val decoders: List<DecoderProvider>","description":"com.github.panpf.sketch.util.ComponentLoader.decoders","location":"sketch-core/com.github.panpf.sketch.util/-component-loader/decoders.html","searchKeys":["decoders","expect val decoders: List<DecoderProvider>","com.github.panpf.sketch.util.ComponentLoader.decoders"]},{"name":"expect val fetchers: List<FetcherProvider>","description":"com.github.panpf.sketch.util.ComponentLoader.fetchers","location":"sketch-core/com.github.panpf.sketch.util/-component-loader/fetchers.html","searchKeys":["fetchers","expect val fetchers: List<FetcherProvider>","com.github.panpf.sketch.util.ComponentLoader.fetchers"]},{"name":"fun <Error class: unknown class>.addState(condition: <Error class: unknown class>, color: IntColorFetcher): <Error class: unknown class>","description":"com.github.panpf.sketch.state.addState","location":"sketch-core/com.github.panpf.sketch.state/add-state.html","searchKeys":["addState","fun <Error class: unknown class>.addState(condition: <Error class: unknown class>, color: IntColorFetcher): <Error class: unknown class>","com.github.panpf.sketch.state.addState"]},{"name":"fun <Error class: unknown class>.addState(condition: <Error class: unknown class>, color: ResColorFetcher): <Error class: unknown class>","description":"com.github.panpf.sketch.state.addState","location":"sketch-core/com.github.panpf.sketch.state/add-state.html","searchKeys":["addState","fun <Error class: unknown class>.addState(condition: <Error class: unknown class>, color: ResColorFetcher): <Error class: unknown class>","com.github.panpf.sketch.state.addState"]},{"name":"fun <Error class: unknown class>.addState(condition: <Error class: unknown class>, drawable: EquitableDrawable): <Error class: unknown class>","description":"com.github.panpf.sketch.state.addState","location":"sketch-core/com.github.panpf.sketch.state/add-state.html","searchKeys":["addState","fun <Error class: unknown class>.addState(condition: <Error class: unknown class>, drawable: EquitableDrawable): <Error class: unknown class>","com.github.panpf.sketch.state.addState"]},{"name":"fun <Error class: unknown class>.addState(condition: <Error class: unknown class>, resId: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.state.addState","location":"sketch-core/com.github.panpf.sketch.state/add-state.html","searchKeys":["addState","fun <Error class: unknown class>.addState(condition: <Error class: unknown class>, resId: Int): <Error class: unknown class>","com.github.panpf.sketch.state.addState"]},{"name":"fun <Error class: unknown class>.asDrawable(resources: Resources = Resources.getSystem()): Drawable","description":"com.github.panpf.sketch.asDrawable","location":"sketch-core/com.github.panpf.sketch/as-drawable.html","searchKeys":["asDrawable","fun <Error class: unknown class>.asDrawable(resources: Resources = Resources.getSystem()): Drawable","com.github.panpf.sketch.asDrawable"]},{"name":"fun <Error class: unknown class>.asDrawableOrNull(resources: Resources = Resources.getSystem()): Drawable?","description":"com.github.panpf.sketch.asDrawableOrNull","location":"sketch-core/com.github.panpf.sketch/as-drawable-or-null.html","searchKeys":["asDrawableOrNull","fun <Error class: unknown class>.asDrawableOrNull(resources: Resources = Resources.getSystem()): Drawable?","com.github.panpf.sketch.asDrawableOrNull"]},{"name":"fun <Error class: unknown class>.colorSpace(colorSpace: ColorSpace.Named?): <Error class: unknown class>","description":"com.github.panpf.sketch.request.colorSpace","location":"sketch-core/com.github.panpf.sketch.request/color-space.html","searchKeys":["colorSpace","fun <Error class: unknown class>.colorSpace(colorSpace: ColorSpace.Named?): <Error class: unknown class>","com.github.panpf.sketch.request.colorSpace"]},{"name":"fun <Error class: unknown class>.colorSpace(colorSpace: ColorSpace.Named?): <Error class: unknown class>","description":"com.github.panpf.sketch.request.colorSpace","location":"sketch-core/com.github.panpf.sketch.request/color-space.html","searchKeys":["colorSpace","fun <Error class: unknown class>.colorSpace(colorSpace: ColorSpace.Named?): <Error class: unknown class>","com.github.panpf.sketch.request.colorSpace"]},{"name":"fun <Error class: unknown class>.colorType(colorType: ColorType?): <Error class: unknown class>","description":"com.github.panpf.sketch.request.colorType","location":"sketch-core/com.github.panpf.sketch.request/color-type.html","searchKeys":["colorType","fun <Error class: unknown class>.colorType(colorType: ColorType?): <Error class: unknown class>","com.github.panpf.sketch.request.colorType"]},{"name":"fun <Error class: unknown class>.colorType(colorType: ColorType?): <Error class: unknown class>","description":"com.github.panpf.sketch.request.colorType","location":"sketch-core/com.github.panpf.sketch.request/color-type.html","searchKeys":["colorType","fun <Error class: unknown class>.colorType(colorType: ColorType?): <Error class: unknown class>","com.github.panpf.sketch.request.colorType"]},{"name":"fun <Error class: unknown class>.decode(config: DecodeConfig? = null, exifOrientationHelper: ExifOrientationHelper? = null): Bitmap","description":"com.github.panpf.sketch.decode.internal.decode","location":"sketch-core/com.github.panpf.sketch.decode.internal/decode.html","searchKeys":["decode","fun <Error class: unknown class>.decode(config: DecodeConfig? = null, exifOrientationHelper: ExifOrientationHelper? = null): Bitmap","com.github.panpf.sketch.decode.internal.decode"]},{"name":"fun <Error class: unknown class>.decodeRegion(srcRect: <Error class: unknown class>, config: DecodeConfig? = null, imageSize: <Error class: unknown class>? = null, exifOrientationHelper: ExifOrientationHelper? = null): Bitmap","description":"com.github.panpf.sketch.decode.internal.decodeRegion","location":"sketch-core/com.github.panpf.sketch.decode.internal/decode-region.html","searchKeys":["decodeRegion","fun <Error class: unknown class>.decodeRegion(srcRect: <Error class: unknown class>, config: DecodeConfig? = null, imageSize: <Error class: unknown class>? = null, exifOrientationHelper: ExifOrientationHelper? = null): Bitmap","com.github.panpf.sketch.decode.internal.decodeRegion"]},{"name":"fun <Error class: unknown class>.error(color: IntColorFetcher): <Error class: unknown class>","description":"com.github.panpf.sketch.request.error","location":"sketch-core/com.github.panpf.sketch.request/error.html","searchKeys":["error","fun <Error class: unknown class>.error(color: IntColorFetcher): <Error class: unknown class>","com.github.panpf.sketch.request.error"]},{"name":"fun <Error class: unknown class>.error(color: IntColorFetcher): <Error class: unknown class>","description":"com.github.panpf.sketch.request.error","location":"sketch-core/com.github.panpf.sketch.request/error.html","searchKeys":["error","fun <Error class: unknown class>.error(color: IntColorFetcher): <Error class: unknown class>","com.github.panpf.sketch.request.error"]},{"name":"fun <Error class: unknown class>.error(color: ResColorFetcher): <Error class: unknown class>","description":"com.github.panpf.sketch.request.error","location":"sketch-core/com.github.panpf.sketch.request/error.html","searchKeys":["error","fun <Error class: unknown class>.error(color: ResColorFetcher): <Error class: unknown class>","com.github.panpf.sketch.request.error"]},{"name":"fun <Error class: unknown class>.error(color: ResColorFetcher): <Error class: unknown class>","description":"com.github.panpf.sketch.request.error","location":"sketch-core/com.github.panpf.sketch.request/error.html","searchKeys":["error","fun <Error class: unknown class>.error(color: ResColorFetcher): <Error class: unknown class>","com.github.panpf.sketch.request.error"]},{"name":"fun <Error class: unknown class>.error(drawable: EquitableDrawable): <Error class: unknown class>","description":"com.github.panpf.sketch.request.error","location":"sketch-core/com.github.panpf.sketch.request/error.html","searchKeys":["error","fun <Error class: unknown class>.error(drawable: EquitableDrawable): <Error class: unknown class>","com.github.panpf.sketch.request.error"]},{"name":"fun <Error class: unknown class>.error(drawable: EquitableDrawable): <Error class: unknown class>","description":"com.github.panpf.sketch.request.error","location":"sketch-core/com.github.panpf.sketch.request/error.html","searchKeys":["error","fun <Error class: unknown class>.error(drawable: EquitableDrawable): <Error class: unknown class>","com.github.panpf.sketch.request.error"]},{"name":"fun <Error class: unknown class>.error(resId: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.request.error","location":"sketch-core/com.github.panpf.sketch.request/error.html","searchKeys":["error","fun <Error class: unknown class>.error(resId: Int): <Error class: unknown class>","com.github.panpf.sketch.request.error"]},{"name":"fun <Error class: unknown class>.error(resId: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.request.error","location":"sketch-core/com.github.panpf.sketch.request/error.html","searchKeys":["error","fun <Error class: unknown class>.error(resId: Int): <Error class: unknown class>","com.github.panpf.sketch.request.error"]},{"name":"fun <Error class: unknown class>.fallback(color: IntColorFetcher): <Error class: unknown class>","description":"com.github.panpf.sketch.request.fallback","location":"sketch-core/com.github.panpf.sketch.request/fallback.html","searchKeys":["fallback","fun <Error class: unknown class>.fallback(color: IntColorFetcher): <Error class: unknown class>","com.github.panpf.sketch.request.fallback"]},{"name":"fun <Error class: unknown class>.fallback(color: IntColorFetcher): <Error class: unknown class>","description":"com.github.panpf.sketch.request.fallback","location":"sketch-core/com.github.panpf.sketch.request/fallback.html","searchKeys":["fallback","fun <Error class: unknown class>.fallback(color: IntColorFetcher): <Error class: unknown class>","com.github.panpf.sketch.request.fallback"]},{"name":"fun <Error class: unknown class>.fallback(color: ResColorFetcher): <Error class: unknown class>","description":"com.github.panpf.sketch.request.fallback","location":"sketch-core/com.github.panpf.sketch.request/fallback.html","searchKeys":["fallback","fun <Error class: unknown class>.fallback(color: ResColorFetcher): <Error class: unknown class>","com.github.panpf.sketch.request.fallback"]},{"name":"fun <Error class: unknown class>.fallback(color: ResColorFetcher): <Error class: unknown class>","description":"com.github.panpf.sketch.request.fallback","location":"sketch-core/com.github.panpf.sketch.request/fallback.html","searchKeys":["fallback","fun <Error class: unknown class>.fallback(color: ResColorFetcher): <Error class: unknown class>","com.github.panpf.sketch.request.fallback"]},{"name":"fun <Error class: unknown class>.fallback(drawable: EquitableDrawable): <Error class: unknown class>","description":"com.github.panpf.sketch.request.fallback","location":"sketch-core/com.github.panpf.sketch.request/fallback.html","searchKeys":["fallback","fun <Error class: unknown class>.fallback(drawable: EquitableDrawable): <Error class: unknown class>","com.github.panpf.sketch.request.fallback"]},{"name":"fun <Error class: unknown class>.fallback(drawable: EquitableDrawable): <Error class: unknown class>","description":"com.github.panpf.sketch.request.fallback","location":"sketch-core/com.github.panpf.sketch.request/fallback.html","searchKeys":["fallback","fun <Error class: unknown class>.fallback(drawable: EquitableDrawable): <Error class: unknown class>","com.github.panpf.sketch.request.fallback"]},{"name":"fun <Error class: unknown class>.fallback(resId: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.request.fallback","location":"sketch-core/com.github.panpf.sketch.request/fallback.html","searchKeys":["fallback","fun <Error class: unknown class>.fallback(resId: Int): <Error class: unknown class>","com.github.panpf.sketch.request.fallback"]},{"name":"fun <Error class: unknown class>.fallback(resId: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.request.fallback","location":"sketch-core/com.github.panpf.sketch.request/fallback.html","searchKeys":["fallback","fun <Error class: unknown class>.fallback(resId: Int): <Error class: unknown class>","com.github.panpf.sketch.request.fallback"]},{"name":"fun <Error class: unknown class>.placeholder(color: IntColorFetcher): <Error class: unknown class>","description":"com.github.panpf.sketch.request.placeholder","location":"sketch-core/com.github.panpf.sketch.request/placeholder.html","searchKeys":["placeholder","fun <Error class: unknown class>.placeholder(color: IntColorFetcher): <Error class: unknown class>","com.github.panpf.sketch.request.placeholder"]},{"name":"fun <Error class: unknown class>.placeholder(color: IntColorFetcher): <Error class: unknown class>","description":"com.github.panpf.sketch.request.placeholder","location":"sketch-core/com.github.panpf.sketch.request/placeholder.html","searchKeys":["placeholder","fun <Error class: unknown class>.placeholder(color: IntColorFetcher): <Error class: unknown class>","com.github.panpf.sketch.request.placeholder"]},{"name":"fun <Error class: unknown class>.placeholder(color: ResColorFetcher): <Error class: unknown class>","description":"com.github.panpf.sketch.request.placeholder","location":"sketch-core/com.github.panpf.sketch.request/placeholder.html","searchKeys":["placeholder","fun <Error class: unknown class>.placeholder(color: ResColorFetcher): <Error class: unknown class>","com.github.panpf.sketch.request.placeholder"]},{"name":"fun <Error class: unknown class>.placeholder(color: ResColorFetcher): <Error class: unknown class>","description":"com.github.panpf.sketch.request.placeholder","location":"sketch-core/com.github.panpf.sketch.request/placeholder.html","searchKeys":["placeholder","fun <Error class: unknown class>.placeholder(color: ResColorFetcher): <Error class: unknown class>","com.github.panpf.sketch.request.placeholder"]},{"name":"fun <Error class: unknown class>.placeholder(drawable: EquitableDrawable): <Error class: unknown class>","description":"com.github.panpf.sketch.request.placeholder","location":"sketch-core/com.github.panpf.sketch.request/placeholder.html","searchKeys":["placeholder","fun <Error class: unknown class>.placeholder(drawable: EquitableDrawable): <Error class: unknown class>","com.github.panpf.sketch.request.placeholder"]},{"name":"fun <Error class: unknown class>.placeholder(drawable: EquitableDrawable): <Error class: unknown class>","description":"com.github.panpf.sketch.request.placeholder","location":"sketch-core/com.github.panpf.sketch.request/placeholder.html","searchKeys":["placeholder","fun <Error class: unknown class>.placeholder(drawable: EquitableDrawable): <Error class: unknown class>","com.github.panpf.sketch.request.placeholder"]},{"name":"fun <Error class: unknown class>.placeholder(resId: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.request.placeholder","location":"sketch-core/com.github.panpf.sketch.request/placeholder.html","searchKeys":["placeholder","fun <Error class: unknown class>.placeholder(resId: Int): <Error class: unknown class>","com.github.panpf.sketch.request.placeholder"]},{"name":"fun <Error class: unknown class>.placeholder(resId: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.request.placeholder","location":"sketch-core/com.github.panpf.sketch.request/placeholder.html","searchKeys":["placeholder","fun <Error class: unknown class>.placeholder(resId: Int): <Error class: unknown class>","com.github.panpf.sketch.request.placeholder"]},{"name":"fun <Error class: unknown class>.preferQualityOverSpeed(preferQualityOverSpeed: Boolean? = true): <Error class: unknown class>","description":"com.github.panpf.sketch.request.preferQualityOverSpeed","location":"sketch-core/com.github.panpf.sketch.request/prefer-quality-over-speed.html","searchKeys":["preferQualityOverSpeed","fun <Error class: unknown class>.preferQualityOverSpeed(preferQualityOverSpeed: Boolean? = true): <Error class: unknown class>","com.github.panpf.sketch.request.preferQualityOverSpeed"]},{"name":"fun <Error class: unknown class>.preferQualityOverSpeed(preferQualityOverSpeed: Boolean? = true): <Error class: unknown class>","description":"com.github.panpf.sketch.request.preferQualityOverSpeed","location":"sketch-core/com.github.panpf.sketch.request/prefer-quality-over-speed.html","searchKeys":["preferQualityOverSpeed","fun <Error class: unknown class>.preferQualityOverSpeed(preferQualityOverSpeed: Boolean? = true): <Error class: unknown class>","com.github.panpf.sketch.request.preferQualityOverSpeed"]},{"name":"fun <Error class: unknown class>.readExifOrientation(): Int","description":"com.github.panpf.sketch.decode.internal.readExifOrientation","location":"sketch-core/com.github.panpf.sketch.decode.internal/read-exif-orientation.html","searchKeys":["readExifOrientation","fun <Error class: unknown class>.readExifOrientation(): Int","com.github.panpf.sketch.decode.internal.readExifOrientation"]},{"name":"fun <Error class: unknown class>.readExifOrientationWithMimeType(mimeType: String): Int","description":"com.github.panpf.sketch.decode.internal.readExifOrientationWithMimeType","location":"sketch-core/com.github.panpf.sketch.decode.internal/read-exif-orientation-with-mime-type.html","searchKeys":["readExifOrientationWithMimeType","fun <Error class: unknown class>.readExifOrientationWithMimeType(mimeType: String): Int","com.github.panpf.sketch.decode.internal.readExifOrientationWithMimeType"]},{"name":"fun <Error class: unknown class>.readImageInfo(helper: ExifOrientationHelper?): <Error class: unknown class>","description":"com.github.panpf.sketch.decode.internal.readImageInfo","location":"sketch-core/com.github.panpf.sketch.decode.internal/read-image-info.html","searchKeys":["readImageInfo","fun <Error class: unknown class>.readImageInfo(helper: ExifOrientationHelper?): <Error class: unknown class>","com.github.panpf.sketch.decode.internal.readImageInfo"]},{"name":"fun <Error class: unknown class>.sizeWithDisplay(context: Context): <Error class: unknown class>","description":"com.github.panpf.sketch.request.sizeWithDisplay","location":"sketch-core/com.github.panpf.sketch.request/size-with-display.html","searchKeys":["sizeWithDisplay","fun <Error class: unknown class>.sizeWithDisplay(context: Context): <Error class: unknown class>","com.github.panpf.sketch.request.sizeWithDisplay"]},{"name":"fun <Error class: unknown class>.sizeWithDisplay(context: Context): <Error class: unknown class>","description":"com.github.panpf.sketch.request.sizeWithDisplay","location":"sketch-core/com.github.panpf.sketch.request/size-with-display.html","searchKeys":["sizeWithDisplay","fun <Error class: unknown class>.sizeWithDisplay(context: Context): <Error class: unknown class>","com.github.panpf.sketch.request.sizeWithDisplay"]},{"name":"fun <Error class: unknown class>.toAndroidRect(): Rect","description":"com.github.panpf.sketch.util.toAndroidRect","location":"sketch-core/com.github.panpf.sketch.util/to-android-rect.html","searchKeys":["toAndroidRect","fun <Error class: unknown class>.toAndroidRect(): Rect","com.github.panpf.sketch.util.toAndroidRect"]},{"name":"fun <T> resetLazy(initializer: () -> T): ResetLazy<T>","description":"com.github.panpf.sketch.util.resetLazy","location":"sketch-core/com.github.panpf.sketch.util/reset-lazy.html","searchKeys":["resetLazy","fun <T> resetLazy(initializer: () -> T): ResetLazy<T>","com.github.panpf.sketch.util.resetLazy"]},{"name":"fun <T> value(key: String): T?","description":"com.github.panpf.sketch.request.Extras.Builder.value","location":"sketch-core/com.github.panpf.sketch.request/-extras/-builder/value.html","searchKeys":["value","fun <T> value(key: String): T?","com.github.panpf.sketch.request.Extras.Builder.value"]},{"name":"fun <T> value(key: String): T?","description":"com.github.panpf.sketch.request.Extras.value","location":"sketch-core/com.github.panpf.sketch.request/-extras/value.html","searchKeys":["value","fun <T> value(key: String): T?","com.github.panpf.sketch.request.Extras.value"]},{"name":"fun Bitmap.copyWith(colorInfo: ColorInfo = imageInfo.colorInfo): Bitmap","description":"com.github.panpf.sketch.util.copyWith","location":"sketch-core/com.github.panpf.sketch.util/copy-with.html","searchKeys":["copyWith","fun Bitmap.copyWith(colorInfo: ColorInfo = imageInfo.colorInfo): Bitmap","com.github.panpf.sketch.util.copyWith"]},{"name":"fun Bitmap.copyWith(config: ColorType = safeConfig, isMutable: Boolean = isMutable()): Bitmap","description":"com.github.panpf.sketch.util.copyWith","location":"sketch-core/com.github.panpf.sketch.util/copy-with.html","searchKeys":["copyWith","fun Bitmap.copyWith(config: ColorType = safeConfig, isMutable: Boolean = isMutable()): Bitmap","com.github.panpf.sketch.util.copyWith"]},{"name":"fun Bitmap.createEmptyBitmapWith(size: <Error class: unknown class> = this.size, colorType: ColorType = this.colorType ?: ColorType.ARGB_8888, hasAlpha: Boolean = this.hasAlpha()): Bitmap","description":"com.github.panpf.sketch.createEmptyBitmapWith","location":"sketch-core/com.github.panpf.sketch/create-empty-bitmap-with.html","searchKeys":["createEmptyBitmapWith","fun Bitmap.createEmptyBitmapWith(size: <Error class: unknown class> = this.size, colorType: ColorType = this.colorType ?: ColorType.ARGB_8888, hasAlpha: Boolean = this.hasAlpha()): Bitmap","com.github.panpf.sketch.createEmptyBitmapWith"]},{"name":"fun Bitmap.createEmptyBitmapWith(width: Int = this.width, height: Int = this.height, colorType: ColorType = this.colorType ?: ColorType.ARGB_8888, hasAlpha: Boolean = this.hasAlpha()): Bitmap","description":"com.github.panpf.sketch.createEmptyBitmapWith","location":"sketch-core/com.github.panpf.sketch/create-empty-bitmap-with.html","searchKeys":["createEmptyBitmapWith","fun Bitmap.createEmptyBitmapWith(width: Int = this.width, height: Int = this.height, colorType: ColorType = this.colorType ?: ColorType.ARGB_8888, hasAlpha: Boolean = this.hasAlpha()): Bitmap","com.github.panpf.sketch.createEmptyBitmapWith"]},{"name":"fun Bitmap.toInfoString(): String","description":"com.github.panpf.sketch.util.toInfoString","location":"sketch-core/com.github.panpf.sketch.util/to-info-string.html","searchKeys":["toInfoString","fun Bitmap.toInfoString(): String","com.github.panpf.sketch.util.toInfoString"]},{"name":"fun Bitmap.toInfoString(): String","description":"com.github.panpf.sketch.util.toInfoString","location":"sketch-core/com.github.panpf.sketch.util/to-info-string.html","searchKeys":["toInfoString","fun Bitmap.toInfoString(): String","com.github.panpf.sketch.util.toInfoString"]},{"name":"fun Bitmap.toLogString(): String","description":"com.github.panpf.sketch.util.toLogString","location":"sketch-core/com.github.panpf.sketch.util/to-log-string.html","searchKeys":["toLogString","fun Bitmap.toLogString(): String","com.github.panpf.sketch.util.toLogString"]},{"name":"fun Bitmap.toLogString(): String","description":"com.github.panpf.sketch.util.toLogString","location":"sketch-core/com.github.panpf.sketch.util/to-log-string.html","searchKeys":["toLogString","fun Bitmap.toLogString(): String","com.github.panpf.sketch.util.toLogString"]},{"name":"fun Bitmap.toShortInfoString(): String","description":"com.github.panpf.sketch.util.toShortInfoString","location":"sketch-core/com.github.panpf.sketch.util/to-short-info-string.html","searchKeys":["toShortInfoString","fun Bitmap.toShortInfoString(): String","com.github.panpf.sketch.util.toShortInfoString"]},{"name":"fun Bitmap.toShortInfoString(): String","description":"com.github.panpf.sketch.util.toShortInfoString","location":"sketch-core/com.github.panpf.sketch.util/to-short-info-string.html","searchKeys":["toShortInfoString","fun Bitmap.toShortInfoString(): String","com.github.panpf.sketch.util.toShortInfoString"]},{"name":"fun BitmapColorSpace(colorSpace: ColorSpace): BitmapColorSpace","description":"com.github.panpf.sketch.decode.BitmapColorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-space.html","searchKeys":["BitmapColorSpace","fun BitmapColorSpace(colorSpace: ColorSpace): BitmapColorSpace","com.github.panpf.sketch.decode.BitmapColorSpace"]},{"name":"fun BitmapColorSpace(colorSpace: ColorSpace.Named): <Error class: unknown class>","description":"com.github.panpf.sketch.decode.BitmapColorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-space.html","searchKeys":["BitmapColorSpace","fun BitmapColorSpace(colorSpace: ColorSpace.Named): <Error class: unknown class>","com.github.panpf.sketch.decode.BitmapColorSpace"]},{"name":"fun BitmapColorSpace(value: String): BitmapColorSpace","description":"com.github.panpf.sketch.decode.BitmapColorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-space.html","searchKeys":["BitmapColorSpace","fun BitmapColorSpace(value: String): BitmapColorSpace","com.github.panpf.sketch.decode.BitmapColorSpace"]},{"name":"fun BitmapColorType(colorType: ColorType): <Error class: unknown class>","description":"com.github.panpf.sketch.decode.BitmapColorType","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-type.html","searchKeys":["BitmapColorType","fun BitmapColorType(colorType: ColorType): <Error class: unknown class>","com.github.panpf.sketch.decode.BitmapColorType"]},{"name":"fun BitmapColorType(colorType: ColorType): BitmapColorType","description":"com.github.panpf.sketch.decode.BitmapColorType","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-type.html","searchKeys":["BitmapColorType","fun BitmapColorType(colorType: ColorType): BitmapColorType","com.github.panpf.sketch.decode.BitmapColorType"]},{"name":"fun BitmapColorType(value: String): BitmapColorType","description":"com.github.panpf.sketch.decode.BitmapColorType","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-type.html","searchKeys":["BitmapColorType","fun BitmapColorType(value: String): BitmapColorType","com.github.panpf.sketch.decode.BitmapColorType"]},{"name":"fun ByteArray.indexOf(byte: Byte, fromIndex: Int, toIndex: Int): Int","description":"com.github.panpf.sketch.util.indexOf","location":"sketch-core/com.github.panpf.sketch.util/index-of.html","searchKeys":["indexOf","fun ByteArray.indexOf(byte: Byte, fromIndex: Int, toIndex: Int): Int","com.github.panpf.sketch.util.indexOf"]},{"name":"fun ByteArray.indexOf(bytes: ByteArray, fromIndex: Int, toIndex: Int): Int","description":"com.github.panpf.sketch.util.indexOf","location":"sketch-core/com.github.panpf.sketch.util/index-of.html","searchKeys":["indexOf","fun ByteArray.indexOf(bytes: ByteArray, fromIndex: Int, toIndex: Int): Int","com.github.panpf.sketch.util.indexOf"]},{"name":"fun ByteArray.rangeEquals(offset: Int, bytes: ByteArray): Boolean","description":"com.github.panpf.sketch.util.rangeEquals","location":"sketch-core/com.github.panpf.sketch.util/range-equals.html","searchKeys":["rangeEquals","fun ByteArray.rangeEquals(offset: Int, bytes: ByteArray): Boolean","com.github.panpf.sketch.util.rangeEquals"]},{"name":"fun ColorDrawable.asEquitable(): EquitableDrawable","description":"com.github.panpf.sketch.drawable.asEquitable","location":"sketch-core/com.github.panpf.sketch.drawable/as-equitable.html","searchKeys":["asEquitable","fun ColorDrawable.asEquitable(): EquitableDrawable","com.github.panpf.sketch.drawable.asEquitable"]},{"name":"fun ColorDrawable.asStateImage(): DrawableStateImage","description":"com.github.panpf.sketch.state.asStateImage","location":"sketch-core/com.github.panpf.sketch.state/as-state-image.html","searchKeys":["asStateImage","fun ColorDrawable.asStateImage(): DrawableStateImage","com.github.panpf.sketch.state.asStateImage"]},{"name":"fun ColorDrawableStateImage(color: IntColorFetcher): ColorDrawableStateImage","description":"com.github.panpf.sketch.state.ColorDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-color-drawable-state-image.html","searchKeys":["ColorDrawableStateImage","fun ColorDrawableStateImage(color: IntColorFetcher): ColorDrawableStateImage","com.github.panpf.sketch.state.ColorDrawableStateImage"]},{"name":"fun ColorDrawableStateImage(color: ResColorFetcher): ColorDrawableStateImage","description":"com.github.panpf.sketch.state.ColorDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-color-drawable-state-image.html","searchKeys":["ColorDrawableStateImage","fun ColorDrawableStateImage(color: ResColorFetcher): ColorDrawableStateImage","com.github.panpf.sketch.state.ColorDrawableStateImage"]},{"name":"fun ColorEquitableDrawable(color: Int): EquitableDrawable","description":"com.github.panpf.sketch.drawable.ColorEquitableDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-color-equitable-drawable.html","searchKeys":["ColorEquitableDrawable","fun ColorEquitableDrawable(color: Int): EquitableDrawable","com.github.panpf.sketch.drawable.ColorEquitableDrawable"]},{"name":"fun ColorInfo.toLogString(): String","description":"com.github.panpf.sketch.util.toLogString","location":"sketch-core/com.github.panpf.sketch.util/to-log-string.html","searchKeys":["toLogString","fun ColorInfo.toLogString(): String","com.github.panpf.sketch.util.toLogString"]},{"name":"fun ColorSpace.Companion.fromName(name: String): ColorSpace","description":"com.github.panpf.sketch.decode.fromName","location":"sketch-core/com.github.panpf.sketch.decode/from-name.html","searchKeys":["fromName","fun ColorSpace.Companion.fromName(name: String): ColorSpace","com.github.panpf.sketch.decode.fromName"]},{"name":"fun ColorSpace.Companion.values(): List<ColorSpace>","description":"com.github.panpf.sketch.decode.values","location":"sketch-core/com.github.panpf.sketch.decode/values.html","searchKeys":["values","fun ColorSpace.Companion.values(): List<ColorSpace>","com.github.panpf.sketch.decode.values"]},{"name":"fun ColorSpace.name(): String","description":"com.github.panpf.sketch.decode.name","location":"sketch-core/com.github.panpf.sketch.decode/name.html","searchKeys":["name","fun ColorSpace.name(): String","com.github.panpf.sketch.decode.name"]},{"name":"fun ColorType.isHardware(): Boolean","description":"com.github.panpf.sketch.util.isHardware","location":"sketch-core/com.github.panpf.sketch.util/is-hardware.html","searchKeys":["isHardware","fun ColorType.isHardware(): Boolean","com.github.panpf.sketch.util.isHardware"]},{"name":"fun ColorType?.safeToSoftware(): ColorType","description":"com.github.panpf.sketch.util.safeToSoftware","location":"sketch-core/com.github.panpf.sketch.util/safe-to-software.html","searchKeys":["safeToSoftware","fun ColorType?.safeToSoftware(): ColorType","com.github.panpf.sketch.util.safeToSoftware"]},{"name":"fun ComponentLoader.toComponentRegistry(context: PlatformContext, ignoreFetcherProviders: List<KClass<out FetcherProvider>>? = null, ignoreDecoderProviders: List<KClass<out DecoderProvider>>? = null): ComponentRegistry","description":"com.github.panpf.sketch.util.toComponentRegistry","location":"sketch-core/com.github.panpf.sketch.util/to-component-registry.html","searchKeys":["toComponentRegistry","fun ComponentLoader.toComponentRegistry(context: PlatformContext, ignoreFetcherProviders: List<KClass<out FetcherProvider>>? = null, ignoreDecoderProviders: List<KClass<out DecoderProvider>>? = null): ComponentRegistry","com.github.panpf.sketch.util.toComponentRegistry"]},{"name":"fun ComponentRegistry(block: ComponentRegistry.Builder.() -> Unit? = null): ComponentRegistry","description":"com.github.panpf.sketch.ComponentRegistry","location":"sketch-core/com.github.panpf.sketch/-component-registry.html","searchKeys":["ComponentRegistry","fun ComponentRegistry(block: ComponentRegistry.Builder.() -> Unit? = null): ComponentRegistry","com.github.panpf.sketch.ComponentRegistry"]},{"name":"fun ComponentRegistry.isNotEmpty(): Boolean","description":"com.github.panpf.sketch.isNotEmpty","location":"sketch-core/com.github.panpf.sketch/is-not-empty.html","searchKeys":["isNotEmpty","fun ComponentRegistry.isNotEmpty(): Boolean","com.github.panpf.sketch.isNotEmpty"]},{"name":"fun ComponentRegistry?.merged(other: ComponentRegistry?): ComponentRegistry?","description":"com.github.panpf.sketch.merged","location":"sketch-core/com.github.panpf.sketch/merged.html","searchKeys":["merged","fun ComponentRegistry?.merged(other: ComponentRegistry?): ComponentRegistry?","com.github.panpf.sketch.merged"]},{"name":"fun ConditionStateImage(defaultColor: IntColorFetcher, conditionBlock: <Error class: unknown class>.() -> Unit): <Error class: unknown class>","description":"com.github.panpf.sketch.state.ConditionStateImage","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image.html","searchKeys":["ConditionStateImage","fun ConditionStateImage(defaultColor: IntColorFetcher, conditionBlock: <Error class: unknown class>.() -> Unit): <Error class: unknown class>","com.github.panpf.sketch.state.ConditionStateImage"]},{"name":"fun ConditionStateImage(defaultColor: ResColorFetcher, conditionBlock: <Error class: unknown class>.() -> Unit): <Error class: unknown class>","description":"com.github.panpf.sketch.state.ConditionStateImage","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image.html","searchKeys":["ConditionStateImage","fun ConditionStateImage(defaultColor: ResColorFetcher, conditionBlock: <Error class: unknown class>.() -> Unit): <Error class: unknown class>","com.github.panpf.sketch.state.ConditionStateImage"]},{"name":"fun ConditionStateImage(defaultDrawable: EquitableDrawable, conditionBlock: <Error class: unknown class>.() -> Unit): <Error class: unknown class>","description":"com.github.panpf.sketch.state.ConditionStateImage","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image.html","searchKeys":["ConditionStateImage","fun ConditionStateImage(defaultDrawable: EquitableDrawable, conditionBlock: <Error class: unknown class>.() -> Unit): <Error class: unknown class>","com.github.panpf.sketch.state.ConditionStateImage"]},{"name":"fun ConditionStateImage(defaultImage: StateImage? = null, conditionBlock: ConditionStateImage.Builder.() -> Unit): ConditionStateImage","description":"com.github.panpf.sketch.state.ConditionStateImage","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image.html","searchKeys":["ConditionStateImage","fun ConditionStateImage(defaultImage: StateImage? = null, conditionBlock: ConditionStateImage.Builder.() -> Unit): ConditionStateImage","com.github.panpf.sketch.state.ConditionStateImage"]},{"name":"fun ConditionStateImage(defaultResId: Int, conditionBlock: <Error class: unknown class>.() -> Unit): <Error class: unknown class>","description":"com.github.panpf.sketch.state.ConditionStateImage","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image.html","searchKeys":["ConditionStateImage","fun ConditionStateImage(defaultResId: Int, conditionBlock: <Error class: unknown class>.() -> Unit): <Error class: unknown class>","com.github.panpf.sketch.state.ConditionStateImage"]},{"name":"fun Context.getEquitableDrawable(resId: Int): EquitableDrawable","description":"com.github.panpf.sketch.drawable.getEquitableDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/get-equitable-drawable.html","searchKeys":["getEquitableDrawable","fun Context.getEquitableDrawable(resId: Int): EquitableDrawable","com.github.panpf.sketch.drawable.getEquitableDrawable"]},{"name":"fun Context.getEquitableDrawableCompat(resId: Int): EquitableDrawable","description":"com.github.panpf.sketch.drawable.getEquitableDrawableCompat","location":"sketch-core/com.github.panpf.sketch.drawable/get-equitable-drawable-compat.html","searchKeys":["getEquitableDrawableCompat","fun Context.getEquitableDrawableCompat(resId: Int): EquitableDrawable","com.github.panpf.sketch.drawable.getEquitableDrawableCompat"]},{"name":"fun CurrentStateImage(defaultDrawable: EquitableDrawable): <Error class: unknown class>","description":"com.github.panpf.sketch.state.CurrentStateImage","location":"sketch-core/com.github.panpf.sketch.state/-current-state-image.html","searchKeys":["CurrentStateImage","fun CurrentStateImage(defaultDrawable: EquitableDrawable): <Error class: unknown class>","com.github.panpf.sketch.state.CurrentStateImage"]},{"name":"fun CurrentStateImage(defaultResId: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.state.CurrentStateImage","location":"sketch-core/com.github.panpf.sketch.state/-current-state-image.html","searchKeys":["CurrentStateImage","fun CurrentStateImage(defaultResId: Int): <Error class: unknown class>","com.github.panpf.sketch.state.CurrentStateImage"]},{"name":"fun DataSource.cacheFile(sketch: Sketch): Path","description":"com.github.panpf.sketch.source.cacheFile","location":"sketch-core/com.github.panpf.sketch.source/cache-file.html","searchKeys":["cacheFile","fun DataSource.cacheFile(sketch: Sketch): Path","com.github.panpf.sketch.source.cacheFile"]},{"name":"fun DataSource.cacheFileOrNull(sketch: Sketch): Path?","description":"com.github.panpf.sketch.source.cacheFileOrNull","location":"sketch-core/com.github.panpf.sketch.source/cache-file-or-null.html","searchKeys":["cacheFileOrNull","fun DataSource.cacheFileOrNull(sketch: Sketch): Path?","com.github.panpf.sketch.source.cacheFileOrNull"]},{"name":"fun DataSource.getFileOrNull(sketch: Sketch): Path?","description":"com.github.panpf.sketch.source.getFileOrNull","location":"sketch-core/com.github.panpf.sketch.source/get-file-or-null.html","searchKeys":["getFileOrNull","fun DataSource.getFileOrNull(sketch: Sketch): Path?","com.github.panpf.sketch.source.getFileOrNull"]},{"name":"fun DataSource.openSourceOrNull(): Source?","description":"com.github.panpf.sketch.source.openSourceOrNull","location":"sketch-core/com.github.panpf.sketch.source/open-source-or-null.html","searchKeys":["openSourceOrNull","fun DataSource.openSourceOrNull(): Source?","com.github.panpf.sketch.source.openSourceOrNull"]},{"name":"fun DecodeConfig.toBitmapOptions(): BitmapFactory.Options","description":"com.github.panpf.sketch.decode.toBitmapOptions","location":"sketch-core/com.github.panpf.sketch.decode/to-bitmap-options.html","searchKeys":["toBitmapOptions","fun DecodeConfig.toBitmapOptions(): BitmapFactory.Options","com.github.panpf.sketch.decode.toBitmapOptions"]},{"name":"fun DecodeResult.resize(resize: Resize): DecodeResult","description":"com.github.panpf.sketch.decode.internal.resize","location":"sketch-core/com.github.panpf.sketch.decode.internal/resize.html","searchKeys":["resize","fun DecodeResult.resize(resize: Resize): DecodeResult","com.github.panpf.sketch.decode.internal.resize"]},{"name":"fun Drawable.asEquitable(equalityKey: Any): EquitableDrawable","description":"com.github.panpf.sketch.drawable.asEquitable","location":"sketch-core/com.github.panpf.sketch.drawable/as-equitable.html","searchKeys":["asEquitable","fun Drawable.asEquitable(equalityKey: Any): EquitableDrawable","com.github.panpf.sketch.drawable.asEquitable"]},{"name":"fun Drawable.asImage(shareable: Boolean = this !is Animatable): DrawableImage","description":"com.github.panpf.sketch.asImage","location":"sketch-core/com.github.panpf.sketch/as-image.html","searchKeys":["asImage","fun Drawable.asImage(shareable: Boolean = this !is Animatable): DrawableImage","com.github.panpf.sketch.asImage"]},{"name":"fun Drawable.asStateImage(equalityKey: Any): DrawableStateImage","description":"com.github.panpf.sketch.state.asStateImage","location":"sketch-core/com.github.panpf.sketch.state/as-state-image.html","searchKeys":["asStateImage","fun Drawable.asStateImage(equalityKey: Any): DrawableStateImage","com.github.panpf.sketch.state.asStateImage"]},{"name":"fun Drawable.key(equalityKey: Any? = null): String","description":"com.github.panpf.sketch.util.key","location":"sketch-core/com.github.panpf.sketch.util/key.html","searchKeys":["key","fun Drawable.key(equalityKey: Any? = null): String","com.github.panpf.sketch.util.key"]},{"name":"fun Drawable.toLogString(): String","description":"com.github.panpf.sketch.util.toLogString","location":"sketch-core/com.github.panpf.sketch.util/to-log-string.html","searchKeys":["toLogString","fun Drawable.toLogString(): String","com.github.panpf.sketch.util.toLogString"]},{"name":"fun DrawableStateImage(drawable: EquitableDrawable): DrawableStateImage","description":"com.github.panpf.sketch.state.DrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-drawable-state-image.html","searchKeys":["DrawableStateImage","fun DrawableStateImage(drawable: EquitableDrawable): DrawableStateImage","com.github.panpf.sketch.state.DrawableStateImage"]},{"name":"fun DrawableStateImage(resId: Int): DrawableStateImage","description":"com.github.panpf.sketch.state.DrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-drawable-state-image.html","searchKeys":["DrawableStateImage","fun DrawableStateImage(resId: Int): DrawableStateImage","com.github.panpf.sketch.state.DrawableStateImage"]},{"name":"fun EquitableDrawable.asStateImage(): DrawableStateImage","description":"com.github.panpf.sketch.state.asStateImage","location":"sketch-core/com.github.panpf.sketch.state/as-state-image.html","searchKeys":["asStateImage","fun EquitableDrawable.asStateImage(): DrawableStateImage","com.github.panpf.sketch.state.asStateImage"]},{"name":"fun Extras.count(): Int","description":"com.github.panpf.sketch.request.count","location":"sketch-core/com.github.panpf.sketch.request/count.html","searchKeys":["count","fun Extras.count(): Int","com.github.panpf.sketch.request.count"]},{"name":"fun Extras.isNotEmpty(): Boolean","description":"com.github.panpf.sketch.request.isNotEmpty","location":"sketch-core/com.github.panpf.sketch.request/is-not-empty.html","searchKeys":["isNotEmpty","fun Extras.isNotEmpty(): Boolean","com.github.panpf.sketch.request.isNotEmpty"]},{"name":"fun Extras?.merged(other: Extras?): Extras?","description":"com.github.panpf.sketch.request.merged","location":"sketch-core/com.github.panpf.sketch.request/merged.html","searchKeys":["merged","fun Extras?.merged(other: Extras?): Extras?","com.github.panpf.sketch.request.merged"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: EquitableDrawable, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int, background: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int, background: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int, background: Int? = null, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int, background: Int? = null, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int, iconSize: <Error class: unknown class>? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconAnimatableDrawableStateImage(icon: Int, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image.html","searchKeys":["IconAnimatableDrawableStateImage","fun IconAnimatableDrawableStateImage(icon: Int, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable, background: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable, background: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: EquitableDrawable, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: EquitableDrawable, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int, background: EquitableDrawable? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int, background: EquitableDrawable? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int, background: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int, background: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int, background: Int? = null, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int, background: Int? = null, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int, background: Int? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int, background: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int, background: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int, iconSize: <Error class: unknown class>? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int, iconSize: <Error class: unknown class>? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun IconDrawableStateImage(icon: Int, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.IconDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image.html","searchKeys":["IconDrawableStateImage","fun IconDrawableStateImage(icon: Int, iconSize: <Error class: unknown class>? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.IconDrawableStateImage"]},{"name":"fun Image.asBitmap(): Bitmap","description":"com.github.panpf.sketch.asBitmap","location":"sketch-core/com.github.panpf.sketch/as-bitmap.html","searchKeys":["asBitmap","fun Image.asBitmap(): Bitmap","com.github.panpf.sketch.asBitmap"]},{"name":"fun Image.asBitmapOrNull(): Bitmap?","description":"com.github.panpf.sketch.asBitmapOrNull","location":"sketch-core/com.github.panpf.sketch/as-bitmap-or-null.html","searchKeys":["asBitmapOrNull","fun Image.asBitmapOrNull(): Bitmap?","com.github.panpf.sketch.asBitmapOrNull"]},{"name":"fun Image.resizeOnDraw(request: ImageRequest, size: Size?): Image","description":"com.github.panpf.sketch.resize.resizeOnDraw","location":"sketch-core/com.github.panpf.sketch.resize/resize-on-draw.html","searchKeys":["resizeOnDraw","fun Image.resizeOnDraw(request: ImageRequest, size: Size?): Image","com.github.panpf.sketch.resize.resizeOnDraw"]},{"name":"fun ImageOptions(block: ImageOptions.Builder.() -> Unit? = null): ImageOptions","description":"com.github.panpf.sketch.request.ImageOptions","location":"sketch-core/com.github.panpf.sketch.request/-image-options.html","searchKeys":["ImageOptions","fun ImageOptions(block: ImageOptions.Builder.() -> Unit? = null): ImageOptions","com.github.panpf.sketch.request.ImageOptions"]},{"name":"fun ImageOptions.Builder.base64UriSpec(base64Spec: Base64Spec?): ImageOptions.Builder","description":"com.github.panpf.sketch.fetch.base64UriSpec","location":"sketch-core/com.github.panpf.sketch.fetch/base64-uri-spec.html","searchKeys":["base64UriSpec","fun ImageOptions.Builder.base64UriSpec(base64Spec: Base64Spec?): ImageOptions.Builder","com.github.panpf.sketch.fetch.base64UriSpec"]},{"name":"fun ImageOptions.Builder.colorSpace(colorSpace: ColorSpace?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.colorSpace","location":"sketch-core/com.github.panpf.sketch.request/color-space.html","searchKeys":["colorSpace","fun ImageOptions.Builder.colorSpace(colorSpace: ColorSpace?): ImageOptions.Builder","com.github.panpf.sketch.request.colorSpace"]},{"name":"fun ImageOptions.Builder.colorType(colorType: ColorType?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.colorType","location":"sketch-core/com.github.panpf.sketch.request/color-type.html","searchKeys":["colorType","fun ImageOptions.Builder.colorType(colorType: ColorType?): ImageOptions.Builder","com.github.panpf.sketch.request.colorType"]},{"name":"fun ImageOptions.isNotEmpty(): Boolean","description":"com.github.panpf.sketch.request.isNotEmpty","location":"sketch-core/com.github.panpf.sketch.request/is-not-empty.html","searchKeys":["isNotEmpty","fun ImageOptions.isNotEmpty(): Boolean","com.github.panpf.sketch.request.isNotEmpty"]},{"name":"fun ImageOptions?.difference(other: ImageOptions?): String","description":"com.github.panpf.sketch.util.difference","location":"sketch-core/com.github.panpf.sketch.util/difference.html","searchKeys":["difference","fun ImageOptions?.difference(other: ImageOptions?): String","com.github.panpf.sketch.util.difference"]},{"name":"fun ImageOptionsProvider.updateImageOptions(block: ImageOptions.Builder.() -> Unit)","description":"com.github.panpf.sketch.request.updateImageOptions","location":"sketch-core/com.github.panpf.sketch.request/update-image-options.html","searchKeys":["updateImageOptions","fun ImageOptionsProvider.updateImageOptions(block: ImageOptions.Builder.() -> Unit)","com.github.panpf.sketch.request.updateImageOptions"]},{"name":"fun ImageRequest(context: PlatformContext, uri: String?, block: ImageRequest.Builder.() -> Unit? = null): ImageRequest","description":"com.github.panpf.sketch.request.ImageRequest","location":"sketch-core/com.github.panpf.sketch.request/-image-request.html","searchKeys":["ImageRequest","fun ImageRequest(context: PlatformContext, uri: String?, block: ImageRequest.Builder.() -> Unit? = null): ImageRequest","com.github.panpf.sketch.request.ImageRequest"]},{"name":"fun ImageRequest.Builder.base64UriSpec(specification: Base64Spec?): ImageRequest.Builder","description":"com.github.panpf.sketch.fetch.base64UriSpec","location":"sketch-core/com.github.panpf.sketch.fetch/base64-uri-spec.html","searchKeys":["base64UriSpec","fun ImageRequest.Builder.base64UriSpec(specification: Base64Spec?): ImageRequest.Builder","com.github.panpf.sketch.fetch.base64UriSpec"]},{"name":"fun ImageRequest.Builder.colorSpace(colorSpace: ColorSpace?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.colorSpace","location":"sketch-core/com.github.panpf.sketch.request/color-space.html","searchKeys":["colorSpace","fun ImageRequest.Builder.colorSpace(colorSpace: ColorSpace?): ImageRequest.Builder","com.github.panpf.sketch.request.colorSpace"]},{"name":"fun ImageRequest.Builder.colorType(colorType: ColorType?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.colorType","location":"sketch-core/com.github.panpf.sketch.request/color-type.html","searchKeys":["colorType","fun ImageRequest.Builder.colorType(colorType: ColorType?): ImageRequest.Builder","com.github.panpf.sketch.request.colorType"]},{"name":"fun ImageRequest?.difference(other: ImageRequest?): String","description":"com.github.panpf.sketch.util.difference","location":"sketch-core/com.github.panpf.sketch.util/difference.html","searchKeys":["difference","fun ImageRequest?.difference(other: ImageRequest?): String","com.github.panpf.sketch.util.difference"]},{"name":"fun IntColorDrawableStateImage(color: Int): ColorDrawableStateImage","description":"com.github.panpf.sketch.state.IntColorDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-int-color-drawable-state-image.html","searchKeys":["IntColorDrawableStateImage","fun IntColorDrawableStateImage(color: Int): ColorDrawableStateImage","com.github.panpf.sketch.state.IntColorDrawableStateImage"]},{"name":"fun Lifecycle.removeAndAddObserver(observer: LifecycleObserver)","description":"com.github.panpf.sketch.util.removeAndAddObserver","location":"sketch-core/com.github.panpf.sketch.util/remove-and-add-observer.html","searchKeys":["removeAndAddObserver","fun Lifecycle.removeAndAddObserver(observer: LifecycleObserver)","com.github.panpf.sketch.util.removeAndAddObserver"]},{"name":"fun LifecycleResolver(lifecycle: Lifecycle): LifecycleResolver","description":"com.github.panpf.sketch.request.LifecycleResolver","location":"sketch-core/com.github.panpf.sketch.request/-lifecycle-resolver.html","searchKeys":["LifecycleResolver","fun LifecycleResolver(lifecycle: Lifecycle): LifecycleResolver","com.github.panpf.sketch.request.LifecycleResolver"]},{"name":"fun List<String>.getBlurTransformed(): String?","description":"com.github.panpf.sketch.transform.getBlurTransformed","location":"sketch-core/com.github.panpf.sketch.transform/get-blur-transformed.html","searchKeys":["getBlurTransformed","fun List<String>.getBlurTransformed(): String?","com.github.panpf.sketch.transform.getBlurTransformed"]},{"name":"fun List<String>.getCircleCropTransformed(): String?","description":"com.github.panpf.sketch.transform.getCircleCropTransformed","location":"sketch-core/com.github.panpf.sketch.transform/get-circle-crop-transformed.html","searchKeys":["getCircleCropTransformed","fun List<String>.getCircleCropTransformed(): String?","com.github.panpf.sketch.transform.getCircleCropTransformed"]},{"name":"fun List<String>.getInSampledTransformed(): String?","description":"com.github.panpf.sketch.decode.internal.getInSampledTransformed","location":"sketch-core/com.github.panpf.sketch.decode.internal/get-in-sampled-transformed.html","searchKeys":["getInSampledTransformed","fun List<String>.getInSampledTransformed(): String?","com.github.panpf.sketch.decode.internal.getInSampledTransformed"]},{"name":"fun List<String>.getMaskTransformed(): String?","description":"com.github.panpf.sketch.transform.getMaskTransformed","location":"sketch-core/com.github.panpf.sketch.transform/get-mask-transformed.html","searchKeys":["getMaskTransformed","fun List<String>.getMaskTransformed(): String?","com.github.panpf.sketch.transform.getMaskTransformed"]},{"name":"fun List<String>.getResizeTransformed(): String?","description":"com.github.panpf.sketch.decode.internal.getResizeTransformed","location":"sketch-core/com.github.panpf.sketch.decode.internal/get-resize-transformed.html","searchKeys":["getResizeTransformed","fun List<String>.getResizeTransformed(): String?","com.github.panpf.sketch.decode.internal.getResizeTransformed"]},{"name":"fun List<String>.getRotateTransformed(): String?","description":"com.github.panpf.sketch.transform.getRotateTransformed","location":"sketch-core/com.github.panpf.sketch.transform/get-rotate-transformed.html","searchKeys":["getRotateTransformed","fun List<String>.getRotateTransformed(): String?","com.github.panpf.sketch.transform.getRotateTransformed"]},{"name":"fun List<String>.getRoundedCornersTransformed(): String?","description":"com.github.panpf.sketch.transform.getRoundedCornersTransformed","location":"sketch-core/com.github.panpf.sketch.transform/get-rounded-corners-transformed.html","searchKeys":["getRoundedCornersTransformed","fun List<String>.getRoundedCornersTransformed(): String?","com.github.panpf.sketch.transform.getRoundedCornersTransformed"]},{"name":"fun List<String>.getScaledTransformed(): String?","description":"com.github.panpf.sketch.decode.internal.getScaledTransformed","location":"sketch-core/com.github.panpf.sketch.decode.internal/get-scaled-transformed.html","searchKeys":["getScaledTransformed","fun List<String>.getScaledTransformed(): String?","com.github.panpf.sketch.decode.internal.getScaledTransformed"]},{"name":"fun List<String>.getSubsamplingTransformed(): String?","description":"com.github.panpf.sketch.decode.internal.getSubsamplingTransformed","location":"sketch-core/com.github.panpf.sketch.decode.internal/get-subsampling-transformed.html","searchKeys":["getSubsamplingTransformed","fun List<String>.getSubsamplingTransformed(): String?","com.github.panpf.sketch.decode.internal.getSubsamplingTransformed"]},{"name":"fun List<Transformation>?.merge(other: List<Transformation>?): List<Transformation>?","description":"com.github.panpf.sketch.transform.merge","location":"sketch-core/com.github.panpf.sketch.transform/merge.html","searchKeys":["merge","fun List<Transformation>?.merge(other: List<Transformation>?): List<Transformation>?","com.github.panpf.sketch.transform.merge"]},{"name":"fun LongImageDecider(): LongImageDecider","description":"com.github.panpf.sketch.resize.LongImageDecider","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-decider.html","searchKeys":["LongImageDecider","fun LongImageDecider(): LongImageDecider","com.github.panpf.sketch.resize.LongImageDecider"]},{"name":"fun MemoryCache.Value.getExtras(): Map<String, String>?","description":"com.github.panpf.sketch.cache.getExtras","location":"sketch-core/com.github.panpf.sketch.cache/get-extras.html","searchKeys":["getExtras","fun MemoryCache.Value.getExtras(): Map<String, String>?","com.github.panpf.sketch.cache.getExtras"]},{"name":"fun MemoryCache.Value.getImageInfo(): ImageInfo?","description":"com.github.panpf.sketch.cache.getImageInfo","location":"sketch-core/com.github.panpf.sketch.cache/get-image-info.html","searchKeys":["getImageInfo","fun MemoryCache.Value.getImageInfo(): ImageInfo?","com.github.panpf.sketch.cache.getImageInfo"]},{"name":"fun MemoryCache.Value.getResize(): Resize?","description":"com.github.panpf.sketch.cache.getResize","location":"sketch-core/com.github.panpf.sketch.cache/get-resize.html","searchKeys":["getResize","fun MemoryCache.Value.getResize(): Resize?","com.github.panpf.sketch.cache.getResize"]},{"name":"fun MemoryCache.Value.getTransformeds(): List<String>?","description":"com.github.panpf.sketch.cache.getTransformeds","location":"sketch-core/com.github.panpf.sketch.cache/get-transformeds.html","searchKeys":["getTransformeds","fun MemoryCache.Value.getTransformeds(): List<String>?","com.github.panpf.sketch.cache.getTransformeds"]},{"name":"fun NetworkObserver(context: Context): NetworkObserver","description":"com.github.panpf.sketch.util.NetworkObserver","location":"sketch-core/com.github.panpf.sketch.util/-network-observer.html","searchKeys":["NetworkObserver","fun NetworkObserver(context: Context): NetworkObserver","com.github.panpf.sketch.util.NetworkObserver"]},{"name":"fun Precision.isSmallerSizeMode(): Boolean","description":"com.github.panpf.sketch.resize.isSmallerSizeMode","location":"sketch-core/com.github.panpf.sketch.resize/is-smaller-size-mode.html","searchKeys":["isSmallerSizeMode","fun Precision.isSmallerSizeMode(): Boolean","com.github.panpf.sketch.resize.isSmallerSizeMode"]},{"name":"fun PrecisionDecider(precision: Precision): PrecisionDecider","description":"com.github.panpf.sketch.resize.PrecisionDecider","location":"sketch-core/com.github.panpf.sketch.resize/-precision-decider.html","searchKeys":["PrecisionDecider","fun PrecisionDecider(precision: Precision): PrecisionDecider","com.github.panpf.sketch.resize.PrecisionDecider"]},{"name":"fun Rect.flip(spaceSize: Size, vertical: Boolean = false): Rect","description":"com.github.panpf.sketch.util.flip","location":"sketch-core/com.github.panpf.sketch.util/flip.html","searchKeys":["flip","fun Rect.flip(spaceSize: Size, vertical: Boolean = false): Rect","com.github.panpf.sketch.util.flip"]},{"name":"fun Rect.rotateInSpace(spaceSize: Size, rotation: Int): Rect","description":"com.github.panpf.sketch.util.rotateInSpace","location":"sketch-core/com.github.panpf.sketch.util/rotate-in-space.html","searchKeys":["rotateInSpace","fun Rect.rotateInSpace(spaceSize: Size, rotation: Int): Rect","com.github.panpf.sketch.util.rotateInSpace"]},{"name":"fun Rect.toSketchRect(): <Error class: unknown class>","description":"com.github.panpf.sketch.util.toSketchRect","location":"sketch-core/com.github.panpf.sketch.util/to-sketch-rect.html","searchKeys":["toSketchRect","fun Rect.toSketchRect(): <Error class: unknown class>","com.github.panpf.sketch.util.toSketchRect"]},{"name":"fun ResColorDrawableStateImage(resId: Int): ColorDrawableStateImage","description":"com.github.panpf.sketch.state.ResColorDrawableStateImage","location":"sketch-core/com.github.panpf.sketch.state/-res-color-drawable-state-image.html","searchKeys":["ResColorDrawableStateImage","fun ResColorDrawableStateImage(resId: Int): ColorDrawableStateImage","com.github.panpf.sketch.state.ResColorDrawableStateImage"]},{"name":"fun Resources.getEquitableDrawable(resId: Int): EquitableDrawable","description":"com.github.panpf.sketch.drawable.getEquitableDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/get-equitable-drawable.html","searchKeys":["getEquitableDrawable","fun Resources.getEquitableDrawable(resId: Int): EquitableDrawable","com.github.panpf.sketch.drawable.getEquitableDrawable"]},{"name":"fun Resources.getEquitableDrawable(resId: Int, theme: Resources.Theme?): EquitableDrawable","description":"com.github.panpf.sketch.drawable.getEquitableDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/get-equitable-drawable.html","searchKeys":["getEquitableDrawable","fun Resources.getEquitableDrawable(resId: Int, theme: Resources.Theme?): EquitableDrawable","com.github.panpf.sketch.drawable.getEquitableDrawable"]},{"name":"fun Resources.getEquitableDrawableCompat(resId: Int, theme: Resources.Theme?): EquitableDrawable","description":"com.github.panpf.sketch.drawable.getEquitableDrawableCompat","location":"sketch-core/com.github.panpf.sketch.drawable/get-equitable-drawable-compat.html","searchKeys":["getEquitableDrawableCompat","fun Resources.getEquitableDrawableCompat(resId: Int, theme: Resources.Theme?): EquitableDrawable","com.github.panpf.sketch.drawable.getEquitableDrawableCompat"]},{"name":"fun Resources.getEquitableDrawableCompatForDensity(resId: Int, density: Int, theme: Resources.Theme?): EquitableDrawable","description":"com.github.panpf.sketch.drawable.getEquitableDrawableCompatForDensity","location":"sketch-core/com.github.panpf.sketch.drawable/get-equitable-drawable-compat-for-density.html","searchKeys":["getEquitableDrawableCompatForDensity","fun Resources.getEquitableDrawableCompatForDensity(resId: Int, density: Int, theme: Resources.Theme?): EquitableDrawable","com.github.panpf.sketch.drawable.getEquitableDrawableCompatForDensity"]},{"name":"fun Resources.getEquitableDrawableForDensity(resId: Int, density: Int): EquitableDrawable","description":"com.github.panpf.sketch.drawable.getEquitableDrawableForDensity","location":"sketch-core/com.github.panpf.sketch.drawable/get-equitable-drawable-for-density.html","searchKeys":["getEquitableDrawableForDensity","fun Resources.getEquitableDrawableForDensity(resId: Int, density: Int): EquitableDrawable","com.github.panpf.sketch.drawable.getEquitableDrawableForDensity"]},{"name":"fun Resources.getEquitableDrawableForDensity(resId: Int, density: Int, theme: Resources.Theme?): EquitableDrawable","description":"com.github.panpf.sketch.drawable.getEquitableDrawableForDensity","location":"sketch-core/com.github.panpf.sketch.drawable/get-equitable-drawable-for-density.html","searchKeys":["getEquitableDrawableForDensity","fun Resources.getEquitableDrawableForDensity(resId: Int, density: Int, theme: Resources.Theme?): EquitableDrawable","com.github.panpf.sketch.drawable.getEquitableDrawableForDensity"]},{"name":"fun Scale.reverse(): Scale","description":"com.github.panpf.sketch.resize.reverse","location":"sketch-core/com.github.panpf.sketch.resize/reverse.html","searchKeys":["reverse","fun Scale.reverse(): Scale","com.github.panpf.sketch.resize.reverse"]},{"name":"fun ScaleDecider(scale: Scale): ScaleDecider","description":"com.github.panpf.sketch.resize.ScaleDecider","location":"sketch-core/com.github.panpf.sketch.resize/-scale-decider.html","searchKeys":["ScaleDecider","fun ScaleDecider(scale: Scale): ScaleDecider","com.github.panpf.sketch.resize.ScaleDecider"]},{"name":"fun Size.coerceAtLeast(minimumValue: Size): Size","description":"com.github.panpf.sketch.util.coerceAtLeast","location":"sketch-core/com.github.panpf.sketch.util/coerce-at-least.html","searchKeys":["coerceAtLeast","fun Size.coerceAtLeast(minimumValue: Size): Size","com.github.panpf.sketch.util.coerceAtLeast"]},{"name":"fun Size.coerceAtMost(maximumValue: Size): Size","description":"com.github.panpf.sketch.util.coerceAtMost","location":"sketch-core/com.github.panpf.sketch.util/coerce-at-most.html","searchKeys":["coerceAtMost","fun Size.coerceAtMost(maximumValue: Size): Size","com.github.panpf.sketch.util.coerceAtMost"]},{"name":"fun Size.isSameAspectRatio(other: Size, delta: Float = 0.0f): Boolean","description":"com.github.panpf.sketch.util.isSameAspectRatio","location":"sketch-core/com.github.panpf.sketch.util/is-same-aspect-ratio.html","searchKeys":["isSameAspectRatio","fun Size.isSameAspectRatio(other: Size, delta: Float = 0.0f): Boolean","com.github.panpf.sketch.util.isSameAspectRatio"]},{"name":"fun Size.limitSide(maxSide: Int?): Size","description":"com.github.panpf.sketch.util.limitSide","location":"sketch-core/com.github.panpf.sketch.util/limit-side.html","searchKeys":["limitSide","fun Size.limitSide(maxSide: Int?): Size","com.github.panpf.sketch.util.limitSide"]},{"name":"fun Size.rotate(rotation: Int): Size","description":"com.github.panpf.sketch.util.rotate","location":"sketch-core/com.github.panpf.sketch.util/rotate.html","searchKeys":["rotate","fun Size.rotate(rotation: Int): Size","com.github.panpf.sketch.util.rotate"]},{"name":"fun SizeResolver(size: Size): SizeResolver","description":"com.github.panpf.sketch.resize.SizeResolver","location":"sketch-core/com.github.panpf.sketch.resize/-size-resolver.html","searchKeys":["SizeResolver","fun SizeResolver(size: Size): SizeResolver","com.github.panpf.sketch.resize.SizeResolver"]},{"name":"fun SizeResolver(width: Int, height: Int): SizeResolver","description":"com.github.panpf.sketch.resize.SizeResolver","location":"sketch-core/com.github.panpf.sketch.resize/-size-resolver.html","searchKeys":["SizeResolver","fun SizeResolver(width: Int, height: Int): SizeResolver","com.github.panpf.sketch.resize.SizeResolver"]},{"name":"fun Sketch(context: PlatformContext, block: Sketch.Builder.() -> Unit? = null): Sketch","description":"com.github.panpf.sketch.Sketch","location":"sketch-core/com.github.panpf.sketch/-sketch.html","searchKeys":["Sketch","fun Sketch(context: PlatformContext, block: Sketch.Builder.() -> Unit? = null): Sketch","com.github.panpf.sketch.Sketch"]},{"name":"fun SketchRect.toSkiaRect(): Rect","description":"com.github.panpf.sketch.util.toSkiaRect","location":"sketch-core/com.github.panpf.sketch.util/to-skia-rect.html","searchKeys":["toSkiaRect","fun SketchRect.toSkiaRect(): Rect","com.github.panpf.sketch.util.toSkiaRect"]},{"name":"fun String.toUri(separator: String = Path.DIRECTORY_SEPARATOR): Uri","description":"com.github.panpf.sketch.util.toUri","location":"sketch-core/com.github.panpf.sketch.util/to-uri.html","searchKeys":["toUri","fun String.toUri(separator: String = Path.DIRECTORY_SEPARATOR): Uri","com.github.panpf.sketch.util.toUri"]},{"name":"fun addComponents(block: ComponentRegistry.Builder.() -> Unit): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.addComponents","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/add-components.html","searchKeys":["addComponents","fun addComponents(block: ComponentRegistry.Builder.() -> Unit): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.addComponents"]},{"name":"fun addComponents(block: ComponentRegistry.Builder.() -> Unit): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.addComponents","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/add-components.html","searchKeys":["addComponents","fun addComponents(block: ComponentRegistry.Builder.() -> Unit): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.addComponents"]},{"name":"fun addComponents(block: ComponentRegistry.Builder.() -> Unit): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.addComponents","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/add-components.html","searchKeys":["addComponents","fun addComponents(block: ComponentRegistry.Builder.() -> Unit): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.addComponents"]},{"name":"fun addComponents(components: ComponentRegistry)","description":"com.github.panpf.sketch.ComponentRegistry.Builder.addComponents","location":"sketch-core/com.github.panpf.sketch/-component-registry/-builder/add-components.html","searchKeys":["addComponents","fun addComponents(components: ComponentRegistry)","com.github.panpf.sketch.ComponentRegistry.Builder.addComponents"]},{"name":"fun addComponents(components: ComponentRegistry?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.addComponents","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/add-components.html","searchKeys":["addComponents","fun addComponents(components: ComponentRegistry?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.addComponents"]},{"name":"fun addComponents(components: ComponentRegistry?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.addComponents","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/add-components.html","searchKeys":["addComponents","fun addComponents(components: ComponentRegistry?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.addComponents"]},{"name":"fun addComponents(components: ComponentRegistry?): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.addComponents","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/add-components.html","searchKeys":["addComponents","fun addComponents(components: ComponentRegistry?): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.addComponents"]},{"name":"fun addDecodeInterceptor(decodeInterceptor: DecodeInterceptor): ComponentRegistry.Builder","description":"com.github.panpf.sketch.ComponentRegistry.Builder.addDecodeInterceptor","location":"sketch-core/com.github.panpf.sketch/-component-registry/-builder/add-decode-interceptor.html","searchKeys":["addDecodeInterceptor","fun addDecodeInterceptor(decodeInterceptor: DecodeInterceptor): ComponentRegistry.Builder","com.github.panpf.sketch.ComponentRegistry.Builder.addDecodeInterceptor"]},{"name":"fun addDecoder(decoderFactory: Decoder.Factory): ComponentRegistry.Builder","description":"com.github.panpf.sketch.ComponentRegistry.Builder.addDecoder","location":"sketch-core/com.github.panpf.sketch/-component-registry/-builder/add-decoder.html","searchKeys":["addDecoder","fun addDecoder(decoderFactory: Decoder.Factory): ComponentRegistry.Builder","com.github.panpf.sketch.ComponentRegistry.Builder.addDecoder"]},{"name":"fun addExtras(key: String, value: String): DecodeResult.Builder","description":"com.github.panpf.sketch.decode.DecodeResult.Builder.addExtras","location":"sketch-core/com.github.panpf.sketch.decode/-decode-result/-builder/add-extras.html","searchKeys":["addExtras","fun addExtras(key: String, value: String): DecodeResult.Builder","com.github.panpf.sketch.decode.DecodeResult.Builder.addExtras"]},{"name":"fun addFetcher(fetchFactory: Fetcher.Factory): ComponentRegistry.Builder","description":"com.github.panpf.sketch.ComponentRegistry.Builder.addFetcher","location":"sketch-core/com.github.panpf.sketch/-component-registry/-builder/add-fetcher.html","searchKeys":["addFetcher","fun addFetcher(fetchFactory: Fetcher.Factory): ComponentRegistry.Builder","com.github.panpf.sketch.ComponentRegistry.Builder.addFetcher"]},{"name":"fun addIgnoreDecoderProvider(vararg classes: KClass<out DecoderProvider>): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.addIgnoreDecoderProvider","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/add-ignore-decoder-provider.html","searchKeys":["addIgnoreDecoderProvider","fun addIgnoreDecoderProvider(vararg classes: KClass<out DecoderProvider>): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.addIgnoreDecoderProvider"]},{"name":"fun addIgnoreFetcherProvider(vararg classes: KClass<out FetcherProvider>): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.addIgnoreFetcherProvider","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/add-ignore-fetcher-provider.html","searchKeys":["addIgnoreFetcherProvider","fun addIgnoreFetcherProvider(vararg classes: KClass<out FetcherProvider>): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.addIgnoreFetcherProvider"]},{"name":"fun addListener(listener: Listener): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.addListener","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/add-listener.html","searchKeys":["addListener","fun addListener(listener: Listener): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.addListener"]},{"name":"fun addListener(listener: Listener): RequestOptions.Builder","description":"com.github.panpf.sketch.request.internal.RequestOptions.Builder.addListener","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-options/-builder/add-listener.html","searchKeys":["addListener","fun addListener(listener: Listener): RequestOptions.Builder","com.github.panpf.sketch.request.internal.RequestOptions.Builder.addListener"]},{"name":"fun addProgressListener(progressListener: ProgressListener): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.addProgressListener","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/add-progress-listener.html","searchKeys":["addProgressListener","fun addProgressListener(progressListener: ProgressListener): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.addProgressListener"]},{"name":"fun addProgressListener(progressListener: ProgressListener): RequestOptions.Builder","description":"com.github.panpf.sketch.request.internal.RequestOptions.Builder.addProgressListener","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-options/-builder/add-progress-listener.html","searchKeys":["addProgressListener","fun addProgressListener(progressListener: ProgressListener): RequestOptions.Builder","com.github.panpf.sketch.request.internal.RequestOptions.Builder.addProgressListener"]},{"name":"fun addRequestInterceptor(interceptor: RequestInterceptor): ComponentRegistry.Builder","description":"com.github.panpf.sketch.ComponentRegistry.Builder.addRequestInterceptor","location":"sketch-core/com.github.panpf.sketch/-component-registry/-builder/add-request-interceptor.html","searchKeys":["addRequestInterceptor","fun addRequestInterceptor(interceptor: RequestInterceptor): ComponentRegistry.Builder","com.github.panpf.sketch.ComponentRegistry.Builder.addRequestInterceptor"]},{"name":"fun addState(condition: ConditionStateImage.Condition, stateImage: StateImage): ConditionStateImage.Builder","description":"com.github.panpf.sketch.state.ConditionStateImage.Builder.addState","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/-builder/add-state.html","searchKeys":["addState","fun addState(condition: ConditionStateImage.Condition, stateImage: StateImage): ConditionStateImage.Builder","com.github.panpf.sketch.state.ConditionStateImage.Builder.addState"]},{"name":"fun addTransformations(transformations: List<Transformation>): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.addTransformations","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/add-transformations.html","searchKeys":["addTransformations","fun addTransformations(transformations: List<Transformation>): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.addTransformations"]},{"name":"fun addTransformations(transformations: List<Transformation>): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.addTransformations","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/add-transformations.html","searchKeys":["addTransformations","fun addTransformations(transformations: List<Transformation>): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.addTransformations"]},{"name":"fun addTransformations(vararg transformations: Transformation): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.addTransformations","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/add-transformations.html","searchKeys":["addTransformations","fun addTransformations(vararg transformations: Transformation): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.addTransformations"]},{"name":"fun addTransformations(vararg transformations: Transformation): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.addTransformations","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/add-transformations.html","searchKeys":["addTransformations","fun addTransformations(vararg transformations: Transformation): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.addTransformations"]},{"name":"fun addTransformed(transformed: String): DecodeResult.Builder","description":"com.github.panpf.sketch.decode.DecodeResult.Builder.addTransformed","location":"sketch-core/com.github.panpf.sketch.decode/-decode-result/-builder/add-transformed.html","searchKeys":["addTransformed","fun addTransformed(transformed: String): DecodeResult.Builder","com.github.panpf.sketch.decode.DecodeResult.Builder.addTransformed"]},{"name":"fun allowNullImage(allow: Boolean? = true): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.allowNullImage","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/allow-null-image.html","searchKeys":["allowNullImage","fun allowNullImage(allow: Boolean? = true): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.allowNullImage"]},{"name":"fun allowNullImage(allow: Boolean? = true): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.allowNullImage","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/allow-null-image.html","searchKeys":["allowNullImage","fun allowNullImage(allow: Boolean? = true): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.allowNullImage"]},{"name":"fun appCacheDirectory(appCacheDirectory: Path? = null): DiskCache.Builder","description":"com.github.panpf.sketch.cache.DiskCache.Builder.appCacheDirectory","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-builder/app-cache-directory.html","searchKeys":["appCacheDirectory","fun appCacheDirectory(appCacheDirectory: Path? = null): DiskCache.Builder","com.github.panpf.sketch.cache.DiskCache.Builder.appCacheDirectory"]},{"name":"fun appVersion(appVersion: Int? = null): DiskCache.Builder","description":"com.github.panpf.sketch.cache.DiskCache.Builder.appVersion","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-builder/app-version.html","searchKeys":["appVersion","fun appVersion(appVersion: Int? = null): DiskCache.Builder","com.github.panpf.sketch.cache.DiskCache.Builder.appVersion"]},{"name":"fun applyToBitmap(bitmap: Bitmap, reverse: Boolean = false): Bitmap?","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.applyToBitmap","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/apply-to-bitmap.html","searchKeys":["applyToBitmap","fun applyToBitmap(bitmap: Bitmap, reverse: Boolean = false): Bitmap?","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.applyToBitmap"]},{"name":"fun applyToRect(srcRect: <Error class: unknown class>, spaceSize: <Error class: unknown class>, reverse: Boolean = false): <Error class: unknown class>","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.applyToRect","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/apply-to-rect.html","searchKeys":["applyToRect","fun applyToRect(srcRect: <Error class: unknown class>, spaceSize: <Error class: unknown class>, reverse: Boolean = false): <Error class: unknown class>","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.applyToRect"]},{"name":"fun applyToSize(size: <Error class: unknown class>, reverse: Boolean = false): <Error class: unknown class>","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.applyToSize","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/apply-to-size.html","searchKeys":["applyToSize","fun applyToSize(size: <Error class: unknown class>, reverse: Boolean = false): <Error class: unknown class>","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.applyToSize"]},{"name":"fun build(): ComponentRegistry","description":"com.github.panpf.sketch.ComponentRegistry.Builder.build","location":"sketch-core/com.github.panpf.sketch/-component-registry/-builder/build.html","searchKeys":["build","fun build(): ComponentRegistry","com.github.panpf.sketch.ComponentRegistry.Builder.build"]},{"name":"fun build(): ConditionStateImage","description":"com.github.panpf.sketch.state.ConditionStateImage.Builder.build","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/-builder/build.html","searchKeys":["build","fun build(): ConditionStateImage","com.github.panpf.sketch.state.ConditionStateImage.Builder.build"]},{"name":"fun build(): DecodeResult","description":"com.github.panpf.sketch.decode.DecodeResult.Builder.build","location":"sketch-core/com.github.panpf.sketch.decode/-decode-result/-builder/build.html","searchKeys":["build","fun build(): DecodeResult","com.github.panpf.sketch.decode.DecodeResult.Builder.build"]},{"name":"fun build(): DiskCache","description":"com.github.panpf.sketch.cache.DiskCache.Builder.build","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-builder/build.html","searchKeys":["build","fun build(): DiskCache","com.github.panpf.sketch.cache.DiskCache.Builder.build"]},{"name":"fun build(): Extras","description":"com.github.panpf.sketch.request.Extras.Builder.build","location":"sketch-core/com.github.panpf.sketch.request/-extras/-builder/build.html","searchKeys":["build","fun build(): Extras","com.github.panpf.sketch.request.Extras.Builder.build"]},{"name":"fun build(): ImageOptions","description":"com.github.panpf.sketch.request.ImageOptions.Builder.build","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/build.html","searchKeys":["build","fun build(): ImageOptions","com.github.panpf.sketch.request.ImageOptions.Builder.build"]},{"name":"fun build(): ImageRequest","description":"com.github.panpf.sketch.request.ImageRequest.Builder.build","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/build.html","searchKeys":["build","fun build(): ImageRequest","com.github.panpf.sketch.request.ImageRequest.Builder.build"]},{"name":"fun build(): MemoryCache","description":"com.github.panpf.sketch.cache.MemoryCache.Builder.build","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/-builder/build.html","searchKeys":["build","fun build(): MemoryCache","com.github.panpf.sketch.cache.MemoryCache.Builder.build"]},{"name":"fun build(): RequestOptions","description":"com.github.panpf.sketch.request.internal.RequestOptions.Builder.build","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-options/-builder/build.html","searchKeys":["build","fun build(): RequestOptions","com.github.panpf.sketch.request.internal.RequestOptions.Builder.build"]},{"name":"fun build(): Sketch","description":"com.github.panpf.sketch.Sketch.Builder.build","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/build.html","searchKeys":["build","fun build(): Sketch","com.github.panpf.sketch.Sketch.Builder.build"]},{"name":"fun buildUri(scheme: String? = null, authority: String? = null, path: String? = null, query: String? = null, fragment: String? = null, separator: String = Path.DIRECTORY_SEPARATOR): Uri","description":"com.github.panpf.sketch.util.buildUri","location":"sketch-core/com.github.panpf.sketch.util/build-uri.html","searchKeys":["buildUri","fun buildUri(scheme: String? = null, authority: String? = null, path: String? = null, query: String? = null, fragment: String? = null, separator: String = Path.DIRECTORY_SEPARATOR): Uri","com.github.panpf.sketch.util.buildUri"]},{"name":"fun calculateCropBounds(contentSize: Size, containerBounds: Rect): Rect","description":"com.github.panpf.sketch.util.calculateCropBounds","location":"sketch-core/com.github.panpf.sketch.util/calculate-crop-bounds.html","searchKeys":["calculateCropBounds","fun calculateCropBounds(contentSize: Size, containerBounds: Rect): Rect","com.github.panpf.sketch.util.calculateCropBounds"]},{"name":"fun calculateInsideBounds(contentSize: Size, containerBounds: Rect): Rect","description":"com.github.panpf.sketch.util.calculateInsideBounds","location":"sketch-core/com.github.panpf.sketch.util/calculate-inside-bounds.html","searchKeys":["calculateInsideBounds","fun calculateInsideBounds(contentSize: Size, containerBounds: Rect): Rect","com.github.panpf.sketch.util.calculateInsideBounds"]},{"name":"fun calculateMapping(imageSize: Size): ResizeMapping","description":"com.github.panpf.sketch.resize.Resize.calculateMapping","location":"sketch-core/com.github.panpf.sketch.resize/-resize/calculate-mapping.html","searchKeys":["calculateMapping","fun calculateMapping(imageSize: Size): ResizeMapping","com.github.panpf.sketch.resize.Resize.calculateMapping"]},{"name":"fun calculateRotatedSize(size: Size, angle: Double): Size","description":"com.github.panpf.sketch.util.calculateRotatedSize","location":"sketch-core/com.github.panpf.sketch.util/calculate-rotated-size.html","searchKeys":["calculateRotatedSize","fun calculateRotatedSize(size: Size, angle: Double): Size","com.github.panpf.sketch.util.calculateRotatedSize"]},{"name":"fun calculateSampleSize(imageSize: Size, targetSize: Size, mimeType: String? = null): Int","description":"com.github.panpf.sketch.decode.internal.calculateSampleSize","location":"sketch-core/com.github.panpf.sketch.decode.internal/calculate-sample-size.html","searchKeys":["calculateSampleSize","fun calculateSampleSize(imageSize: Size, targetSize: Size, mimeType: String? = null): Int","com.github.panpf.sketch.decode.internal.calculateSampleSize"]},{"name":"fun calculateSampleSize(imageSize: Size, targetSize: Size, smallerSizeMode: Boolean, mimeType: String? = null): Int","description":"com.github.panpf.sketch.decode.internal.calculateSampleSize","location":"sketch-core/com.github.panpf.sketch.decode.internal/calculate-sample-size.html","searchKeys":["calculateSampleSize","fun calculateSampleSize(imageSize: Size, targetSize: Size, smallerSizeMode: Boolean, mimeType: String? = null): Int","com.github.panpf.sketch.decode.internal.calculateSampleSize"]},{"name":"fun calculateSampleSizeForRegion(regionSize: Size, targetSize: Size, mimeType: String? = null, imageSize: Size? = null): Int","description":"com.github.panpf.sketch.decode.internal.calculateSampleSizeForRegion","location":"sketch-core/com.github.panpf.sketch.decode.internal/calculate-sample-size-for-region.html","searchKeys":["calculateSampleSizeForRegion","fun calculateSampleSizeForRegion(regionSize: Size, targetSize: Size, mimeType: String? = null, imageSize: Size? = null): Int","com.github.panpf.sketch.decode.internal.calculateSampleSizeForRegion"]},{"name":"fun calculateSampleSizeForRegion(regionSize: Size, targetSize: Size, smallerSizeMode: Boolean, mimeType: String? = null, imageSize: Size? = null): Int","description":"com.github.panpf.sketch.decode.internal.calculateSampleSizeForRegion","location":"sketch-core/com.github.panpf.sketch.decode.internal/calculate-sample-size-for-region.html","searchKeys":["calculateSampleSizeForRegion","fun calculateSampleSizeForRegion(regionSize: Size, targetSize: Size, smallerSizeMode: Boolean, mimeType: String? = null, imageSize: Size? = null): Int","com.github.panpf.sketch.decode.internal.calculateSampleSizeForRegion"]},{"name":"fun calculateScaleMultiplierWithCrop(srcWidth: Float, srcHeight: Float, dstWidth: Float, dstHeight: Float): Float","description":"com.github.panpf.sketch.util.calculateScaleMultiplierWithCrop","location":"sketch-core/com.github.panpf.sketch.util/calculate-scale-multiplier-with-crop.html","searchKeys":["calculateScaleMultiplierWithCrop","fun calculateScaleMultiplierWithCrop(srcWidth: Float, srcHeight: Float, dstWidth: Float, dstHeight: Float): Float","com.github.panpf.sketch.util.calculateScaleMultiplierWithCrop"]},{"name":"fun calculateScaleMultiplierWithFit(srcWidth: Float, srcHeight: Float, dstWidth: Float, dstHeight: Float, fitScale: Boolean): Float","description":"com.github.panpf.sketch.util.calculateScaleMultiplierWithFit","location":"sketch-core/com.github.panpf.sketch.util/calculate-scale-multiplier-with-fit.html","searchKeys":["calculateScaleMultiplierWithFit","fun calculateScaleMultiplierWithFit(srcWidth: Float, srcHeight: Float, dstWidth: Float, dstHeight: Float, fitScale: Boolean): Float","com.github.panpf.sketch.util.calculateScaleMultiplierWithFit"]},{"name":"fun calculateScaleMultiplierWithInside(srcWidth: Float, srcHeight: Float, dstWidth: Float, dstHeight: Float): Float","description":"com.github.panpf.sketch.util.calculateScaleMultiplierWithInside","location":"sketch-core/com.github.panpf.sketch.util/calculate-scale-multiplier-with-inside.html","searchKeys":["calculateScaleMultiplierWithInside","fun calculateScaleMultiplierWithInside(srcWidth: Float, srcHeight: Float, dstWidth: Float, dstHeight: Float): Float","com.github.panpf.sketch.util.calculateScaleMultiplierWithInside"]},{"name":"fun calculateScaleMultiplierWithOneSide(sourceSize: SketchSize, targetSize: SketchSize): Float","description":"com.github.panpf.sketch.util.calculateScaleMultiplierWithOneSide","location":"sketch-core/com.github.panpf.sketch.util/calculate-scale-multiplier-with-one-side.html","searchKeys":["calculateScaleMultiplierWithOneSide","fun calculateScaleMultiplierWithOneSide(sourceSize: SketchSize, targetSize: SketchSize): Float","com.github.panpf.sketch.util.calculateScaleMultiplierWithOneSide"]},{"name":"fun callbackProgress(request: ImageRequest, contentLength: Long, completedLength: Long)","description":"com.github.panpf.sketch.request.internal.ProgressListenerDelegate.callbackProgress","location":"sketch-core/com.github.panpf.sketch.request.internal/-progress-listener-delegate/callback-progress.html","searchKeys":["callbackProgress","fun callbackProgress(request: ImageRequest, contentLength: Long, completedLength: Long)","com.github.panpf.sketch.request.internal.ProgressListenerDelegate.callbackProgress"]},{"name":"fun centerX(): Int","description":"com.github.panpf.sketch.util.Rect.centerX","location":"sketch-core/com.github.panpf.sketch.util/-rect/center-x.html","searchKeys":["centerX","fun centerX(): Int","com.github.panpf.sketch.util.Rect.centerX"]},{"name":"fun centerY(): Int","description":"com.github.panpf.sketch.util.Rect.centerY","location":"sketch-core/com.github.panpf.sketch.util/-rect/center-y.html","searchKeys":["centerY","fun centerY(): Int","com.github.panpf.sketch.util.Rect.centerY"]},{"name":"fun checkImageInfo(imageInfo: ImageInfo)","description":"com.github.panpf.sketch.decode.internal.checkImageInfo","location":"sketch-core/com.github.panpf.sketch.decode.internal/check-image-info.html","searchKeys":["checkImageInfo","fun checkImageInfo(imageInfo: ImageInfo)","com.github.panpf.sketch.decode.internal.checkImageInfo"]},{"name":"fun checkImageSize(imageSize: Size)","description":"com.github.panpf.sketch.decode.internal.checkImageSize","location":"sketch-core/com.github.panpf.sketch.decode.internal/check-image-size.html","searchKeys":["checkImageSize","fun checkImageSize(imageSize: Size)","com.github.panpf.sketch.decode.internal.checkImageSize"]},{"name":"fun checkSampledBitmapSize(sampledBitmapSize: Size, targetSize: Size, smallerSizeMode: Boolean, maxBitmapSize: Size? = null): Boolean","description":"com.github.panpf.sketch.decode.internal.checkSampledBitmapSize","location":"sketch-core/com.github.panpf.sketch.decode.internal/check-sampled-bitmap-size.html","searchKeys":["checkSampledBitmapSize","fun checkSampledBitmapSize(sampledBitmapSize: Size, targetSize: Size, smallerSizeMode: Boolean, maxBitmapSize: Size? = null): Boolean","com.github.panpf.sketch.decode.internal.checkSampledBitmapSize"]},{"name":"fun clearAnimationCallbacks()","description":"com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.clearAnimationCallbacks","location":"sketch-core/com.github.panpf.sketch.drawable.internal/-animatable-callback-helper/clear-animation-callbacks.html","searchKeys":["clearAnimationCallbacks","fun clearAnimationCallbacks()","com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.clearAnimationCallbacks"]},{"name":"fun colorSpace(colorSpace: BitmapColorSpace?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.colorSpace","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/color-space.html","searchKeys":["colorSpace","fun colorSpace(colorSpace: BitmapColorSpace?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.colorSpace"]},{"name":"fun colorSpace(colorSpace: BitmapColorSpace?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.colorSpace","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/color-space.html","searchKeys":["colorSpace","fun colorSpace(colorSpace: BitmapColorSpace?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.colorSpace"]},{"name":"fun colorSpace(colorSpace: String?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.colorSpace","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/color-space.html","searchKeys":["colorSpace","fun colorSpace(colorSpace: String?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.colorSpace"]},{"name":"fun colorSpace(colorSpace: String?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.colorSpace","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/color-space.html","searchKeys":["colorSpace","fun colorSpace(colorSpace: String?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.colorSpace"]},{"name":"fun colorType(colorType: BitmapColorType?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.colorType","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/color-type.html","searchKeys":["colorType","fun colorType(colorType: BitmapColorType?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.colorType"]},{"name":"fun colorType(colorType: BitmapColorType?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.colorType","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/color-type.html","searchKeys":["colorType","fun colorType(colorType: BitmapColorType?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.colorType"]},{"name":"fun colorType(colorType: String?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.colorType","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/color-type.html","searchKeys":["colorType","fun colorType(colorType: String?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.colorType"]},{"name":"fun colorType(colorType: String?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.colorType","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/color-type.html","searchKeys":["colorType","fun colorType(colorType: String?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.colorType"]},{"name":"fun compareVersions(version1: String, version2: String): Int","description":"com.github.panpf.sketch.util.compareVersions","location":"sketch-core/com.github.panpf.sketch.util/compare-versions.html","searchKeys":["compareVersions","fun compareVersions(version1: String, version2: String): Int","com.github.panpf.sketch.util.compareVersions"]},{"name":"fun componentLoaderEnabled(enabled: Boolean): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.componentLoaderEnabled","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/component-loader-enabled.html","searchKeys":["componentLoaderEnabled","fun componentLoaderEnabled(enabled: Boolean): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.componentLoaderEnabled"]},{"name":"fun components(block: ComponentRegistry.Builder.() -> Unit): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.components","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/components.html","searchKeys":["components","fun components(block: ComponentRegistry.Builder.() -> Unit): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.components"]},{"name":"fun components(block: ComponentRegistry.Builder.() -> Unit): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.components","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/components.html","searchKeys":["components","fun components(block: ComponentRegistry.Builder.() -> Unit): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.components"]},{"name":"fun components(block: ComponentRegistry.Builder.() -> Unit): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.components","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/components.html","searchKeys":["components","fun components(block: ComponentRegistry.Builder.() -> Unit): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.components"]},{"name":"fun components(components: ComponentRegistry?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.components","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/components.html","searchKeys":["components","fun components(components: ComponentRegistry?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.components"]},{"name":"fun components(components: ComponentRegistry?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.components","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/components.html","searchKeys":["components","fun components(components: ComponentRegistry?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.components"]},{"name":"fun components(components: ComponentRegistry?): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.components","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/components.html","searchKeys":["components","fun components(components: ComponentRegistry?): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.components"]},{"name":"fun computeResize(imageSize: Size): Resize","description":"com.github.panpf.sketch.request.RequestContext.computeResize","location":"sketch-core/com.github.panpf.sketch.request/-request-context/compute-resize.html","searchKeys":["computeResize","fun computeResize(imageSize: Size): Resize","com.github.panpf.sketch.request.RequestContext.computeResize"]},{"name":"fun computeScaleMultiplierWithFit(srcWidth: Int, srcHeight: Int, dstWidth: Int, dstHeight: Int, fitScale: Boolean): Float","description":"com.github.panpf.sketch.util.computeScaleMultiplierWithFit","location":"sketch-core/com.github.panpf.sketch.util/compute-scale-multiplier-with-fit.html","searchKeys":["computeScaleMultiplierWithFit","fun computeScaleMultiplierWithFit(srcWidth: Int, srcHeight: Int, dstWidth: Int, dstHeight: Int, fitScale: Boolean): Float","com.github.panpf.sketch.util.computeScaleMultiplierWithFit"]},{"name":"fun computeScaleMultiplierWithOneSide(sourceSize: SketchSize, targetSize: SketchSize): Float","description":"com.github.panpf.sketch.util.computeScaleMultiplierWithOneSide","location":"sketch-core/com.github.panpf.sketch.util/compute-scale-multiplier-with-one-side.html","searchKeys":["computeScaleMultiplierWithOneSide","fun computeScaleMultiplierWithOneSide(sourceSize: SketchSize, targetSize: SketchSize): Float","com.github.panpf.sketch.util.computeScaleMultiplierWithOneSide"]},{"name":"fun contains(left: Int, top: Int, right: Int, bottom: Int): Boolean","description":"com.github.panpf.sketch.util.Rect.contains","location":"sketch-core/com.github.panpf.sketch.util/-rect/contains.html","searchKeys":["contains","fun contains(left: Int, top: Int, right: Int, bottom: Int): Boolean","com.github.panpf.sketch.util.Rect.contains"]},{"name":"fun contains(x: Int, y: Int): Boolean","description":"com.github.panpf.sketch.util.Rect.contains","location":"sketch-core/com.github.panpf.sketch.util/-rect/contains.html","searchKeys":["contains","fun contains(x: Int, y: Int): Boolean","com.github.panpf.sketch.util.Rect.contains"]},{"name":"fun copy(context: PlatformContext = this.context, uri: Uri = this.uri, target: Target? = this.target, listener: Listener? = this.listener, progressListener: ProgressListener? = this.progressListener, lifecycleResolver: LifecycleResolver = this.lifecycleResolver, definedRequestOptions: RequestOptions = this.definedRequestOptions, definedOptions: ImageOptions = this.definedOptions, defaultOptions: ImageOptions? = this.defaultOptions, depthHolder: DepthHolder = this.depthHolder, extras: Extras? = this.extras, downloadCachePolicy: CachePolicy = this.downloadCachePolicy, colorType: BitmapColorType? = this.colorType, colorSpace: BitmapColorSpace? = this.colorSpace, sizeResolver: SizeResolver = this.sizeResolver, sizeMultiplier: Float? = this.sizeMultiplier, precisionDecider: PrecisionDecider = this.precisionDecider, scaleDecider: ScaleDecider = this.scaleDecider, transformations: List<Transformation>? = this.transformations, resultCachePolicy: CachePolicy = this.resultCachePolicy, placeholder: StateImage? = this.placeholder, fallback: StateImage? = this.fallback, error: StateImage? = this.error, transitionFactory: Transition.Factory? = this.transitionFactory, resizeOnDraw: Boolean? = this.resizeOnDraw, allowNullImage: Boolean? = this.allowNullImage, memoryCachePolicy: CachePolicy = this.memoryCachePolicy, componentRegistry: ComponentRegistry? = this.componentRegistry): ImageRequest","description":"com.github.panpf.sketch.request.ImageRequest.copy","location":"sketch-core/com.github.panpf.sketch.request/-image-request/copy.html","searchKeys":["copy","fun copy(context: PlatformContext = this.context, uri: Uri = this.uri, target: Target? = this.target, listener: Listener? = this.listener, progressListener: ProgressListener? = this.progressListener, lifecycleResolver: LifecycleResolver = this.lifecycleResolver, definedRequestOptions: RequestOptions = this.definedRequestOptions, definedOptions: ImageOptions = this.definedOptions, defaultOptions: ImageOptions? = this.defaultOptions, depthHolder: DepthHolder = this.depthHolder, extras: Extras? = this.extras, downloadCachePolicy: CachePolicy = this.downloadCachePolicy, colorType: BitmapColorType? = this.colorType, colorSpace: BitmapColorSpace? = this.colorSpace, sizeResolver: SizeResolver = this.sizeResolver, sizeMultiplier: Float? = this.sizeMultiplier, precisionDecider: PrecisionDecider = this.precisionDecider, scaleDecider: ScaleDecider = this.scaleDecider, transformations: List<Transformation>? = this.transformations, resultCachePolicy: CachePolicy = this.resultCachePolicy, placeholder: StateImage? = this.placeholder, fallback: StateImage? = this.fallback, error: StateImage? = this.error, transitionFactory: Transition.Factory? = this.transitionFactory, resizeOnDraw: Boolean? = this.resizeOnDraw, allowNullImage: Boolean? = this.allowNullImage, memoryCachePolicy: CachePolicy = this.memoryCachePolicy, componentRegistry: ComponentRegistry? = this.componentRegistry): ImageRequest","com.github.panpf.sketch.request.ImageRequest.copy"]},{"name":"fun copy(depthHolder: DepthHolder? = this.depthHolder, extras: Extras? = this.extras, downloadCachePolicy: CachePolicy? = this.downloadCachePolicy, colorType: BitmapColorType? = this.colorType, colorSpace: BitmapColorSpace? = this.colorSpace, sizeResolver: SizeResolver? = this.sizeResolver, sizeMultiplier: Float? = this.sizeMultiplier, precisionDecider: PrecisionDecider? = this.precisionDecider, scaleDecider: ScaleDecider? = this.scaleDecider, transformations: List<Transformation>? = this.transformations, resultCachePolicy: CachePolicy? = this.resultCachePolicy, placeholder: StateImage? = this.placeholder, fallback: StateImage? = this.fallback, error: StateImage? = this.error, transitionFactory: Transition.Factory? = this.transitionFactory, resizeOnDraw: Boolean? = this.resizeOnDraw, allowNullImage: Boolean? = this.allowNullImage, memoryCachePolicy: CachePolicy? = this.memoryCachePolicy, componentRegistry: ComponentRegistry? = this.componentRegistry): ImageOptions","description":"com.github.panpf.sketch.request.ImageOptions.copy","location":"sketch-core/com.github.panpf.sketch.request/-image-options/copy.html","searchKeys":["copy","fun copy(depthHolder: DepthHolder? = this.depthHolder, extras: Extras? = this.extras, downloadCachePolicy: CachePolicy? = this.downloadCachePolicy, colorType: BitmapColorType? = this.colorType, colorSpace: BitmapColorSpace? = this.colorSpace, sizeResolver: SizeResolver? = this.sizeResolver, sizeMultiplier: Float? = this.sizeMultiplier, precisionDecider: PrecisionDecider? = this.precisionDecider, scaleDecider: ScaleDecider? = this.scaleDecider, transformations: List<Transformation>? = this.transformations, resultCachePolicy: CachePolicy? = this.resultCachePolicy, placeholder: StateImage? = this.placeholder, fallback: StateImage? = this.fallback, error: StateImage? = this.error, transitionFactory: Transition.Factory? = this.transitionFactory, resizeOnDraw: Boolean? = this.resizeOnDraw, allowNullImage: Boolean? = this.allowNullImage, memoryCachePolicy: CachePolicy? = this.memoryCachePolicy, componentRegistry: ComponentRegistry? = this.componentRegistry): ImageOptions","com.github.panpf.sketch.request.ImageOptions.copy"]},{"name":"fun copyOrNull(r: Rect?): Rect?","description":"com.github.panpf.sketch.util.Rect.Companion.copyOrNull","location":"sketch-core/com.github.panpf.sketch.util/-rect/-companion/copy-or-null.html","searchKeys":["copyOrNull","fun copyOrNull(r: Rect?): Rect?","com.github.panpf.sketch.util.Rect.Companion.copyOrNull"]},{"name":"fun createBitmap(imageInfo: ImageInfo): Bitmap","description":"com.github.panpf.sketch.createBitmap","location":"sketch-core/com.github.panpf.sketch/create-bitmap.html","searchKeys":["createBitmap","fun createBitmap(imageInfo: ImageInfo): Bitmap","com.github.panpf.sketch.createBitmap"]},{"name":"fun createBitmap(width: Int, height: Int, colorType: ColorType = ColorType.N32, alphaType: ColorAlphaType = ColorAlphaType.PREMUL, colorSpace: ColorSpace = ColorSpace.sRGB): Bitmap","description":"com.github.panpf.sketch.createBitmap","location":"sketch-core/com.github.panpf.sketch/create-bitmap.html","searchKeys":["createBitmap","fun createBitmap(width: Int, height: Int, colorType: ColorType = ColorType.N32, alphaType: ColorAlphaType = ColorAlphaType.PREMUL, colorSpace: ColorSpace = ColorSpace.sRGB): Bitmap","com.github.panpf.sketch.createBitmap"]},{"name":"fun createBitmap(width: Int, height: Int, config: ColorType = ColorType.ARGB_8888): Bitmap","description":"com.github.panpf.sketch.createBitmap","location":"sketch-core/com.github.panpf.sketch/create-bitmap.html","searchKeys":["createBitmap","fun createBitmap(width: Int, height: Int, config: ColorType = ColorType.ARGB_8888): Bitmap","com.github.panpf.sketch.createBitmap"]},{"name":"fun createBitmap(width: Int, height: Int, config: ColorType = ColorType.ARGB_8888, hasAlpha: Boolean, colorSpace: ColorSpace): Bitmap","description":"com.github.panpf.sketch.createBitmap","location":"sketch-core/com.github.panpf.sketch/create-bitmap.html","searchKeys":["createBitmap","fun createBitmap(width: Int, height: Int, config: ColorType = ColorType.ARGB_8888, hasAlpha: Boolean, colorSpace: ColorSpace): Bitmap","com.github.panpf.sketch.createBitmap"]},{"name":"fun createBlurTransformed(radius: Int, hasAlphaBitmapBgColor: Int?, maskColor: Int?): String","description":"com.github.panpf.sketch.transform.createBlurTransformed","location":"sketch-core/com.github.panpf.sketch.transform/create-blur-transformed.html","searchKeys":["createBlurTransformed","fun createBlurTransformed(radius: Int, hasAlphaBitmapBgColor: Int?, maskColor: Int?): String","com.github.panpf.sketch.transform.createBlurTransformed"]},{"name":"fun createCircleCropTransformed(scale: Scale): String","description":"com.github.panpf.sketch.transform.createCircleCropTransformed","location":"sketch-core/com.github.panpf.sketch.transform/create-circle-crop-transformed.html","searchKeys":["createCircleCropTransformed","fun createCircleCropTransformed(scale: Scale): String","com.github.panpf.sketch.transform.createCircleCropTransformed"]},{"name":"fun createInSampledTransformed(inSampleSize: Int): String","description":"com.github.panpf.sketch.decode.internal.createInSampledTransformed","location":"sketch-core/com.github.panpf.sketch.decode.internal/create-in-sampled-transformed.html","searchKeys":["createInSampledTransformed","fun createInSampledTransformed(inSampleSize: Int): String","com.github.panpf.sketch.decode.internal.createInSampledTransformed"]},{"name":"fun createMaskTransformed(maskColor: Int): String","description":"com.github.panpf.sketch.transform.createMaskTransformed","location":"sketch-core/com.github.panpf.sketch.transform/create-mask-transformed.html","searchKeys":["createMaskTransformed","fun createMaskTransformed(maskColor: Int): String","com.github.panpf.sketch.transform.createMaskTransformed"]},{"name":"fun createResizeTransformed(resize: Resize): String","description":"com.github.panpf.sketch.decode.internal.createResizeTransformed","location":"sketch-core/com.github.panpf.sketch.decode.internal/create-resize-transformed.html","searchKeys":["createResizeTransformed","fun createResizeTransformed(resize: Resize): String","com.github.panpf.sketch.decode.internal.createResizeTransformed"]},{"name":"fun createRotateTransformed(degrees: Int): String","description":"com.github.panpf.sketch.transform.createRotateTransformed","location":"sketch-core/com.github.panpf.sketch.transform/create-rotate-transformed.html","searchKeys":["createRotateTransformed","fun createRotateTransformed(degrees: Int): String","com.github.panpf.sketch.transform.createRotateTransformed"]},{"name":"fun createRoundedCornersTransformed(radiusArray: FloatArray): String","description":"com.github.panpf.sketch.transform.createRoundedCornersTransformed","location":"sketch-core/com.github.panpf.sketch.transform/create-rounded-corners-transformed.html","searchKeys":["createRoundedCornersTransformed","fun createRoundedCornersTransformed(radiusArray: FloatArray): String","com.github.panpf.sketch.transform.createRoundedCornersTransformed"]},{"name":"fun createScaledTransformed(scale: Float): String","description":"com.github.panpf.sketch.decode.internal.createScaledTransformed","location":"sketch-core/com.github.panpf.sketch.decode.internal/create-scaled-transformed.html","searchKeys":["createScaledTransformed","fun createScaledTransformed(scale: Float): String","com.github.panpf.sketch.decode.internal.createScaledTransformed"]},{"name":"fun createSubsamplingTransformed(rect: Rect): String","description":"com.github.panpf.sketch.decode.internal.createSubsamplingTransformed","location":"sketch-core/com.github.panpf.sketch.decode.internal/create-subsampling-transformed.html","searchKeys":["createSubsamplingTransformed","fun createSubsamplingTransformed(rect: Rect): String","com.github.panpf.sketch.decode.internal.createSubsamplingTransformed"]},{"name":"fun crossfade(durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, alwaysUse: Boolean = CrossfadeTransition.DEFAULT_ALWAYS_USE): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.crossfade","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/crossfade.html","searchKeys":["crossfade","fun crossfade(durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, alwaysUse: Boolean = CrossfadeTransition.DEFAULT_ALWAYS_USE): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.crossfade"]},{"name":"fun crossfade(durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, alwaysUse: Boolean = CrossfadeTransition.DEFAULT_ALWAYS_USE): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.crossfade","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/crossfade.html","searchKeys":["crossfade","fun crossfade(durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, alwaysUse: Boolean = CrossfadeTransition.DEFAULT_ALWAYS_USE): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.crossfade"]},{"name":"fun crossfade(enable: Boolean): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.crossfade","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/crossfade.html","searchKeys":["crossfade","fun crossfade(enable: Boolean): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.crossfade"]},{"name":"fun crossfade(enable: Boolean): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.crossfade","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/crossfade.html","searchKeys":["crossfade","fun crossfade(enable: Boolean): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.crossfade"]},{"name":"fun d(lazyMsg: () -> String)","description":"com.github.panpf.sketch.util.Logger.d","location":"sketch-core/com.github.panpf.sketch.util/-logger/d.html","searchKeys":["d","fun d(lazyMsg: () -> String)","com.github.panpf.sketch.util.Logger.d"]},{"name":"fun d(msg: String)","description":"com.github.panpf.sketch.util.Logger.d","location":"sketch-core/com.github.panpf.sketch.util/-logger/d.html","searchKeys":["d","fun d(msg: String)","com.github.panpf.sketch.util.Logger.d"]},{"name":"fun d(tr: Throwable?, lazyMsg: () -> String)","description":"com.github.panpf.sketch.util.Logger.d","location":"sketch-core/com.github.panpf.sketch.util/-logger/d.html","searchKeys":["d","fun d(tr: Throwable?, lazyMsg: () -> String)","com.github.panpf.sketch.util.Logger.d"]},{"name":"fun d(tr: Throwable?, msg: String)","description":"com.github.panpf.sketch.util.Logger.d","location":"sketch-core/com.github.panpf.sketch.util/-logger/d.html","searchKeys":["d","fun d(tr: Throwable?, msg: String)","com.github.panpf.sketch.util.Logger.d"]},{"name":"fun decode(s: String, convertPlus: Boolean = false, throwOnFailure: Boolean = false): String","description":"com.github.panpf.sketch.util.UriCodec.decode","location":"sketch-core/com.github.panpf.sketch.util/-uri-codec/decode.html","searchKeys":["decode","fun decode(s: String, convertPlus: Boolean = false, throwOnFailure: Boolean = false): String","com.github.panpf.sketch.util.UriCodec.decode"]},{"name":"fun decodeOrNull(s: String?, convertPlus: Boolean = false, throwOnFailure: Boolean = false): String?","description":"com.github.panpf.sketch.util.UriCodec.decodeOrNull","location":"sketch-core/com.github.panpf.sketch.util/-uri-codec/decode-or-null.html","searchKeys":["decodeOrNull","fun decodeOrNull(s: String?, convertPlus: Boolean = false, throwOnFailure: Boolean = false): String?","com.github.panpf.sketch.util.UriCodec.decodeOrNull"]},{"name":"fun decodeParallelismLimited(parallelism: Int?): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.decodeParallelismLimited","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/decode-parallelism-limited.html","searchKeys":["decodeParallelismLimited","fun decodeParallelismLimited(parallelism: Int?): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.decodeParallelismLimited"]},{"name":"fun defaultOptions(options: ImageOptions?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.defaultOptions","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/default-options.html","searchKeys":["defaultOptions","fun defaultOptions(options: ImageOptions?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.defaultOptions"]},{"name":"fun depth(depth: Depth?, from: String? = null): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.depth","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/depth.html","searchKeys":["depth","fun depth(depth: Depth?, from: String? = null): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.depth"]},{"name":"fun depth(depth: Depth?, from: String? = null): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.depth","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/depth.html","searchKeys":["depth","fun depth(depth: Depth?, from: String? = null): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.depth"]},{"name":"fun directory(directory: Path? = null): DiskCache.Builder","description":"com.github.panpf.sketch.cache.DiskCache.Builder.directory","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-builder/directory.html","searchKeys":["directory","fun directory(directory: Path? = null): DiskCache.Builder","com.github.panpf.sketch.cache.DiskCache.Builder.directory"]},{"name":"fun downloadCache(diskCache: DiskCache?): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.downloadCache","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/download-cache.html","searchKeys":["downloadCache","fun downloadCache(diskCache: DiskCache?): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.downloadCache"]},{"name":"fun downloadCache(initializer: () -> DiskCache): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.downloadCache","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/download-cache.html","searchKeys":["downloadCache","fun downloadCache(initializer: () -> DiskCache): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.downloadCache"]},{"name":"fun downloadCacheKey(key: String?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.downloadCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/download-cache-key.html","searchKeys":["downloadCacheKey","fun downloadCacheKey(key: String?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.downloadCacheKey"]},{"name":"fun downloadCacheKey(key: String?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.downloadCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/download-cache-key.html","searchKeys":["downloadCacheKey","fun downloadCacheKey(key: String?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.downloadCacheKey"]},{"name":"fun downloadCacheKeyMapper(mapper: CacheKeyMapper?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.downloadCacheKeyMapper","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/download-cache-key-mapper.html","searchKeys":["downloadCacheKeyMapper","fun downloadCacheKeyMapper(mapper: CacheKeyMapper?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.downloadCacheKeyMapper"]},{"name":"fun downloadCacheKeyMapper(mapper: CacheKeyMapper?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.downloadCacheKeyMapper","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/download-cache-key-mapper.html","searchKeys":["downloadCacheKeyMapper","fun downloadCacheKeyMapper(mapper: CacheKeyMapper?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.downloadCacheKeyMapper"]},{"name":"fun downloadCacheOptions(initializer: () -> DiskCache.Options): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.downloadCacheOptions","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/download-cache-options.html","searchKeys":["downloadCacheOptions","fun downloadCacheOptions(initializer: () -> DiskCache.Options): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.downloadCacheOptions"]},{"name":"fun downloadCacheOptions(options: DiskCache.Options): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.downloadCacheOptions","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/download-cache-options.html","searchKeys":["downloadCacheOptions","fun downloadCacheOptions(options: DiskCache.Options): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.downloadCacheOptions"]},{"name":"fun downloadCachePolicy(cachePolicy: CachePolicy?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.downloadCachePolicy","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/download-cache-policy.html","searchKeys":["downloadCachePolicy","fun downloadCachePolicy(cachePolicy: CachePolicy?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.downloadCachePolicy"]},{"name":"fun downloadCachePolicy(cachePolicy: CachePolicy?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.downloadCachePolicy","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/download-cache-policy.html","searchKeys":["downloadCachePolicy","fun downloadCachePolicy(cachePolicy: CachePolicy?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.downloadCachePolicy"]},{"name":"fun e(lazyMsg: () -> String)","description":"com.github.panpf.sketch.util.Logger.e","location":"sketch-core/com.github.panpf.sketch.util/-logger/e.html","searchKeys":["e","fun e(lazyMsg: () -> String)","com.github.panpf.sketch.util.Logger.e"]},{"name":"fun e(msg: String)","description":"com.github.panpf.sketch.util.Logger.e","location":"sketch-core/com.github.panpf.sketch.util/-logger/e.html","searchKeys":["e","fun e(msg: String)","com.github.panpf.sketch.util.Logger.e"]},{"name":"fun e(tr: Throwable?, lazyMsg: () -> String)","description":"com.github.panpf.sketch.util.Logger.e","location":"sketch-core/com.github.panpf.sketch.util/-logger/e.html","searchKeys":["e","fun e(tr: Throwable?, lazyMsg: () -> String)","com.github.panpf.sketch.util.Logger.e"]},{"name":"fun e(tr: Throwable?, msg: String)","description":"com.github.panpf.sketch.util.Logger.e","location":"sketch-core/com.github.panpf.sketch.util/-logger/e.html","searchKeys":["e","fun e(tr: Throwable?, msg: String)","com.github.panpf.sketch.util.Logger.e"]},{"name":"fun encode(s: String): String","description":"com.github.panpf.sketch.util.UriCodec.encode","location":"sketch-core/com.github.panpf.sketch.util/-uri-codec/encode.html","searchKeys":["encode","fun encode(s: String): String","com.github.panpf.sketch.util.UriCodec.encode"]},{"name":"fun encode(s: String, allow: String?): String","description":"com.github.panpf.sketch.util.UriCodec.encode","location":"sketch-core/com.github.panpf.sketch.util/-uri-codec/encode.html","searchKeys":["encode","fun encode(s: String, allow: String?): String","com.github.panpf.sketch.util.UriCodec.encode"]},{"name":"fun encodeOrNull(s: String?): String?","description":"com.github.panpf.sketch.util.UriCodec.encodeOrNull","location":"sketch-core/com.github.panpf.sketch.util/-uri-codec/encode-or-null.html","searchKeys":["encodeOrNull","fun encodeOrNull(s: String?): String?","com.github.panpf.sketch.util.UriCodec.encodeOrNull"]},{"name":"fun encodeOrNull(s: String?, allow: String?): String?","description":"com.github.panpf.sketch.util.UriCodec.encodeOrNull","location":"sketch-core/com.github.panpf.sketch.util/-uri-codec/encode-or-null.html","searchKeys":["encodeOrNull","fun encodeOrNull(s: String?, allow: String?): String?","com.github.panpf.sketch.util.UriCodec.encodeOrNull"]},{"name":"fun enqueue(request: ImageRequest): Disposable","description":"com.github.panpf.sketch.Sketch.enqueue","location":"sketch-core/com.github.panpf.sketch/-sketch/enqueue.html","searchKeys":["enqueue","fun enqueue(request: ImageRequest): Disposable","com.github.panpf.sketch.Sketch.enqueue"]},{"name":"fun enqueueDownload(request: ImageRequest): Deferred<Result<DownloadData>>","description":"com.github.panpf.sketch.Sketch.enqueueDownload","location":"sketch-core/com.github.panpf.sketch/-sketch/enqueue-download.html","searchKeys":["enqueueDownload","fun enqueueDownload(request: ImageRequest): Deferred<Result<DownloadData>>","com.github.panpf.sketch.Sketch.enqueueDownload"]},{"name":"fun entry(key: String): Extras.Entry?","description":"com.github.panpf.sketch.request.Extras.entry","location":"sketch-core/com.github.panpf.sketch.request/-extras/entry.html","searchKeys":["entry","fun entry(key: String): Extras.Entry?","com.github.panpf.sketch.request.Extras.entry"]},{"name":"fun error(stateImage: StateImage?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.error","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/error.html","searchKeys":["error","fun error(stateImage: StateImage?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.error"]},{"name":"fun error(stateImage: StateImage?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.error","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/error.html","searchKeys":["error","fun error(stateImage: StateImage?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.error"]},{"name":"fun exactCenterX(): Float","description":"com.github.panpf.sketch.util.Rect.exactCenterX","location":"sketch-core/com.github.panpf.sketch.util/-rect/exact-center-x.html","searchKeys":["exactCenterX","fun exactCenterX(): Float","com.github.panpf.sketch.util.Rect.exactCenterX"]},{"name":"fun exactCenterY(): Float","description":"com.github.panpf.sketch.util.Rect.exactCenterY","location":"sketch-core/com.github.panpf.sketch.util/-rect/exact-center-y.html","searchKeys":["exactCenterY","fun exactCenterY(): Float","com.github.panpf.sketch.util.Rect.exactCenterY"]},{"name":"fun extras(extras: Extras?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.extras","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/extras.html","searchKeys":["extras","fun extras(extras: Extras?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.extras"]},{"name":"fun extras(extras: Extras?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.extras","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/extras.html","searchKeys":["extras","fun extras(extras: Extras?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.extras"]},{"name":"fun fallback(stateImage: StateImage?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.fallback","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/fallback.html","searchKeys":["fallback","fun fallback(stateImage: StateImage?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.fallback"]},{"name":"fun fallback(stateImage: StateImage?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.fallback","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/fallback.html","searchKeys":["fallback","fun fallback(stateImage: StateImage?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.fallback"]},{"name":"fun fastGaussianBlur(pixels: IntArray, width: Int, height: Int, radius: Int)","description":"com.github.panpf.sketch.util.fastGaussianBlur","location":"sketch-core/com.github.panpf.sketch.util/fast-gaussian-blur.html","searchKeys":["fastGaussianBlur","fun fastGaussianBlur(pixels: IntArray, width: Int, height: Int, radius: Int)","com.github.panpf.sketch.util.fastGaussianBlur"]},{"name":"fun fileSystem(fileSystem: FileSystem?): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.fileSystem","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/file-system.html","searchKeys":["fileSystem","fun fileSystem(fileSystem: FileSystem?): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.fileSystem"]},{"name":"fun flattenToString(): String","description":"com.github.panpf.sketch.util.Rect.flattenToString","location":"sketch-core/com.github.panpf.sketch.util/-rect/flatten-to-string.html","searchKeys":["flattenToString","fun flattenToString(): String","com.github.panpf.sketch.util.Rect.flattenToString"]},{"name":"fun flush()","description":"com.github.panpf.sketch.util.Logger.flush","location":"sketch-core/com.github.panpf.sketch.util/-logger/flush.html","searchKeys":["flush","fun flush()","com.github.panpf.sketch.util.Logger.flush"]},{"name":"fun fromMetadataString(metadataString: String): ResultCacheDecodeInterceptor.Metadata","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.Companion.fromMetadataString","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/-metadata/-companion/from-metadata-string.html","searchKeys":["fromMetadataString","fun fromMetadataString(metadataString: String): ResultCacheDecodeInterceptor.Metadata","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.Companion.fromMetadataString"]},{"name":"fun getDecodeInterceptorList(request: ImageRequest): List<DecodeInterceptor>","description":"com.github.panpf.sketch.Components.getDecodeInterceptorList","location":"sketch-core/com.github.panpf.sketch/-components/get-decode-interceptor-list.html","searchKeys":["getDecodeInterceptorList","fun getDecodeInterceptorList(request: ImageRequest): List<DecodeInterceptor>","com.github.panpf.sketch.Components.getDecodeInterceptorList"]},{"name":"fun getExtensionFromMimeType(mimeType: String): String?","description":"com.github.panpf.sketch.util.MimeTypeMap.getExtensionFromMimeType","location":"sketch-core/com.github.panpf.sketch.util/-mime-type-map/get-extension-from-mime-type.html","searchKeys":["getExtensionFromMimeType","fun getExtensionFromMimeType(mimeType: String): String?","com.github.panpf.sketch.util.MimeTypeMap.getExtensionFromMimeType"]},{"name":"fun getExtensionFromUrl(url: String): String?","description":"com.github.panpf.sketch.util.MimeTypeMap.getExtensionFromUrl","location":"sketch-core/com.github.panpf.sketch.util/-mime-type-map/get-extension-from-url.html","searchKeys":["getExtensionFromUrl","fun getExtensionFromUrl(url: String): String?","com.github.panpf.sketch.util.MimeTypeMap.getExtensionFromUrl"]},{"name":"fun getMaxBitmapSizeOr(targetSize: Size): Size","description":"com.github.panpf.sketch.decode.internal.getMaxBitmapSizeOr","location":"sketch-core/com.github.panpf.sketch.decode.internal/get-max-bitmap-size-or.html","searchKeys":["getMaxBitmapSizeOr","fun getMaxBitmapSizeOr(targetSize: Size): Size","com.github.panpf.sketch.decode.internal.getMaxBitmapSizeOr"]},{"name":"fun getMimeTypeFromExtension(extension: String): String?","description":"com.github.panpf.sketch.util.MimeTypeMap.getMimeTypeFromExtension","location":"sketch-core/com.github.panpf.sketch.util/-mime-type-map/get-mime-type-from-extension.html","searchKeys":["getMimeTypeFromExtension","fun getMimeTypeFromExtension(extension: String): String?","com.github.panpf.sketch.util.MimeTypeMap.getMimeTypeFromExtension"]},{"name":"fun getMimeTypeFromUrl(url: String): String?","description":"com.github.panpf.sketch.util.MimeTypeMap.getMimeTypeFromUrl","location":"sketch-core/com.github.panpf.sketch.util/-mime-type-map/get-mime-type-from-url.html","searchKeys":["getMimeTypeFromUrl","fun getMimeTypeFromUrl(url: String): String?","com.github.panpf.sketch.util.MimeTypeMap.getMimeTypeFromUrl"]},{"name":"fun getRequestInterceptorList(request: ImageRequest): List<RequestInterceptor>","description":"com.github.panpf.sketch.Components.getRequestInterceptorList","location":"sketch-core/com.github.panpf.sketch/-components/get-request-interceptor-list.html","searchKeys":["getRequestInterceptorList","fun getRequestInterceptorList(request: ImageRequest): List<RequestInterceptor>","com.github.panpf.sketch.Components.getRequestInterceptorList"]},{"name":"fun globalImageOptions(globalImageOptions: ImageOptions?): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.globalImageOptions","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/global-image-options.html","searchKeys":["globalImageOptions","fun globalImageOptions(globalImageOptions: ImageOptions?): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.globalImageOptions"]},{"name":"fun height(): Int","description":"com.github.panpf.sketch.util.Rect.height","location":"sketch-core/com.github.panpf.sketch.util/-rect/height.html","searchKeys":["height","fun height(): Int","com.github.panpf.sketch.util.Rect.height"]},{"name":"fun i(lazyMsg: () -> String)","description":"com.github.panpf.sketch.util.Logger.i","location":"sketch-core/com.github.panpf.sketch.util/-logger/i.html","searchKeys":["i","fun i(lazyMsg: () -> String)","com.github.panpf.sketch.util.Logger.i"]},{"name":"fun i(msg: String)","description":"com.github.panpf.sketch.util.Logger.i","location":"sketch-core/com.github.panpf.sketch.util/-logger/i.html","searchKeys":["i","fun i(msg: String)","com.github.panpf.sketch.util.Logger.i"]},{"name":"fun i(tr: Throwable?, lazyMsg: () -> String)","description":"com.github.panpf.sketch.util.Logger.i","location":"sketch-core/com.github.panpf.sketch.util/-logger/i.html","searchKeys":["i","fun i(tr: Throwable?, lazyMsg: () -> String)","com.github.panpf.sketch.util.Logger.i"]},{"name":"fun i(tr: Throwable?, msg: String)","description":"com.github.panpf.sketch.util.Logger.i","location":"sketch-core/com.github.panpf.sketch.util/-logger/i.html","searchKeys":["i","fun i(tr: Throwable?, msg: String)","com.github.panpf.sketch.util.Logger.i"]},{"name":"fun inset(dx: Int, dy: Int)","description":"com.github.panpf.sketch.util.Rect.inset","location":"sketch-core/com.github.panpf.sketch.util/-rect/inset.html","searchKeys":["inset","fun inset(dx: Int, dy: Int)","com.github.panpf.sketch.util.Rect.inset"]},{"name":"fun inset(insets: Rect)","description":"com.github.panpf.sketch.util.Rect.inset","location":"sketch-core/com.github.panpf.sketch.util/-rect/inset.html","searchKeys":["inset","fun inset(insets: Rect)","com.github.panpf.sketch.util.Rect.inset"]},{"name":"fun inset(left: Int, top: Int, right: Int, bottom: Int)","description":"com.github.panpf.sketch.util.Rect.inset","location":"sketch-core/com.github.panpf.sketch.util/-rect/inset.html","searchKeys":["inset","fun inset(left: Int, top: Int, right: Int, bottom: Int)","com.github.panpf.sketch.util.Rect.inset"]},{"name":"fun interface AttachObserver","description":"com.github.panpf.sketch.request.internal.AttachObserver","location":"sketch-core/com.github.panpf.sketch.request.internal/-attach-observer/index.html","searchKeys":["AttachObserver","fun interface AttachObserver","com.github.panpf.sketch.request.internal.AttachObserver"]},{"name":"fun interface Fetcher","description":"com.github.panpf.sketch.fetch.Fetcher","location":"sketch-core/com.github.panpf.sketch.fetch/-fetcher/index.html","searchKeys":["Fetcher","fun interface Fetcher","com.github.panpf.sketch.fetch.Fetcher"]},{"name":"fun interface ProgressListener","description":"com.github.panpf.sketch.request.ProgressListener","location":"sketch-core/com.github.panpf.sketch.request/-progress-listener/index.html","searchKeys":["ProgressListener","fun interface ProgressListener","com.github.panpf.sketch.request.ProgressListener"]},{"name":"fun interface Transition","description":"com.github.panpf.sketch.transition.Transition","location":"sketch-core/com.github.panpf.sketch.transition/-transition/index.html","searchKeys":["Transition","fun interface Transition","com.github.panpf.sketch.transition.Transition"]},{"name":"fun intersect(left: Int, top: Int, right: Int, bottom: Int): Boolean","description":"com.github.panpf.sketch.util.Rect.intersect","location":"sketch-core/com.github.panpf.sketch.util/-rect/intersect.html","searchKeys":["intersect","fun intersect(left: Int, top: Int, right: Int, bottom: Int): Boolean","com.github.panpf.sketch.util.Rect.intersect"]},{"name":"fun intersect(r: Rect): Boolean","description":"com.github.panpf.sketch.util.Rect.intersect","location":"sketch-core/com.github.panpf.sketch.util/-rect/intersect.html","searchKeys":["intersect","fun intersect(r: Rect): Boolean","com.github.panpf.sketch.util.Rect.intersect"]},{"name":"fun intersectUnchecked(other: Rect)","description":"com.github.panpf.sketch.util.Rect.intersectUnchecked","location":"sketch-core/com.github.panpf.sketch.util/-rect/intersect-unchecked.html","searchKeys":["intersectUnchecked","fun intersectUnchecked(other: Rect)","com.github.panpf.sketch.util.Rect.intersectUnchecked"]},{"name":"fun intersects(a: Rect, b: Rect): Boolean","description":"com.github.panpf.sketch.util.Rect.Companion.intersects","location":"sketch-core/com.github.panpf.sketch.util/-rect/-companion/intersects.html","searchKeys":["intersects","fun intersects(a: Rect, b: Rect): Boolean","com.github.panpf.sketch.util.Rect.Companion.intersects"]},{"name":"fun intersects(left: Int, top: Int, right: Int, bottom: Int): Boolean","description":"com.github.panpf.sketch.util.Rect.intersects","location":"sketch-core/com.github.panpf.sketch.util/-rect/intersects.html","searchKeys":["intersects","fun intersects(left: Int, top: Int, right: Int, bottom: Int): Boolean","com.github.panpf.sketch.util.Rect.intersects"]},{"name":"fun isAssetUri(uri: <Error class: unknown class>): Boolean","description":"com.github.panpf.sketch.fetch.isAssetUri","location":"sketch-core/com.github.panpf.sketch.fetch/is-asset-uri.html","searchKeys":["isAssetUri","fun isAssetUri(uri: <Error class: unknown class>): Boolean","com.github.panpf.sketch.fetch.isAssetUri"]},{"name":"fun isBase64Uri(uri: Uri): Boolean","description":"com.github.panpf.sketch.fetch.isBase64Uri","location":"sketch-core/com.github.panpf.sketch.fetch/is-base64-uri.html","searchKeys":["isBase64Uri","fun isBase64Uri(uri: Uri): Boolean","com.github.panpf.sketch.fetch.isBase64Uri"]},{"name":"fun isBlurTransformed(transformed: String): Boolean","description":"com.github.panpf.sketch.transform.isBlurTransformed","location":"sketch-core/com.github.panpf.sketch.transform/is-blur-transformed.html","searchKeys":["isBlurTransformed","fun isBlurTransformed(transformed: String): Boolean","com.github.panpf.sketch.transform.isBlurTransformed"]},{"name":"fun isCircleCropTransformed(transformed: String): Boolean","description":"com.github.panpf.sketch.transform.isCircleCropTransformed","location":"sketch-core/com.github.panpf.sketch.transform/is-circle-crop-transformed.html","searchKeys":["isCircleCropTransformed","fun isCircleCropTransformed(transformed: String): Boolean","com.github.panpf.sketch.transform.isCircleCropTransformed"]},{"name":"fun isContentUri(uri: <Error class: unknown class>): Boolean","description":"com.github.panpf.sketch.fetch.isContentUri","location":"sketch-core/com.github.panpf.sketch.fetch/is-content-uri.html","searchKeys":["isContentUri","fun isContentUri(uri: <Error class: unknown class>): Boolean","com.github.panpf.sketch.fetch.isContentUri"]},{"name":"fun isEmpty(): Boolean","description":"com.github.panpf.sketch.ComponentRegistry.isEmpty","location":"sketch-core/com.github.panpf.sketch/-component-registry/is-empty.html","searchKeys":["isEmpty","fun isEmpty(): Boolean","com.github.panpf.sketch.ComponentRegistry.isEmpty"]},{"name":"fun isEmpty(): Boolean","description":"com.github.panpf.sketch.request.Extras.isEmpty","location":"sketch-core/com.github.panpf.sketch.request/-extras/is-empty.html","searchKeys":["isEmpty","fun isEmpty(): Boolean","com.github.panpf.sketch.request.Extras.isEmpty"]},{"name":"fun isEmpty(): Boolean","description":"com.github.panpf.sketch.request.ImageOptions.isEmpty","location":"sketch-core/com.github.panpf.sketch.request/-image-options/is-empty.html","searchKeys":["isEmpty","fun isEmpty(): Boolean","com.github.panpf.sketch.request.ImageOptions.isEmpty"]},{"name":"fun isFileUri(uri: Uri): Boolean","description":"com.github.panpf.sketch.fetch.isFileUri","location":"sketch-core/com.github.panpf.sketch.fetch/is-file-uri.html","searchKeys":["isFileUri","fun isFileUri(uri: Uri): Boolean","com.github.panpf.sketch.fetch.isFileUri"]},{"name":"fun isInSampledTransformed(transformed: String): Boolean","description":"com.github.panpf.sketch.decode.internal.isInSampledTransformed","location":"sketch-core/com.github.panpf.sketch.decode.internal/is-in-sampled-transformed.html","searchKeys":["isInSampledTransformed","fun isInSampledTransformed(transformed: String): Boolean","com.github.panpf.sketch.decode.internal.isInSampledTransformed"]},{"name":"fun isKotlinResourceUri(uri: <Error class: unknown class>): Boolean","description":"com.github.panpf.sketch.fetch.isKotlinResourceUri","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]is-kotlin-resource-uri.html","searchKeys":["isKotlinResourceUri","fun isKotlinResourceUri(uri: <Error class: unknown class>): Boolean","com.github.panpf.sketch.fetch.isKotlinResourceUri"]},{"name":"fun isKotlinResourceUri(uri: <Error class: unknown class>): Boolean","description":"com.github.panpf.sketch.fetch.isKotlinResourceUri","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]is-kotlin-resource-uri.html","searchKeys":["isKotlinResourceUri","fun isKotlinResourceUri(uri: <Error class: unknown class>): Boolean","com.github.panpf.sketch.fetch.isKotlinResourceUri"]},{"name":"fun isLoggable(level: Logger.Level): Boolean","description":"com.github.panpf.sketch.util.Logger.isLoggable","location":"sketch-core/com.github.panpf.sketch.util/-logger/is-loggable.html","searchKeys":["isLoggable","fun isLoggable(level: Logger.Level): Boolean","com.github.panpf.sketch.util.Logger.isLoggable"]},{"name":"fun isMaskTransformed(transformed: String): Boolean","description":"com.github.panpf.sketch.transform.isMaskTransformed","location":"sketch-core/com.github.panpf.sketch.transform/is-mask-transformed.html","searchKeys":["isMaskTransformed","fun isMaskTransformed(transformed: String): Boolean","com.github.panpf.sketch.transform.isMaskTransformed"]},{"name":"fun isResizeTransformed(transformed: String): Boolean","description":"com.github.panpf.sketch.decode.internal.isResizeTransformed","location":"sketch-core/com.github.panpf.sketch.decode.internal/is-resize-transformed.html","searchKeys":["isResizeTransformed","fun isResizeTransformed(transformed: String): Boolean","com.github.panpf.sketch.decode.internal.isResizeTransformed"]},{"name":"fun isResourceUri(uri: <Error class: unknown class>): Boolean","description":"com.github.panpf.sketch.fetch.isResourceUri","location":"sketch-core/com.github.panpf.sketch.fetch/is-resource-uri.html","searchKeys":["isResourceUri","fun isResourceUri(uri: <Error class: unknown class>): Boolean","com.github.panpf.sketch.fetch.isResourceUri"]},{"name":"fun isRotateTransformed(transformed: String): Boolean","description":"com.github.panpf.sketch.transform.isRotateTransformed","location":"sketch-core/com.github.panpf.sketch.transform/is-rotate-transformed.html","searchKeys":["isRotateTransformed","fun isRotateTransformed(transformed: String): Boolean","com.github.panpf.sketch.transform.isRotateTransformed"]},{"name":"fun isRoundedCornersTransformed(transformed: String): Boolean","description":"com.github.panpf.sketch.transform.isRoundedCornersTransformed","location":"sketch-core/com.github.panpf.sketch.transform/is-rounded-corners-transformed.html","searchKeys":["isRoundedCornersTransformed","fun isRoundedCornersTransformed(transformed: String): Boolean","com.github.panpf.sketch.transform.isRoundedCornersTransformed"]},{"name":"fun isScaledTransformed(transformed: String): Boolean","description":"com.github.panpf.sketch.decode.internal.isScaledTransformed","location":"sketch-core/com.github.panpf.sketch.decode.internal/is-scaled-transformed.html","searchKeys":["isScaledTransformed","fun isScaledTransformed(transformed: String): Boolean","com.github.panpf.sketch.decode.internal.isScaledTransformed"]},{"name":"fun isSubsamplingTransformed(transformed: String): Boolean","description":"com.github.panpf.sketch.decode.internal.isSubsamplingTransformed","location":"sketch-core/com.github.panpf.sketch.decode.internal/is-subsampling-transformed.html","searchKeys":["isSubsamplingTransformed","fun isSubsamplingTransformed(transformed: String): Boolean","com.github.panpf.sketch.decode.internal.isSubsamplingTransformed"]},{"name":"fun key(it: Any): String","description":"com.github.panpf.sketch.util.key","location":"sketch-core/com.github.panpf.sketch.util/key.html","searchKeys":["key","fun key(it: Any): String","com.github.panpf.sketch.util.key"]},{"name":"fun keyOrNull(it: Any?): String?","description":"com.github.panpf.sketch.util.keyOrNull","location":"sketch-core/com.github.panpf.sketch.util/key-or-null.html","searchKeys":["keyOrNull","fun keyOrNull(it: Any?): String?","com.github.panpf.sketch.util.keyOrNull"]},{"name":"fun keys(): Set<String>","description":"com.github.panpf.sketch.request.Extras.keys","location":"sketch-core/com.github.panpf.sketch.request/-extras/keys.html","searchKeys":["keys","fun keys(): Set<String>","com.github.panpf.sketch.request.Extras.keys"]},{"name":"fun lifecycle(lifecycle: Lifecycle?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.lifecycle","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/lifecycle.html","searchKeys":["lifecycle","fun lifecycle(lifecycle: Lifecycle?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.lifecycle"]},{"name":"fun lifecycle(lifecycleResolver: LifecycleResolver?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.lifecycle","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/lifecycle.html","searchKeys":["lifecycle","fun lifecycle(lifecycleResolver: LifecycleResolver?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.lifecycle"]},{"name":"fun lifecycle(lifecycleResolver: LifecycleResolver?): RequestOptions.Builder","description":"com.github.panpf.sketch.request.internal.RequestOptions.Builder.lifecycle","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-options/-builder/lifecycle.html","searchKeys":["lifecycle","fun lifecycle(lifecycleResolver: LifecycleResolver?): RequestOptions.Builder","com.github.panpf.sketch.request.internal.RequestOptions.Builder.lifecycle"]},{"name":"fun log(level: Logger.Level, lazyMsg: () -> String)","description":"com.github.panpf.sketch.util.Logger.log","location":"sketch-core/com.github.panpf.sketch.util/-logger/log.html","searchKeys":["log","fun log(level: Logger.Level, lazyMsg: () -> String)","com.github.panpf.sketch.util.Logger.log"]},{"name":"fun log(level: Logger.Level, msg: String)","description":"com.github.panpf.sketch.util.Logger.log","location":"sketch-core/com.github.panpf.sketch.util/-logger/log.html","searchKeys":["log","fun log(level: Logger.Level, msg: String)","com.github.panpf.sketch.util.Logger.log"]},{"name":"fun log(level: Logger.Level, tr: Throwable?, lazyMsg: () -> String)","description":"com.github.panpf.sketch.util.Logger.log","location":"sketch-core/com.github.panpf.sketch.util/-logger/log.html","searchKeys":["log","fun log(level: Logger.Level, tr: Throwable?, lazyMsg: () -> String)","com.github.panpf.sketch.util.Logger.log"]},{"name":"fun log(level: Logger.Level, tr: Throwable?, msg: String)","description":"com.github.panpf.sketch.util.Logger.log","location":"sketch-core/com.github.panpf.sketch.util/-logger/log.html","searchKeys":["log","fun log(level: Logger.Level, tr: Throwable?, msg: String)","com.github.panpf.sketch.util.Logger.log"]},{"name":"fun logger(level: Logger.Level = Level.Info, pipeline: Logger.Pipeline = defaultLogPipeline()): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.logger","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/logger.html","searchKeys":["logger","fun logger(level: Logger.Level = Level.Info, pipeline: Logger.Pipeline = defaultLogPipeline()): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.logger"]},{"name":"fun logger(logger: Logger): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.logger","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/logger.html","searchKeys":["logger","fun logger(logger: Logger): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.logger"]},{"name":"fun matched(mimeType: String?): Boolean","description":"com.github.panpf.sketch.decode.internal.ImageFormat.matched","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/matched.html","searchKeys":["matched","fun matched(mimeType: String?): Boolean","com.github.panpf.sketch.decode.internal.ImageFormat.matched"]},{"name":"fun maxSize(size: Long? = null): DiskCache.Builder","description":"com.github.panpf.sketch.cache.DiskCache.Builder.maxSize","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-builder/max-size.html","searchKeys":["maxSize","fun maxSize(size: Long? = null): DiskCache.Builder","com.github.panpf.sketch.cache.DiskCache.Builder.maxSize"]},{"name":"fun maxSizeBytes(size: Long): MemoryCache.Builder","description":"com.github.panpf.sketch.cache.MemoryCache.Builder.maxSizeBytes","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/-builder/max-size-bytes.html","searchKeys":["maxSizeBytes","fun maxSizeBytes(size: Long): MemoryCache.Builder","com.github.panpf.sketch.cache.MemoryCache.Builder.maxSizeBytes"]},{"name":"fun maxSizePercent(percent: Double): MemoryCache.Builder","description":"com.github.panpf.sketch.cache.MemoryCache.Builder.maxSizePercent","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/-builder/max-size-percent.html","searchKeys":["maxSizePercent","fun maxSizePercent(percent: Double): MemoryCache.Builder","com.github.panpf.sketch.cache.MemoryCache.Builder.maxSizePercent"]},{"name":"fun memoryCache(initializer: () -> MemoryCache): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.memoryCache","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/memory-cache.html","searchKeys":["memoryCache","fun memoryCache(initializer: () -> MemoryCache): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.memoryCache"]},{"name":"fun memoryCache(memoryCache: MemoryCache?): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.memoryCache","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/memory-cache.html","searchKeys":["memoryCache","fun memoryCache(memoryCache: MemoryCache?): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.memoryCache"]},{"name":"fun memoryCacheKey(key: String?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.memoryCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/memory-cache-key.html","searchKeys":["memoryCacheKey","fun memoryCacheKey(key: String?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.memoryCacheKey"]},{"name":"fun memoryCacheKey(key: String?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.memoryCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/memory-cache-key.html","searchKeys":["memoryCacheKey","fun memoryCacheKey(key: String?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.memoryCacheKey"]},{"name":"fun memoryCacheKeyMapper(mapper: CacheKeyMapper?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.memoryCacheKeyMapper","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/memory-cache-key-mapper.html","searchKeys":["memoryCacheKeyMapper","fun memoryCacheKeyMapper(mapper: CacheKeyMapper?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.memoryCacheKeyMapper"]},{"name":"fun memoryCacheKeyMapper(mapper: CacheKeyMapper?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.memoryCacheKeyMapper","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/memory-cache-key-mapper.html","searchKeys":["memoryCacheKeyMapper","fun memoryCacheKeyMapper(mapper: CacheKeyMapper?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.memoryCacheKeyMapper"]},{"name":"fun memoryCachePolicy(cachePolicy: CachePolicy?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.memoryCachePolicy","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/memory-cache-policy.html","searchKeys":["memoryCachePolicy","fun memoryCachePolicy(cachePolicy: CachePolicy?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.memoryCachePolicy"]},{"name":"fun memoryCachePolicy(cachePolicy: CachePolicy?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.memoryCachePolicy","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/memory-cache-policy.html","searchKeys":["memoryCachePolicy","fun memoryCachePolicy(cachePolicy: CachePolicy?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.memoryCachePolicy"]},{"name":"fun merge(options: ImageOptions?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.merge","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/merge.html","searchKeys":["merge","fun merge(options: ImageOptions?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.merge"]},{"name":"fun merge(options: ImageOptions?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.merge","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/merge.html","searchKeys":["merge","fun merge(options: ImageOptions?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.merge"]},{"name":"fun mergeOptions(options: DiskCache.Options): DiskCache.Builder","description":"com.github.panpf.sketch.cache.DiskCache.Builder.mergeOptions","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-builder/merge-options.html","searchKeys":["mergeOptions","fun mergeOptions(options: DiskCache.Options): DiskCache.Builder","com.github.panpf.sketch.cache.DiskCache.Builder.mergeOptions"]},{"name":"fun merged(options: ImageOptions?): ImageOptions","description":"com.github.panpf.sketch.request.ImageOptions.merged","location":"sketch-core/com.github.panpf.sketch.request/-image-options/merged.html","searchKeys":["merged","fun merged(options: ImageOptions?): ImageOptions","com.github.panpf.sketch.request.ImageOptions.merged"]},{"name":"fun name(exifOrientation: Int): String","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.name","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/-companion/name.html","searchKeys":["name","fun name(exifOrientation: Int): String","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.name"]},{"name":"fun networkParallelismLimited(parallelism: Int?): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.networkParallelismLimited","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/network-parallelism-limited.html","searchKeys":["networkParallelismLimited","fun networkParallelismLimited(parallelism: Int?): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.networkParallelismLimited"]},{"name":"fun newAssetUri(fileName: String): String","description":"com.github.panpf.sketch.fetch.newAssetUri","location":"sketch-core/com.github.panpf.sketch.fetch/new-asset-uri.html","searchKeys":["newAssetUri","fun newAssetUri(fileName: String): String","com.github.panpf.sketch.fetch.newAssetUri"]},{"name":"fun newBase64Uri(mimeType: String, base64String: String): String","description":"com.github.panpf.sketch.fetch.newBase64Uri","location":"sketch-core/com.github.panpf.sketch.fetch/new-base64-uri.html","searchKeys":["newBase64Uri","fun newBase64Uri(mimeType: String, base64String: String): String","com.github.panpf.sketch.fetch.newBase64Uri"]},{"name":"fun newBase64Uri(mimeType: String, imageData: ByteArray): String","description":"com.github.panpf.sketch.fetch.newBase64Uri","location":"sketch-core/com.github.panpf.sketch.fetch/new-base64-uri.html","searchKeys":["newBase64Uri","fun newBase64Uri(mimeType: String, imageData: ByteArray): String","com.github.panpf.sketch.fetch.newBase64Uri"]},{"name":"fun newBuilder(): RequestOptions.Builder","description":"com.github.panpf.sketch.request.internal.RequestOptions.newBuilder","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-options/new-builder.html","searchKeys":["newBuilder","fun newBuilder(): RequestOptions.Builder","com.github.panpf.sketch.request.internal.RequestOptions.newBuilder"]},{"name":"fun newBuilder(block: ComponentRegistry.Builder.() -> Unit? = null): ComponentRegistry.Builder","description":"com.github.panpf.sketch.ComponentRegistry.newBuilder","location":"sketch-core/com.github.panpf.sketch/-component-registry/new-builder.html","searchKeys":["newBuilder","fun newBuilder(block: ComponentRegistry.Builder.() -> Unit? = null): ComponentRegistry.Builder","com.github.panpf.sketch.ComponentRegistry.newBuilder"]},{"name":"fun newBuilder(block: Extras.Builder.() -> Unit? = null): Extras.Builder","description":"com.github.panpf.sketch.request.Extras.newBuilder","location":"sketch-core/com.github.panpf.sketch.request/-extras/new-builder.html","searchKeys":["newBuilder","fun newBuilder(block: Extras.Builder.() -> Unit? = null): Extras.Builder","com.github.panpf.sketch.request.Extras.newBuilder"]},{"name":"fun newBuilder(block: ImageOptions.Builder.() -> Unit? = null): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.newBuilder","location":"sketch-core/com.github.panpf.sketch.request/-image-options/new-builder.html","searchKeys":["newBuilder","fun newBuilder(block: ImageOptions.Builder.() -> Unit? = null): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.newBuilder"]},{"name":"fun newBuilder(uri: String? = this.uri.toString(), block: ImageRequest.Builder.() -> Unit? = null): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.newBuilder","location":"sketch-core/com.github.panpf.sketch.request/-image-request/new-builder.html","searchKeys":["newBuilder","fun newBuilder(uri: String? = this.uri.toString(), block: ImageRequest.Builder.() -> Unit? = null): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.newBuilder"]},{"name":"fun newCacheValueExtras(imageInfo: ImageInfo, resize: Resize, transformeds: List<String>?, extras: Map<String, String>?): Map<String, Any?>","description":"com.github.panpf.sketch.cache.newCacheValueExtras","location":"sketch-core/com.github.panpf.sketch.cache/new-cache-value-extras.html","searchKeys":["newCacheValueExtras","fun newCacheValueExtras(imageInfo: ImageInfo, resize: Resize, transformeds: List<String>?, extras: Map<String, String>?): Map<String, Any?>","com.github.panpf.sketch.cache.newCacheValueExtras"]},{"name":"fun newDecoderOrThrow(requestContext: RequestContext, fetchResult: FetchResult): Decoder","description":"com.github.panpf.sketch.Components.newDecoderOrThrow","location":"sketch-core/com.github.panpf.sketch/-components/new-decoder-or-throw.html","searchKeys":["newDecoderOrThrow","fun newDecoderOrThrow(requestContext: RequestContext, fetchResult: FetchResult): Decoder","com.github.panpf.sketch.Components.newDecoderOrThrow"]},{"name":"fun newExtras(block: Extras.Builder.() -> Unit? = null): Extras","description":"com.github.panpf.sketch.request.Extras.newExtras","location":"sketch-core/com.github.panpf.sketch.request/-extras/new-extras.html","searchKeys":["newExtras","fun newExtras(block: Extras.Builder.() -> Unit? = null): Extras","com.github.panpf.sketch.request.Extras.newExtras"]},{"name":"fun newFetcherOrThrow(requestContext: RequestContext): Fetcher","description":"com.github.panpf.sketch.Components.newFetcherOrThrow","location":"sketch-core/com.github.panpf.sketch/-components/new-fetcher-or-throw.html","searchKeys":["newFetcherOrThrow","fun newFetcherOrThrow(requestContext: RequestContext): Fetcher","com.github.panpf.sketch.Components.newFetcherOrThrow"]},{"name":"fun newFileUri(file: <Error class: unknown class>): String","description":"com.github.panpf.sketch.fetch.newFileUri","location":"sketch-core/com.github.panpf.sketch.fetch/new-file-uri.html","searchKeys":["newFileUri","fun newFileUri(file: <Error class: unknown class>): String","com.github.panpf.sketch.fetch.newFileUri"]},{"name":"fun newFileUri(path: Path): String","description":"com.github.panpf.sketch.fetch.newFileUri","location":"sketch-core/com.github.panpf.sketch.fetch/new-file-uri.html","searchKeys":["newFileUri","fun newFileUri(path: Path): String","com.github.panpf.sketch.fetch.newFileUri"]},{"name":"fun newFileUri(path: String): String","description":"com.github.panpf.sketch.fetch.newFileUri","location":"sketch-core/com.github.panpf.sketch.fetch/new-file-uri.html","searchKeys":["newFileUri","fun newFileUri(path: String): String","com.github.panpf.sketch.fetch.newFileUri"]},{"name":"fun newKotlinResourceUri(resourcePath: String): String","description":"com.github.panpf.sketch.fetch.newKotlinResourceUri","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]new-kotlin-resource-uri.html","searchKeys":["newKotlinResourceUri","fun newKotlinResourceUri(resourcePath: String): String","com.github.panpf.sketch.fetch.newKotlinResourceUri"]},{"name":"fun newKotlinResourceUri(resourcePath: String): String","description":"com.github.panpf.sketch.fetch.newKotlinResourceUri","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]new-kotlin-resource-uri.html","searchKeys":["newKotlinResourceUri","fun newKotlinResourceUri(resourcePath: String): String","com.github.panpf.sketch.fetch.newKotlinResourceUri"]},{"name":"fun newOptions(block: ImageOptions.Builder.() -> Unit? = null): ImageOptions","description":"com.github.panpf.sketch.request.ImageOptions.newOptions","location":"sketch-core/com.github.panpf.sketch.request/-image-options/new-options.html","searchKeys":["newOptions","fun newOptions(block: ImageOptions.Builder.() -> Unit? = null): ImageOptions","com.github.panpf.sketch.request.ImageOptions.newOptions"]},{"name":"fun newRegistry(block: ComponentRegistry.Builder.() -> Unit? = null): ComponentRegistry","description":"com.github.panpf.sketch.ComponentRegistry.newRegistry","location":"sketch-core/com.github.panpf.sketch/-component-registry/new-registry.html","searchKeys":["newRegistry","fun newRegistry(block: ComponentRegistry.Builder.() -> Unit? = null): ComponentRegistry","com.github.panpf.sketch.ComponentRegistry.newRegistry"]},{"name":"fun newRequest(uri: String? = this.uri.toString(), block: ImageRequest.Builder.() -> Unit? = null): ImageRequest","description":"com.github.panpf.sketch.request.ImageRequest.newRequest","location":"sketch-core/com.github.panpf.sketch.request/-image-request/new-request.html","searchKeys":["newRequest","fun newRequest(uri: String? = this.uri.toString(), block: ImageRequest.Builder.() -> Unit? = null): ImageRequest","com.github.panpf.sketch.request.ImageRequest.newRequest"]},{"name":"fun newResourceUri(packageName: String, resId: Int): String","description":"com.github.panpf.sketch.fetch.newResourceUri","location":"sketch-core/com.github.panpf.sketch.fetch/new-resource-uri.html","searchKeys":["newResourceUri","fun newResourceUri(packageName: String, resId: Int): String","com.github.panpf.sketch.fetch.newResourceUri"]},{"name":"fun newResourceUri(packageName: String, resType: String, resName: String): String","description":"com.github.panpf.sketch.fetch.newResourceUri","location":"sketch-core/com.github.panpf.sketch.fetch/new-resource-uri.html","searchKeys":["newResourceUri","fun newResourceUri(packageName: String, resType: String, resName: String): String","com.github.panpf.sketch.fetch.newResourceUri"]},{"name":"fun newResourceUri(resId: Int): String","description":"com.github.panpf.sketch.fetch.newResourceUri","location":"sketch-core/com.github.panpf.sketch.fetch/new-resource-uri.html","searchKeys":["newResourceUri","fun newResourceUri(resId: Int): String","com.github.panpf.sketch.fetch.newResourceUri"]},{"name":"fun newResourceUri(resType: String, resName: String): String","description":"com.github.panpf.sketch.fetch.newResourceUri","location":"sketch-core/com.github.panpf.sketch.fetch/new-resource-uri.html","searchKeys":["newResourceUri","fun newResourceUri(resType: String, resName: String): String","com.github.panpf.sketch.fetch.newResourceUri"]},{"name":"fun newResult(image: Image = this.image, imageInfo: ImageInfo = this.imageInfo, dataFrom: DataFrom = this.dataFrom, resize: Resize = this.resize, block: DecodeResult.Builder.() -> Unit? = null): DecodeResult","description":"com.github.panpf.sketch.decode.DecodeResult.newResult","location":"sketch-core/com.github.panpf.sketch.decode/-decode-result/new-result.html","searchKeys":["newResult","fun newResult(image: Image = this.image, imageInfo: ImageInfo = this.imageInfo, dataFrom: DataFrom = this.dataFrom, resize: Resize = this.resize, block: DecodeResult.Builder.() -> Unit? = null): DecodeResult","com.github.panpf.sketch.decode.DecodeResult.newResult"]},{"name":"fun offset(dx: Int, dy: Int)","description":"com.github.panpf.sketch.util.Rect.offset","location":"sketch-core/com.github.panpf.sketch.util/-rect/offset.html","searchKeys":["offset","fun offset(dx: Int, dy: Int)","com.github.panpf.sketch.util.Rect.offset"]},{"name":"fun offsetTo(newLeft: Int, newTop: Int)","description":"com.github.panpf.sketch.util.Rect.offsetTo","location":"sketch-core/com.github.panpf.sketch.util/-rect/offset-to.html","searchKeys":["offsetTo","fun offsetTo(newLeft: Int, newTop: Int)","com.github.panpf.sketch.util.Rect.offsetTo"]},{"name":"fun options(options: DiskCache.Options): DiskCache.Builder","description":"com.github.panpf.sketch.cache.DiskCache.Builder.options","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-builder/options.html","searchKeys":["options","fun options(options: DiskCache.Options): DiskCache.Builder","com.github.panpf.sketch.cache.DiskCache.Builder.options"]},{"name":"fun parseMimeType(mimeType: String?): ImageFormat?","description":"com.github.panpf.sketch.decode.internal.ImageFormat.Companion.parseMimeType","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/-companion/parse-mime-type.html","searchKeys":["parseMimeType","fun parseMimeType(mimeType: String?): ImageFormat?","com.github.panpf.sketch.decode.internal.ImageFormat.Companion.parseMimeType"]},{"name":"fun parseSize(string: String): Size","description":"com.github.panpf.sketch.util.Size.Companion.parseSize","location":"sketch-core/com.github.panpf.sketch.util/-size/-companion/parse-size.html","searchKeys":["parseSize","fun parseSize(string: String): Size","com.github.panpf.sketch.util.Size.Companion.parseSize"]},{"name":"fun placeholder(stateImage: StateImage?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.placeholder","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/placeholder.html","searchKeys":["placeholder","fun placeholder(stateImage: StateImage?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.placeholder"]},{"name":"fun placeholder(stateImage: StateImage?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.placeholder","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/placeholder.html","searchKeys":["placeholder","fun placeholder(stateImage: StateImage?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.placeholder"]},{"name":"fun precision(precision: Precision): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.precision","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/precision.html","searchKeys":["precision","fun precision(precision: Precision): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.precision"]},{"name":"fun precision(precision: Precision): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.precision","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/precision.html","searchKeys":["precision","fun precision(precision: Precision): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.precision"]},{"name":"fun precision(precisionDecider: PrecisionDecider?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.precision","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/precision.html","searchKeys":["precision","fun precision(precisionDecider: PrecisionDecider?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.precision"]},{"name":"fun precision(precisionDecider: PrecisionDecider?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.precision","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/precision.html","searchKeys":["precision","fun precision(precisionDecider: PrecisionDecider?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.precision"]},{"name":"fun readImageInfo(codec: Codec, skiaImage: Image): ImageInfo","description":"com.github.panpf.sketch.decode.internal.readImageInfo","location":"sketch-core/com.github.panpf.sketch.decode.internal/read-image-info.html","searchKeys":["readImageInfo","fun readImageInfo(codec: Codec, skiaImage: Image): ImageInfo","com.github.panpf.sketch.decode.internal.readImageInfo"]},{"name":"fun readImageInfoWithIgnoreExifOrientation(codec: Codec): ImageInfo","description":"com.github.panpf.sketch.decode.internal.readImageInfoWithIgnoreExifOrientation","location":"sketch-core/com.github.panpf.sketch.decode.internal/read-image-info-with-ignore-exif-orientation.html","searchKeys":["readImageInfoWithIgnoreExifOrientation","fun readImageInfoWithIgnoreExifOrientation(codec: Codec): ImageInfo","com.github.panpf.sketch.decode.internal.readImageInfoWithIgnoreExifOrientation"]},{"name":"fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","description":"com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.registerAnimationCallback","location":"sketch-core/com.github.panpf.sketch.drawable.internal/-animatable-callback-helper/register-animation-callback.html","searchKeys":["registerAnimationCallback","fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.registerAnimationCallback"]},{"name":"fun remove(key: String): Extras.Builder","description":"com.github.panpf.sketch.request.Extras.Builder.remove","location":"sketch-core/com.github.panpf.sketch.request/-extras/-builder/remove.html","searchKeys":["remove","fun remove(key: String): Extras.Builder","com.github.panpf.sketch.request.Extras.Builder.remove"]},{"name":"fun removeExtra(key: String): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.removeExtra","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/remove-extra.html","searchKeys":["removeExtra","fun removeExtra(key: String): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.removeExtra"]},{"name":"fun removeExtra(key: String): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.removeExtra","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/remove-extra.html","searchKeys":["removeExtra","fun removeExtra(key: String): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.removeExtra"]},{"name":"fun removeListener(listener: Listener): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.removeListener","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/remove-listener.html","searchKeys":["removeListener","fun removeListener(listener: Listener): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.removeListener"]},{"name":"fun removeListener(listener: Listener): RequestOptions.Builder","description":"com.github.panpf.sketch.request.internal.RequestOptions.Builder.removeListener","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-options/-builder/remove-listener.html","searchKeys":["removeListener","fun removeListener(listener: Listener): RequestOptions.Builder","com.github.panpf.sketch.request.internal.RequestOptions.Builder.removeListener"]},{"name":"fun removeProgressListener(progressListener: ProgressListener): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.removeProgressListener","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/remove-progress-listener.html","searchKeys":["removeProgressListener","fun removeProgressListener(progressListener: ProgressListener): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.removeProgressListener"]},{"name":"fun removeProgressListener(progressListener: ProgressListener): RequestOptions.Builder","description":"com.github.panpf.sketch.request.internal.RequestOptions.Builder.removeProgressListener","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-options/-builder/remove-progress-listener.html","searchKeys":["removeProgressListener","fun removeProgressListener(progressListener: ProgressListener): RequestOptions.Builder","com.github.panpf.sketch.request.internal.RequestOptions.Builder.removeProgressListener"]},{"name":"fun removeTransformations(removeTransformations: List<Transformation>): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.removeTransformations","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/remove-transformations.html","searchKeys":["removeTransformations","fun removeTransformations(removeTransformations: List<Transformation>): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.removeTransformations"]},{"name":"fun removeTransformations(transformations: List<Transformation>): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.removeTransformations","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/remove-transformations.html","searchKeys":["removeTransformations","fun removeTransformations(transformations: List<Transformation>): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.removeTransformations"]},{"name":"fun removeTransformations(vararg removeTransformations: Transformation): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.removeTransformations","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/remove-transformations.html","searchKeys":["removeTransformations","fun removeTransformations(vararg removeTransformations: Transformation): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.removeTransformations"]},{"name":"fun removeTransformations(vararg transformations: Transformation): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.removeTransformations","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/remove-transformations.html","searchKeys":["removeTransformations","fun removeTransformations(vararg transformations: Transformation): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.removeTransformations"]},{"name":"fun reset()","description":"com.github.panpf.sketch.util.ResetLazy.reset","location":"sketch-core/com.github.panpf.sketch.util/-reset-lazy/reset.html","searchKeys":["reset","fun reset()","com.github.panpf.sketch.util.ResetLazy.reset"]},{"name":"fun resize(size: Size, precision: Precision? = null, scale: Scale? = null): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.resize","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/resize.html","searchKeys":["resize","fun resize(size: Size, precision: Precision? = null, scale: Scale? = null): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.resize"]},{"name":"fun resize(size: Size, precision: Precision? = null, scale: Scale? = null): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.resize","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/resize.html","searchKeys":["resize","fun resize(size: Size, precision: Precision? = null, scale: Scale? = null): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.resize"]},{"name":"fun resize(size: SizeResolver?, precision: PrecisionDecider? = null, scale: ScaleDecider? = null): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.resize","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/resize.html","searchKeys":["resize","fun resize(size: SizeResolver?, precision: PrecisionDecider? = null, scale: ScaleDecider? = null): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.resize"]},{"name":"fun resize(size: SizeResolver?, precision: PrecisionDecider? = null, scale: ScaleDecider? = null): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.resize","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/resize.html","searchKeys":["resize","fun resize(size: SizeResolver?, precision: PrecisionDecider? = null, scale: ScaleDecider? = null): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.resize"]},{"name":"fun resize(width: Int, height: Int, precision: Precision? = null, scale: Scale? = null): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.resize","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/resize.html","searchKeys":["resize","fun resize(width: Int, height: Int, precision: Precision? = null, scale: Scale? = null): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.resize"]},{"name":"fun resize(width: Int, height: Int, precision: Precision? = null, scale: Scale? = null): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.resize","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/resize.html","searchKeys":["resize","fun resize(width: Int, height: Int, precision: Precision? = null, scale: Scale? = null): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.resize"]},{"name":"fun resizeOnDraw(apply: Boolean? = true): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.resizeOnDraw","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/resize-on-draw.html","searchKeys":["resizeOnDraw","fun resizeOnDraw(apply: Boolean? = true): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.resizeOnDraw"]},{"name":"fun resizeOnDraw(apply: Boolean? = true): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.resizeOnDraw","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/resize-on-draw.html","searchKeys":["resizeOnDraw","fun resizeOnDraw(apply: Boolean? = true): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.resizeOnDraw"]},{"name":"fun resultCache(diskCache: DiskCache?): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.resultCache","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/result-cache.html","searchKeys":["resultCache","fun resultCache(diskCache: DiskCache?): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.resultCache"]},{"name":"fun resultCache(initializer: () -> DiskCache): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.resultCache","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/result-cache.html","searchKeys":["resultCache","fun resultCache(initializer: () -> DiskCache): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.resultCache"]},{"name":"fun resultCacheKey(key: String?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.resultCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/result-cache-key.html","searchKeys":["resultCacheKey","fun resultCacheKey(key: String?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.resultCacheKey"]},{"name":"fun resultCacheKey(key: String?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.resultCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/result-cache-key.html","searchKeys":["resultCacheKey","fun resultCacheKey(key: String?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.resultCacheKey"]},{"name":"fun resultCacheKeyMapper(mapper: CacheKeyMapper?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.resultCacheKeyMapper","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/result-cache-key-mapper.html","searchKeys":["resultCacheKeyMapper","fun resultCacheKeyMapper(mapper: CacheKeyMapper?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.resultCacheKeyMapper"]},{"name":"fun resultCacheKeyMapper(mapper: CacheKeyMapper?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.resultCacheKeyMapper","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/result-cache-key-mapper.html","searchKeys":["resultCacheKeyMapper","fun resultCacheKeyMapper(mapper: CacheKeyMapper?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.resultCacheKeyMapper"]},{"name":"fun resultCacheOptions(initializer: () -> DiskCache.Options): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.resultCacheOptions","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/result-cache-options.html","searchKeys":["resultCacheOptions","fun resultCacheOptions(initializer: () -> DiskCache.Options): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.resultCacheOptions"]},{"name":"fun resultCacheOptions(options: DiskCache.Options): Sketch.Builder","description":"com.github.panpf.sketch.Sketch.Builder.resultCacheOptions","location":"sketch-core/com.github.panpf.sketch/-sketch/-builder/result-cache-options.html","searchKeys":["resultCacheOptions","fun resultCacheOptions(options: DiskCache.Options): Sketch.Builder","com.github.panpf.sketch.Sketch.Builder.resultCacheOptions"]},{"name":"fun resultCachePolicy(cachePolicy: CachePolicy?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.resultCachePolicy","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/result-cache-policy.html","searchKeys":["resultCachePolicy","fun resultCachePolicy(cachePolicy: CachePolicy?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.resultCachePolicy"]},{"name":"fun resultCachePolicy(cachePolicy: CachePolicy?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.resultCachePolicy","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/result-cache-policy.html","searchKeys":["resultCachePolicy","fun resultCachePolicy(cachePolicy: CachePolicy?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.resultCachePolicy"]},{"name":"fun scale(scale: Float)","description":"com.github.panpf.sketch.util.Rect.scale","location":"sketch-core/com.github.panpf.sketch.util/-rect/scale.html","searchKeys":["scale","fun scale(scale: Float)","com.github.panpf.sketch.util.Rect.scale"]},{"name":"fun scale(scale: Scale): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.scale","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/scale.html","searchKeys":["scale","fun scale(scale: Scale): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.scale"]},{"name":"fun scale(scale: Scale): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.scale","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/scale.html","searchKeys":["scale","fun scale(scale: Scale): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.scale"]},{"name":"fun scale(scaleDecider: ScaleDecider?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.scale","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/scale.html","searchKeys":["scale","fun scale(scaleDecider: ScaleDecider?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.scale"]},{"name":"fun scale(scaleDecider: ScaleDecider?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.scale","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/scale.html","searchKeys":["scale","fun scale(scaleDecider: ScaleDecider?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.scale"]},{"name":"fun set(key: String, value: Any?, cacheKey: String? = keyOrNull(value), requestKey: String? = keyOrNull(value)): Extras.Builder","description":"com.github.panpf.sketch.request.Extras.Builder.set","location":"sketch-core/com.github.panpf.sketch.request/-extras/-builder/set.html","searchKeys":["set","fun set(key: String, value: Any?, cacheKey: String? = keyOrNull(value), requestKey: String? = keyOrNull(value)): Extras.Builder","com.github.panpf.sketch.request.Extras.Builder.set"]},{"name":"fun set(src: Rect)","description":"com.github.panpf.sketch.util.Rect.set","location":"sketch-core/com.github.panpf.sketch.util/-rect/set.html","searchKeys":["set","fun set(src: Rect)","com.github.panpf.sketch.util.Rect.set"]},{"name":"fun setDrawable(drawable: Drawable?)","description":"com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.setDrawable","location":"sketch-core/com.github.panpf.sketch.drawable.internal/-animatable-callback-helper/set-drawable.html","searchKeys":["setDrawable","fun setDrawable(drawable: Drawable?)","com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.setDrawable"]},{"name":"fun setEmpty()","description":"com.github.panpf.sketch.util.Rect.setEmpty","location":"sketch-core/com.github.panpf.sketch.util/-rect/set-empty.html","searchKeys":["setEmpty","fun setEmpty()","com.github.panpf.sketch.util.Rect.setEmpty"]},{"name":"fun setExtra(key: String, value: Any?, cacheKey: String? = keyOrNull(value), requestKey: String? = keyOrNull(value)): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.setExtra","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/set-extra.html","searchKeys":["setExtra","fun setExtra(key: String, value: Any?, cacheKey: String? = keyOrNull(value), requestKey: String? = keyOrNull(value)): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.setExtra"]},{"name":"fun setExtra(key: String, value: Any?, cacheKey: String? = keyOrNull(value), requestKey: String? = keyOrNull(value)): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.setExtra","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/set-extra.html","searchKeys":["setExtra","fun setExtra(key: String, value: Any?, cacheKey: String? = keyOrNull(value), requestKey: String? = keyOrNull(value)): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.setExtra"]},{"name":"fun setIntersect(a: Rect, b: Rect): Boolean","description":"com.github.panpf.sketch.util.Rect.setIntersect","location":"sketch-core/com.github.panpf.sketch.util/-rect/set-intersect.html","searchKeys":["setIntersect","fun setIntersect(a: Rect, b: Rect): Boolean","com.github.panpf.sketch.util.Rect.setIntersect"]},{"name":"fun shouldClip(imageSize: Size): Boolean","description":"com.github.panpf.sketch.resize.Resize.shouldClip","location":"sketch-core/com.github.panpf.sketch.resize/-resize/should-clip.html","searchKeys":["shouldClip","fun shouldClip(imageSize: Size): Boolean","com.github.panpf.sketch.resize.Resize.shouldClip"]},{"name":"fun shutdown()","description":"com.github.panpf.sketch.Sketch.shutdown","location":"sketch-core/com.github.panpf.sketch/-sketch/shutdown.html","searchKeys":["shutdown","fun shutdown()","com.github.panpf.sketch.Sketch.shutdown"]},{"name":"fun size(size: Size): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.size","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/size.html","searchKeys":["size","fun size(size: Size): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.size"]},{"name":"fun size(size: Size): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.size","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/size.html","searchKeys":["size","fun size(size: Size): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.size"]},{"name":"fun size(sizeResolver: SizeResolver?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.size","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/size.html","searchKeys":["size","fun size(sizeResolver: SizeResolver?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.size"]},{"name":"fun size(sizeResolver: SizeResolver?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.size","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/size.html","searchKeys":["size","fun size(sizeResolver: SizeResolver?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.size"]},{"name":"fun size(width: Int, height: Int): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.size","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/size.html","searchKeys":["size","fun size(width: Int, height: Int): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.size"]},{"name":"fun size(width: Int, height: Int): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.size","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/size.html","searchKeys":["size","fun size(width: Int, height: Int): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.size"]},{"name":"fun sizeMultiplier(multiplier: Float?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.sizeMultiplier","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/size-multiplier.html","searchKeys":["sizeMultiplier","fun sizeMultiplier(multiplier: Float?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.sizeMultiplier"]},{"name":"fun sizeMultiplier(multiplier: Float?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.sizeMultiplier","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/size-multiplier.html","searchKeys":["sizeMultiplier","fun sizeMultiplier(multiplier: Float?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.sizeMultiplier"]},{"name":"fun sort()","description":"com.github.panpf.sketch.util.Rect.sort","location":"sketch-core/com.github.panpf.sketch.util/-rect/sort.html","searchKeys":["sort","fun sort()","com.github.panpf.sketch.util.Rect.sort"]},{"name":"fun start()","description":"com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.start","location":"sketch-core/com.github.panpf.sketch.drawable.internal/-animatable-callback-helper/start.html","searchKeys":["start","fun start()","com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.start"]},{"name":"fun stop()","description":"com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.stop","location":"sketch-core/com.github.panpf.sketch.drawable.internal/-animatable-callback-helper/stop.html","searchKeys":["stop","fun stop()","com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.stop"]},{"name":"fun supportBitmapRegionDecoder(mimeType: String, animated: Boolean = false): Boolean?","description":"com.github.panpf.sketch.decode.internal.supportBitmapRegionDecoder","location":"sketch-core/com.github.panpf.sketch.decode.internal/support-bitmap-region-decoder.html","searchKeys":["supportBitmapRegionDecoder","fun supportBitmapRegionDecoder(mimeType: String, animated: Boolean = false): Boolean?","com.github.panpf.sketch.decode.internal.supportBitmapRegionDecoder"]},{"name":"fun supportDecodeRegion(mimeType: String): Boolean?","description":"com.github.panpf.sketch.decode.internal.supportDecodeRegion","location":"sketch-core/com.github.panpf.sketch.decode.internal/support-decode-region.html","searchKeys":["supportDecodeRegion","fun supportDecodeRegion(mimeType: String): Boolean?","com.github.panpf.sketch.decode.internal.supportDecodeRegion"]},{"name":"fun target(target: Target?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.target","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/target.html","searchKeys":["target","fun target(target: Target?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.target"]},{"name":"fun toMetadataString(): String","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.toMetadataString","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/-metadata/to-metadata-string.html","searchKeys":["toMetadataString","fun toMetadataString(): String","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.toMetadataString"]},{"name":"fun toShortString(): String","description":"com.github.panpf.sketch.decode.ImageInfo.toShortString","location":"sketch-core/com.github.panpf.sketch.decode/-image-info/to-short-string.html","searchKeys":["toShortString","fun toShortString(): String","com.github.panpf.sketch.decode.ImageInfo.toShortString"]},{"name":"fun toShortString(sb: StringBuilder = StringBuilder(32)): String","description":"com.github.panpf.sketch.util.Rect.toShortString","location":"sketch-core/com.github.panpf.sketch.util/-rect/to-short-string.html","searchKeys":["toShortString","fun toShortString(sb: StringBuilder = StringBuilder(32)): String","com.github.panpf.sketch.util.Rect.toShortString"]},{"name":"fun transformations(transformations: List<Transformation>?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.transformations","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/transformations.html","searchKeys":["transformations","fun transformations(transformations: List<Transformation>?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.transformations"]},{"name":"fun transformations(transformations: List<Transformation>?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.transformations","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/transformations.html","searchKeys":["transformations","fun transformations(transformations: List<Transformation>?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.transformations"]},{"name":"fun transformations(vararg transformations: Transformation): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.transformations","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/transformations.html","searchKeys":["transformations","fun transformations(vararg transformations: Transformation): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.transformations"]},{"name":"fun transformations(vararg transformations: Transformation): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.transformations","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/transformations.html","searchKeys":["transformations","fun transformations(vararg transformations: Transformation): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.transformations"]},{"name":"fun transitionFactory(transitionFactory: Transition.Factory?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ImageOptions.Builder.transitionFactory","location":"sketch-core/com.github.panpf.sketch.request/-image-options/-builder/transition-factory.html","searchKeys":["transitionFactory","fun transitionFactory(transitionFactory: Transition.Factory?): ImageOptions.Builder","com.github.panpf.sketch.request.ImageOptions.Builder.transitionFactory"]},{"name":"fun transitionFactory(transitionFactory: Transition.Factory?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.transitionFactory","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/transition-factory.html","searchKeys":["transitionFactory","fun transitionFactory(transitionFactory: Transition.Factory?): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.transitionFactory"]},{"name":"fun union(left: Int, top: Int, right: Int, bottom: Int)","description":"com.github.panpf.sketch.util.Rect.union","location":"sketch-core/com.github.panpf.sketch.util/-rect/union.html","searchKeys":["union","fun union(left: Int, top: Int, right: Int, bottom: Int)","com.github.panpf.sketch.util.Rect.union"]},{"name":"fun union(r: Rect)","description":"com.github.panpf.sketch.util.Rect.union","location":"sketch-core/com.github.panpf.sketch.util/-rect/union.html","searchKeys":["union","fun union(r: Rect)","com.github.panpf.sketch.util.Rect.union"]},{"name":"fun union(x: Int, y: Int)","description":"com.github.panpf.sketch.util.Rect.union","location":"sketch-core/com.github.panpf.sketch.util/-rect/union.html","searchKeys":["union","fun union(x: Int, y: Int)","com.github.panpf.sketch.util.Rect.union"]},{"name":"fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","description":"com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.unregisterAnimationCallback","location":"sketch-core/com.github.panpf.sketch.drawable.internal/-animatable-callback-helper/unregister-animation-callback.html","searchKeys":["unregisterAnimationCallback","fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.unregisterAnimationCallback"]},{"name":"fun v(lazyMsg: () -> String)","description":"com.github.panpf.sketch.util.Logger.v","location":"sketch-core/com.github.panpf.sketch.util/-logger/v.html","searchKeys":["v","fun v(lazyMsg: () -> String)","com.github.panpf.sketch.util.Logger.v"]},{"name":"fun v(msg: String)","description":"com.github.panpf.sketch.util.Logger.v","location":"sketch-core/com.github.panpf.sketch.util/-logger/v.html","searchKeys":["v","fun v(msg: String)","com.github.panpf.sketch.util.Logger.v"]},{"name":"fun v(tr: Throwable?, lazyMsg: () -> String)","description":"com.github.panpf.sketch.util.Logger.v","location":"sketch-core/com.github.panpf.sketch.util/-logger/v.html","searchKeys":["v","fun v(tr: Throwable?, lazyMsg: () -> String)","com.github.panpf.sketch.util.Logger.v"]},{"name":"fun v(tr: Throwable?, msg: String)","description":"com.github.panpf.sketch.util.Logger.v","location":"sketch-core/com.github.panpf.sketch.util/-logger/v.html","searchKeys":["v","fun v(tr: Throwable?, msg: String)","com.github.panpf.sketch.util.Logger.v"]},{"name":"fun valueOf(name: String): Int","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.valueOf","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/-companion/value-of.html","searchKeys":["valueOf","fun valueOf(name: String): Int","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.valueOf"]},{"name":"fun valueOf(value: String): Base64Spec","description":"com.github.panpf.sketch.fetch.Base64Spec.valueOf","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-spec/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Base64Spec","com.github.panpf.sketch.fetch.Base64Spec.valueOf"]},{"name":"fun valueOf(value: String): CachePolicy","description":"com.github.panpf.sketch.cache.CachePolicy.valueOf","location":"sketch-core/com.github.panpf.sketch.cache/-cache-policy/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CachePolicy","com.github.panpf.sketch.cache.CachePolicy.valueOf"]},{"name":"fun valueOf(value: String): ColorType","description":"com.github.panpf.sketch.ColorType.valueOf","location":"sketch-core/com.github.panpf.sketch/-color-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ColorType","com.github.panpf.sketch.ColorType.valueOf"]},{"name":"fun valueOf(value: String): DataFrom","description":"com.github.panpf.sketch.source.DataFrom.valueOf","location":"sketch-core/com.github.panpf.sketch.source/-data-from/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): DataFrom","com.github.panpf.sketch.source.DataFrom.valueOf"]},{"name":"fun valueOf(value: String): Depth","description":"com.github.panpf.sketch.request.Depth.valueOf","location":"sketch-core/com.github.panpf.sketch.request/-depth/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Depth","com.github.panpf.sketch.request.Depth.valueOf"]},{"name":"fun valueOf(value: String): ImageFormat","description":"com.github.panpf.sketch.decode.internal.ImageFormat.valueOf","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ImageFormat","com.github.panpf.sketch.decode.internal.ImageFormat.valueOf"]},{"name":"fun valueOf(value: String): Logger.Level","description":"com.github.panpf.sketch.util.Logger.Level.valueOf","location":"sketch-core/com.github.panpf.sketch.util/-logger/-level/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Logger.Level","com.github.panpf.sketch.util.Logger.Level.valueOf"]},{"name":"fun valueOf(value: String): Precision","description":"com.github.panpf.sketch.resize.Precision.valueOf","location":"sketch-core/com.github.panpf.sketch.resize/-precision/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Precision","com.github.panpf.sketch.resize.Precision.valueOf"]},{"name":"fun valueOf(value: String): Scale","description":"com.github.panpf.sketch.resize.Scale.valueOf","location":"sketch-core/com.github.panpf.sketch.resize/-scale/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Scale","com.github.panpf.sketch.resize.Scale.valueOf"]},{"name":"fun values(): Array<Base64Spec>","description":"com.github.panpf.sketch.fetch.Base64Spec.values","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-spec/values.html","searchKeys":["values","fun values(): Array<Base64Spec>","com.github.panpf.sketch.fetch.Base64Spec.values"]},{"name":"fun values(): Array<CachePolicy>","description":"com.github.panpf.sketch.cache.CachePolicy.values","location":"sketch-core/com.github.panpf.sketch.cache/-cache-policy/values.html","searchKeys":["values","fun values(): Array<CachePolicy>","com.github.panpf.sketch.cache.CachePolicy.values"]},{"name":"fun values(): Array<ColorType>","description":"com.github.panpf.sketch.ColorType.values","location":"sketch-core/com.github.panpf.sketch/-color-type/values.html","searchKeys":["values","fun values(): Array<ColorType>","com.github.panpf.sketch.ColorType.values"]},{"name":"fun values(): Array<DataFrom>","description":"com.github.panpf.sketch.source.DataFrom.values","location":"sketch-core/com.github.panpf.sketch.source/-data-from/values.html","searchKeys":["values","fun values(): Array<DataFrom>","com.github.panpf.sketch.source.DataFrom.values"]},{"name":"fun values(): Array<Depth>","description":"com.github.panpf.sketch.request.Depth.values","location":"sketch-core/com.github.panpf.sketch.request/-depth/values.html","searchKeys":["values","fun values(): Array<Depth>","com.github.panpf.sketch.request.Depth.values"]},{"name":"fun values(): Array<ImageFormat>","description":"com.github.panpf.sketch.decode.internal.ImageFormat.values","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/values.html","searchKeys":["values","fun values(): Array<ImageFormat>","com.github.panpf.sketch.decode.internal.ImageFormat.values"]},{"name":"fun values(): Array<Logger.Level>","description":"com.github.panpf.sketch.util.Logger.Level.values","location":"sketch-core/com.github.panpf.sketch.util/-logger/-level/values.html","searchKeys":["values","fun values(): Array<Logger.Level>","com.github.panpf.sketch.util.Logger.Level.values"]},{"name":"fun values(): Array<Precision>","description":"com.github.panpf.sketch.resize.Precision.values","location":"sketch-core/com.github.panpf.sketch.resize/-precision/values.html","searchKeys":["values","fun values(): Array<Precision>","com.github.panpf.sketch.resize.Precision.values"]},{"name":"fun values(): Array<Scale>","description":"com.github.panpf.sketch.resize.Scale.values","location":"sketch-core/com.github.panpf.sketch.resize/-scale/values.html","searchKeys":["values","fun values(): Array<Scale>","com.github.panpf.sketch.resize.Scale.values"]},{"name":"fun values(): Map<String, Any?>","description":"com.github.panpf.sketch.request.Extras.values","location":"sketch-core/com.github.panpf.sketch.request/-extras/values.html","searchKeys":["values","fun values(): Map<String, Any?>","com.github.panpf.sketch.request.Extras.values"]},{"name":"fun w(lazyMsg: () -> String)","description":"com.github.panpf.sketch.util.Logger.w","location":"sketch-core/com.github.panpf.sketch.util/-logger/w.html","searchKeys":["w","fun w(lazyMsg: () -> String)","com.github.panpf.sketch.util.Logger.w"]},{"name":"fun w(msg: String)","description":"com.github.panpf.sketch.util.Logger.w","location":"sketch-core/com.github.panpf.sketch.util/-logger/w.html","searchKeys":["w","fun w(msg: String)","com.github.panpf.sketch.util.Logger.w"]},{"name":"fun w(tr: Throwable?, lazyMsg: () -> String)","description":"com.github.panpf.sketch.util.Logger.w","location":"sketch-core/com.github.panpf.sketch.util/-logger/w.html","searchKeys":["w","fun w(tr: Throwable?, lazyMsg: () -> String)","com.github.panpf.sketch.util.Logger.w"]},{"name":"fun w(tr: Throwable?, msg: String)","description":"com.github.panpf.sketch.util.Logger.w","location":"sketch-core/com.github.panpf.sketch.util/-logger/w.html","searchKeys":["w","fun w(tr: Throwable?, msg: String)","com.github.panpf.sketch.util.Logger.w"]},{"name":"fun width(): Int","description":"com.github.panpf.sketch.util.Rect.width","location":"sketch-core/com.github.panpf.sketch.util/-rect/width.html","searchKeys":["width","fun width(): Int","com.github.panpf.sketch.util.Rect.width"]},{"name":"inline fun addListener(crossinline onStart: (request: ImageRequest) -> Unit = {}, crossinline onCancel: (request: ImageRequest) -> Unit = {}, crossinline onError: (request: ImageRequest, result: ImageResult.Error) -> Unit = { _, _ -> }, crossinline onSuccess: (request: ImageRequest, result: ImageResult.Success) -> Unit = { _, _ -> }): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ImageRequest.Builder.addListener","location":"sketch-core/com.github.panpf.sketch.request/-image-request/-builder/add-listener.html","searchKeys":["addListener","inline fun addListener(crossinline onStart: (request: ImageRequest) -> Unit = {}, crossinline onCancel: (request: ImageRequest) -> Unit = {}, crossinline onError: (request: ImageRequest, result: ImageResult.Error) -> Unit = { _, _ -> }, crossinline onSuccess: (request: ImageRequest, result: ImageResult.Success) -> Unit = { _, _ -> }): ImageRequest.Builder","com.github.panpf.sketch.request.ImageRequest.Builder.addListener"]},{"name":"interface AnimatedImage : Image","description":"com.github.panpf.sketch.AnimatedImage","location":"sketch-core/com.github.panpf.sketch/-animated-image/index.html","searchKeys":["AnimatedImage","interface AnimatedImage : Image","com.github.panpf.sketch.AnimatedImage"]},{"name":"interface BitmapColorSpace : Key","description":"com.github.panpf.sketch.decode.BitmapColorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-space/index.html","searchKeys":["BitmapColorSpace","interface BitmapColorSpace : Key","com.github.panpf.sketch.decode.BitmapColorSpace"]},{"name":"interface BitmapColorType : Key","description":"com.github.panpf.sketch.decode.BitmapColorType","location":"sketch-core/com.github.panpf.sketch.decode/-bitmap-color-type/index.html","searchKeys":["BitmapColorType","interface BitmapColorType : Key","com.github.panpf.sketch.decode.BitmapColorType"]},{"name":"interface ByteCountProvider","description":"com.github.panpf.sketch.ByteCountProvider","location":"sketch-core/com.github.panpf.sketch/-byte-count-provider/index.html","searchKeys":["ByteCountProvider","interface ByteCountProvider","com.github.panpf.sketch.ByteCountProvider"]},{"name":"interface CacheKeyMapper","description":"com.github.panpf.sketch.cache.CacheKeyMapper","location":"sketch-core/com.github.panpf.sketch.cache/-cache-key-mapper/index.html","searchKeys":["CacheKeyMapper","interface CacheKeyMapper","com.github.panpf.sketch.cache.CacheKeyMapper"]},{"name":"interface Chain","description":"com.github.panpf.sketch.decode.DecodeInterceptor.Chain","location":"sketch-core/com.github.panpf.sketch.decode/-decode-interceptor/-chain/index.html","searchKeys":["Chain","interface Chain","com.github.panpf.sketch.decode.DecodeInterceptor.Chain"]},{"name":"interface Chain","description":"com.github.panpf.sketch.request.RequestInterceptor.Chain","location":"sketch-core/com.github.panpf.sketch.request/-request-interceptor/-chain/index.html","searchKeys":["Chain","interface Chain","com.github.panpf.sketch.request.RequestInterceptor.Chain"]},{"name":"interface ColorFetcher","description":"com.github.panpf.sketch.util.ColorFetcher","location":"sketch-core/com.github.panpf.sketch.util/-color-fetcher/index.html","searchKeys":["ColorFetcher","interface ColorFetcher","com.github.panpf.sketch.util.ColorFetcher"]},{"name":"interface Condition : Key","description":"com.github.panpf.sketch.state.ConditionStateImage.Condition","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/-condition/index.html","searchKeys":["Condition","interface Condition : Key","com.github.panpf.sketch.state.ConditionStateImage.Condition"]},{"name":"interface DataSource : Key","description":"com.github.panpf.sketch.source.DataSource","location":"sketch-core/com.github.panpf.sketch.source/-data-source/index.html","searchKeys":["DataSource","interface DataSource : Key","com.github.panpf.sketch.source.DataSource"]},{"name":"interface DecodeHelper : Closeable","description":"com.github.panpf.sketch.decode.internal.DecodeHelper","location":"sketch-core/com.github.panpf.sketch.decode.internal/-decode-helper/index.html","searchKeys":["DecodeHelper","interface DecodeHelper : Closeable","com.github.panpf.sketch.decode.internal.DecodeHelper"]},{"name":"interface DecodeInterceptor : NullableKey","description":"com.github.panpf.sketch.decode.DecodeInterceptor","location":"sketch-core/com.github.panpf.sketch.decode/-decode-interceptor/index.html","searchKeys":["DecodeInterceptor","interface DecodeInterceptor : NullableKey","com.github.panpf.sketch.decode.DecodeInterceptor"]},{"name":"interface Decoder","description":"com.github.panpf.sketch.decode.Decoder","location":"sketch-core/com.github.panpf.sketch.decode/-decoder/index.html","searchKeys":["Decoder","interface Decoder","com.github.panpf.sketch.decode.Decoder"]},{"name":"interface DiskCache : Closeable","description":"com.github.panpf.sketch.cache.DiskCache","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/index.html","searchKeys":["DiskCache","interface DiskCache : Closeable","com.github.panpf.sketch.cache.DiskCache"]},{"name":"interface Disposable","description":"com.github.panpf.sketch.request.Disposable","location":"sketch-core/com.github.panpf.sketch.request/-disposable/index.html","searchKeys":["Disposable","interface Disposable","com.github.panpf.sketch.request.Disposable"]},{"name":"interface DrawableFetcher","description":"com.github.panpf.sketch.drawable.DrawableFetcher","location":"sketch-core/com.github.panpf.sketch.drawable/-drawable-fetcher/index.html","searchKeys":["DrawableFetcher","interface DrawableFetcher","com.github.panpf.sketch.drawable.DrawableFetcher"]},{"name":"interface Editor","description":"com.github.panpf.sketch.cache.DiskCache.Editor","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-editor/index.html","searchKeys":["Editor","interface Editor","com.github.panpf.sketch.cache.DiskCache.Editor"]},{"name":"interface Factory","description":"com.github.panpf.sketch.fetch.Fetcher.Factory","location":"sketch-core/com.github.panpf.sketch.fetch/-fetcher/-factory/index.html","searchKeys":["Factory","interface Factory","com.github.panpf.sketch.fetch.Fetcher.Factory"]},{"name":"interface Factory : Key","description":"com.github.panpf.sketch.decode.Decoder.Factory","location":"sketch-core/com.github.panpf.sketch.decode/-decoder/-factory/index.html","searchKeys":["Factory","interface Factory : Key","com.github.panpf.sketch.decode.Decoder.Factory"]},{"name":"interface Factory : Key","description":"com.github.panpf.sketch.transition.Transition.Factory","location":"sketch-core/com.github.panpf.sketch.transition/-transition/-factory/index.html","searchKeys":["Factory","interface Factory : Key","com.github.panpf.sketch.transition.Transition.Factory"]},{"name":"interface Image","description":"com.github.panpf.sketch.Image","location":"sketch-core/com.github.panpf.sketch/-image/index.html","searchKeys":["Image","interface Image","com.github.panpf.sketch.Image"]},{"name":"interface ImageOptionsProvider","description":"com.github.panpf.sketch.request.ImageOptionsProvider","location":"sketch-core/com.github.panpf.sketch.request/-image-options-provider/index.html","searchKeys":["ImageOptionsProvider","interface ImageOptionsProvider","com.github.panpf.sketch.request.ImageOptionsProvider"]},{"name":"interface ImageResult","description":"com.github.panpf.sketch.request.ImageResult","location":"sketch-core/com.github.panpf.sketch.request/-image-result/index.html","searchKeys":["ImageResult","interface ImageResult","com.github.panpf.sketch.request.ImageResult"]},{"name":"interface ImageSerializer","description":"com.github.panpf.sketch.cache.ImageSerializer","location":"sketch-core/com.github.panpf.sketch.cache/-image-serializer/index.html","searchKeys":["ImageSerializer","interface ImageSerializer","com.github.panpf.sketch.cache.ImageSerializer"]},{"name":"interface Impl","description":"com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl","location":"sketch-core/com.github.panpf.sketch.decode.internal/-open-g-l-texture-helper/-impl/index.html","searchKeys":["Impl","interface Impl","com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl"]},{"name":"interface Key","description":"com.github.panpf.sketch.util.Key","location":"sketch-core/com.github.panpf.sketch.util/-key/index.html","searchKeys":["Key","interface Key","com.github.panpf.sketch.util.Key"]},{"name":"interface LifecycleResolver","description":"com.github.panpf.sketch.request.LifecycleResolver","location":"sketch-core/com.github.panpf.sketch.request/-lifecycle-resolver/index.html","searchKeys":["LifecycleResolver","interface LifecycleResolver","com.github.panpf.sketch.request.LifecycleResolver"]},{"name":"interface Listener","description":"com.github.panpf.sketch.request.Listener","location":"sketch-core/com.github.panpf.sketch.request/-listener/index.html","searchKeys":["Listener","interface Listener","com.github.panpf.sketch.request.Listener"]},{"name":"interface ListenerProvider","description":"com.github.panpf.sketch.request.ListenerProvider","location":"sketch-core/com.github.panpf.sketch.request/-listener-provider/index.html","searchKeys":["ListenerProvider","interface ListenerProvider","com.github.panpf.sketch.request.ListenerProvider"]},{"name":"interface LongImageDecider : Key","description":"com.github.panpf.sketch.resize.LongImageDecider","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-decider/index.html","searchKeys":["LongImageDecider","interface LongImageDecider : Key","com.github.panpf.sketch.resize.LongImageDecider"]},{"name":"interface MemoryCache","description":"com.github.panpf.sketch.cache.MemoryCache","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/index.html","searchKeys":["MemoryCache","interface MemoryCache","com.github.panpf.sketch.cache.MemoryCache"]},{"name":"interface Mergeable","description":"com.github.panpf.sketch.util.Mergeable","location":"sketch-core/com.github.panpf.sketch.util/-mergeable/index.html","searchKeys":["Mergeable","interface Mergeable","com.github.panpf.sketch.util.Mergeable"]},{"name":"interface NetworkObserver","description":"com.github.panpf.sketch.util.NetworkObserver","location":"sketch-core/com.github.panpf.sketch.util/-network-observer/index.html","searchKeys":["NetworkObserver","interface NetworkObserver","com.github.panpf.sketch.util.NetworkObserver"]},{"name":"interface NullableKey","description":"com.github.panpf.sketch.util.NullableKey","location":"sketch-core/com.github.panpf.sketch.util/-nullable-key/index.html","searchKeys":["NullableKey","interface NullableKey","com.github.panpf.sketch.util.NullableKey"]},{"name":"interface Pipeline","description":"com.github.panpf.sketch.util.Logger.Pipeline","location":"sketch-core/com.github.panpf.sketch.util/-logger/-pipeline/index.html","searchKeys":["Pipeline","interface Pipeline","com.github.panpf.sketch.util.Logger.Pipeline"]},{"name":"interface PrecisionDecider : Key","description":"com.github.panpf.sketch.resize.PrecisionDecider","location":"sketch-core/com.github.panpf.sketch.resize/-precision-decider/index.html","searchKeys":["PrecisionDecider","interface PrecisionDecider : Key","com.github.panpf.sketch.resize.PrecisionDecider"]},{"name":"interface RequestDelegate","description":"com.github.panpf.sketch.request.internal.RequestDelegate","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-delegate/index.html","searchKeys":["RequestDelegate","interface RequestDelegate","com.github.panpf.sketch.request.internal.RequestDelegate"]},{"name":"interface RequestInterceptor : NullableKey","description":"com.github.panpf.sketch.request.RequestInterceptor","location":"sketch-core/com.github.panpf.sketch.request/-request-interceptor/index.html","searchKeys":["RequestInterceptor","interface RequestInterceptor : NullableKey","com.github.panpf.sketch.request.RequestInterceptor"]},{"name":"interface RequestManager","description":"com.github.panpf.sketch.request.internal.RequestManager","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-manager/index.html","searchKeys":["RequestManager","interface RequestManager","com.github.panpf.sketch.request.internal.RequestManager"]},{"name":"interface ResizeOnDrawHelper : Key","description":"com.github.panpf.sketch.resize.ResizeOnDrawHelper","location":"sketch-core/com.github.panpf.sketch.resize/-resize-on-draw-helper/index.html","searchKeys":["ResizeOnDrawHelper","interface ResizeOnDrawHelper : Key","com.github.panpf.sketch.resize.ResizeOnDrawHelper"]},{"name":"interface ScaleDecider : Key","description":"com.github.panpf.sketch.resize.ScaleDecider","location":"sketch-core/com.github.panpf.sketch.resize/-scale-decider/index.html","searchKeys":["ScaleDecider","interface ScaleDecider : Key","com.github.panpf.sketch.resize.ScaleDecider"]},{"name":"interface SizeResolver : Key","description":"com.github.panpf.sketch.resize.SizeResolver","location":"sketch-core/com.github.panpf.sketch.resize/-size-resolver/index.html","searchKeys":["SizeResolver","interface SizeResolver : Key","com.github.panpf.sketch.resize.SizeResolver"]},{"name":"interface SketchDrawable","description":"com.github.panpf.sketch.drawable.SketchDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-sketch-drawable/index.html","searchKeys":["SketchDrawable","interface SketchDrawable","com.github.panpf.sketch.drawable.SketchDrawable"]},{"name":"interface Snapshot : Closeable","description":"com.github.panpf.sketch.cache.DiskCache.Snapshot","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-snapshot/index.html","searchKeys":["Snapshot","interface Snapshot : Closeable","com.github.panpf.sketch.cache.DiskCache.Snapshot"]},{"name":"interface StateImage : Key","description":"com.github.panpf.sketch.state.StateImage","location":"sketch-core/com.github.panpf.sketch.state/-state-image/index.html","searchKeys":["StateImage","interface StateImage : Key","com.github.panpf.sketch.state.StateImage"]},{"name":"interface SystemCallbacks","description":"com.github.panpf.sketch.util.SystemCallbacks","location":"sketch-core/com.github.panpf.sketch.util/-system-callbacks/index.html","searchKeys":["SystemCallbacks","interface SystemCallbacks","com.github.panpf.sketch.util.SystemCallbacks"]},{"name":"interface Target","description":"com.github.panpf.sketch.target.Target","location":"sketch-core/com.github.panpf.sketch.target/-target/index.html","searchKeys":["Target","interface Target","com.github.panpf.sketch.target.Target"]},{"name":"interface Transformation : Key","description":"com.github.panpf.sketch.transform.Transformation","location":"sketch-core/com.github.panpf.sketch.transform/-transformation/index.html","searchKeys":["Transformation","interface Transformation : Key","com.github.panpf.sketch.transform.Transformation"]},{"name":"interface TransitionTarget : Target","description":"com.github.panpf.sketch.transition.TransitionTarget","location":"sketch-core/com.github.panpf.sketch.transition/-transition-target/index.html","searchKeys":["TransitionTarget","interface TransitionTarget : Target","com.github.panpf.sketch.transition.TransitionTarget"]},{"name":"interface Value","description":"com.github.panpf.sketch.cache.MemoryCache.Value","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/-value/index.html","searchKeys":["Value","interface Value","com.github.panpf.sketch.cache.MemoryCache.Value"]},{"name":"object AndroidBitmapImageSerializer","description":"com.github.panpf.sketch.cache.AndroidBitmapImageSerializer","location":"sketch-core/com.github.panpf.sketch.cache/-android-bitmap-image-serializer/index.html","searchKeys":["AndroidBitmapImageSerializer","object AndroidBitmapImageSerializer","com.github.panpf.sketch.cache.AndroidBitmapImageSerializer"]},{"name":"object Companion","description":"com.github.panpf.sketch.PlatformContext.Companion","location":"sketch-core/com.github.panpf.sketch/-platform-context/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.PlatformContext.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.cache.DiskCache.Builder.Companion","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-builder/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.cache.DiskCache.Builder.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.cache.DiskCache.Companion","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.cache.DiskCache.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.cache.DiskCache.DownloadBuilder.Companion","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-download-builder/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.cache.DiskCache.DownloadBuilder.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.cache.DiskCache.ResultBuilder.Companion","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-result-builder/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.cache.DiskCache.ResultBuilder.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.Companion","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.cache.internal.LruDiskCache.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.Companion","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/-metadata/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.decode.internal.ImageFormat.Companion","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.decode.internal.ImageFormat.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.Companion","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.fetch.AssetUriFetcher.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.Companion","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.fetch.Base64UriFetcher.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.fetch.ContentUriFetcher.Companion","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.fetch.ContentUriFetcher.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.fetch.FetchResult.Companion","location":"sketch-core/com.github.panpf.sketch.fetch/-fetch-result/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.fetch.FetchResult.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.fetch.FileUriFetcher.Companion","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.fetch.FileUriFetcher.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Companion","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Companion","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher.Companion","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.fetch.ResourceUriFetcher.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.request.DepthHolder.Companion","location":"sketch-core/com.github.panpf.sketch.request/-depth-holder/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.request.DepthHolder.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.request.Extras.Companion","location":"sketch-core/com.github.panpf.sketch.request/-extras/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.request.Extras.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.request.internal.RequestExecutor.Companion","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-executor/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.request.internal.RequestExecutor.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Companion","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.transition.CrossfadeTransition.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.transition.Transition.Companion","location":"sketch-core/com.github.panpf.sketch.transition/-transition/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.transition.Transition.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.util.Logger.Companion","location":"sketch-core/com.github.panpf.sketch.util/-logger/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.util.Logger.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.util.Rect.Companion","location":"sketch-core/com.github.panpf.sketch.util/-rect/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.util.Rect.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.util.Size.Companion","location":"sketch-core/com.github.panpf.sketch.util/-size/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.util.Size.Companion"]},{"name":"object MimeTypeMap","description":"com.github.panpf.sketch.util.MimeTypeMap","location":"sketch-core/com.github.panpf.sketch.util/-mime-type-map/index.html","searchKeys":["MimeTypeMap","object MimeTypeMap","com.github.panpf.sketch.util.MimeTypeMap"]},{"name":"object OpenGLTextureHelper","description":"com.github.panpf.sketch.decode.internal.OpenGLTextureHelper","location":"sketch-core/com.github.panpf.sketch.decode.internal/-open-g-l-texture-helper/index.html","searchKeys":["OpenGLTextureHelper","object OpenGLTextureHelper","com.github.panpf.sketch.decode.internal.OpenGLTextureHelper"]},{"name":"object SkiaBitmapImageSerializer : ImageSerializer","description":"com.github.panpf.sketch.cache.SkiaBitmapImageSerializer","location":"sketch-core/com.github.panpf.sketch.cache/-skia-bitmap-image-serializer/index.html","searchKeys":["SkiaBitmapImageSerializer","object SkiaBitmapImageSerializer : ImageSerializer","com.github.panpf.sketch.cache.SkiaBitmapImageSerializer"]},{"name":"object UriCodec","description":"com.github.panpf.sketch.util.UriCodec","location":"sketch-core/com.github.panpf.sketch.util/-uri-codec/index.html","searchKeys":["UriCodec","object UriCodec","com.github.panpf.sketch.util.UriCodec"]},{"name":"open class BitmapFactoryDecoder(requestContext: <Error class: unknown class>, dataSource: <Error class: unknown class>)","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decoder/index.html","searchKeys":["BitmapFactoryDecoder","open class BitmapFactoryDecoder(requestContext: <Error class: unknown class>, dataSource: <Error class: unknown class>)","com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder"]},{"name":"open class Builder(val context: PlatformContext, val fileSystem: FileSystem, subDirectoryName: String? = null, maxSizePercent: Float = 1.0f, internalVersion: Int = 1)","description":"com.github.panpf.sketch.cache.DiskCache.Builder","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-builder/index.html","searchKeys":["Builder","open class Builder(val context: PlatformContext, val fileSystem: FileSystem, subDirectoryName: String? = null, maxSizePercent: Float = 1.0f, internalVersion: Int = 1)","com.github.panpf.sketch.cache.DiskCache.Builder"]},{"name":"open class ComponentRegistry","description":"com.github.panpf.sketch.ComponentRegistry","location":"sketch-core/com.github.panpf.sketch/-component-registry/index.html","searchKeys":["ComponentRegistry","open class ComponentRegistry","com.github.panpf.sketch.ComponentRegistry"]},{"name":"open class DefaultLongImageDecider(val sameDirectionMultiple: Float = 2.5f, val notSameDirectionMultiple: Float = 5.0f) : LongImageDecider","description":"com.github.panpf.sketch.resize.DefaultLongImageDecider","location":"sketch-core/com.github.panpf.sketch.resize/-default-long-image-decider/index.html","searchKeys":["DefaultLongImageDecider","open class DefaultLongImageDecider(val sameDirectionMultiple: Float = 2.5f, val notSameDirectionMultiple: Float = 5.0f) : LongImageDecider","com.github.panpf.sketch.resize.DefaultLongImageDecider"]},{"name":"open class DrawableDecoder(requestContext: <Error class: unknown class>, dataSource: DrawableDataSource, mimeType: String?)","description":"com.github.panpf.sketch.decode.internal.DrawableDecoder","location":"sketch-core/com.github.panpf.sketch.decode.internal/-drawable-decoder/index.html","searchKeys":["DrawableDecoder","open class DrawableDecoder(requestContext: <Error class: unknown class>, dataSource: DrawableDataSource, mimeType: String?)","com.github.panpf.sketch.decode.internal.DrawableDecoder"]},{"name":"open class EquitableAnimatableDrawable(drawable: Drawable, val equalityKey: Any) : EquitableDrawable, Animatable2Compat","description":"com.github.panpf.sketch.drawable.EquitableAnimatableDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-animatable-drawable/index.html","searchKeys":["EquitableAnimatableDrawable","open class EquitableAnimatableDrawable(drawable: Drawable, val equalityKey: Any) : EquitableDrawable, Animatable2Compat","com.github.panpf.sketch.drawable.EquitableAnimatableDrawable"]},{"name":"open class EquitableDrawable(drawable: Drawable, val equalityKey: Any) : DrawableWrapperCompat","description":"com.github.panpf.sketch.drawable.EquitableDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-drawable/index.html","searchKeys":["EquitableDrawable","open class EquitableDrawable(drawable: Drawable, val equalityKey: Any) : DrawableWrapperCompat","com.github.panpf.sketch.drawable.EquitableDrawable"]},{"name":"open class HelperDecoder(requestContext: RequestContext, dataSource: DataSource, decodeHelperFactory: () -> DecodeHelper) : Decoder","description":"com.github.panpf.sketch.decode.internal.HelperDecoder","location":"sketch-core/com.github.panpf.sketch.decode.internal/-helper-decoder/index.html","searchKeys":["HelperDecoder","open class HelperDecoder(requestContext: RequestContext, dataSource: DataSource, decodeHelperFactory: () -> DecodeHelper) : Decoder","com.github.panpf.sketch.decode.internal.HelperDecoder"]},{"name":"open class IconDrawable(val icon: Drawable, val background: Drawable? = null, val iconSize: <Error class: unknown class>? = null, val iconTint: Int? = null) : Drawable, Drawable.Callback, SketchDrawable","description":"com.github.panpf.sketch.drawable.IconDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/index.html","searchKeys":["IconDrawable","open class IconDrawable(val icon: Drawable, val background: Drawable? = null, val iconSize: <Error class: unknown class>? = null, val iconTint: Int? = null) : Drawable, Drawable.Callback, SketchDrawable","com.github.panpf.sketch.drawable.IconDrawable"]},{"name":"open class Size(val width: Int, val height: Int)","description":"com.github.panpf.sketch.util.Size","location":"sketch-core/com.github.panpf.sketch.util/-size/index.html","searchKeys":["Size","open class Size(val width: Int, val height: Int)","com.github.panpf.sketch.util.Size"]},{"name":"open fun checkValid(): Boolean","description":"com.github.panpf.sketch.DrawableImage.checkValid","location":"sketch-core/com.github.panpf.sketch/-drawable-image/check-valid.html","searchKeys":["checkValid","open fun checkValid(): Boolean","com.github.panpf.sketch.DrawableImage.checkValid"]},{"name":"open fun close()","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.close","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decode-helper/close.html","searchKeys":["close","open fun close()","com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.close"]},{"name":"open fun compress(image: <Error class: unknown class>, sink: BufferedSink)","description":"com.github.panpf.sketch.cache.AndroidBitmapImageSerializer.compress","location":"sketch-core/com.github.panpf.sketch.cache/-android-bitmap-image-serializer/compress.html","searchKeys":["compress","open fun compress(image: <Error class: unknown class>, sink: BufferedSink)","com.github.panpf.sketch.cache.AndroidBitmapImageSerializer.compress"]},{"name":"open fun convertTransition(factory: Transition.Factory): Transition.Factory?","description":"com.github.panpf.sketch.target.Target.convertTransition","location":"sketch-core/com.github.panpf.sketch.target/-target/convert-transition.html","searchKeys":["convertTransition","open fun convertTransition(factory: Transition.Factory): Transition.Factory?","com.github.panpf.sketch.target.Target.convertTransition"]},{"name":"open fun create(requestContext: <Error class: unknown class>): AssetUriFetcher?","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.Factory.create","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/-factory/create.html","searchKeys":["create","open fun create(requestContext: <Error class: unknown class>): AssetUriFetcher?","com.github.panpf.sketch.fetch.AssetUriFetcher.Factory.create"]},{"name":"open fun create(requestContext: <Error class: unknown class>): ContentUriFetcher?","description":"com.github.panpf.sketch.fetch.ContentUriFetcher.Factory.create","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/-factory/create.html","searchKeys":["create","open fun create(requestContext: <Error class: unknown class>): ContentUriFetcher?","com.github.panpf.sketch.fetch.ContentUriFetcher.Factory.create"]},{"name":"open fun create(requestContext: <Error class: unknown class>): KotlinResourceUriFetcher?","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.create","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/-factory/create.html","searchKeys":["create","open fun create(requestContext: <Error class: unknown class>): KotlinResourceUriFetcher?","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.create"]},{"name":"open fun create(requestContext: <Error class: unknown class>): KotlinResourceUriFetcher?","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.create","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/-factory/create.html","searchKeys":["create","open fun create(requestContext: <Error class: unknown class>): KotlinResourceUriFetcher?","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.create"]},{"name":"open fun create(requestContext: <Error class: unknown class>): ResourceUriFetcher?","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher.Factory.create","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/-factory/create.html","searchKeys":["create","open fun create(requestContext: <Error class: unknown class>): ResourceUriFetcher?","com.github.panpf.sketch.fetch.ResourceUriFetcher.Factory.create"]},{"name":"open fun create(requestContext: <Error class: unknown class>, fetchResult: <Error class: unknown class>): <Error class: unknown class>","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.Factory.create","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decoder/-factory/create.html","searchKeys":["create","open fun create(requestContext: <Error class: unknown class>, fetchResult: <Error class: unknown class>): <Error class: unknown class>","com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.Factory.create"]},{"name":"open fun create(requestContext: <Error class: unknown class>, fetchResult: <Error class: unknown class>): <Error class: unknown class>?","description":"com.github.panpf.sketch.decode.internal.DrawableDecoder.Factory.create","location":"sketch-core/com.github.panpf.sketch.decode.internal/-drawable-decoder/-factory/create.html","searchKeys":["create","open fun create(requestContext: <Error class: unknown class>, fetchResult: <Error class: unknown class>): <Error class: unknown class>?","com.github.panpf.sketch.decode.internal.DrawableDecoder.Factory.create"]},{"name":"open fun decode(): <Error class: unknown class>","description":"com.github.panpf.sketch.decode.internal.DrawableDecoder.decode","location":"sketch-core/com.github.panpf.sketch.decode.internal/-drawable-decoder/decode.html","searchKeys":["decode","open fun decode(): <Error class: unknown class>","com.github.panpf.sketch.decode.internal.DrawableDecoder.decode"]},{"name":"open fun decode(requestContext: <Error class: unknown class>, imageInfo: <Error class: unknown class>, dataSource: <Error class: unknown class>): <Error class: unknown class>","description":"com.github.panpf.sketch.cache.AndroidBitmapImageSerializer.decode","location":"sketch-core/com.github.panpf.sketch.cache/-android-bitmap-image-serializer/decode.html","searchKeys":["decode","open fun decode(requestContext: <Error class: unknown class>, imageInfo: <Error class: unknown class>, dataSource: <Error class: unknown class>): <Error class: unknown class>","com.github.panpf.sketch.cache.AndroidBitmapImageSerializer.decode"]},{"name":"open fun decode(sampleSize: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.decode","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decode-helper/decode.html","searchKeys":["decode","open fun decode(sampleSize: Int): <Error class: unknown class>","com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.decode"]},{"name":"open fun decodeRegion(region: <Error class: unknown class>, sampleSize: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.decodeRegion","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decode-helper/decode-region.html","searchKeys":["decodeRegion","open fun decodeRegion(region: <Error class: unknown class>, sampleSize: Int): <Error class: unknown class>","com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.decodeRegion"]},{"name":"open fun flush()","description":"com.github.panpf.sketch.util.AndroidLogPipeline.flush","location":"sketch-core/com.github.panpf.sketch.util/-android-log-pipeline/flush.html","searchKeys":["flush","open fun flush()","com.github.panpf.sketch.util.AndroidLogPipeline.flush"]},{"name":"open fun getComponents(): ComponentRegistry?","description":"com.github.panpf.sketch.target.Target.getComponents","location":"sketch-core/com.github.panpf.sketch.target/-target/get-components.html","searchKeys":["getComponents","open fun getComponents(): ComponentRegistry?","com.github.panpf.sketch.target.Target.getComponents"]},{"name":"open fun getFile(sketch: <Error class: unknown class>): <Error class: unknown class>","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.getFile","location":"sketch-core/com.github.panpf.sketch.source/[ios]-kotlin-resource-data-source/get-file.html","searchKeys":["getFile","open fun getFile(sketch: <Error class: unknown class>): <Error class: unknown class>","com.github.panpf.sketch.source.KotlinResourceDataSource.getFile"]},{"name":"open fun getFile(sketch: <Error class: unknown class>): Path","description":"com.github.panpf.sketch.source.AssetDataSource.getFile","location":"sketch-core/com.github.panpf.sketch.source/-asset-data-source/get-file.html","searchKeys":["getFile","open fun getFile(sketch: <Error class: unknown class>): Path","com.github.panpf.sketch.source.AssetDataSource.getFile"]},{"name":"open fun getFile(sketch: <Error class: unknown class>): Path","description":"com.github.panpf.sketch.source.ContentDataSource.getFile","location":"sketch-core/com.github.panpf.sketch.source/-content-data-source/get-file.html","searchKeys":["getFile","open fun getFile(sketch: <Error class: unknown class>): Path","com.github.panpf.sketch.source.ContentDataSource.getFile"]},{"name":"open fun getFile(sketch: <Error class: unknown class>): Path","description":"com.github.panpf.sketch.source.DrawableDataSource.getFile","location":"sketch-core/com.github.panpf.sketch.source/-drawable-data-source/get-file.html","searchKeys":["getFile","open fun getFile(sketch: <Error class: unknown class>): Path","com.github.panpf.sketch.source.DrawableDataSource.getFile"]},{"name":"open fun getFile(sketch: <Error class: unknown class>): Path","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.getFile","location":"sketch-core/com.github.panpf.sketch.source/[desktop]-kotlin-resource-data-source/get-file.html","searchKeys":["getFile","open fun getFile(sketch: <Error class: unknown class>): Path","com.github.panpf.sketch.source.KotlinResourceDataSource.getFile"]},{"name":"open fun getFile(sketch: <Error class: unknown class>): Path","description":"com.github.panpf.sketch.source.ResourceDataSource.getFile","location":"sketch-core/com.github.panpf.sketch.source/-resource-data-source/get-file.html","searchKeys":["getFile","open fun getFile(sketch: <Error class: unknown class>): Path","com.github.panpf.sketch.source.ResourceDataSource.getFile"]},{"name":"open fun getImage(sketch: <Error class: unknown class>, request: <Error class: unknown class>, throwable: Throwable?): <Error class: unknown class>","description":"com.github.panpf.sketch.state.ColorDrawableStateImage.getImage","location":"sketch-core/com.github.panpf.sketch.state/-color-drawable-state-image/get-image.html","searchKeys":["getImage","open fun getImage(sketch: <Error class: unknown class>, request: <Error class: unknown class>, throwable: Throwable?): <Error class: unknown class>","com.github.panpf.sketch.state.ColorDrawableStateImage.getImage"]},{"name":"open fun getImage(sketch: <Error class: unknown class>, request: <Error class: unknown class>, throwable: Throwable?): <Error class: unknown class>","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.getImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image/get-image.html","searchKeys":["getImage","open fun getImage(sketch: <Error class: unknown class>, request: <Error class: unknown class>, throwable: Throwable?): <Error class: unknown class>","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.getImage"]},{"name":"open fun getImage(sketch: <Error class: unknown class>, request: <Error class: unknown class>, throwable: Throwable?): <Error class: unknown class>","description":"com.github.panpf.sketch.state.IconDrawableStateImage.getImage","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image/get-image.html","searchKeys":["getImage","open fun getImage(sketch: <Error class: unknown class>, request: <Error class: unknown class>, throwable: Throwable?): <Error class: unknown class>","com.github.panpf.sketch.state.IconDrawableStateImage.getImage"]},{"name":"open fun getImage(sketch: <Error class: unknown class>, request: <Error class: unknown class>, throwable: Throwable?): <Error class: unknown class>?","description":"com.github.panpf.sketch.state.DrawableStateImage.getImage","location":"sketch-core/com.github.panpf.sketch.state/-drawable-state-image/get-image.html","searchKeys":["getImage","open fun getImage(sketch: <Error class: unknown class>, request: <Error class: unknown class>, throwable: Throwable?): <Error class: unknown class>?","com.github.panpf.sketch.state.DrawableStateImage.getImage"]},{"name":"open fun getImageOptions(): ImageOptions?","description":"com.github.panpf.sketch.target.Target.getImageOptions","location":"sketch-core/com.github.panpf.sketch.target/-target/get-image-options.html","searchKeys":["getImageOptions","open fun getImageOptions(): ImageOptions?","com.github.panpf.sketch.target.Target.getImageOptions"]},{"name":"open fun getLifecycleResolver(): LifecycleResolver?","description":"com.github.panpf.sketch.target.Target.getLifecycleResolver","location":"sketch-core/com.github.panpf.sketch.target/-target/get-lifecycle-resolver.html","searchKeys":["getLifecycleResolver","open fun getLifecycleResolver(): LifecycleResolver?","com.github.panpf.sketch.target.Target.getLifecycleResolver"]},{"name":"open fun getListener(): Listener?","description":"com.github.panpf.sketch.target.Target.getListener","location":"sketch-core/com.github.panpf.sketch.target/-target/get-listener.html","searchKeys":["getListener","open fun getListener(): Listener?","com.github.panpf.sketch.target.Target.getListener"]},{"name":"open fun getProgressListener(): ProgressListener?","description":"com.github.panpf.sketch.target.Target.getProgressListener","location":"sketch-core/com.github.panpf.sketch.target/-target/get-progress-listener.html","searchKeys":["getProgressListener","open fun getProgressListener(): ProgressListener?","com.github.panpf.sketch.target.Target.getProgressListener"]},{"name":"open fun getRequestManager(): RequestManager?","description":"com.github.panpf.sketch.target.Target.getRequestManager","location":"sketch-core/com.github.panpf.sketch.target/-target/get-request-manager.html","searchKeys":["getRequestManager","open fun getRequestManager(): RequestManager?","com.github.panpf.sketch.target.Target.getRequestManager"]},{"name":"open fun getResizeOnDrawHelper(): ResizeOnDrawHelper?","description":"com.github.panpf.sketch.target.Target.getResizeOnDrawHelper","location":"sketch-core/com.github.panpf.sketch.target/-target/get-resize-on-draw-helper.html","searchKeys":["getResizeOnDrawHelper","open fun getResizeOnDrawHelper(): ResizeOnDrawHelper?","com.github.panpf.sketch.target.Target.getResizeOnDrawHelper"]},{"name":"open fun getScaleDecider(): ScaleDecider?","description":"com.github.panpf.sketch.target.Target.getScaleDecider","location":"sketch-core/com.github.panpf.sketch.target/-target/get-scale-decider.html","searchKeys":["getScaleDecider","open fun getScaleDecider(): ScaleDecider?","com.github.panpf.sketch.target.Target.getScaleDecider"]},{"name":"open fun getSizeResolver(): SizeResolver?","description":"com.github.panpf.sketch.target.Target.getSizeResolver","location":"sketch-core/com.github.panpf.sketch.target/-target/get-size-resolver.html","searchKeys":["getSizeResolver","open fun getSizeResolver(): SizeResolver?","com.github.panpf.sketch.target.Target.getSizeResolver"]},{"name":"open fun log(level: <Error class: unknown class>, tag: String, msg: String, tr: Throwable?)","description":"com.github.panpf.sketch.util.AndroidLogPipeline.log","location":"sketch-core/com.github.panpf.sketch.util/-android-log-pipeline/log.html","searchKeys":["log","open fun log(level: <Error class: unknown class>, tag: String, msg: String, tr: Throwable?)","com.github.panpf.sketch.util.AndroidLogPipeline.log"]},{"name":"open fun newRequestDelegate(sketch: Sketch, initialRequest: ImageRequest, job: Job): RequestDelegate?","description":"com.github.panpf.sketch.target.Target.newRequestDelegate","location":"sketch-core/com.github.panpf.sketch.target/-target/new-request-delegate.html","searchKeys":["newRequestDelegate","open fun newRequestDelegate(sketch: Sketch, initialRequest: ImageRequest, job: Job): RequestDelegate?","com.github.panpf.sketch.target.Target.newRequestDelegate"]},{"name":"open fun onCancel(request: ImageRequest)","description":"com.github.panpf.sketch.request.Listener.onCancel","location":"sketch-core/com.github.panpf.sketch.request/-listener/on-cancel.html","searchKeys":["onCancel","open fun onCancel(request: ImageRequest)","com.github.panpf.sketch.request.Listener.onCancel"]},{"name":"open fun onError(request: ImageRequest, error: ImageResult.Error)","description":"com.github.panpf.sketch.request.Listener.onError","location":"sketch-core/com.github.panpf.sketch.request/-listener/on-error.html","searchKeys":["onError","open fun onError(request: ImageRequest, error: ImageResult.Error)","com.github.panpf.sketch.request.Listener.onError"]},{"name":"open fun onError(sketch: Sketch, request: ImageRequest, error: ImageResult.Error, image: Image?)","description":"com.github.panpf.sketch.target.Target.onError","location":"sketch-core/com.github.panpf.sketch.target/-target/on-error.html","searchKeys":["onError","open fun onError(sketch: Sketch, request: ImageRequest, error: ImageResult.Error, image: Image?)","com.github.panpf.sketch.target.Target.onError"]},{"name":"open fun onStart(request: ImageRequest)","description":"com.github.panpf.sketch.request.Listener.onStart","location":"sketch-core/com.github.panpf.sketch.request/-listener/on-start.html","searchKeys":["onStart","open fun onStart(request: ImageRequest)","com.github.panpf.sketch.request.Listener.onStart"]},{"name":"open fun onStart(sketch: Sketch, request: ImageRequest, placeholder: Image?)","description":"com.github.panpf.sketch.target.Target.onStart","location":"sketch-core/com.github.panpf.sketch.target/-target/on-start.html","searchKeys":["onStart","open fun onStart(sketch: Sketch, request: ImageRequest, placeholder: Image?)","com.github.panpf.sketch.target.Target.onStart"]},{"name":"open fun onSuccess(request: ImageRequest, result: ImageResult.Success)","description":"com.github.panpf.sketch.request.Listener.onSuccess","location":"sketch-core/com.github.panpf.sketch.request/-listener/on-success.html","searchKeys":["onSuccess","open fun onSuccess(request: ImageRequest, result: ImageResult.Success)","com.github.panpf.sketch.request.Listener.onSuccess"]},{"name":"open fun onSuccess(sketch: Sketch, request: ImageRequest, result: ImageResult.Success, image: Image)","description":"com.github.panpf.sketch.target.Target.onSuccess","location":"sketch-core/com.github.panpf.sketch.target/-target/on-success.html","searchKeys":["onSuccess","open fun onSuccess(sketch: Sketch, request: ImageRequest, result: ImageResult.Success, image: Image)","com.github.panpf.sketch.target.Target.onSuccess"]},{"name":"open fun openSource(): <Error class: unknown class>","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.openSource","location":"sketch-core/com.github.panpf.sketch.source/[ios]-kotlin-resource-data-source/open-source.html","searchKeys":["openSource","open fun openSource(): <Error class: unknown class>","com.github.panpf.sketch.source.KotlinResourceDataSource.openSource"]},{"name":"open fun openSource(): Source","description":"com.github.panpf.sketch.source.AssetDataSource.openSource","location":"sketch-core/com.github.panpf.sketch.source/-asset-data-source/open-source.html","searchKeys":["openSource","open fun openSource(): Source","com.github.panpf.sketch.source.AssetDataSource.openSource"]},{"name":"open fun openSource(): Source","description":"com.github.panpf.sketch.source.ContentDataSource.openSource","location":"sketch-core/com.github.panpf.sketch.source/-content-data-source/open-source.html","searchKeys":["openSource","open fun openSource(): Source","com.github.panpf.sketch.source.ContentDataSource.openSource"]},{"name":"open fun openSource(): Source","description":"com.github.panpf.sketch.source.DrawableDataSource.openSource","location":"sketch-core/com.github.panpf.sketch.source/-drawable-data-source/open-source.html","searchKeys":["openSource","open fun openSource(): Source","com.github.panpf.sketch.source.DrawableDataSource.openSource"]},{"name":"open fun openSource(): Source","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.openSource","location":"sketch-core/com.github.panpf.sketch.source/[desktop]-kotlin-resource-data-source/open-source.html","searchKeys":["openSource","open fun openSource(): Source","com.github.panpf.sketch.source.KotlinResourceDataSource.openSource"]},{"name":"open fun openSource(): Source","description":"com.github.panpf.sketch.source.ResourceDataSource.openSource","location":"sketch-core/com.github.panpf.sketch.source/-resource-data-source/open-source.html","searchKeys":["openSource","open fun openSource(): Source","com.github.panpf.sketch.source.ResourceDataSource.openSource"]},{"name":"open fun register()","description":"com.github.panpf.sketch.util.AndroidSystemCallbacks.register","location":"sketch-core/com.github.panpf.sketch.util/-android-system-callbacks/register.html","searchKeys":["register","open fun register()","com.github.panpf.sketch.util.AndroidSystemCallbacks.register"]},{"name":"open fun shutdown()","description":"com.github.panpf.sketch.util.AndroidSystemCallbacks.shutdown","location":"sketch-core/com.github.panpf.sketch.util/-android-system-callbacks/shutdown.html","searchKeys":["shutdown","open fun shutdown()","com.github.panpf.sketch.util.AndroidSystemCallbacks.shutdown"]},{"name":"open fun supportImage(image: <Error class: unknown class>): Boolean","description":"com.github.panpf.sketch.cache.AndroidBitmapImageSerializer.supportImage","location":"sketch-core/com.github.panpf.sketch.cache/-android-bitmap-image-serializer/support-image.html","searchKeys":["supportImage","open fun supportImage(image: <Error class: unknown class>): Boolean","com.github.panpf.sketch.cache.AndroidBitmapImageSerializer.supportImage"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.ComponentRegistry.equals","location":"sketch-core/com.github.panpf.sketch/-component-registry/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.ComponentRegistry.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.Components.equals","location":"sketch-core/com.github.panpf.sketch/-components/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.Components.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.equals","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.cache.internal.EmptyDiskCache.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.equals","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.cache.internal.LruDiskCache.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.equals","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.cache.internal.LruMemoryCache.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor.equals","location":"sketch-core/com.github.panpf.sketch.cache.internal/-memory-cache-request-interceptor/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.equals","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.SkiaDecoder.Factory.equals","location":"sketch-core/com.github.panpf.sketch.decode/-skia-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.SkiaDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.Factory.equals","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.internal.DrawableDecoder.Factory.equals","location":"sketch-core/com.github.panpf.sketch.decode.internal/-drawable-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.internal.DrawableDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor.equals","location":"sketch-core/com.github.panpf.sketch.decode.internal/-engine-decode-interceptor/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.AnimatableDrawable.equals","location":"sketch-core/com.github.panpf.sketch.drawable/-animatable-drawable/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.AnimatableDrawable.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher.equals","location":"sketch-core/com.github.panpf.sketch.drawable/-color-fetcher-drawable-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.equals","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-animatable-drawable/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.EquitableDrawable.equals","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-drawable/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.EquitableDrawable.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.IconAnimatableDrawable.equals","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-animatable-drawable/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.IconAnimatableDrawable.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.IconDrawable.equals","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.IconDrawable.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.RealColorDrawableFetcher.equals","location":"sketch-core/com.github.panpf.sketch.drawable/-real-color-drawable-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.RealColorDrawableFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.RealDrawableFetcher.equals","location":"sketch-core/com.github.panpf.sketch.drawable/-real-drawable-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.RealDrawableFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.ResColorDrawableFetcher.equals","location":"sketch-core/com.github.panpf.sketch.drawable/-res-color-drawable-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.ResColorDrawableFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.ResDrawableFetcher.equals","location":"sketch-core/com.github.panpf.sketch.drawable/-res-drawable-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.ResDrawableFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.Factory.equals","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.AssetUriFetcher.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.equals","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.AssetUriFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.Factory.equals","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.Base64UriFetcher.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.equals","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.Base64UriFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.ContentUriFetcher.Factory.equals","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.ContentUriFetcher.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.ContentUriFetcher.equals","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.ContentUriFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.FileUriFetcher.Factory.equals","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.FileUriFetcher.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.FileUriFetcher.equals","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.FileUriFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.equals","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.equals","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.equals","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.equals","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher.Factory.equals","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.ResourceUriFetcher.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher.equals","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.ResourceUriFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.request.Extras.equals","location":"sketch-core/com.github.panpf.sketch.request/-extras/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.request.Extras.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.request.internal.EngineRequestInterceptor.equals","location":"sketch-core/com.github.panpf.sketch.request.internal/-engine-request-interceptor/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.request.internal.EngineRequestInterceptor.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.request.internal.Listeners.equals","location":"sketch-core/com.github.panpf.sketch.request.internal/-listeners/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.request.internal.Listeners.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.request.internal.ProgressListeners.equals","location":"sketch-core/com.github.panpf.sketch.request.internal/-progress-listeners/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.request.internal.ProgressListeners.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.resize.DefaultLongImageDecider.equals","location":"sketch-core/com.github.panpf.sketch.resize/-default-long-image-decider/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.resize.DefaultLongImageDecider.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.source.AssetDataSource.equals","location":"sketch-core/com.github.panpf.sketch.source/-asset-data-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.source.AssetDataSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.source.ByteArrayDataSource.equals","location":"sketch-core/com.github.panpf.sketch.source/-byte-array-data-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.source.ByteArrayDataSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.source.ContentDataSource.equals","location":"sketch-core/com.github.panpf.sketch.source/-content-data-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.source.ContentDataSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.source.DrawableDataSource.equals","location":"sketch-core/com.github.panpf.sketch.source/-drawable-data-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.source.DrawableDataSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.source.FileDataSource.equals","location":"sketch-core/com.github.panpf.sketch.source/-file-data-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.source.FileDataSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.equals","location":"sketch-core/com.github.panpf.sketch.source/[desktop]-kotlin-resource-data-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.source.KotlinResourceDataSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.equals","location":"sketch-core/com.github.panpf.sketch.source/[ios]-kotlin-resource-data-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.source.KotlinResourceDataSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.source.ResourceDataSource.equals","location":"sketch-core/com.github.panpf.sketch.source/-resource-data-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.source.ResourceDataSource.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.transform.CircleCropTransformation.equals","location":"sketch-core/com.github.panpf.sketch.transform/-circle-crop-transformation/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.transform.CircleCropTransformation.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.transform.MaskTransformation.equals","location":"sketch-core/com.github.panpf.sketch.transform/-mask-transformation/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.transform.MaskTransformation.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.transform.RotateTransformation.equals","location":"sketch-core/com.github.panpf.sketch.transform/-rotate-transformation/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.transform.RotateTransformation.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.transform.RoundedCornersTransformation.equals","location":"sketch-core/com.github.panpf.sketch.transform/-rounded-corners-transformation/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.transform.RoundedCornersTransformation.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor.equals","location":"sketch-core/com.github.panpf.sketch.transform.internal/-transformation-decode-interceptor/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Factory.equals","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.transition.CrossfadeTransition.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.util.IntColorFetcher.equals","location":"sketch-core/com.github.panpf.sketch.util/-int-color-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.util.IntColorFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.util.Logger.equals","location":"sketch-core/com.github.panpf.sketch.util/-logger/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.util.Logger.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.util.Rect.equals","location":"sketch-core/com.github.panpf.sketch.util/-rect/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.util.Rect.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.util.ResColorFetcher.equals","location":"sketch-core/com.github.panpf.sketch.util/-res-color-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.util.ResColorFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.util.Size.equals","location":"sketch-core/com.github.panpf.sketch.util/-size/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.util.Size.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.util.Uri.equals","location":"sketch-core/com.github.panpf.sketch.util/-uri/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.util.Uri.equals"]},{"name":"open operator override fun get(key: String): MemoryCache.Value?","description":"com.github.panpf.sketch.cache.internal.EmptyMemoryCache.get","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-memory-cache/get.html","searchKeys":["get","open operator override fun get(key: String): MemoryCache.Value?","com.github.panpf.sketch.cache.internal.EmptyMemoryCache.get"]},{"name":"open operator override fun get(key: String): MemoryCache.Value?","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.get","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/get.html","searchKeys":["get","open operator override fun get(key: String): MemoryCache.Value?","com.github.panpf.sketch.cache.internal.LruMemoryCache.get"]},{"name":"open operator override fun iterator(): Iterator<Pair<String, Extras.Entry>>","description":"com.github.panpf.sketch.request.Extras.iterator","location":"sketch-core/com.github.panpf.sketch.request/-extras/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Pair<String, Extras.Entry>>","com.github.panpf.sketch.request.Extras.iterator"]},{"name":"open override fun accept(request: ImageRequest, throwable: Throwable?): Boolean","description":"com.github.panpf.sketch.state.ConditionStateImage.DefaultCondition.accept","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/-default-condition/accept.html","searchKeys":["accept","open override fun accept(request: ImageRequest, throwable: Throwable?): Boolean","com.github.panpf.sketch.state.ConditionStateImage.DefaultCondition.accept"]},{"name":"open override fun addObserver(observer: LifecycleObserver)","description":"com.github.panpf.sketch.request.GlobalLifecycle.addObserver","location":"sketch-core/com.github.panpf.sketch.request/-global-lifecycle/add-observer.html","searchKeys":["addObserver","open override fun addObserver(observer: LifecycleObserver)","com.github.panpf.sketch.request.GlobalLifecycle.addObserver"]},{"name":"open override fun assertActive()","description":"com.github.panpf.sketch.request.internal.NoTargetRequestDelegate.assertActive","location":"sketch-core/com.github.panpf.sketch.request.internal/-no-target-request-delegate/assert-active.html","searchKeys":["assertActive","open override fun assertActive()","com.github.panpf.sketch.request.internal.NoTargetRequestDelegate.assertActive"]},{"name":"open override fun assertActive()","description":"com.github.panpf.sketch.request.internal.OneShotRequestDelegate.assertActive","location":"sketch-core/com.github.panpf.sketch.request.internal/-one-shot-request-delegate/assert-active.html","searchKeys":["assertActive","open override fun assertActive()","com.github.panpf.sketch.request.internal.OneShotRequestDelegate.assertActive"]},{"name":"open override fun checkValid(): Boolean","description":"com.github.panpf.sketch.cache.ImageCacheValue.checkValid","location":"sketch-core/com.github.panpf.sketch.cache/-image-cache-value/check-valid.html","searchKeys":["checkValid","open override fun checkValid(): Boolean","com.github.panpf.sketch.cache.ImageCacheValue.checkValid"]},{"name":"open override fun clear()","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.clear","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/clear.html","searchKeys":["clear","open override fun clear()","com.github.panpf.sketch.cache.internal.EmptyDiskCache.clear"]},{"name":"open override fun clear()","description":"com.github.panpf.sketch.cache.internal.EmptyMemoryCache.clear","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-memory-cache/clear.html","searchKeys":["clear","open override fun clear()","com.github.panpf.sketch.cache.internal.EmptyMemoryCache.clear"]},{"name":"open override fun clear()","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.clear","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/clear.html","searchKeys":["clear","open override fun clear()","com.github.panpf.sketch.cache.internal.LruDiskCache.clear"]},{"name":"open override fun clear()","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.clear","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/clear.html","searchKeys":["clear","open override fun clear()","com.github.panpf.sketch.cache.internal.LruMemoryCache.clear"]},{"name":"open override fun clearAnimationCallbacks()","description":"com.github.panpf.sketch.drawable.AnimatableDrawable.clearAnimationCallbacks","location":"sketch-core/com.github.panpf.sketch.drawable/-animatable-drawable/clear-animation-callbacks.html","searchKeys":["clearAnimationCallbacks","open override fun clearAnimationCallbacks()","com.github.panpf.sketch.drawable.AnimatableDrawable.clearAnimationCallbacks"]},{"name":"open override fun clearAnimationCallbacks()","description":"com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.clearAnimationCallbacks","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-animatable-drawable/clear-animation-callbacks.html","searchKeys":["clearAnimationCallbacks","open override fun clearAnimationCallbacks()","com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.clearAnimationCallbacks"]},{"name":"open override fun clearAnimationCallbacks()","description":"com.github.panpf.sketch.drawable.IconAnimatableDrawable.clearAnimationCallbacks","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-animatable-drawable/clear-animation-callbacks.html","searchKeys":["clearAnimationCallbacks","open override fun clearAnimationCallbacks()","com.github.panpf.sketch.drawable.IconAnimatableDrawable.clearAnimationCallbacks"]},{"name":"open override fun close()","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.close","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/close.html","searchKeys":["close","open override fun close()","com.github.panpf.sketch.cache.internal.EmptyDiskCache.close"]},{"name":"open override fun close()","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.close","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/close.html","searchKeys":["close","open override fun close()","com.github.panpf.sketch.cache.internal.LruDiskCache.close"]},{"name":"open override fun close()","description":"com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.close","location":"sketch-core/com.github.panpf.sketch.decode.internal/-skia-decode-helper/close.html","searchKeys":["close","open override fun close()","com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.close"]},{"name":"open override fun compress(image: SketchImage, sink: BufferedSink)","description":"com.github.panpf.sketch.cache.SkiaBitmapImageSerializer.compress","location":"sketch-core/com.github.panpf.sketch.cache/-skia-bitmap-image-serializer/compress.html","searchKeys":["compress","open override fun compress(image: SketchImage, sink: BufferedSink)","com.github.panpf.sketch.cache.SkiaBitmapImageSerializer.compress"]},{"name":"open override fun create(requestContext: RequestContext): Base64UriFetcher?","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.Factory.create","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext): Base64UriFetcher?","com.github.panpf.sketch.fetch.Base64UriFetcher.Factory.create"]},{"name":"open override fun create(requestContext: RequestContext): FileUriFetcher?","description":"com.github.panpf.sketch.fetch.FileUriFetcher.Factory.create","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext): FileUriFetcher?","com.github.panpf.sketch.fetch.FileUriFetcher.Factory.create"]},{"name":"open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder","description":"com.github.panpf.sketch.decode.SkiaDecoder.Factory.create","location":"sketch-core/com.github.panpf.sketch.decode/-skia-decoder/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder","com.github.panpf.sketch.decode.SkiaDecoder.Factory.create"]},{"name":"open override fun create(sketch: Sketch, request: ImageRequest, target: Target, result: ImageResult): Transition?","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Factory.create","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-factory/create.html","searchKeys":["create","open override fun create(sketch: Sketch, request: ImageRequest, target: Target, result: ImageResult): Transition?","com.github.panpf.sketch.transition.CrossfadeTransition.Factory.create"]},{"name":"open override fun decode(): DecodeResult","description":"com.github.panpf.sketch.decode.internal.HelperDecoder.decode","location":"sketch-core/com.github.panpf.sketch.decode.internal/-helper-decoder/decode.html","searchKeys":["decode","open override fun decode(): DecodeResult","com.github.panpf.sketch.decode.internal.HelperDecoder.decode"]},{"name":"open override fun decode(requestContext: RequestContext, imageInfo: ImageInfo, dataSource: DataSource): SketchImage","description":"com.github.panpf.sketch.cache.SkiaBitmapImageSerializer.decode","location":"sketch-core/com.github.panpf.sketch.cache/-skia-bitmap-image-serializer/decode.html","searchKeys":["decode","open override fun decode(requestContext: RequestContext, imageInfo: ImageInfo, dataSource: DataSource): SketchImage","com.github.panpf.sketch.cache.SkiaBitmapImageSerializer.decode"]},{"name":"open override fun decode(sampleSize: Int): SketchImage","description":"com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.decode","location":"sketch-core/com.github.panpf.sketch.decode.internal/-skia-decode-helper/decode.html","searchKeys":["decode","open override fun decode(sampleSize: Int): SketchImage","com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.decode"]},{"name":"open override fun decodeRegion(region: Rect, sampleSize: Int): SketchImage","description":"com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.decodeRegion","location":"sketch-core/com.github.panpf.sketch.decode.internal/-skia-decode-helper/decode-region.html","searchKeys":["decodeRegion","open override fun decodeRegion(region: Rect, sampleSize: Int): SketchImage","com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.decodeRegion"]},{"name":"open override fun dispose()","description":"com.github.panpf.sketch.request.OneShotDisposable.dispose","location":"sketch-core/com.github.panpf.sketch.request/-one-shot-disposable/dispose.html","searchKeys":["dispose","open override fun dispose()","com.github.panpf.sketch.request.OneShotDisposable.dispose"]},{"name":"open override fun dispose()","description":"com.github.panpf.sketch.request.ReusableDisposable.dispose","location":"sketch-core/com.github.panpf.sketch.request/-reusable-disposable/dispose.html","searchKeys":["dispose","open override fun dispose()","com.github.panpf.sketch.request.ReusableDisposable.dispose"]},{"name":"open override fun dispose()","description":"com.github.panpf.sketch.request.internal.BaseRequestDelegate.dispose","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-delegate/dispose.html","searchKeys":["dispose","open override fun dispose()","com.github.panpf.sketch.request.internal.BaseRequestDelegate.dispose"]},{"name":"open override fun dispose()","description":"com.github.panpf.sketch.request.internal.BaseRequestManager.dispose","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-manager/dispose.html","searchKeys":["dispose","open override fun dispose()","com.github.panpf.sketch.request.internal.BaseRequestManager.dispose"]},{"name":"open override fun draw(canvas: Canvas)","description":"com.github.panpf.sketch.drawable.IconDrawable.draw","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/draw.html","searchKeys":["draw","open override fun draw(canvas: Canvas)","com.github.panpf.sketch.drawable.IconDrawable.draw"]},{"name":"open override fun entries(): Set<Map.Entry<String, MemoryCache.Value>>","description":"com.github.panpf.sketch.cache.internal.EmptyMemoryCache.entries","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-memory-cache/entries.html","searchKeys":["entries","open override fun entries(): Set<Map.Entry<String, MemoryCache.Value>>","com.github.panpf.sketch.cache.internal.EmptyMemoryCache.entries"]},{"name":"open override fun entries(): Set<Map.Entry<String, MemoryCache.Value>>","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.entries","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/entries.html","searchKeys":["entries","open override fun entries(): Set<Map.Entry<String, MemoryCache.Value>>","com.github.panpf.sketch.cache.internal.LruMemoryCache.entries"]},{"name":"open override fun exist(key: String): Boolean","description":"com.github.panpf.sketch.cache.internal.EmptyMemoryCache.exist","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-memory-cache/exist.html","searchKeys":["exist","open override fun exist(key: String): Boolean","com.github.panpf.sketch.cache.internal.EmptyMemoryCache.exist"]},{"name":"open override fun exist(key: String): Boolean","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.exist","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/exist.html","searchKeys":["exist","open override fun exist(key: String): Boolean","com.github.panpf.sketch.cache.internal.LruMemoryCache.exist"]},{"name":"open override fun finish()","description":"com.github.panpf.sketch.request.internal.NoTargetRequestDelegate.finish","location":"sketch-core/com.github.panpf.sketch.request.internal/-no-target-request-delegate/finish.html","searchKeys":["finish","open override fun finish()","com.github.panpf.sketch.request.internal.NoTargetRequestDelegate.finish"]},{"name":"open override fun finish()","description":"com.github.panpf.sketch.request.internal.OneShotRequestDelegate.finish","location":"sketch-core/com.github.panpf.sketch.request.internal/-one-shot-request-delegate/finish.html","searchKeys":["finish","open override fun finish()","com.github.panpf.sketch.request.internal.OneShotRequestDelegate.finish"]},{"name":"open override fun flush()","description":"com.github.panpf.sketch.util.PrintLogPipeline.flush","location":"sketch-core/com.github.panpf.sketch.util/-print-log-pipeline/flush.html","searchKeys":["flush","open override fun flush()","com.github.panpf.sketch.util.PrintLogPipeline.flush"]},{"name":"open override fun get(imageSize: Size, targetSize: Size): Precision","description":"com.github.panpf.sketch.resize.FixedPrecisionDecider.get","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-precision-decider/get.html","searchKeys":["get","open override fun get(imageSize: Size, targetSize: Size): Precision","com.github.panpf.sketch.resize.FixedPrecisionDecider.get"]},{"name":"open override fun get(imageSize: Size, targetSize: Size): Precision","description":"com.github.panpf.sketch.resize.LongImagePrecisionDecider.get","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-precision-decider/get.html","searchKeys":["get","open override fun get(imageSize: Size, targetSize: Size): Precision","com.github.panpf.sketch.resize.LongImagePrecisionDecider.get"]},{"name":"open override fun get(imageSize: Size, targetSize: Size): Scale","description":"com.github.panpf.sketch.resize.FixedScaleDecider.get","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-scale-decider/get.html","searchKeys":["get","open override fun get(imageSize: Size, targetSize: Size): Scale","com.github.panpf.sketch.resize.FixedScaleDecider.get"]},{"name":"open override fun get(imageSize: Size, targetSize: Size): Scale","description":"com.github.panpf.sketch.resize.LongImageScaleDecider.get","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-scale-decider/get.html","searchKeys":["get","open override fun get(imageSize: Size, targetSize: Size): Scale","com.github.panpf.sketch.resize.LongImageScaleDecider.get"]},{"name":"open override fun getAlpha(): Int","description":"com.github.panpf.sketch.drawable.IconDrawable.getAlpha","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/get-alpha.html","searchKeys":["getAlpha","open override fun getAlpha(): Int","com.github.panpf.sketch.drawable.IconDrawable.getAlpha"]},{"name":"open override fun getChangingConfigurations(): Int","description":"com.github.panpf.sketch.drawable.IconDrawable.getChangingConfigurations","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/get-changing-configurations.html","searchKeys":["getChangingConfigurations","open override fun getChangingConfigurations(): Int","com.github.panpf.sketch.drawable.IconDrawable.getChangingConfigurations"]},{"name":"open override fun getColor(context: Context): Int","description":"com.github.panpf.sketch.util.IntColorFetcher.getColor","location":"sketch-core/com.github.panpf.sketch.util/-int-color-fetcher/get-color.html","searchKeys":["getColor","open override fun getColor(context: Context): Int","com.github.panpf.sketch.util.IntColorFetcher.getColor"]},{"name":"open override fun getColor(context: Context): Int","description":"com.github.panpf.sketch.util.ResColorFetcher.getColor","location":"sketch-core/com.github.panpf.sketch.util/-res-color-fetcher/get-color.html","searchKeys":["getColor","open override fun getColor(context: Context): Int","com.github.panpf.sketch.util.ResColorFetcher.getColor"]},{"name":"open override fun getColorFilter(): ColorFilter?","description":"com.github.panpf.sketch.drawable.IconDrawable.getColorFilter","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/get-color-filter.html","searchKeys":["getColorFilter","open override fun getColorFilter(): ColorFilter?","com.github.panpf.sketch.drawable.IconDrawable.getColorFilter"]},{"name":"open override fun getDisposable(job: Deferred<ImageResult>): ReusableDisposable","description":"com.github.panpf.sketch.request.internal.BaseRequestManager.getDisposable","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-manager/get-disposable.html","searchKeys":["getDisposable","open override fun getDisposable(job: Deferred<ImageResult>): ReusableDisposable","com.github.panpf.sketch.request.internal.BaseRequestManager.getDisposable"]},{"name":"open override fun getDrawable(): Drawable","description":"com.github.panpf.sketch.drawable.EquitableDrawable.getDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-drawable/get-drawable.html","searchKeys":["getDrawable","open override fun getDrawable(): Drawable","com.github.panpf.sketch.drawable.EquitableDrawable.getDrawable"]},{"name":"open override fun getDrawable(context: Context): Drawable","description":"com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher.getDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-color-fetcher-drawable-fetcher/get-drawable.html","searchKeys":["getDrawable","open override fun getDrawable(context: Context): Drawable","com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher.getDrawable"]},{"name":"open override fun getDrawable(context: Context): Drawable","description":"com.github.panpf.sketch.drawable.RealColorDrawableFetcher.getDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-real-color-drawable-fetcher/get-drawable.html","searchKeys":["getDrawable","open override fun getDrawable(context: Context): Drawable","com.github.panpf.sketch.drawable.RealColorDrawableFetcher.getDrawable"]},{"name":"open override fun getDrawable(context: Context): Drawable","description":"com.github.panpf.sketch.drawable.RealDrawableFetcher.getDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-real-drawable-fetcher/get-drawable.html","searchKeys":["getDrawable","open override fun getDrawable(context: Context): Drawable","com.github.panpf.sketch.drawable.RealDrawableFetcher.getDrawable"]},{"name":"open override fun getDrawable(context: Context): Drawable","description":"com.github.panpf.sketch.drawable.ResColorDrawableFetcher.getDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-res-color-drawable-fetcher/get-drawable.html","searchKeys":["getDrawable","open override fun getDrawable(context: Context): Drawable","com.github.panpf.sketch.drawable.ResColorDrawableFetcher.getDrawable"]},{"name":"open override fun getDrawable(context: Context): Drawable","description":"com.github.panpf.sketch.drawable.ResDrawableFetcher.getDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-res-drawable-fetcher/get-drawable.html","searchKeys":["getDrawable","open override fun getDrawable(context: Context): Drawable","com.github.panpf.sketch.drawable.ResDrawableFetcher.getDrawable"]},{"name":"open override fun getFile(sketch: Sketch): Path","description":"com.github.panpf.sketch.source.ByteArrayDataSource.getFile","location":"sketch-core/com.github.panpf.sketch.source/-byte-array-data-source/get-file.html","searchKeys":["getFile","open override fun getFile(sketch: Sketch): Path","com.github.panpf.sketch.source.ByteArrayDataSource.getFile"]},{"name":"open override fun getFile(sketch: Sketch): Path","description":"com.github.panpf.sketch.source.FileDataSource.getFile","location":"sketch-core/com.github.panpf.sketch.source/-file-data-source/get-file.html","searchKeys":["getFile","open override fun getFile(sketch: Sketch): Path","com.github.panpf.sketch.source.FileDataSource.getFile"]},{"name":"open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image?","description":"com.github.panpf.sketch.state.ConditionStateImage.getImage","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/get-image.html","searchKeys":["getImage","open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image?","com.github.panpf.sketch.state.ConditionStateImage.getImage"]},{"name":"open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image?","description":"com.github.panpf.sketch.state.CurrentStateImage.getImage","location":"sketch-core/com.github.panpf.sketch.state/-current-state-image/get-image.html","searchKeys":["getImage","open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image?","com.github.panpf.sketch.state.CurrentStateImage.getImage"]},{"name":"open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image?","description":"com.github.panpf.sketch.state.MemoryCacheStateImage.getImage","location":"sketch-core/com.github.panpf.sketch.state/-memory-cache-state-image/get-image.html","searchKeys":["getImage","open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image?","com.github.panpf.sketch.state.MemoryCacheStateImage.getImage"]},{"name":"open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image?","description":"com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.getImage","location":"sketch-core/com.github.panpf.sketch.state/-thumbnail-memory-cache-state-image/get-image.html","searchKeys":["getImage","open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image?","com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.getImage"]},{"name":"open override fun getIntrinsicHeight(): Int","description":"com.github.panpf.sketch.drawable.IconDrawable.getIntrinsicHeight","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/get-intrinsic-height.html","searchKeys":["getIntrinsicHeight","open override fun getIntrinsicHeight(): Int","com.github.panpf.sketch.drawable.IconDrawable.getIntrinsicHeight"]},{"name":"open override fun getIntrinsicWidth(): Int","description":"com.github.panpf.sketch.drawable.IconDrawable.getIntrinsicWidth","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/get-intrinsic-width.html","searchKeys":["getIntrinsicWidth","open override fun getIntrinsicWidth(): Int","com.github.panpf.sketch.drawable.IconDrawable.getIntrinsicWidth"]},{"name":"open override fun getMaxSize(): Int","description":"com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl16.getMaxSize","location":"sketch-core/com.github.panpf.sketch.decode.internal/-open-g-l-texture-helper/-impl16/get-max-size.html","searchKeys":["getMaxSize","open override fun getMaxSize(): Int","com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl16.getMaxSize"]},{"name":"open override fun getMaxSize(): Int?","description":"com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl17.getMaxSize","location":"sketch-core/com.github.panpf.sketch.decode.internal/-open-g-l-texture-helper/-impl17/get-max-size.html","searchKeys":["getMaxSize","open override fun getMaxSize(): Int?","com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.Impl17.getMaxSize"]},{"name":"open override fun getOpacity(): Int","description":"com.github.panpf.sketch.drawable.IconDrawable.getOpacity","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/get-opacity.html","searchKeys":["getOpacity","open override fun getOpacity(): Int","com.github.panpf.sketch.drawable.IconDrawable.getOpacity"]},{"name":"open override fun getPadding(padding: Rect): Boolean","description":"com.github.panpf.sketch.drawable.IconDrawable.getPadding","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/get-padding.html","searchKeys":["getPadding","open override fun getPadding(padding: Rect): Boolean","com.github.panpf.sketch.drawable.IconDrawable.getPadding"]},{"name":"open override fun getRequest(): ImageRequest?","description":"com.github.panpf.sketch.request.internal.BaseRequestManager.getRequest","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-manager/get-request.html","searchKeys":["getRequest","open override fun getRequest(): ImageRequest?","com.github.panpf.sketch.request.internal.BaseRequestManager.getRequest"]},{"name":"open override fun getResult(): ImageResult?","description":"com.github.panpf.sketch.request.internal.BaseRequestManager.getResult","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-manager/get-result.html","searchKeys":["getResult","open override fun getResult(): ImageResult?","com.github.panpf.sketch.request.internal.BaseRequestManager.getResult"]},{"name":"open override fun getSketch(): Sketch?","description":"com.github.panpf.sketch.request.internal.BaseRequestManager.getSketch","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-manager/get-sketch.html","searchKeys":["getSketch","open override fun getSketch(): Sketch?","com.github.panpf.sketch.request.internal.BaseRequestManager.getSketch"]},{"name":"open override fun getState(): IntArray","description":"com.github.panpf.sketch.drawable.IconDrawable.getState","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/get-state.html","searchKeys":["getState","open override fun getState(): IntArray","com.github.panpf.sketch.drawable.IconDrawable.getState"]},{"name":"open override fun getTransparentRegion(): Region?","description":"com.github.panpf.sketch.drawable.IconDrawable.getTransparentRegion","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/get-transparent-region.html","searchKeys":["getTransparentRegion","open override fun getTransparentRegion(): Region?","com.github.panpf.sketch.drawable.IconDrawable.getTransparentRegion"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.ComponentRegistry.hashCode","location":"sketch-core/com.github.panpf.sketch/-component-registry/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.ComponentRegistry.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.Components.hashCode","location":"sketch-core/com.github.panpf.sketch/-components/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.Components.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.hashCode","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.cache.internal.EmptyDiskCache.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.hashCode","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.cache.internal.LruDiskCache.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.hashCode","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.cache.internal.LruMemoryCache.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor.hashCode","location":"sketch-core/com.github.panpf.sketch.cache.internal/-memory-cache-request-interceptor/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.hashCode","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.SkiaDecoder.Factory.hashCode","location":"sketch-core/com.github.panpf.sketch.decode/-skia-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.SkiaDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.Factory.hashCode","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.internal.DrawableDecoder.Factory.hashCode","location":"sketch-core/com.github.panpf.sketch.decode.internal/-drawable-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.internal.DrawableDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor.hashCode","location":"sketch-core/com.github.panpf.sketch.decode.internal/-engine-decode-interceptor/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.AnimatableDrawable.hashCode","location":"sketch-core/com.github.panpf.sketch.drawable/-animatable-drawable/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.AnimatableDrawable.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.drawable/-color-fetcher-drawable-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.hashCode","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-animatable-drawable/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.EquitableDrawable.hashCode","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-drawable/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.EquitableDrawable.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.IconAnimatableDrawable.hashCode","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-animatable-drawable/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.IconAnimatableDrawable.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.IconDrawable.hashCode","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.IconDrawable.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.RealColorDrawableFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.drawable/-real-color-drawable-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.RealColorDrawableFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.RealDrawableFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.drawable/-real-drawable-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.RealDrawableFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.ResColorDrawableFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.drawable/-res-color-drawable-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.ResColorDrawableFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.ResDrawableFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.drawable/-res-drawable-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.ResDrawableFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.Factory.hashCode","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.AssetUriFetcher.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.AssetUriFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.Factory.hashCode","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.Base64UriFetcher.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.Base64UriFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.ContentUriFetcher.Factory.hashCode","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.ContentUriFetcher.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.ContentUriFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.ContentUriFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.FileUriFetcher.Factory.hashCode","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.FileUriFetcher.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.FileUriFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.FileUriFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.hashCode","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.hashCode","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher.Factory.hashCode","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.ResourceUriFetcher.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.ResourceUriFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.request.Extras.hashCode","location":"sketch-core/com.github.panpf.sketch.request/-extras/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.request.Extras.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.request.internal.EngineRequestInterceptor.hashCode","location":"sketch-core/com.github.panpf.sketch.request.internal/-engine-request-interceptor/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.request.internal.EngineRequestInterceptor.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.request.internal.Listeners.hashCode","location":"sketch-core/com.github.panpf.sketch.request.internal/-listeners/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.request.internal.Listeners.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.request.internal.ProgressListeners.hashCode","location":"sketch-core/com.github.panpf.sketch.request.internal/-progress-listeners/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.request.internal.ProgressListeners.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.resize.DefaultLongImageDecider.hashCode","location":"sketch-core/com.github.panpf.sketch.resize/-default-long-image-decider/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.resize.DefaultLongImageDecider.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.source.AssetDataSource.hashCode","location":"sketch-core/com.github.panpf.sketch.source/-asset-data-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.source.AssetDataSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.source.ByteArrayDataSource.hashCode","location":"sketch-core/com.github.panpf.sketch.source/-byte-array-data-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.source.ByteArrayDataSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.source.ContentDataSource.hashCode","location":"sketch-core/com.github.panpf.sketch.source/-content-data-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.source.ContentDataSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.source.DrawableDataSource.hashCode","location":"sketch-core/com.github.panpf.sketch.source/-drawable-data-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.source.DrawableDataSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.source.FileDataSource.hashCode","location":"sketch-core/com.github.panpf.sketch.source/-file-data-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.source.FileDataSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.hashCode","location":"sketch-core/com.github.panpf.sketch.source/[desktop]-kotlin-resource-data-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.source.KotlinResourceDataSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.hashCode","location":"sketch-core/com.github.panpf.sketch.source/[ios]-kotlin-resource-data-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.source.KotlinResourceDataSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.source.ResourceDataSource.hashCode","location":"sketch-core/com.github.panpf.sketch.source/-resource-data-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.source.ResourceDataSource.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.transform.CircleCropTransformation.hashCode","location":"sketch-core/com.github.panpf.sketch.transform/-circle-crop-transformation/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.transform.CircleCropTransformation.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.transform.MaskTransformation.hashCode","location":"sketch-core/com.github.panpf.sketch.transform/-mask-transformation/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.transform.MaskTransformation.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.transform.RotateTransformation.hashCode","location":"sketch-core/com.github.panpf.sketch.transform/-rotate-transformation/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.transform.RotateTransformation.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.transform.RoundedCornersTransformation.hashCode","location":"sketch-core/com.github.panpf.sketch.transform/-rounded-corners-transformation/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.transform.RoundedCornersTransformation.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor.hashCode","location":"sketch-core/com.github.panpf.sketch.transform.internal/-transformation-decode-interceptor/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Factory.hashCode","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.transition.CrossfadeTransition.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.util.IntColorFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.util/-int-color-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.util.IntColorFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.util.Logger.hashCode","location":"sketch-core/com.github.panpf.sketch.util/-logger/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.util.Logger.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.util.Rect.hashCode","location":"sketch-core/com.github.panpf.sketch.util/-rect/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.util.Rect.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.util.ResColorFetcher.hashCode","location":"sketch-core/com.github.panpf.sketch.util/-res-color-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.util.ResColorFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.util.Size.hashCode","location":"sketch-core/com.github.panpf.sketch.util/-size/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.util.Size.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.util.Uri.hashCode","location":"sketch-core/com.github.panpf.sketch.util/-uri/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.util.Uri.hashCode"]},{"name":"open override fun invalidateDrawable(who: Drawable)","description":"com.github.panpf.sketch.drawable.IconDrawable.invalidateDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/invalidate-drawable.html","searchKeys":["invalidateDrawable","open override fun invalidateDrawable(who: Drawable)","com.github.panpf.sketch.drawable.IconDrawable.invalidateDrawable"]},{"name":"open override fun isAttached(): Boolean","description":"com.github.panpf.sketch.request.internal.OneShotRequestManager.isAttached","location":"sketch-core/com.github.panpf.sketch.request.internal/-one-shot-request-manager/is-attached.html","searchKeys":["isAttached","open override fun isAttached(): Boolean","com.github.panpf.sketch.request.internal.OneShotRequestManager.isAttached"]},{"name":"open override fun isAutoMirrored(): Boolean","description":"com.github.panpf.sketch.drawable.IconDrawable.isAutoMirrored","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/is-auto-mirrored.html","searchKeys":["isAutoMirrored","open override fun isAutoMirrored(): Boolean","com.github.panpf.sketch.drawable.IconDrawable.isAutoMirrored"]},{"name":"open override fun isDisposed(disposable: Disposable): Boolean","description":"com.github.panpf.sketch.request.internal.BaseRequestManager.isDisposed","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-manager/is-disposed.html","searchKeys":["isDisposed","open override fun isDisposed(disposable: Disposable): Boolean","com.github.panpf.sketch.request.internal.BaseRequestManager.isDisposed"]},{"name":"open override fun isFilterBitmap(): Boolean","description":"com.github.panpf.sketch.drawable.IconDrawable.isFilterBitmap","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/is-filter-bitmap.html","searchKeys":["isFilterBitmap","open override fun isFilterBitmap(): Boolean","com.github.panpf.sketch.drawable.IconDrawable.isFilterBitmap"]},{"name":"open override fun isInitialized(): Boolean","description":"com.github.panpf.sketch.util.ResetLazy.isInitialized","location":"sketch-core/com.github.panpf.sketch.util/-reset-lazy/is-initialized.html","searchKeys":["isInitialized","open override fun isInitialized(): Boolean","com.github.panpf.sketch.util.ResetLazy.isInitialized"]},{"name":"open override fun isLongImage(imageSize: Size, targetSize: Size): Boolean","description":"com.github.panpf.sketch.resize.DefaultLongImageDecider.isLongImage","location":"sketch-core/com.github.panpf.sketch.resize/-default-long-image-decider/is-long-image.html","searchKeys":["isLongImage","open override fun isLongImage(imageSize: Size, targetSize: Size): Boolean","com.github.panpf.sketch.resize.DefaultLongImageDecider.isLongImage"]},{"name":"open override fun isRunning(): Boolean","description":"com.github.panpf.sketch.drawable.AnimatableDrawable.isRunning","location":"sketch-core/com.github.panpf.sketch.drawable/-animatable-drawable/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","com.github.panpf.sketch.drawable.AnimatableDrawable.isRunning"]},{"name":"open override fun isRunning(): Boolean","description":"com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.isRunning","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-animatable-drawable/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.isRunning"]},{"name":"open override fun isRunning(): Boolean","description":"com.github.panpf.sketch.drawable.IconAnimatableDrawable.isRunning","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-animatable-drawable/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","com.github.panpf.sketch.drawable.IconAnimatableDrawable.isRunning"]},{"name":"open override fun isStateful(): Boolean","description":"com.github.panpf.sketch.drawable.IconDrawable.isStateful","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/is-stateful.html","searchKeys":["isStateful","open override fun isStateful(): Boolean","com.github.panpf.sketch.drawable.IconDrawable.isStateful"]},{"name":"open override fun jumpToCurrentState()","description":"com.github.panpf.sketch.drawable.IconDrawable.jumpToCurrentState","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/jump-to-current-state.html","searchKeys":["jumpToCurrentState","open override fun jumpToCurrentState()","com.github.panpf.sketch.drawable.IconDrawable.jumpToCurrentState"]},{"name":"open override fun keys(): Set<String>","description":"com.github.panpf.sketch.cache.internal.EmptyMemoryCache.keys","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-memory-cache/keys.html","searchKeys":["keys","open override fun keys(): Set<String>","com.github.panpf.sketch.cache.internal.EmptyMemoryCache.keys"]},{"name":"open override fun keys(): Set<String>","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.keys","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/keys.html","searchKeys":["keys","open override fun keys(): Set<String>","com.github.panpf.sketch.cache.internal.LruMemoryCache.keys"]},{"name":"open override fun log(level: Logger.Level, tag: String, msg: String, tr: Throwable?)","description":"com.github.panpf.sketch.util.PrintLogPipeline.log","location":"sketch-core/com.github.panpf.sketch.util/-print-log-pipeline/log.html","searchKeys":["log","open override fun log(level: Logger.Level, tag: String, msg: String, tr: Throwable?)","com.github.panpf.sketch.util.PrintLogPipeline.log"]},{"name":"open override fun mutate(): AnimatableDrawable","description":"com.github.panpf.sketch.drawable.AnimatableDrawable.mutate","location":"sketch-core/com.github.panpf.sketch.drawable/-animatable-drawable/mutate.html","searchKeys":["mutate","open override fun mutate(): AnimatableDrawable","com.github.panpf.sketch.drawable.AnimatableDrawable.mutate"]},{"name":"open override fun mutate(): EquitableAnimatableDrawable","description":"com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.mutate","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-animatable-drawable/mutate.html","searchKeys":["mutate","open override fun mutate(): EquitableAnimatableDrawable","com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.mutate"]},{"name":"open override fun mutate(): EquitableDrawable","description":"com.github.panpf.sketch.drawable.EquitableDrawable.mutate","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-drawable/mutate.html","searchKeys":["mutate","open override fun mutate(): EquitableDrawable","com.github.panpf.sketch.drawable.EquitableDrawable.mutate"]},{"name":"open override fun mutate(): IconAnimatableDrawable","description":"com.github.panpf.sketch.drawable.IconAnimatableDrawable.mutate","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-animatable-drawable/mutate.html","searchKeys":["mutate","open override fun mutate(): IconAnimatableDrawable","com.github.panpf.sketch.drawable.IconAnimatableDrawable.mutate"]},{"name":"open override fun mutate(): IconDrawable","description":"com.github.panpf.sketch.drawable.IconDrawable.mutate","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/mutate.html","searchKeys":["mutate","open override fun mutate(): IconDrawable","com.github.panpf.sketch.drawable.IconDrawable.mutate"]},{"name":"open override fun onAttachedChanged(attached: Boolean)","description":"com.github.panpf.sketch.request.internal.BaseRequestDelegate.onAttachedChanged","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-delegate/on-attached-changed.html","searchKeys":["onAttachedChanged","open override fun onAttachedChanged(attached: Boolean)","com.github.panpf.sketch.request.internal.BaseRequestDelegate.onAttachedChanged"]},{"name":"open override fun onCancel(request: ImageRequest)","description":"com.github.panpf.sketch.request.RequestState.onCancel","location":"sketch-core/com.github.panpf.sketch.request/-request-state/on-cancel.html","searchKeys":["onCancel","open override fun onCancel(request: ImageRequest)","com.github.panpf.sketch.request.RequestState.onCancel"]},{"name":"open override fun onCancel(request: ImageRequest)","description":"com.github.panpf.sketch.request.internal.Listeners.onCancel","location":"sketch-core/com.github.panpf.sketch.request.internal/-listeners/on-cancel.html","searchKeys":["onCancel","open override fun onCancel(request: ImageRequest)","com.github.panpf.sketch.request.internal.Listeners.onCancel"]},{"name":"open override fun onCancel(request: ImageRequest)","description":"com.github.panpf.sketch.request.internal.PairListener.onCancel","location":"sketch-core/com.github.panpf.sketch.request.internal/-pair-listener/on-cancel.html","searchKeys":["onCancel","open override fun onCancel(request: ImageRequest)","com.github.panpf.sketch.request.internal.PairListener.onCancel"]},{"name":"open override fun onError(request: ImageRequest, error: ImageResult.Error)","description":"com.github.panpf.sketch.request.RequestState.onError","location":"sketch-core/com.github.panpf.sketch.request/-request-state/on-error.html","searchKeys":["onError","open override fun onError(request: ImageRequest, error: ImageResult.Error)","com.github.panpf.sketch.request.RequestState.onError"]},{"name":"open override fun onError(request: ImageRequest, error: ImageResult.Error)","description":"com.github.panpf.sketch.request.internal.Listeners.onError","location":"sketch-core/com.github.panpf.sketch.request.internal/-listeners/on-error.html","searchKeys":["onError","open override fun onError(request: ImageRequest, error: ImageResult.Error)","com.github.panpf.sketch.request.internal.Listeners.onError"]},{"name":"open override fun onError(request: ImageRequest, error: ImageResult.Error)","description":"com.github.panpf.sketch.request.internal.PairListener.onError","location":"sketch-core/com.github.panpf.sketch.request.internal/-pair-listener/on-error.html","searchKeys":["onError","open override fun onError(request: ImageRequest, error: ImageResult.Error)","com.github.panpf.sketch.request.internal.PairListener.onError"]},{"name":"open override fun onStart(request: ImageRequest)","description":"com.github.panpf.sketch.request.RequestState.onStart","location":"sketch-core/com.github.panpf.sketch.request/-request-state/on-start.html","searchKeys":["onStart","open override fun onStart(request: ImageRequest)","com.github.panpf.sketch.request.RequestState.onStart"]},{"name":"open override fun onStart(request: ImageRequest)","description":"com.github.panpf.sketch.request.internal.Listeners.onStart","location":"sketch-core/com.github.panpf.sketch.request.internal/-listeners/on-start.html","searchKeys":["onStart","open override fun onStart(request: ImageRequest)","com.github.panpf.sketch.request.internal.Listeners.onStart"]},{"name":"open override fun onStart(request: ImageRequest)","description":"com.github.panpf.sketch.request.internal.PairListener.onStart","location":"sketch-core/com.github.panpf.sketch.request.internal/-pair-listener/on-start.html","searchKeys":["onStart","open override fun onStart(request: ImageRequest)","com.github.panpf.sketch.request.internal.PairListener.onStart"]},{"name":"open override fun onStateChanged(source: LifecycleOwner, event: Lifecycle.Event)","description":"com.github.panpf.sketch.request.internal.BaseRequestDelegate.onStateChanged","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-delegate/on-state-changed.html","searchKeys":["onStateChanged","open override fun onStateChanged(source: LifecycleOwner, event: Lifecycle.Event)","com.github.panpf.sketch.request.internal.BaseRequestDelegate.onStateChanged"]},{"name":"open override fun onSuccess(request: ImageRequest, result: ImageResult.Success)","description":"com.github.panpf.sketch.request.RequestState.onSuccess","location":"sketch-core/com.github.panpf.sketch.request/-request-state/on-success.html","searchKeys":["onSuccess","open override fun onSuccess(request: ImageRequest, result: ImageResult.Success)","com.github.panpf.sketch.request.RequestState.onSuccess"]},{"name":"open override fun onSuccess(request: ImageRequest, result: ImageResult.Success)","description":"com.github.panpf.sketch.request.internal.Listeners.onSuccess","location":"sketch-core/com.github.panpf.sketch.request.internal/-listeners/on-success.html","searchKeys":["onSuccess","open override fun onSuccess(request: ImageRequest, result: ImageResult.Success)","com.github.panpf.sketch.request.internal.Listeners.onSuccess"]},{"name":"open override fun onSuccess(request: ImageRequest, result: ImageResult.Success)","description":"com.github.panpf.sketch.request.internal.PairListener.onSuccess","location":"sketch-core/com.github.panpf.sketch.request.internal/-pair-listener/on-success.html","searchKeys":["onSuccess","open override fun onSuccess(request: ImageRequest, result: ImageResult.Success)","com.github.panpf.sketch.request.internal.PairListener.onSuccess"]},{"name":"open override fun onUpdateProgress(request: ImageRequest, progress: Progress)","description":"com.github.panpf.sketch.request.RequestState.onUpdateProgress","location":"sketch-core/com.github.panpf.sketch.request/-request-state/on-update-progress.html","searchKeys":["onUpdateProgress","open override fun onUpdateProgress(request: ImageRequest, progress: Progress)","com.github.panpf.sketch.request.RequestState.onUpdateProgress"]},{"name":"open override fun onUpdateProgress(request: ImageRequest, progress: Progress)","description":"com.github.panpf.sketch.request.internal.PairProgressListener.onUpdateProgress","location":"sketch-core/com.github.panpf.sketch.request.internal/-pair-progress-listener/on-update-progress.html","searchKeys":["onUpdateProgress","open override fun onUpdateProgress(request: ImageRequest, progress: Progress)","com.github.panpf.sketch.request.internal.PairProgressListener.onUpdateProgress"]},{"name":"open override fun onUpdateProgress(request: ImageRequest, progress: Progress)","description":"com.github.panpf.sketch.request.internal.ProgressListeners.onUpdateProgress","location":"sketch-core/com.github.panpf.sketch.request.internal/-progress-listeners/on-update-progress.html","searchKeys":["onUpdateProgress","open override fun onUpdateProgress(request: ImageRequest, progress: Progress)","com.github.panpf.sketch.request.internal.ProgressListeners.onUpdateProgress"]},{"name":"open override fun openEditor(key: String): DiskCache.Editor?","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.openEditor","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/open-editor.html","searchKeys":["openEditor","open override fun openEditor(key: String): DiskCache.Editor?","com.github.panpf.sketch.cache.internal.EmptyDiskCache.openEditor"]},{"name":"open override fun openEditor(key: String): DiskCache.Editor?","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.openEditor","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/open-editor.html","searchKeys":["openEditor","open override fun openEditor(key: String): DiskCache.Editor?","com.github.panpf.sketch.cache.internal.LruDiskCache.openEditor"]},{"name":"open override fun openSnapshot(key: String): DiskCache.Snapshot?","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.openSnapshot","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/open-snapshot.html","searchKeys":["openSnapshot","open override fun openSnapshot(key: String): DiskCache.Snapshot?","com.github.panpf.sketch.cache.internal.EmptyDiskCache.openSnapshot"]},{"name":"open override fun openSnapshot(key: String): DiskCache.Snapshot?","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.openSnapshot","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/open-snapshot.html","searchKeys":["openSnapshot","open override fun openSnapshot(key: String): DiskCache.Snapshot?","com.github.panpf.sketch.cache.internal.LruDiskCache.openSnapshot"]},{"name":"open override fun openSource(): Source","description":"com.github.panpf.sketch.source.ByteArrayDataSource.openSource","location":"sketch-core/com.github.panpf.sketch.source/-byte-array-data-source/open-source.html","searchKeys":["openSource","open override fun openSource(): Source","com.github.panpf.sketch.source.ByteArrayDataSource.openSource"]},{"name":"open override fun openSource(): Source","description":"com.github.panpf.sketch.source.FileDataSource.openSource","location":"sketch-core/com.github.panpf.sketch.source/-file-data-source/open-source.html","searchKeys":["openSource","open override fun openSource(): Source","com.github.panpf.sketch.source.FileDataSource.openSource"]},{"name":"open override fun put(key: String, value: MemoryCache.Value): Int","description":"com.github.panpf.sketch.cache.internal.EmptyMemoryCache.put","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-memory-cache/put.html","searchKeys":["put","open override fun put(key: String, value: MemoryCache.Value): Int","com.github.panpf.sketch.cache.internal.EmptyMemoryCache.put"]},{"name":"open override fun put(key: String, value: MemoryCache.Value): Int","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.put","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/put.html","searchKeys":["put","open override fun put(key: String, value: MemoryCache.Value): Int","com.github.panpf.sketch.cache.internal.LruMemoryCache.put"]},{"name":"open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","description":"com.github.panpf.sketch.drawable.AnimatableDrawable.registerAnimationCallback","location":"sketch-core/com.github.panpf.sketch.drawable/-animatable-drawable/register-animation-callback.html","searchKeys":["registerAnimationCallback","open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","com.github.panpf.sketch.drawable.AnimatableDrawable.registerAnimationCallback"]},{"name":"open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","description":"com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.registerAnimationCallback","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-animatable-drawable/register-animation-callback.html","searchKeys":["registerAnimationCallback","open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.registerAnimationCallback"]},{"name":"open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","description":"com.github.panpf.sketch.drawable.IconAnimatableDrawable.registerAnimationCallback","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-animatable-drawable/register-animation-callback.html","searchKeys":["registerAnimationCallback","open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","com.github.panpf.sketch.drawable.IconAnimatableDrawable.registerAnimationCallback"]},{"name":"open override fun remove(key: String): Boolean","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.remove","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/remove.html","searchKeys":["remove","open override fun remove(key: String): Boolean","com.github.panpf.sketch.cache.internal.EmptyDiskCache.remove"]},{"name":"open override fun remove(key: String): Boolean","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.remove","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/remove.html","searchKeys":["remove","open override fun remove(key: String): Boolean","com.github.panpf.sketch.cache.internal.LruDiskCache.remove"]},{"name":"open override fun remove(key: String): MemoryCache.Value?","description":"com.github.panpf.sketch.cache.internal.EmptyMemoryCache.remove","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-memory-cache/remove.html","searchKeys":["remove","open override fun remove(key: String): MemoryCache.Value?","com.github.panpf.sketch.cache.internal.EmptyMemoryCache.remove"]},{"name":"open override fun remove(key: String): MemoryCache.Value?","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.remove","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/remove.html","searchKeys":["remove","open override fun remove(key: String): MemoryCache.Value?","com.github.panpf.sketch.cache.internal.LruMemoryCache.remove"]},{"name":"open override fun removeObserver(observer: LifecycleObserver)","description":"com.github.panpf.sketch.request.GlobalLifecycle.removeObserver","location":"sketch-core/com.github.panpf.sketch.request/-global-lifecycle/remove-observer.html","searchKeys":["removeObserver","open override fun removeObserver(observer: LifecycleObserver)","com.github.panpf.sketch.request.GlobalLifecycle.removeObserver"]},{"name":"open override fun restart()","description":"com.github.panpf.sketch.request.internal.BaseRequestManager.restart","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-manager/restart.html","searchKeys":["restart","open override fun restart()","com.github.panpf.sketch.request.internal.BaseRequestManager.restart"]},{"name":"open override fun scheduleDrawable(who: Drawable, what: Runnable, when: Long)","description":"com.github.panpf.sketch.drawable.IconDrawable.scheduleDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/schedule-drawable.html","searchKeys":["scheduleDrawable","open override fun scheduleDrawable(who: Drawable, what: Runnable, when: Long)","com.github.panpf.sketch.drawable.IconDrawable.scheduleDrawable"]},{"name":"open override fun setAlpha(alpha: Int)","description":"com.github.panpf.sketch.drawable.IconDrawable.setAlpha","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/set-alpha.html","searchKeys":["setAlpha","open override fun setAlpha(alpha: Int)","com.github.panpf.sketch.drawable.IconDrawable.setAlpha"]},{"name":"open override fun setAutoMirrored(mirrored: Boolean)","description":"com.github.panpf.sketch.drawable.IconDrawable.setAutoMirrored","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/set-auto-mirrored.html","searchKeys":["setAutoMirrored","open override fun setAutoMirrored(mirrored: Boolean)","com.github.panpf.sketch.drawable.IconDrawable.setAutoMirrored"]},{"name":"open override fun setChangingConfigurations(configs: Int)","description":"com.github.panpf.sketch.drawable.IconDrawable.setChangingConfigurations","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/set-changing-configurations.html","searchKeys":["setChangingConfigurations","open override fun setChangingConfigurations(configs: Int)","com.github.panpf.sketch.drawable.IconDrawable.setChangingConfigurations"]},{"name":"open override fun setColorFilter(color: Int, mode: PorterDuff.Mode)","description":"com.github.panpf.sketch.drawable.IconDrawable.setColorFilter","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/set-color-filter.html","searchKeys":["setColorFilter","open override fun setColorFilter(color: Int, mode: PorterDuff.Mode)","com.github.panpf.sketch.drawable.IconDrawable.setColorFilter"]},{"name":"open override fun setColorFilter(colorFilter: ColorFilter?)","description":"com.github.panpf.sketch.drawable.IconDrawable.setColorFilter","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/set-color-filter.html","searchKeys":["setColorFilter","open override fun setColorFilter(colorFilter: ColorFilter?)","com.github.panpf.sketch.drawable.IconDrawable.setColorFilter"]},{"name":"open override fun setDrawable(drawable: Drawable?)","description":"com.github.panpf.sketch.drawable.AnimatableDrawable.setDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-animatable-drawable/set-drawable.html","searchKeys":["setDrawable","open override fun setDrawable(drawable: Drawable?)","com.github.panpf.sketch.drawable.AnimatableDrawable.setDrawable"]},{"name":"open override fun setDrawable(drawable: Drawable?)","description":"com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.setDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-animatable-drawable/set-drawable.html","searchKeys":["setDrawable","open override fun setDrawable(drawable: Drawable?)","com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.setDrawable"]},{"name":"open override fun setDrawable(drawable: Drawable?)","description":"com.github.panpf.sketch.drawable.EquitableDrawable.setDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-drawable/set-drawable.html","searchKeys":["setDrawable","open override fun setDrawable(drawable: Drawable?)","com.github.panpf.sketch.drawable.EquitableDrawable.setDrawable"]},{"name":"open override fun setFilterBitmap(filter: Boolean)","description":"com.github.panpf.sketch.drawable.IconDrawable.setFilterBitmap","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/set-filter-bitmap.html","searchKeys":["setFilterBitmap","open override fun setFilterBitmap(filter: Boolean)","com.github.panpf.sketch.drawable.IconDrawable.setFilterBitmap"]},{"name":"open override fun setHotspot(x: Float, y: Float)","description":"com.github.panpf.sketch.drawable.IconDrawable.setHotspot","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/set-hotspot.html","searchKeys":["setHotspot","open override fun setHotspot(x: Float, y: Float)","com.github.panpf.sketch.drawable.IconDrawable.setHotspot"]},{"name":"open override fun setHotspotBounds(left: Int, top: Int, right: Int, bottom: Int)","description":"com.github.panpf.sketch.drawable.IconDrawable.setHotspotBounds","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/set-hotspot-bounds.html","searchKeys":["setHotspotBounds","open override fun setHotspotBounds(left: Int, top: Int, right: Int, bottom: Int)","com.github.panpf.sketch.drawable.IconDrawable.setHotspotBounds"]},{"name":"open override fun setRequest(requestDelegate: RequestDelegate?)","description":"com.github.panpf.sketch.request.internal.BaseRequestManager.setRequest","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-manager/set-request.html","searchKeys":["setRequest","open override fun setRequest(requestDelegate: RequestDelegate?)","com.github.panpf.sketch.request.internal.BaseRequestManager.setRequest"]},{"name":"open override fun setState(stateSet: IntArray): Boolean","description":"com.github.panpf.sketch.drawable.IconDrawable.setState","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/set-state.html","searchKeys":["setState","open override fun setState(stateSet: IntArray): Boolean","com.github.panpf.sketch.drawable.IconDrawable.setState"]},{"name":"open override fun setTint(tint: Int)","description":"com.github.panpf.sketch.drawable.IconDrawable.setTint","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/set-tint.html","searchKeys":["setTint","open override fun setTint(tint: Int)","com.github.panpf.sketch.drawable.IconDrawable.setTint"]},{"name":"open override fun setTintList(tint: ColorStateList?)","description":"com.github.panpf.sketch.drawable.IconDrawable.setTintList","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/set-tint-list.html","searchKeys":["setTintList","open override fun setTintList(tint: ColorStateList?)","com.github.panpf.sketch.drawable.IconDrawable.setTintList"]},{"name":"open override fun setTintMode(tintMode: PorterDuff.Mode?)","description":"com.github.panpf.sketch.drawable.IconDrawable.setTintMode","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/set-tint-mode.html","searchKeys":["setTintMode","open override fun setTintMode(tintMode: PorterDuff.Mode?)","com.github.panpf.sketch.drawable.IconDrawable.setTintMode"]},{"name":"open override fun setVisible(visible: Boolean, restart: Boolean): Boolean","description":"com.github.panpf.sketch.drawable.IconDrawable.setVisible","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/set-visible.html","searchKeys":["setVisible","open override fun setVisible(visible: Boolean, restart: Boolean): Boolean","com.github.panpf.sketch.drawable.IconDrawable.setVisible"]},{"name":"open override fun shutdown()","description":"com.github.panpf.sketch.util.NetworkObserver1.shutdown","location":"sketch-core/com.github.panpf.sketch.util/-network-observer1/shutdown.html","searchKeys":["shutdown","open override fun shutdown()","com.github.panpf.sketch.util.NetworkObserver1.shutdown"]},{"name":"open override fun shutdown()","description":"com.github.panpf.sketch.util.NetworkObserver21.shutdown","location":"sketch-core/com.github.panpf.sketch.util/-network-observer21/shutdown.html","searchKeys":["shutdown","open override fun shutdown()","com.github.panpf.sketch.util.NetworkObserver21.shutdown"]},{"name":"open override fun start()","description":"com.github.panpf.sketch.drawable.AnimatableDrawable.start","location":"sketch-core/com.github.panpf.sketch.drawable/-animatable-drawable/start.html","searchKeys":["start","open override fun start()","com.github.panpf.sketch.drawable.AnimatableDrawable.start"]},{"name":"open override fun start()","description":"com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.start","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-animatable-drawable/start.html","searchKeys":["start","open override fun start()","com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.start"]},{"name":"open override fun start()","description":"com.github.panpf.sketch.drawable.IconAnimatableDrawable.start","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-animatable-drawable/start.html","searchKeys":["start","open override fun start()","com.github.panpf.sketch.drawable.IconAnimatableDrawable.start"]},{"name":"open override fun start(lifecycle: Lifecycle)","description":"com.github.panpf.sketch.request.internal.BaseRequestDelegate.start","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-delegate/start.html","searchKeys":["start","open override fun start(lifecycle: Lifecycle)","com.github.panpf.sketch.request.internal.BaseRequestDelegate.start"]},{"name":"open override fun stop()","description":"com.github.panpf.sketch.drawable.AnimatableDrawable.stop","location":"sketch-core/com.github.panpf.sketch.drawable/-animatable-drawable/stop.html","searchKeys":["stop","open override fun stop()","com.github.panpf.sketch.drawable.AnimatableDrawable.stop"]},{"name":"open override fun stop()","description":"com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.stop","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-animatable-drawable/stop.html","searchKeys":["stop","open override fun stop()","com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.stop"]},{"name":"open override fun stop()","description":"com.github.panpf.sketch.drawable.IconAnimatableDrawable.stop","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-animatable-drawable/stop.html","searchKeys":["stop","open override fun stop()","com.github.panpf.sketch.drawable.IconAnimatableDrawable.stop"]},{"name":"open override fun supportImage(image: SketchImage): Boolean","description":"com.github.panpf.sketch.cache.SkiaBitmapImageSerializer.supportImage","location":"sketch-core/com.github.panpf.sketch.cache/-skia-bitmap-image-serializer/support-image.html","searchKeys":["supportImage","open override fun supportImage(image: SketchImage): Boolean","com.github.panpf.sketch.cache.SkiaBitmapImageSerializer.supportImage"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.ComponentRegistry.toString","location":"sketch-core/com.github.panpf.sketch/-component-registry/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.ComponentRegistry.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.Components.toString","location":"sketch-core/com.github.panpf.sketch/-components/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.Components.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.DrawableImage.toString","location":"sketch-core/com.github.panpf.sketch/-drawable-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.DrawableImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.toString","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.cache.internal.EmptyDiskCache.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.toString","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.cache.internal.LruDiskCache.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.toString","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.cache.internal.LruMemoryCache.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor.toString","location":"sketch-core/com.github.panpf.sketch.cache.internal/-memory-cache-request-interceptor/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.toString","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.DecodeConfig.toString","location":"sketch-core/com.github.panpf.sketch.decode/-decode-config/[android]to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.DecodeConfig.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.DecodeConfig.toString","location":"sketch-core/com.github.panpf.sketch.decode/-decode-config/[non-android]to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.DecodeConfig.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.DecodeResult.toString","location":"sketch-core/com.github.panpf.sketch.decode/-decode-result/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.DecodeResult.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.ImageInfo.toString","location":"sketch-core/com.github.panpf.sketch.decode/-image-info/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.ImageInfo.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.SkiaDecoder.Factory.toString","location":"sketch-core/com.github.panpf.sketch.decode/-skia-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.SkiaDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.toString","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decode-helper/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.Factory.toString","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.internal.DrawableDecoder.Factory.toString","location":"sketch-core/com.github.panpf.sketch.decode.internal/-drawable-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.internal.DrawableDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor.toString","location":"sketch-core/com.github.panpf.sketch.decode.internal/-engine-decode-interceptor/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.toString","location":"sketch-core/com.github.panpf.sketch.decode.internal/-skia-decode-helper/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.AnimatableDrawable.toString","location":"sketch-core/com.github.panpf.sketch.drawable/-animatable-drawable/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.AnimatableDrawable.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher.toString","location":"sketch-core/com.github.panpf.sketch.drawable/-color-fetcher-drawable-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.toString","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-animatable-drawable/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.EquitableDrawable.toString","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-drawable/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.EquitableDrawable.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.IconAnimatableDrawable.toString","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-animatable-drawable/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.IconAnimatableDrawable.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.IconDrawable.toString","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.IconDrawable.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.RealColorDrawableFetcher.toString","location":"sketch-core/com.github.panpf.sketch.drawable/-real-color-drawable-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.RealColorDrawableFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.RealDrawableFetcher.toString","location":"sketch-core/com.github.panpf.sketch.drawable/-real-drawable-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.RealDrawableFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.ResColorDrawableFetcher.toString","location":"sketch-core/com.github.panpf.sketch.drawable/-res-color-drawable-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.ResColorDrawableFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.ResDrawableFetcher.toString","location":"sketch-core/com.github.panpf.sketch.drawable/-res-drawable-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.ResDrawableFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.Factory.toString","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.AssetUriFetcher.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.toString","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.AssetUriFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.Factory.toString","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.Base64UriFetcher.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.toString","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.Base64UriFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.ContentUriFetcher.Factory.toString","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.ContentUriFetcher.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.ContentUriFetcher.toString","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.ContentUriFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.FetchResult.toString","location":"sketch-core/com.github.panpf.sketch.fetch/-fetch-result/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.FetchResult.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.FileUriFetcher.Factory.toString","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.FileUriFetcher.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.FileUriFetcher.toString","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.FileUriFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.toString","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.toString","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.toString","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.toString","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher.Factory.toString","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.ResourceUriFetcher.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher.toString","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.ResourceUriFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.request.DepthHolder.toString","location":"sketch-core/com.github.panpf.sketch.request/-depth-holder/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.request.DepthHolder.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.request.Extras.toString","location":"sketch-core/com.github.panpf.sketch.request/-extras/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.request.Extras.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.request.FixedLifecycleResolver.toString","location":"sketch-core/com.github.panpf.sketch.request/-fixed-lifecycle-resolver/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.request.FixedLifecycleResolver.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.request.GlobalLifecycle.toString","location":"sketch-core/com.github.panpf.sketch.request/-global-lifecycle/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.request.GlobalLifecycle.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.request.internal.EngineRequestInterceptor.toString","location":"sketch-core/com.github.panpf.sketch.request.internal/-engine-request-interceptor/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.request.internal.EngineRequestInterceptor.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.request.internal.Listeners.toString","location":"sketch-core/com.github.panpf.sketch.request.internal/-listeners/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.request.internal.Listeners.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.request.internal.ProgressListeners.toString","location":"sketch-core/com.github.panpf.sketch.request.internal/-progress-listeners/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.request.internal.ProgressListeners.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.resize.DefaultLongImageDecider.toString","location":"sketch-core/com.github.panpf.sketch.resize/-default-long-image-decider/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.resize.DefaultLongImageDecider.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.resize.FixedPrecisionDecider.toString","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-precision-decider/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.resize.FixedPrecisionDecider.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.resize.FixedScaleDecider.toString","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-scale-decider/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.resize.FixedScaleDecider.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.resize.FixedSizeResolver.toString","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-size-resolver/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.resize.FixedSizeResolver.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.resize.LongImagePrecisionDecider.toString","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-precision-decider/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.resize.LongImagePrecisionDecider.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.resize.LongImageScaleDecider.toString","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-scale-decider/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.resize.LongImageScaleDecider.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.resize.Resize.toString","location":"sketch-core/com.github.panpf.sketch.resize/-resize/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.resize.Resize.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.source.AssetDataSource.toString","location":"sketch-core/com.github.panpf.sketch.source/-asset-data-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.source.AssetDataSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.source.ByteArrayDataSource.toString","location":"sketch-core/com.github.panpf.sketch.source/-byte-array-data-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.source.ByteArrayDataSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.source.ContentDataSource.toString","location":"sketch-core/com.github.panpf.sketch.source/-content-data-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.source.ContentDataSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.source.DrawableDataSource.toString","location":"sketch-core/com.github.panpf.sketch.source/-drawable-data-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.source.DrawableDataSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.source.FileDataSource.toString","location":"sketch-core/com.github.panpf.sketch.source/-file-data-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.source.FileDataSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.toString","location":"sketch-core/com.github.panpf.sketch.source/[desktop]-kotlin-resource-data-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.source.KotlinResourceDataSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.toString","location":"sketch-core/com.github.panpf.sketch.source/[ios]-kotlin-resource-data-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.source.KotlinResourceDataSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.source.ResourceDataSource.toString","location":"sketch-core/com.github.panpf.sketch.source/-resource-data-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.source.ResourceDataSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.state.ColorDrawableStateImage.toString","location":"sketch-core/com.github.panpf.sketch.state/-color-drawable-state-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.state.ColorDrawableStateImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.state.ConditionStateImage.DefaultCondition.toString","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/-default-condition/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.state.ConditionStateImage.DefaultCondition.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.state.ConditionStateImage.toString","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.state.ConditionStateImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.state.CurrentStateImage.toString","location":"sketch-core/com.github.panpf.sketch.state/-current-state-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.state.CurrentStateImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.state.DrawableStateImage.toString","location":"sketch-core/com.github.panpf.sketch.state/-drawable-state-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.state.DrawableStateImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.toString","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.state.IconDrawableStateImage.toString","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.state.IconDrawableStateImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.state.MemoryCacheStateImage.toString","location":"sketch-core/com.github.panpf.sketch.state/-memory-cache-state-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.state.MemoryCacheStateImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.toString","location":"sketch-core/com.github.panpf.sketch.state/-thumbnail-memory-cache-state-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.transform.BlurTransformation.toString","location":"sketch-core/com.github.panpf.sketch.transform/-blur-transformation/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.transform.BlurTransformation.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.transform.CircleCropTransformation.toString","location":"sketch-core/com.github.panpf.sketch.transform/-circle-crop-transformation/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.transform.CircleCropTransformation.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.transform.MaskTransformation.toString","location":"sketch-core/com.github.panpf.sketch.transform/-mask-transformation/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.transform.MaskTransformation.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.transform.RotateTransformation.toString","location":"sketch-core/com.github.panpf.sketch.transform/-rotate-transformation/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.transform.RotateTransformation.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.transform.RoundedCornersTransformation.toString","location":"sketch-core/com.github.panpf.sketch.transform/-rounded-corners-transformation/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.transform.RoundedCornersTransformation.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor.toString","location":"sketch-core/com.github.panpf.sketch.transform.internal/-transformation-decode-interceptor/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Factory.toString","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.transition.CrossfadeTransition.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.util.AndroidLogPipeline.toString","location":"sketch-core/com.github.panpf.sketch.util/-android-log-pipeline/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.util.AndroidLogPipeline.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.util.IntColorFetcher.toString","location":"sketch-core/com.github.panpf.sketch.util/-int-color-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.util.IntColorFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.util.Logger.toString","location":"sketch-core/com.github.panpf.sketch.util/-logger/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.util.Logger.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.util.PrintLogPipeline.toString","location":"sketch-core/com.github.panpf.sketch.util/-print-log-pipeline/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.util.PrintLogPipeline.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.util.Rect.toString","location":"sketch-core/com.github.panpf.sketch.util/-rect/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.util.Rect.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.util.ResColorFetcher.toString","location":"sketch-core/com.github.panpf.sketch.util/-res-color-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.util.ResColorFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.util.Size.toString","location":"sketch-core/com.github.panpf.sketch.util/-size/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.util.Size.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.util.Uri.toString","location":"sketch-core/com.github.panpf.sketch.util/-uri/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.util.Uri.toString"]},{"name":"open override fun transform(requestContext: RequestContext, input: Image): TransformResult?","description":"com.github.panpf.sketch.transform.BlurTransformation.transform","location":"sketch-core/com.github.panpf.sketch.transform/-blur-transformation/transform.html","searchKeys":["transform","open override fun transform(requestContext: RequestContext, input: Image): TransformResult?","com.github.panpf.sketch.transform.BlurTransformation.transform"]},{"name":"open override fun transform(requestContext: RequestContext, input: Image): TransformResult?","description":"com.github.panpf.sketch.transform.CircleCropTransformation.transform","location":"sketch-core/com.github.panpf.sketch.transform/-circle-crop-transformation/transform.html","searchKeys":["transform","open override fun transform(requestContext: RequestContext, input: Image): TransformResult?","com.github.panpf.sketch.transform.CircleCropTransformation.transform"]},{"name":"open override fun transform(requestContext: RequestContext, input: Image): TransformResult?","description":"com.github.panpf.sketch.transform.MaskTransformation.transform","location":"sketch-core/com.github.panpf.sketch.transform/-mask-transformation/transform.html","searchKeys":["transform","open override fun transform(requestContext: RequestContext, input: Image): TransformResult?","com.github.panpf.sketch.transform.MaskTransformation.transform"]},{"name":"open override fun transform(requestContext: RequestContext, input: Image): TransformResult?","description":"com.github.panpf.sketch.transform.RotateTransformation.transform","location":"sketch-core/com.github.panpf.sketch.transform/-rotate-transformation/transform.html","searchKeys":["transform","open override fun transform(requestContext: RequestContext, input: Image): TransformResult?","com.github.panpf.sketch.transform.RotateTransformation.transform"]},{"name":"open override fun transform(requestContext: RequestContext, input: Image): TransformResult?","description":"com.github.panpf.sketch.transform.RoundedCornersTransformation.transform","location":"sketch-core/com.github.panpf.sketch.transform/-rounded-corners-transformation/transform.html","searchKeys":["transform","open override fun transform(requestContext: RequestContext, input: Image): TransformResult?","com.github.panpf.sketch.transform.RoundedCornersTransformation.transform"]},{"name":"open override fun trim(targetSize: Long)","description":"com.github.panpf.sketch.cache.internal.EmptyMemoryCache.trim","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-memory-cache/trim.html","searchKeys":["trim","open override fun trim(targetSize: Long)","com.github.panpf.sketch.cache.internal.EmptyMemoryCache.trim"]},{"name":"open override fun trim(targetSize: Long)","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.trim","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/trim.html","searchKeys":["trim","open override fun trim(targetSize: Long)","com.github.panpf.sketch.cache.internal.LruMemoryCache.trim"]},{"name":"open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","description":"com.github.panpf.sketch.drawable.AnimatableDrawable.unregisterAnimationCallback","location":"sketch-core/com.github.panpf.sketch.drawable/-animatable-drawable/unregister-animation-callback.html","searchKeys":["unregisterAnimationCallback","open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","com.github.panpf.sketch.drawable.AnimatableDrawable.unregisterAnimationCallback"]},{"name":"open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","description":"com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.unregisterAnimationCallback","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-animatable-drawable/unregister-animation-callback.html","searchKeys":["unregisterAnimationCallback","open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.unregisterAnimationCallback"]},{"name":"open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","description":"com.github.panpf.sketch.drawable.IconAnimatableDrawable.unregisterAnimationCallback","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-animatable-drawable/unregister-animation-callback.html","searchKeys":["unregisterAnimationCallback","open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","com.github.panpf.sketch.drawable.IconAnimatableDrawable.unregisterAnimationCallback"]},{"name":"open override fun unscheduleDrawable(who: Drawable, what: Runnable)","description":"com.github.panpf.sketch.drawable.IconDrawable.unscheduleDrawable","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/unschedule-drawable.html","searchKeys":["unscheduleDrawable","open override fun unscheduleDrawable(who: Drawable, what: Runnable)","com.github.panpf.sketch.drawable.IconDrawable.unscheduleDrawable"]},{"name":"open override val appVersion: Int","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.appVersion","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/app-version.html","searchKeys":["appVersion","open override val appVersion: Int","com.github.panpf.sketch.cache.internal.EmptyDiskCache.appVersion"]},{"name":"open override val appVersion: Int","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.appVersion","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/app-version.html","searchKeys":["appVersion","open override val appVersion: Int","com.github.panpf.sketch.cache.internal.LruDiskCache.appVersion"]},{"name":"open override val currentState: Lifecycle.State","description":"com.github.panpf.sketch.request.GlobalLifecycle.currentState","location":"sketch-core/com.github.panpf.sketch.request/-global-lifecycle/current-state.html","searchKeys":["currentState","open override val currentState: Lifecycle.State","com.github.panpf.sketch.request.GlobalLifecycle.currentState"]},{"name":"open override val dataFrom: DataFrom","description":"com.github.panpf.sketch.source.ByteArrayDataSource.dataFrom","location":"sketch-core/com.github.panpf.sketch.source/-byte-array-data-source/data-from.html","searchKeys":["dataFrom","open override val dataFrom: DataFrom","com.github.panpf.sketch.source.ByteArrayDataSource.dataFrom"]},{"name":"open override val dataFrom: DataFrom","description":"com.github.panpf.sketch.source.FileDataSource.dataFrom","location":"sketch-core/com.github.panpf.sketch.source/-file-data-source/data-from.html","searchKeys":["dataFrom","open override val dataFrom: DataFrom","com.github.panpf.sketch.source.FileDataSource.dataFrom"]},{"name":"open override val directory: Path","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.directory","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/directory.html","searchKeys":["directory","open override val directory: Path","com.github.panpf.sketch.cache.internal.EmptyDiskCache.directory"]},{"name":"open override val directory: Path","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.directory","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/directory.html","searchKeys":["directory","open override val directory: Path","com.github.panpf.sketch.cache.internal.LruDiskCache.directory"]},{"name":"open override val extras: Map<String, Any?>? = null","description":"com.github.panpf.sketch.cache.ImageCacheValue.extras","location":"sketch-core/com.github.panpf.sketch.cache/-image-cache-value/extras.html","searchKeys":["extras","open override val extras: Map<String, Any?>? = null","com.github.panpf.sketch.cache.ImageCacheValue.extras"]},{"name":"open override val fileSystem: FileSystem","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.fileSystem","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/file-system.html","searchKeys":["fileSystem","open override val fileSystem: FileSystem","com.github.panpf.sketch.cache.internal.EmptyDiskCache.fileSystem"]},{"name":"open override val fileSystem: FileSystem","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.fileSystem","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/file-system.html","searchKeys":["fileSystem","open override val fileSystem: FileSystem","com.github.panpf.sketch.cache.internal.LruDiskCache.fileSystem"]},{"name":"open override val image: Image","description":"com.github.panpf.sketch.cache.ImageCacheValue.image","location":"sketch-core/com.github.panpf.sketch.cache/-image-cache-value/image.html","searchKeys":["image","open override val image: Image","com.github.panpf.sketch.cache.ImageCacheValue.image"]},{"name":"open override val image: Image","description":"com.github.panpf.sketch.request.ImageResult.Success.image","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-success/image.html","searchKeys":["image","open override val image: Image","com.github.panpf.sketch.request.ImageResult.Success.image"]},{"name":"open override val image: Image?","description":"com.github.panpf.sketch.request.ImageResult.Error.image","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-error/image.html","searchKeys":["image","open override val image: Image?","com.github.panpf.sketch.request.ImageResult.Error.image"]},{"name":"open override val imageInfo: ImageInfo","description":"com.github.panpf.sketch.decode.internal.HelperDecoder.imageInfo","location":"sketch-core/com.github.panpf.sketch.decode.internal/-helper-decoder/image-info.html","searchKeys":["imageInfo","open override val imageInfo: ImageInfo","com.github.panpf.sketch.decode.internal.HelperDecoder.imageInfo"]},{"name":"open override val imageInfo: ImageInfo","description":"com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.imageInfo","location":"sketch-core/com.github.panpf.sketch.decode.internal/-skia-decode-helper/image-info.html","searchKeys":["imageInfo","open override val imageInfo: ImageInfo","com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.imageInfo"]},{"name":"open override val initialRequest: ImageRequest","description":"com.github.panpf.sketch.request.internal.BaseRequestDelegate.initialRequest","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-delegate/initial-request.html","searchKeys":["initialRequest","open override val initialRequest: ImageRequest","com.github.panpf.sketch.request.internal.BaseRequestDelegate.initialRequest"]},{"name":"open override val internalVersion: Int","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.internalVersion","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/internal-version.html","searchKeys":["internalVersion","open override val internalVersion: Int","com.github.panpf.sketch.cache.internal.EmptyDiskCache.internalVersion"]},{"name":"open override val internalVersion: Int","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.internalVersion","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/internal-version.html","searchKeys":["internalVersion","open override val internalVersion: Int","com.github.panpf.sketch.cache.internal.LruDiskCache.internalVersion"]},{"name":"open override val isCellularNetworkConnected: Boolean","description":"com.github.panpf.sketch.util.NetworkObserver1.isCellularNetworkConnected","location":"sketch-core/com.github.panpf.sketch.util/-network-observer1/is-cellular-network-connected.html","searchKeys":["isCellularNetworkConnected","open override val isCellularNetworkConnected: Boolean","com.github.panpf.sketch.util.NetworkObserver1.isCellularNetworkConnected"]},{"name":"open override val isCellularNetworkConnected: Boolean","description":"com.github.panpf.sketch.util.NetworkObserver21.isCellularNetworkConnected","location":"sketch-core/com.github.panpf.sketch.util/-network-observer21/is-cellular-network-connected.html","searchKeys":["isCellularNetworkConnected","open override val isCellularNetworkConnected: Boolean","com.github.panpf.sketch.util.NetworkObserver21.isCellularNetworkConnected"]},{"name":"open override val isDisposed: Boolean","description":"com.github.panpf.sketch.request.OneShotDisposable.isDisposed","location":"sketch-core/com.github.panpf.sketch.request/-one-shot-disposable/is-disposed.html","searchKeys":["isDisposed","open override val isDisposed: Boolean","com.github.panpf.sketch.request.OneShotDisposable.isDisposed"]},{"name":"open override val isDisposed: Boolean","description":"com.github.panpf.sketch.request.ReusableDisposable.isDisposed","location":"sketch-core/com.github.panpf.sketch.request/-reusable-disposable/is-disposed.html","searchKeys":["isDisposed","open override val isDisposed: Boolean","com.github.panpf.sketch.request.ReusableDisposable.isDisposed"]},{"name":"open override val job: Deferred<ImageResult>","description":"com.github.panpf.sketch.request.OneShotDisposable.job","location":"sketch-core/com.github.panpf.sketch.request/-one-shot-disposable/job.html","searchKeys":["job","open override val job: Deferred<ImageResult>","com.github.panpf.sketch.request.OneShotDisposable.job"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.decode.SkiaDecoder.Factory.key","location":"sketch-core/com.github.panpf.sketch.decode/-skia-decoder/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.decode.SkiaDecoder.Factory.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.key","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-animatable-drawable/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.drawable.EquitableAnimatableDrawable.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.request.DepthHolder.key","location":"sketch-core/com.github.panpf.sketch.request/-depth-holder/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.request.DepthHolder.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.request.Extras.key","location":"sketch-core/com.github.panpf.sketch.request/-extras/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.request.Extras.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.request.ImageRequest.key","location":"sketch-core/com.github.panpf.sketch.request/-image-request/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.request.ImageRequest.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.resize.DefaultLongImageDecider.key","location":"sketch-core/com.github.panpf.sketch.resize/-default-long-image-decider/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.resize.DefaultLongImageDecider.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.resize.FixedPrecisionDecider.key","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-precision-decider/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.resize.FixedPrecisionDecider.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.resize.FixedScaleDecider.key","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-scale-decider/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.resize.FixedScaleDecider.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.resize.FixedSizeResolver.key","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-size-resolver/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.resize.FixedSizeResolver.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.resize.LongImagePrecisionDecider.key","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-precision-decider/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.resize.LongImagePrecisionDecider.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.resize.LongImageScaleDecider.key","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-scale-decider/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.resize.LongImageScaleDecider.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.resize.Resize.key","location":"sketch-core/com.github.panpf.sketch.resize/-resize/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.resize.Resize.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.source.ByteArrayDataSource.key","location":"sketch-core/com.github.panpf.sketch.source/-byte-array-data-source/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.source.ByteArrayDataSource.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.source.FileDataSource.key","location":"sketch-core/com.github.panpf.sketch.source/-file-data-source/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.source.FileDataSource.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.state.ConditionStateImage.DefaultCondition.key","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/-default-condition/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.state.ConditionStateImage.DefaultCondition.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.state.ConditionStateImage.key","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.state.ConditionStateImage.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.state.CurrentStateImage.key","location":"sketch-core/com.github.panpf.sketch.state/-current-state-image/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.state.CurrentStateImage.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.state.MemoryCacheStateImage.key","location":"sketch-core/com.github.panpf.sketch.state/-memory-cache-state-image/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.state.MemoryCacheStateImage.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.key","location":"sketch-core/com.github.panpf.sketch.state/-thumbnail-memory-cache-state-image/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.transform.BlurTransformation.key","location":"sketch-core/com.github.panpf.sketch.transform/-blur-transformation/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.transform.BlurTransformation.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.transform.CircleCropTransformation.key","location":"sketch-core/com.github.panpf.sketch.transform/-circle-crop-transformation/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.transform.CircleCropTransformation.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.transform.MaskTransformation.key","location":"sketch-core/com.github.panpf.sketch.transform/-mask-transformation/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.transform.MaskTransformation.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.transform.RotateTransformation.key","location":"sketch-core/com.github.panpf.sketch.transform/-rotate-transformation/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.transform.RotateTransformation.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.transform.RoundedCornersTransformation.key","location":"sketch-core/com.github.panpf.sketch.transform/-rounded-corners-transformation/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.transform.RoundedCornersTransformation.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Factory.key","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.transition.CrossfadeTransition.Factory.key"]},{"name":"open override val key: String? = null","description":"com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor.key","location":"sketch-core/com.github.panpf.sketch.cache.internal/-memory-cache-request-interceptor/key.html","searchKeys":["key","open override val key: String? = null","com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor.key"]},{"name":"open override val key: String? = null","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.key","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/key.html","searchKeys":["key","open override val key: String? = null","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.key"]},{"name":"open override val key: String? = null","description":"com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor.key","location":"sketch-core/com.github.panpf.sketch.decode.internal/-engine-decode-interceptor/key.html","searchKeys":["key","open override val key: String? = null","com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor.key"]},{"name":"open override val key: String? = null","description":"com.github.panpf.sketch.request.internal.EngineRequestInterceptor.key","location":"sketch-core/com.github.panpf.sketch.request.internal/-engine-request-interceptor/key.html","searchKeys":["key","open override val key: String? = null","com.github.panpf.sketch.request.internal.EngineRequestInterceptor.key"]},{"name":"open override val key: String? = null","description":"com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor.key","location":"sketch-core/com.github.panpf.sketch.transform.internal/-transformation-decode-interceptor/key.html","searchKeys":["key","open override val key: String? = null","com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor.key"]},{"name":"open override val maxSize: Long","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.maxSize","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/max-size.html","searchKeys":["maxSize","open override val maxSize: Long","com.github.panpf.sketch.cache.internal.LruDiskCache.maxSize"]},{"name":"open override val maxSize: Long","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.maxSize","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/max-size.html","searchKeys":["maxSize","open override val maxSize: Long","com.github.panpf.sketch.cache.internal.LruMemoryCache.maxSize"]},{"name":"open override val maxSize: Long = 0","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.maxSize","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/max-size.html","searchKeys":["maxSize","open override val maxSize: Long = 0","com.github.panpf.sketch.cache.internal.EmptyDiskCache.maxSize"]},{"name":"open override val maxSize: Long = 0","description":"com.github.panpf.sketch.cache.internal.EmptyMemoryCache.maxSize","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-memory-cache/max-size.html","searchKeys":["maxSize","open override val maxSize: Long = 0","com.github.panpf.sketch.cache.internal.EmptyMemoryCache.maxSize"]},{"name":"open override val message: String","description":"com.github.panpf.sketch.util.UriCodec.UriSyntaxException.message","location":"sketch-core/com.github.panpf.sketch.util/-uri-codec/-uri-syntax-exception/message.html","searchKeys":["message","open override val message: String","com.github.panpf.sketch.util.UriCodec.UriSyntaxException.message"]},{"name":"open override val request: ImageRequest","description":"com.github.panpf.sketch.request.ImageResult.Error.request","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-error/request.html","searchKeys":["request","open override val request: ImageRequest","com.github.panpf.sketch.request.ImageResult.Error.request"]},{"name":"open override val request: ImageRequest","description":"com.github.panpf.sketch.request.ImageResult.Success.request","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-success/request.html","searchKeys":["request","open override val request: ImageRequest","com.github.panpf.sketch.request.ImageResult.Success.request"]},{"name":"open override val request: ImageRequest","description":"com.github.panpf.sketch.request.LoadState.Canceled.request","location":"sketch-core/com.github.panpf.sketch.request/-load-state/-canceled/request.html","searchKeys":["request","open override val request: ImageRequest","com.github.panpf.sketch.request.LoadState.Canceled.request"]},{"name":"open override val request: ImageRequest","description":"com.github.panpf.sketch.request.LoadState.Error.request","location":"sketch-core/com.github.panpf.sketch.request/-load-state/-error/request.html","searchKeys":["request","open override val request: ImageRequest","com.github.panpf.sketch.request.LoadState.Error.request"]},{"name":"open override val request: ImageRequest","description":"com.github.panpf.sketch.request.LoadState.Started.request","location":"sketch-core/com.github.panpf.sketch.request/-load-state/-started/request.html","searchKeys":["request","open override val request: ImageRequest","com.github.panpf.sketch.request.LoadState.Started.request"]},{"name":"open override val request: ImageRequest","description":"com.github.panpf.sketch.request.LoadState.Success.request","location":"sketch-core/com.github.panpf.sketch.request/-load-state/-success/request.html","searchKeys":["request","open override val request: ImageRequest","com.github.panpf.sketch.request.LoadState.Success.request"]},{"name":"open override val size: Long","description":"com.github.panpf.sketch.cache.ImageCacheValue.size","location":"sketch-core/com.github.panpf.sketch.cache/-image-cache-value/size.html","searchKeys":["size","open override val size: Long","com.github.panpf.sketch.cache.ImageCacheValue.size"]},{"name":"open override val size: Long","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.size","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/size.html","searchKeys":["size","open override val size: Long","com.github.panpf.sketch.cache.internal.LruDiskCache.size"]},{"name":"open override val size: Long","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.size","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/size.html","searchKeys":["size","open override val size: Long","com.github.panpf.sketch.cache.internal.LruMemoryCache.size"]},{"name":"open override val size: Long = 0","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.size","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/size.html","searchKeys":["size","open override val size: Long = 0","com.github.panpf.sketch.cache.internal.EmptyDiskCache.size"]},{"name":"open override val size: Long = 0","description":"com.github.panpf.sketch.cache.internal.EmptyMemoryCache.size","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-memory-cache/size.html","searchKeys":["size","open override val size: Long = 0","com.github.panpf.sketch.cache.internal.EmptyMemoryCache.size"]},{"name":"open override val sketch: Sketch","description":"com.github.panpf.sketch.request.internal.BaseRequestDelegate.sketch","location":"sketch-core/com.github.panpf.sketch.request.internal/-base-request-delegate/sketch.html","searchKeys":["sketch","open override val sketch: Sketch","com.github.panpf.sketch.request.internal.BaseRequestDelegate.sketch"]},{"name":"open override val sortWeight: Int = 100","description":"com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor.sortWeight","location":"sketch-core/com.github.panpf.sketch.decode.internal/-engine-decode-interceptor/sort-weight.html","searchKeys":["sortWeight","open override val sortWeight: Int = 100","com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor.sortWeight"]},{"name":"open override val sortWeight: Int = 100","description":"com.github.panpf.sketch.request.internal.EngineRequestInterceptor.sortWeight","location":"sketch-core/com.github.panpf.sketch.request.internal/-engine-request-interceptor/sort-weight.html","searchKeys":["sortWeight","open override val sortWeight: Int = 100","com.github.panpf.sketch.request.internal.EngineRequestInterceptor.sortWeight"]},{"name":"open override val sortWeight: Int = 80","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.sortWeight","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/sort-weight.html","searchKeys":["sortWeight","open override val sortWeight: Int = 80","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.sortWeight"]},{"name":"open override val sortWeight: Int = 90","description":"com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor.sortWeight","location":"sketch-core/com.github.panpf.sketch.cache.internal/-memory-cache-request-interceptor/sort-weight.html","searchKeys":["sortWeight","open override val sortWeight: Int = 90","com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor.sortWeight"]},{"name":"open override val sortWeight: Int = 90","description":"com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor.sortWeight","location":"sketch-core/com.github.panpf.sketch.transform.internal/-transformation-decode-interceptor/sort-weight.html","searchKeys":["sortWeight","open override val sortWeight: Int = 90","com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor.sortWeight"]},{"name":"open override val supportRegion: Boolean","description":"com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.supportRegion","location":"sketch-core/com.github.panpf.sketch.decode.internal/-skia-decode-helper/support-region.html","searchKeys":["supportRegion","open override val supportRegion: Boolean","com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.supportRegion"]},{"name":"open override val value: T","description":"com.github.panpf.sketch.util.ResetLazy.value","location":"sketch-core/com.github.panpf.sketch.util/-reset-lazy/value.html","searchKeys":["value","open override val value: T","com.github.panpf.sketch.util.ResetLazy.value"]},{"name":"open override var job: Deferred<ImageResult>","description":"com.github.panpf.sketch.request.ReusableDisposable.job","location":"sketch-core/com.github.panpf.sketch.request/-reusable-disposable/job.html","searchKeys":["job","open override var job: Deferred<ImageResult>","com.github.panpf.sketch.request.ReusableDisposable.job"]},{"name":"open suspend fun fetch(): Result<<Error class: unknown class>>","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.fetch","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/fetch.html","searchKeys":["fetch","open suspend fun fetch(): Result<<Error class: unknown class>>","com.github.panpf.sketch.fetch.AssetUriFetcher.fetch"]},{"name":"open suspend fun fetch(): Result<<Error class: unknown class>>","description":"com.github.panpf.sketch.fetch.ContentUriFetcher.fetch","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/fetch.html","searchKeys":["fetch","open suspend fun fetch(): Result<<Error class: unknown class>>","com.github.panpf.sketch.fetch.ContentUriFetcher.fetch"]},{"name":"open suspend fun fetch(): Result<<Error class: unknown class>>","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.fetch","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/fetch.html","searchKeys":["fetch","open suspend fun fetch(): Result<<Error class: unknown class>>","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.fetch"]},{"name":"open suspend fun fetch(): Result<<Error class: unknown class>>","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.fetch","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/fetch.html","searchKeys":["fetch","open suspend fun fetch(): Result<<Error class: unknown class>>","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.fetch"]},{"name":"open suspend fun fetch(): Result<<Error class: unknown class>>","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher.fetch","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/fetch.html","searchKeys":["fetch","open suspend fun fetch(): Result<<Error class: unknown class>>","com.github.panpf.sketch.fetch.ResourceUriFetcher.fetch"]},{"name":"open suspend override fun <R> withLock(key: String, action: suspend DiskCache.() -> R): R","description":"com.github.panpf.sketch.cache.internal.EmptyDiskCache.withLock","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-disk-cache/with-lock.html","searchKeys":["withLock","open suspend override fun <R> withLock(key: String, action: suspend DiskCache.() -> R): R","com.github.panpf.sketch.cache.internal.EmptyDiskCache.withLock"]},{"name":"open suspend override fun <R> withLock(key: String, action: suspend DiskCache.() -> R): R","description":"com.github.panpf.sketch.cache.internal.LruDiskCache.withLock","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-disk-cache/with-lock.html","searchKeys":["withLock","open suspend override fun <R> withLock(key: String, action: suspend DiskCache.() -> R): R","com.github.panpf.sketch.cache.internal.LruDiskCache.withLock"]},{"name":"open suspend override fun <R> withLock(key: String, action: suspend MemoryCache.() -> R): R","description":"com.github.panpf.sketch.cache.internal.EmptyMemoryCache.withLock","location":"sketch-core/com.github.panpf.sketch.cache.internal/-empty-memory-cache/with-lock.html","searchKeys":["withLock","open suspend override fun <R> withLock(key: String, action: suspend MemoryCache.() -> R): R","com.github.panpf.sketch.cache.internal.EmptyMemoryCache.withLock"]},{"name":"open suspend override fun <R> withLock(key: String, action: suspend MemoryCache.() -> R): R","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.withLock","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/with-lock.html","searchKeys":["withLock","open suspend override fun <R> withLock(key: String, action: suspend MemoryCache.() -> R): R","com.github.panpf.sketch.cache.internal.LruMemoryCache.withLock"]},{"name":"open suspend override fun fetch(): Result<FetchResult>","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.fetch","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/fetch.html","searchKeys":["fetch","open suspend override fun fetch(): Result<FetchResult>","com.github.panpf.sketch.fetch.Base64UriFetcher.fetch"]},{"name":"open suspend override fun fetch(): Result<FetchResult>","description":"com.github.panpf.sketch.fetch.FileUriFetcher.fetch","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/fetch.html","searchKeys":["fetch","open suspend override fun fetch(): Result<FetchResult>","com.github.panpf.sketch.fetch.FileUriFetcher.fetch"]},{"name":"open suspend override fun intercept(chain: DecodeInterceptor.Chain): Result<DecodeResult>","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.intercept","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/intercept.html","searchKeys":["intercept","open suspend override fun intercept(chain: DecodeInterceptor.Chain): Result<DecodeResult>","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.intercept"]},{"name":"open suspend override fun intercept(chain: DecodeInterceptor.Chain): Result<DecodeResult>","description":"com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor.intercept","location":"sketch-core/com.github.panpf.sketch.decode.internal/-engine-decode-interceptor/intercept.html","searchKeys":["intercept","open suspend override fun intercept(chain: DecodeInterceptor.Chain): Result<DecodeResult>","com.github.panpf.sketch.decode.internal.EngineDecodeInterceptor.intercept"]},{"name":"open suspend override fun intercept(chain: DecodeInterceptor.Chain): Result<DecodeResult>","description":"com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor.intercept","location":"sketch-core/com.github.panpf.sketch.transform.internal/-transformation-decode-interceptor/intercept.html","searchKeys":["intercept","open suspend override fun intercept(chain: DecodeInterceptor.Chain): Result<DecodeResult>","com.github.panpf.sketch.transform.internal.TransformationDecodeInterceptor.intercept"]},{"name":"open suspend override fun intercept(chain: RequestInterceptor.Chain): Result<ImageData>","description":"com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor.intercept","location":"sketch-core/com.github.panpf.sketch.cache.internal/-memory-cache-request-interceptor/intercept.html","searchKeys":["intercept","open suspend override fun intercept(chain: RequestInterceptor.Chain): Result<ImageData>","com.github.panpf.sketch.cache.internal.MemoryCacheRequestInterceptor.intercept"]},{"name":"open suspend override fun intercept(chain: RequestInterceptor.Chain): Result<ImageData>","description":"com.github.panpf.sketch.request.internal.EngineRequestInterceptor.intercept","location":"sketch-core/com.github.panpf.sketch.request.internal/-engine-request-interceptor/intercept.html","searchKeys":["intercept","open suspend override fun intercept(chain: RequestInterceptor.Chain): Result<ImageData>","com.github.panpf.sketch.request.internal.EngineRequestInterceptor.intercept"]},{"name":"open suspend override fun lifecycle(): Lifecycle","description":"com.github.panpf.sketch.request.FixedLifecycleResolver.lifecycle","location":"sketch-core/com.github.panpf.sketch.request/-fixed-lifecycle-resolver/lifecycle.html","searchKeys":["lifecycle","open suspend override fun lifecycle(): Lifecycle","com.github.panpf.sketch.request.FixedLifecycleResolver.lifecycle"]},{"name":"open suspend override fun size(): Size","description":"com.github.panpf.sketch.resize.FixedSizeResolver.size","location":"sketch-core/com.github.panpf.sketch.resize/-fixed-size-resolver/size.html","searchKeys":["size","open suspend override fun size(): Size","com.github.panpf.sketch.resize.FixedSizeResolver.size"]},{"name":"open val byteCount: Long","description":"com.github.panpf.sketch.DrawableImage.byteCount","location":"sketch-core/com.github.panpf.sketch/-drawable-image/byte-count.html","searchKeys":["byteCount","open val byteCount: Long","com.github.panpf.sketch.DrawableImage.byteCount"]},{"name":"open val currentImage: Image?","description":"com.github.panpf.sketch.target.Target.currentImage","location":"sketch-core/com.github.panpf.sketch.target/-target/current-image.html","searchKeys":["currentImage","open val currentImage: Image?","com.github.panpf.sketch.target.Target.currentImage"]},{"name":"open val dataFrom: <Error class: unknown class>","description":"com.github.panpf.sketch.source.AssetDataSource.dataFrom","location":"sketch-core/com.github.panpf.sketch.source/-asset-data-source/data-from.html","searchKeys":["dataFrom","open val dataFrom: <Error class: unknown class>","com.github.panpf.sketch.source.AssetDataSource.dataFrom"]},{"name":"open val dataFrom: <Error class: unknown class>","description":"com.github.panpf.sketch.source.ContentDataSource.dataFrom","location":"sketch-core/com.github.panpf.sketch.source/-content-data-source/data-from.html","searchKeys":["dataFrom","open val dataFrom: <Error class: unknown class>","com.github.panpf.sketch.source.ContentDataSource.dataFrom"]},{"name":"open val dataFrom: <Error class: unknown class>","description":"com.github.panpf.sketch.source.DrawableDataSource.dataFrom","location":"sketch-core/com.github.panpf.sketch.source/-drawable-data-source/data-from.html","searchKeys":["dataFrom","open val dataFrom: <Error class: unknown class>","com.github.panpf.sketch.source.DrawableDataSource.dataFrom"]},{"name":"open val dataFrom: <Error class: unknown class>","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.dataFrom","location":"sketch-core/com.github.panpf.sketch.source/[desktop]-kotlin-resource-data-source/data-from.html","searchKeys":["dataFrom","open val dataFrom: <Error class: unknown class>","com.github.panpf.sketch.source.KotlinResourceDataSource.dataFrom"]},{"name":"open val dataFrom: <Error class: unknown class>","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.dataFrom","location":"sketch-core/com.github.panpf.sketch.source/[ios]-kotlin-resource-data-source/data-from.html","searchKeys":["dataFrom","open val dataFrom: <Error class: unknown class>","com.github.panpf.sketch.source.KotlinResourceDataSource.dataFrom"]},{"name":"open val dataFrom: <Error class: unknown class>","description":"com.github.panpf.sketch.source.ResourceDataSource.dataFrom","location":"sketch-core/com.github.panpf.sketch.source/-resource-data-source/data-from.html","searchKeys":["dataFrom","open val dataFrom: <Error class: unknown class>","com.github.panpf.sketch.source.ResourceDataSource.dataFrom"]},{"name":"open val height: Int","description":"com.github.panpf.sketch.DrawableImage.height","location":"sketch-core/com.github.panpf.sketch/-drawable-image/height.html","searchKeys":["height","open val height: Int","com.github.panpf.sketch.DrawableImage.height"]},{"name":"open val imageInfo: <Error class: unknown class>","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.imageInfo","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decode-helper/image-info.html","searchKeys":["imageInfo","open val imageInfo: <Error class: unknown class>","com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.imageInfo"]},{"name":"open val imageInfo: <Error class: unknown class>","description":"com.github.panpf.sketch.decode.internal.DrawableDecoder.imageInfo","location":"sketch-core/com.github.panpf.sketch.decode.internal/-drawable-decoder/image-info.html","searchKeys":["imageInfo","open val imageInfo: <Error class: unknown class>","com.github.panpf.sketch.decode.internal.DrawableDecoder.imageInfo"]},{"name":"open val initialRequest: ImageRequest","description":"com.github.panpf.sketch.request.RequestInterceptor.Chain.initialRequest","location":"sketch-core/com.github.panpf.sketch.request/-request-interceptor/-chain/initial-request.html","searchKeys":["initialRequest","open val initialRequest: ImageRequest","com.github.panpf.sketch.request.RequestInterceptor.Chain.initialRequest"]},{"name":"open val isCellularNetworkConnected: Boolean","description":"com.github.panpf.sketch.util.AndroidSystemCallbacks.isCellularNetworkConnected","location":"sketch-core/com.github.panpf.sketch.util/-android-system-callbacks/is-cellular-network-connected.html","searchKeys":["isCellularNetworkConnected","open val isCellularNetworkConnected: Boolean","com.github.panpf.sketch.util.AndroidSystemCallbacks.isCellularNetworkConnected"]},{"name":"open val isShutdown: Boolean","description":"com.github.panpf.sketch.util.AndroidSystemCallbacks.isShutdown","location":"sketch-core/com.github.panpf.sketch.util/-android-system-callbacks/is-shutdown.html","searchKeys":["isShutdown","open val isShutdown: Boolean","com.github.panpf.sketch.util.AndroidSystemCallbacks.isShutdown"]},{"name":"open val key: String","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.Factory.key","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decoder/-factory/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.decode.internal.BitmapFactoryDecoder.Factory.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.decode.internal.DrawableDecoder.Factory.key","location":"sketch-core/com.github.panpf.sketch.decode.internal/-drawable-decoder/-factory/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.decode.internal.DrawableDecoder.Factory.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher.key","location":"sketch-core/com.github.panpf.sketch.drawable/-color-fetcher-drawable-fetcher/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.drawable.EquitableDrawable.key","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-drawable/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.drawable.EquitableDrawable.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.drawable.RealColorDrawableFetcher.key","location":"sketch-core/com.github.panpf.sketch.drawable/-real-color-drawable-fetcher/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.drawable.RealColorDrawableFetcher.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.drawable.RealDrawableFetcher.key","location":"sketch-core/com.github.panpf.sketch.drawable/-real-drawable-fetcher/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.drawable.RealDrawableFetcher.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.drawable.ResColorDrawableFetcher.key","location":"sketch-core/com.github.panpf.sketch.drawable/-res-color-drawable-fetcher/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.drawable.ResColorDrawableFetcher.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.drawable.ResDrawableFetcher.key","location":"sketch-core/com.github.panpf.sketch.drawable/-res-drawable-fetcher/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.drawable.ResDrawableFetcher.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.source.AssetDataSource.key","location":"sketch-core/com.github.panpf.sketch.source/-asset-data-source/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.source.AssetDataSource.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.source.ContentDataSource.key","location":"sketch-core/com.github.panpf.sketch.source/-content-data-source/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.source.ContentDataSource.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.source.DrawableDataSource.key","location":"sketch-core/com.github.panpf.sketch.source/-drawable-data-source/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.source.DrawableDataSource.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.key","location":"sketch-core/com.github.panpf.sketch.source/[desktop]-kotlin-resource-data-source/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.source.KotlinResourceDataSource.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.key","location":"sketch-core/com.github.panpf.sketch.source/[ios]-kotlin-resource-data-source/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.source.KotlinResourceDataSource.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.source.ResourceDataSource.key","location":"sketch-core/com.github.panpf.sketch.source/-resource-data-source/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.source.ResourceDataSource.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.state.ColorDrawableStateImage.key","location":"sketch-core/com.github.panpf.sketch.state/-color-drawable-state-image/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.state.ColorDrawableStateImage.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.state.DrawableStateImage.key","location":"sketch-core/com.github.panpf.sketch.state/-drawable-state-image/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.state.DrawableStateImage.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.key","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.state.IconDrawableStateImage.key","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.state.IconDrawableStateImage.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.util.IntColorFetcher.key","location":"sketch-core/com.github.panpf.sketch.util/-int-color-fetcher/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.util.IntColorFetcher.key"]},{"name":"open val key: String","description":"com.github.panpf.sketch.util.ResColorFetcher.key","location":"sketch-core/com.github.panpf.sketch.util/-res-color-fetcher/key.html","searchKeys":["key","open val key: String","com.github.panpf.sketch.util.ResColorFetcher.key"]},{"name":"open val request: ImageRequest","description":"com.github.panpf.sketch.decode.DecodeInterceptor.Chain.request","location":"sketch-core/com.github.panpf.sketch.decode/-decode-interceptor/-chain/request.html","searchKeys":["request","open val request: ImageRequest","com.github.panpf.sketch.decode.DecodeInterceptor.Chain.request"]},{"name":"open val request: ImageRequest","description":"com.github.panpf.sketch.request.RequestInterceptor.Chain.request","location":"sketch-core/com.github.panpf.sketch.request/-request-interceptor/-chain/request.html","searchKeys":["request","open val request: ImageRequest","com.github.panpf.sketch.request.RequestInterceptor.Chain.request"]},{"name":"open val shareable: Boolean","description":"com.github.panpf.sketch.DrawableImage.shareable","location":"sketch-core/com.github.panpf.sketch/-drawable-image/shareable.html","searchKeys":["shareable","open val shareable: Boolean","com.github.panpf.sketch.DrawableImage.shareable"]},{"name":"open val sketch: Sketch","description":"com.github.panpf.sketch.decode.DecodeInterceptor.Chain.sketch","location":"sketch-core/com.github.panpf.sketch.decode/-decode-interceptor/-chain/sketch.html","searchKeys":["sketch","open val sketch: Sketch","com.github.panpf.sketch.decode.DecodeInterceptor.Chain.sketch"]},{"name":"open val sketch: Sketch","description":"com.github.panpf.sketch.request.RequestInterceptor.Chain.sketch","location":"sketch-core/com.github.panpf.sketch.request/-request-interceptor/-chain/sketch.html","searchKeys":["sketch","open val sketch: Sketch","com.github.panpf.sketch.request.RequestInterceptor.Chain.sketch"]},{"name":"open val supportRegion: Boolean","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.supportRegion","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decode-helper/support-region.html","searchKeys":["supportRegion","open val supportRegion: Boolean","com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.supportRegion"]},{"name":"open val width: Int","description":"com.github.panpf.sketch.DrawableImage.width","location":"sketch-core/com.github.panpf.sketch/-drawable-image/width.html","searchKeys":["width","open val width: Int","com.github.panpf.sketch.DrawableImage.width"]},{"name":"operator fun Extras.get(key: String): Any?","description":"com.github.panpf.sketch.request.get","location":"sketch-core/com.github.panpf.sketch.request/get.html","searchKeys":["get","operator fun Extras.get(key: String): Any?","com.github.panpf.sketch.request.get"]},{"name":"operator fun Size.div(operand: Float): Size","description":"com.github.panpf.sketch.util.div","location":"sketch-core/com.github.panpf.sketch.util/div.html","searchKeys":["div","operator fun Size.div(operand: Float): Size","com.github.panpf.sketch.util.div"]},{"name":"operator fun Size.minus(other: Size): Size","description":"com.github.panpf.sketch.util.minus","location":"sketch-core/com.github.panpf.sketch.util/minus.html","searchKeys":["minus","operator fun Size.minus(other: Size): Size","com.github.panpf.sketch.util.minus"]},{"name":"operator fun Size.plus(other: Size): Size","description":"com.github.panpf.sketch.util.plus","location":"sketch-core/com.github.panpf.sketch.util/plus.html","searchKeys":["plus","operator fun Size.plus(other: Size): Size","com.github.panpf.sketch.util.plus"]},{"name":"operator fun Size.times(operand: Float): Size","description":"com.github.panpf.sketch.util.times","location":"sketch-core/com.github.panpf.sketch.util/times.html","searchKeys":["times","operator fun Size.times(operand: Float): Size","com.github.panpf.sketch.util.times"]},{"name":"operator fun component1(): Int","description":"com.github.panpf.sketch.util.Size.component1","location":"sketch-core/com.github.panpf.sketch.util/-size/component1.html","searchKeys":["component1","operator fun component1(): Int","com.github.panpf.sketch.util.Size.component1"]},{"name":"operator fun component2(): Int","description":"com.github.panpf.sketch.util.Size.component2","location":"sketch-core/com.github.panpf.sketch.util/-size/component2.html","searchKeys":["component2","operator fun component2(): Int","com.github.panpf.sketch.util.Size.component2"]},{"name":"operator fun contains(r: Rect): Boolean","description":"com.github.panpf.sketch.util.Rect.contains","location":"sketch-core/com.github.panpf.sketch.util/-rect/contains.html","searchKeys":["contains","operator fun contains(r: Rect): Boolean","com.github.panpf.sketch.util.Rect.contains"]},{"name":"operator fun set(left: Int, top: Int, right: Int, bottom: Int)","description":"com.github.panpf.sketch.util.Rect.set","location":"sketch-core/com.github.panpf.sketch.util/-rect/set.html","searchKeys":["set","operator fun set(left: Int, top: Int, right: Int, bottom: Int)","com.github.panpf.sketch.util.Rect.set"]},{"name":"sealed interface DownloadData","description":"com.github.panpf.sketch.util.DownloadData","location":"sketch-core/com.github.panpf.sketch.util/-download-data/index.html","searchKeys":["DownloadData","sealed interface DownloadData","com.github.panpf.sketch.util.DownloadData"]},{"name":"sealed interface LoadState","description":"com.github.panpf.sketch.request.LoadState","location":"sketch-core/com.github.panpf.sketch.request/-load-state/index.html","searchKeys":["LoadState","sealed interface LoadState","com.github.panpf.sketch.request.LoadState"]},{"name":"suspend fun RequestContext(sketch: Sketch, request: ImageRequest): RequestContext","description":"com.github.panpf.sketch.request.RequestContext","location":"sketch-core/com.github.panpf.sketch.request/-request-context.html","searchKeys":["RequestContext","suspend fun RequestContext(sketch: Sketch, request: ImageRequest): RequestContext","com.github.panpf.sketch.request.RequestContext"]},{"name":"suspend fun execute(request: ImageRequest): ImageResult","description":"com.github.panpf.sketch.Sketch.execute","location":"sketch-core/com.github.panpf.sketch/-sketch/execute.html","searchKeys":["execute","suspend fun execute(request: ImageRequest): ImageResult","com.github.panpf.sketch.Sketch.execute"]},{"name":"suspend fun execute(request: ImageRequest, enqueue: Boolean): ImageResult","description":"com.github.panpf.sketch.request.internal.RequestExecutor.execute","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-executor/execute.html","searchKeys":["execute","suspend fun execute(request: ImageRequest, enqueue: Boolean): ImageResult","com.github.panpf.sketch.request.internal.RequestExecutor.execute"]},{"name":"suspend fun executeDownload(request: ImageRequest): Result<DownloadData>","description":"com.github.panpf.sketch.Sketch.executeDownload","location":"sketch-core/com.github.panpf.sketch/-sketch/execute-download.html","searchKeys":["executeDownload","suspend fun executeDownload(request: ImageRequest): Result<DownloadData>","com.github.panpf.sketch.Sketch.executeDownload"]},{"name":"suspend fun resolveSize(request: ImageRequest): Size","description":"com.github.panpf.sketch.request.resolveSize","location":"sketch-core/com.github.panpf.sketch.request/resolve-size.html","searchKeys":["resolveSize","suspend fun resolveSize(request: ImageRequest): Size","com.github.panpf.sketch.request.resolveSize"]},{"name":"typealias SketchImage = Image","description":"com.github.panpf.sketch.SketchImage","location":"sketch-core/com.github.panpf.sketch/-sketch-image/index.html","searchKeys":["SketchImage","typealias SketchImage = Image","com.github.panpf.sketch.SketchImage"]},{"name":"typealias SketchImageInfo = ImageInfo","description":"com.github.panpf.sketch.decode.SketchImageInfo","location":"sketch-core/com.github.panpf.sketch.decode/-sketch-image-info/index.html","searchKeys":["SketchImageInfo","typealias SketchImageInfo = ImageInfo","com.github.panpf.sketch.decode.SketchImageInfo"]},{"name":"typealias SketchRect = Rect","description":"com.github.panpf.sketch.util.SketchRect","location":"sketch-core/com.github.panpf.sketch.util/-sketch-rect/index.html","searchKeys":["SketchRect","typealias SketchRect = Rect","com.github.panpf.sketch.util.SketchRect"]},{"name":"typealias SketchSize = Size","description":"com.github.panpf.sketch.util.SketchSize","location":"sketch-core/com.github.panpf.sketch.util/-sketch-size/index.html","searchKeys":["SketchSize","typealias SketchSize = Size","com.github.panpf.sketch.util.SketchSize"]},{"name":"val <Error class: unknown class>.preferQualityOverSpeed: Boolean","description":"com.github.panpf.sketch.request.preferQualityOverSpeed","location":"sketch-core/com.github.panpf.sketch.request/prefer-quality-over-speed.html","searchKeys":["preferQualityOverSpeed","val <Error class: unknown class>.preferQualityOverSpeed: Boolean","com.github.panpf.sketch.request.preferQualityOverSpeed"]},{"name":"val <Error class: unknown class>.preferQualityOverSpeed: Boolean?","description":"com.github.panpf.sketch.request.preferQualityOverSpeed","location":"sketch-core/com.github.panpf.sketch.request/prefer-quality-over-speed.html","searchKeys":["preferQualityOverSpeed","val <Error class: unknown class>.preferQualityOverSpeed: Boolean?","com.github.panpf.sketch.request.preferQualityOverSpeed"]},{"name":"val Bitmap.colorType: ColorType?","description":"com.github.panpf.sketch.colorType","location":"sketch-core/com.github.panpf.sketch/color-type.html","searchKeys":["colorType","val Bitmap.colorType: ColorType?","com.github.panpf.sketch.colorType"]},{"name":"val Bitmap.configOrNull: ColorType?","description":"com.github.panpf.sketch.util.configOrNull","location":"sketch-core/com.github.panpf.sketch.util/config-or-null.html","searchKeys":["configOrNull","val Bitmap.configOrNull: ColorType?","com.github.panpf.sketch.util.configOrNull"]},{"name":"val Bitmap.safeConfig: ColorType","description":"com.github.panpf.sketch.util.safeConfig","location":"sketch-core/com.github.panpf.sketch.util/safe-config.html","searchKeys":["safeConfig","val Bitmap.safeConfig: ColorType","com.github.panpf.sketch.util.safeConfig"]},{"name":"val Bitmap.size: Size","description":"com.github.panpf.sketch.size","location":"sketch-core/com.github.panpf.sketch/size.html","searchKeys":["size","val Bitmap.size: Size","com.github.panpf.sketch.size"]},{"name":"val BitmapColorType.isDynamic: Boolean","description":"com.github.panpf.sketch.decode.isDynamic","location":"sketch-core/com.github.panpf.sketch.decode/is-dynamic.html","searchKeys":["isDynamic","val BitmapColorType.isDynamic: Boolean","com.github.panpf.sketch.decode.isDynamic"]},{"name":"val BitmapColorType.isFixed: Boolean","description":"com.github.panpf.sketch.decode.isFixed","location":"sketch-core/com.github.panpf.sketch.decode/is-fixed.html","searchKeys":["isFixed","val BitmapColorType.isFixed: Boolean","com.github.panpf.sketch.decode.isFixed"]},{"name":"val BitmapColorType.isHighQuality: Boolean","description":"com.github.panpf.sketch.decode.isHighQuality","location":"sketch-core/com.github.panpf.sketch.decode/is-high-quality.html","searchKeys":["isHighQuality","val BitmapColorType.isHighQuality: Boolean","com.github.panpf.sketch.decode.isHighQuality"]},{"name":"val BitmapColorType.isLowQuality: Boolean","description":"com.github.panpf.sketch.decode.isLowQuality","location":"sketch-core/com.github.panpf.sketch.decode/is-low-quality.html","searchKeys":["isLowQuality","val BitmapColorType.isLowQuality: Boolean","com.github.panpf.sketch.decode.isLowQuality"]},{"name":"val CachePolicy.isReadAndWrite: Boolean","description":"com.github.panpf.sketch.cache.isReadAndWrite","location":"sketch-core/com.github.panpf.sketch.cache/is-read-and-write.html","searchKeys":["isReadAndWrite","val CachePolicy.isReadAndWrite: Boolean","com.github.panpf.sketch.cache.isReadAndWrite"]},{"name":"val CachePolicy.isReadOrWrite: Boolean","description":"com.github.panpf.sketch.cache.isReadOrWrite","location":"sketch-core/com.github.panpf.sketch.cache/is-read-or-write.html","searchKeys":["isReadOrWrite","val CachePolicy.isReadOrWrite: Boolean","com.github.panpf.sketch.cache.isReadOrWrite"]},{"name":"val ColorSpace.simpleName: String","description":"com.github.panpf.sketch.util.simpleName","location":"sketch-core/com.github.panpf.sketch.util/simple-name.html","searchKeys":["simpleName","val ColorSpace.simpleName: String","com.github.panpf.sketch.util.simpleName"]},{"name":"val ColorType.bytesPerPixel: Int","description":"com.github.panpf.sketch.util.bytesPerPixel","location":"sketch-core/com.github.panpf.sketch.util/bytes-per-pixel.html","searchKeys":["bytesPerPixel","val ColorType.bytesPerPixel: Int","com.github.panpf.sketch.util.bytesPerPixel"]},{"name":"val Default: DepthHolder","description":"com.github.panpf.sketch.request.DepthHolder.Companion.Default","location":"sketch-core/com.github.panpf.sketch.request/-depth-holder/-companion/-default.html","searchKeys":["Default","val Default: DepthHolder","com.github.panpf.sketch.request.DepthHolder.Companion.Default"]},{"name":"val EMPTY: Extras","description":"com.github.panpf.sketch.request.Extras.Companion.EMPTY","location":"sketch-core/com.github.panpf.sketch.request/-extras/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: Extras","com.github.panpf.sketch.request.Extras.Companion.EMPTY"]},{"name":"val Empty: Size","description":"com.github.panpf.sketch.util.Size.Companion.Empty","location":"sketch-core/com.github.panpf.sketch.util/-size/-companion/-empty.html","searchKeys":["Empty","val Empty: Size","com.github.panpf.sketch.util.Size.Companion.Empty"]},{"name":"val INSTANCE: PlatformContext","description":"com.github.panpf.sketch.PlatformContext.Companion.INSTANCE","location":"sketch-core/com.github.panpf.sketch/-platform-context/-companion/-i-n-s-t-a-n-c-e.html","searchKeys":["INSTANCE","val INSTANCE: PlatformContext","com.github.panpf.sketch.PlatformContext.Companion.INSTANCE"]},{"name":"val Image.size: Size","description":"com.github.panpf.sketch.size","location":"sketch-core/com.github.panpf.sketch/size.html","searchKeys":["size","val Image.size: Size","com.github.panpf.sketch.size"]},{"name":"val ImageOptions.base64UriSpec: Base64Spec?","description":"com.github.panpf.sketch.fetch.base64UriSpec","location":"sketch-core/com.github.panpf.sketch.fetch/base64-uri-spec.html","searchKeys":["base64UriSpec","val ImageOptions.base64UriSpec: Base64Spec?","com.github.panpf.sketch.fetch.base64UriSpec"]},{"name":"val ImageRequest.base64UriSpec: Base64Spec?","description":"com.github.panpf.sketch.fetch.base64UriSpec","location":"sketch-core/com.github.panpf.sketch.fetch/base64-uri-spec.html","searchKeys":["base64UriSpec","val ImageRequest.base64UriSpec: Base64Spec?","com.github.panpf.sketch.fetch.base64UriSpec"]},{"name":"val LoadState.name: String","description":"com.github.panpf.sketch.request.name","location":"sketch-core/com.github.panpf.sketch.request/name.html","searchKeys":["name","val LoadState.name: String","com.github.panpf.sketch.request.name"]},{"name":"val Origin: Size","description":"com.github.panpf.sketch.util.Size.Companion.Origin","location":"sketch-core/com.github.panpf.sketch.util/-size/-companion/-origin.html","searchKeys":["Origin","val Origin: Size","com.github.panpf.sketch.util.Size.Companion.Origin"]},{"name":"val Rect.size: Size","description":"com.github.panpf.sketch.util.size","location":"sketch-core/com.github.panpf.sketch.util/size.html","searchKeys":["size","val Rect.size: Size","com.github.panpf.sketch.util.size"]},{"name":"val Size.isNotEmpty: Boolean","description":"com.github.panpf.sketch.util.isNotEmpty","location":"sketch-core/com.github.panpf.sketch.util/is-not-empty.html","searchKeys":["isNotEmpty","val Size.isNotEmpty: Boolean","com.github.panpf.sketch.util.isNotEmpty"]},{"name":"val allowNullImage: Boolean?","description":"com.github.panpf.sketch.request.ImageOptions.allowNullImage","location":"sketch-core/com.github.panpf.sketch.request/-image-options/allow-null-image.html","searchKeys":["allowNullImage","val allowNullImage: Boolean?","com.github.panpf.sketch.request.ImageOptions.allowNullImage"]},{"name":"val allowNullImage: Boolean?","description":"com.github.panpf.sketch.request.ImageRequest.allowNullImage","location":"sketch-core/com.github.panpf.sketch.request/-image-request/allow-null-image.html","searchKeys":["allowNullImage","val allowNullImage: Boolean?","com.github.panpf.sketch.request.ImageRequest.allowNullImage"]},{"name":"val alwaysUse: Boolean","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Factory.alwaysUse","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-factory/always-use.html","searchKeys":["alwaysUse","val alwaysUse: Boolean","com.github.panpf.sketch.transition.CrossfadeTransition.Factory.alwaysUse"]},{"name":"val appCacheDirectory: Path? = null","description":"com.github.panpf.sketch.cache.DiskCache.Options.appCacheDirectory","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-options/app-cache-directory.html","searchKeys":["appCacheDirectory","val appCacheDirectory: Path? = null","com.github.panpf.sketch.cache.DiskCache.Options.appCacheDirectory"]},{"name":"val appVersion: Int? = null","description":"com.github.panpf.sketch.cache.DiskCache.Options.appVersion","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-options/app-version.html","searchKeys":["appVersion","val appVersion: Int? = null","com.github.panpf.sketch.cache.DiskCache.Options.appVersion"]},{"name":"val authority: String?","description":"com.github.panpf.sketch.util.Uri.Elements.authority","location":"sketch-core/com.github.panpf.sketch.util/-uri/-elements/authority.html","searchKeys":["authority","val authority: String?","com.github.panpf.sketch.util.Uri.Elements.authority"]},{"name":"val authority: String?","description":"com.github.panpf.sketch.util.Uri.authority","location":"sketch-core/com.github.panpf.sketch.util/-uri/authority.html","searchKeys":["authority","val authority: String?","com.github.panpf.sketch.util.Uri.authority"]},{"name":"val background: Drawable? = null","description":"com.github.panpf.sketch.drawable.IconDrawable.background","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/background.html","searchKeys":["background","val background: Drawable? = null","com.github.panpf.sketch.drawable.IconDrawable.background"]},{"name":"val background: DrawableFetcher? = null","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.background","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image/background.html","searchKeys":["background","val background: DrawableFetcher? = null","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.background"]},{"name":"val background: DrawableFetcher? = null","description":"com.github.panpf.sketch.state.IconDrawableStateImage.background","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image/background.html","searchKeys":["background","val background: DrawableFetcher? = null","com.github.panpf.sketch.state.IconDrawableStateImage.background"]},{"name":"val bytes: ByteArray","description":"com.github.panpf.sketch.util.DownloadData.Bytes.bytes","location":"sketch-core/com.github.panpf.sketch.util/-download-data/-bytes/bytes.html","searchKeys":["bytes","val bytes: ByteArray","com.github.panpf.sketch.util.DownloadData.Bytes.bytes"]},{"name":"val cacheKey: String","description":"com.github.panpf.sketch.request.ImageResult.Success.cacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-success/cache-key.html","searchKeys":["cacheKey","val cacheKey: String","com.github.panpf.sketch.request.ImageResult.Success.cacheKey"]},{"name":"val cacheKey: String","description":"com.github.panpf.sketch.request.RequestContext.cacheKey","location":"sketch-core/com.github.panpf.sketch.request/-request-context/cache-key.html","searchKeys":["cacheKey","val cacheKey: String","com.github.panpf.sketch.request.RequestContext.cacheKey"]},{"name":"val cacheKey: String?","description":"com.github.panpf.sketch.request.Extras.Entry.cacheKey","location":"sketch-core/com.github.panpf.sketch.request/-extras/-entry/cache-key.html","searchKeys":["cacheKey","val cacheKey: String?","com.github.panpf.sketch.request.Extras.Entry.cacheKey"]},{"name":"val cacheKey: String?","description":"com.github.panpf.sketch.request.Extras.cacheKey","location":"sketch-core/com.github.panpf.sketch.request/-extras/cache-key.html","searchKeys":["cacheKey","val cacheKey: String?","com.github.panpf.sketch.request.Extras.cacheKey"]},{"name":"val cacheKey: String?","description":"com.github.panpf.sketch.state.MemoryCacheStateImage.cacheKey","location":"sketch-core/com.github.panpf.sketch.state/-memory-cache-state-image/cache-key.html","searchKeys":["cacheKey","val cacheKey: String?","com.github.panpf.sketch.state.MemoryCacheStateImage.cacheKey"]},{"name":"val color: ColorFetcher","description":"com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher.color","location":"sketch-core/com.github.panpf.sketch.drawable/-color-fetcher-drawable-fetcher/color.html","searchKeys":["color","val color: ColorFetcher","com.github.panpf.sketch.drawable.ColorFetcherDrawableFetcher.color"]},{"name":"val color: ColorFetcher","description":"com.github.panpf.sketch.state.ColorDrawableStateImage.color","location":"sketch-core/com.github.panpf.sketch.state/-color-drawable-state-image/color.html","searchKeys":["color","val color: ColorFetcher","com.github.panpf.sketch.state.ColorDrawableStateImage.color"]},{"name":"val color: Int","description":"com.github.panpf.sketch.drawable.RealColorDrawableFetcher.color","location":"sketch-core/com.github.panpf.sketch.drawable/-real-color-drawable-fetcher/color.html","searchKeys":["color","val color: Int","com.github.panpf.sketch.drawable.RealColorDrawableFetcher.color"]},{"name":"val color: Int","description":"com.github.panpf.sketch.util.IntColorFetcher.color","location":"sketch-core/com.github.panpf.sketch.util/-int-color-fetcher/color.html","searchKeys":["color","val color: Int","com.github.panpf.sketch.util.IntColorFetcher.color"]},{"name":"val colorSpace: BitmapColorSpace?","description":"com.github.panpf.sketch.request.ImageOptions.colorSpace","location":"sketch-core/com.github.panpf.sketch.request/-image-options/color-space.html","searchKeys":["colorSpace","val colorSpace: BitmapColorSpace?","com.github.panpf.sketch.request.ImageOptions.colorSpace"]},{"name":"val colorSpace: BitmapColorSpace?","description":"com.github.panpf.sketch.request.ImageRequest.colorSpace","location":"sketch-core/com.github.panpf.sketch.request/-image-request/color-space.html","searchKeys":["colorSpace","val colorSpace: BitmapColorSpace?","com.github.panpf.sketch.request.ImageRequest.colorSpace"]},{"name":"val colorSpace: ColorSpace","description":"com.github.panpf.sketch.decode.PlatformColorSpace.colorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-platform-color-space/[android]color-space.html","searchKeys":["colorSpace","val colorSpace: ColorSpace","com.github.panpf.sketch.decode.PlatformColorSpace.colorSpace"]},{"name":"val colorSpace: ColorSpace","description":"com.github.panpf.sketch.decode.PlatformColorSpace.colorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-platform-color-space/[non-android]color-space.html","searchKeys":["colorSpace","val colorSpace: ColorSpace","com.github.panpf.sketch.decode.PlatformColorSpace.colorSpace"]},{"name":"val colorType: BitmapColorType?","description":"com.github.panpf.sketch.request.ImageOptions.colorType","location":"sketch-core/com.github.panpf.sketch.request/-image-options/color-type.html","searchKeys":["colorType","val colorType: BitmapColorType?","com.github.panpf.sketch.request.ImageOptions.colorType"]},{"name":"val colorType: BitmapColorType?","description":"com.github.panpf.sketch.request.ImageRequest.colorType","location":"sketch-core/com.github.panpf.sketch.request/-image-request/color-type.html","searchKeys":["colorType","val colorType: BitmapColorType?","com.github.panpf.sketch.request.ImageRequest.colorType"]},{"name":"val colorType: ColorType","description":"com.github.panpf.sketch.decode.PlatformColorType.colorType","location":"sketch-core/com.github.panpf.sketch.decode/-platform-color-type/color-type.html","searchKeys":["colorType","val colorType: ColorType","com.github.panpf.sketch.decode.PlatformColorType.colorType"]},{"name":"val completedLength: Long","description":"com.github.panpf.sketch.request.Progress.completedLength","location":"sketch-core/com.github.panpf.sketch.request/-progress/completed-length.html","searchKeys":["completedLength","val completedLength: Long","com.github.panpf.sketch.request.Progress.completedLength"]},{"name":"val componentRegistry: ComponentRegistry?","description":"com.github.panpf.sketch.request.ImageOptions.componentRegistry","location":"sketch-core/com.github.panpf.sketch.request/-image-options/component-registry.html","searchKeys":["componentRegistry","val componentRegistry: ComponentRegistry?","com.github.panpf.sketch.request.ImageOptions.componentRegistry"]},{"name":"val componentRegistry: ComponentRegistry?","description":"com.github.panpf.sketch.request.ImageRequest.componentRegistry","location":"sketch-core/com.github.panpf.sketch.request/-image-request/component-registry.html","searchKeys":["componentRegistry","val componentRegistry: ComponentRegistry?","com.github.panpf.sketch.request.ImageRequest.componentRegistry"]},{"name":"val components: Components","description":"com.github.panpf.sketch.Sketch.components","location":"sketch-core/com.github.panpf.sketch/-sketch/components.html","searchKeys":["components","val components: Components","com.github.panpf.sketch.Sketch.components"]},{"name":"val contentUri: Uri","description":"com.github.panpf.sketch.fetch.ContentUriFetcher.contentUri","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/content-uri.html","searchKeys":["contentUri","val contentUri: Uri","com.github.panpf.sketch.fetch.ContentUriFetcher.contentUri"]},{"name":"val contentUri: Uri","description":"com.github.panpf.sketch.source.ContentDataSource.contentUri","location":"sketch-core/com.github.panpf.sketch.source/-content-data-source/content-uri.html","searchKeys":["contentUri","val contentUri: Uri","com.github.panpf.sketch.source.ContentDataSource.contentUri"]},{"name":"val context: Context","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.context","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/context.html","searchKeys":["context","val context: Context","com.github.panpf.sketch.fetch.AssetUriFetcher.context"]},{"name":"val context: Context","description":"com.github.panpf.sketch.fetch.ContentUriFetcher.context","location":"sketch-core/com.github.panpf.sketch.fetch/-content-uri-fetcher/context.html","searchKeys":["context","val context: Context","com.github.panpf.sketch.fetch.ContentUriFetcher.context"]},{"name":"val context: Context","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher.context","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/context.html","searchKeys":["context","val context: Context","com.github.panpf.sketch.fetch.ResourceUriFetcher.context"]},{"name":"val context: Context","description":"com.github.panpf.sketch.source.AssetDataSource.context","location":"sketch-core/com.github.panpf.sketch.source/-asset-data-source/context.html","searchKeys":["context","val context: Context","com.github.panpf.sketch.source.AssetDataSource.context"]},{"name":"val context: Context","description":"com.github.panpf.sketch.source.ContentDataSource.context","location":"sketch-core/com.github.panpf.sketch.source/-content-data-source/context.html","searchKeys":["context","val context: Context","com.github.panpf.sketch.source.ContentDataSource.context"]},{"name":"val context: Context","description":"com.github.panpf.sketch.source.DrawableDataSource.context","location":"sketch-core/com.github.panpf.sketch.source/-drawable-data-source/context.html","searchKeys":["context","val context: Context","com.github.panpf.sketch.source.DrawableDataSource.context"]},{"name":"val context: PlatformContext","description":"com.github.panpf.sketch.Sketch.context","location":"sketch-core/com.github.panpf.sketch/-sketch/context.html","searchKeys":["context","val context: PlatformContext","com.github.panpf.sketch.Sketch.context"]},{"name":"val context: PlatformContext","description":"com.github.panpf.sketch.cache.DiskCache.Builder.context","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-builder/context.html","searchKeys":["context","val context: PlatformContext","com.github.panpf.sketch.cache.DiskCache.Builder.context"]},{"name":"val context: PlatformContext","description":"com.github.panpf.sketch.cache.MemoryCache.Builder.context","location":"sketch-core/com.github.panpf.sketch.cache/-memory-cache/-builder/context.html","searchKeys":["context","val context: PlatformContext","com.github.panpf.sketch.cache.MemoryCache.Builder.context"]},{"name":"val context: PlatformContext","description":"com.github.panpf.sketch.request.ImageRequest.context","location":"sketch-core/com.github.panpf.sketch.request/-image-request/context.html","searchKeys":["context","val context: PlatformContext","com.github.panpf.sketch.request.ImageRequest.context"]},{"name":"val data: ByteArray","description":"com.github.panpf.sketch.source.ByteArrayDataSource.data","location":"sketch-core/com.github.panpf.sketch.source/-byte-array-data-source/data.html","searchKeys":["data","val data: ByteArray","com.github.panpf.sketch.source.ByteArrayDataSource.data"]},{"name":"val dataEncodedString: String","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.dataEncodedString","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/data-encoded-string.html","searchKeys":["dataEncodedString","val dataEncodedString: String","com.github.panpf.sketch.fetch.Base64UriFetcher.dataEncodedString"]},{"name":"val dataFrom: DataFrom","description":"com.github.panpf.sketch.decode.DecodeResult.dataFrom","location":"sketch-core/com.github.panpf.sketch.decode/-decode-result/data-from.html","searchKeys":["dataFrom","val dataFrom: DataFrom","com.github.panpf.sketch.decode.DecodeResult.dataFrom"]},{"name":"val dataFrom: DataFrom","description":"com.github.panpf.sketch.fetch.FetchResult.dataFrom","location":"sketch-core/com.github.panpf.sketch.fetch/-fetch-result/data-from.html","searchKeys":["dataFrom","val dataFrom: DataFrom","com.github.panpf.sketch.fetch.FetchResult.dataFrom"]},{"name":"val dataFrom: DataFrom","description":"com.github.panpf.sketch.request.ImageData.dataFrom","location":"sketch-core/com.github.panpf.sketch.request/-image-data/data-from.html","searchKeys":["dataFrom","val dataFrom: DataFrom","com.github.panpf.sketch.request.ImageData.dataFrom"]},{"name":"val dataFrom: DataFrom","description":"com.github.panpf.sketch.request.ImageResult.Success.dataFrom","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-success/data-from.html","searchKeys":["dataFrom","val dataFrom: DataFrom","com.github.panpf.sketch.request.ImageResult.Success.dataFrom"]},{"name":"val dataSource: <Error class: unknown class>","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.dataSource","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decode-helper/data-source.html","searchKeys":["dataSource","val dataSource: <Error class: unknown class>","com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.dataSource"]},{"name":"val dataSource: DataSource","description":"com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.dataSource","location":"sketch-core/com.github.panpf.sketch.decode.internal/-skia-decode-helper/data-source.html","searchKeys":["dataSource","val dataSource: DataSource","com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.dataSource"]},{"name":"val dataSource: DataSource","description":"com.github.panpf.sketch.fetch.FetchResult.dataSource","location":"sketch-core/com.github.panpf.sketch.fetch/-fetch-result/data-source.html","searchKeys":["dataSource","val dataSource: DataSource","com.github.panpf.sketch.fetch.FetchResult.dataSource"]},{"name":"val decimalProgress: Float","description":"com.github.panpf.sketch.request.Progress.decimalProgress","location":"sketch-core/com.github.panpf.sketch.request/-progress/decimal-progress.html","searchKeys":["decimalProgress","val decimalProgress: Float","com.github.panpf.sketch.request.Progress.decimalProgress"]},{"name":"val decodeInterceptorList: List<DecodeInterceptor>","description":"com.github.panpf.sketch.ComponentRegistry.decodeInterceptorList","location":"sketch-core/com.github.panpf.sketch/-component-registry/decode-interceptor-list.html","searchKeys":["decodeInterceptorList","val decodeInterceptorList: List<DecodeInterceptor>","com.github.panpf.sketch.ComponentRegistry.decodeInterceptorList"]},{"name":"val decodeParallelismLimited: Int","description":"com.github.panpf.sketch.Sketch.decodeParallelismLimited","location":"sketch-core/com.github.panpf.sketch/-sketch/decode-parallelism-limited.html","searchKeys":["decodeParallelismLimited","val decodeParallelismLimited: Int","com.github.panpf.sketch.Sketch.decodeParallelismLimited"]},{"name":"val decodeTaskDispatcher: CoroutineDispatcher","description":"com.github.panpf.sketch.Sketch.decodeTaskDispatcher","location":"sketch-core/com.github.panpf.sketch/-sketch/decode-task-dispatcher.html","searchKeys":["decodeTaskDispatcher","val decodeTaskDispatcher: CoroutineDispatcher","com.github.panpf.sketch.Sketch.decodeTaskDispatcher"]},{"name":"val decoderFactoryList: List<Decoder.Factory>","description":"com.github.panpf.sketch.ComponentRegistry.decoderFactoryList","location":"sketch-core/com.github.panpf.sketch/-component-registry/decoder-factory-list.html","searchKeys":["decoderFactoryList","val decoderFactoryList: List<Decoder.Factory>","com.github.panpf.sketch.ComponentRegistry.decoderFactoryList"]},{"name":"val defaultImage: StateImage? = null","description":"com.github.panpf.sketch.state.CurrentStateImage.defaultImage","location":"sketch-core/com.github.panpf.sketch.state/-current-state-image/default-image.html","searchKeys":["defaultImage","val defaultImage: StateImage? = null","com.github.panpf.sketch.state.CurrentStateImage.defaultImage"]},{"name":"val defaultImage: StateImage? = null","description":"com.github.panpf.sketch.state.MemoryCacheStateImage.defaultImage","location":"sketch-core/com.github.panpf.sketch.state/-memory-cache-state-image/default-image.html","searchKeys":["defaultImage","val defaultImage: StateImage? = null","com.github.panpf.sketch.state.MemoryCacheStateImage.defaultImage"]},{"name":"val defaultImage: StateImage? = null","description":"com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.defaultImage","location":"sketch-core/com.github.panpf.sketch.state/-thumbnail-memory-cache-state-image/default-image.html","searchKeys":["defaultImage","val defaultImage: StateImage? = null","com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.defaultImage"]},{"name":"val defaultOptions: ImageOptions?","description":"com.github.panpf.sketch.request.ImageRequest.defaultOptions","location":"sketch-core/com.github.panpf.sketch.request/-image-request/default-options.html","searchKeys":["defaultOptions","val defaultOptions: ImageOptions?","com.github.panpf.sketch.request.ImageRequest.defaultOptions"]},{"name":"val definedOptions: ImageOptions","description":"com.github.panpf.sketch.request.ImageRequest.definedOptions","location":"sketch-core/com.github.panpf.sketch.request/-image-request/defined-options.html","searchKeys":["definedOptions","val definedOptions: ImageOptions","com.github.panpf.sketch.request.ImageRequest.definedOptions"]},{"name":"val definedRequestOptions: RequestOptions","description":"com.github.panpf.sketch.request.ImageRequest.definedRequestOptions","location":"sketch-core/com.github.panpf.sketch.request/-image-request/defined-request-options.html","searchKeys":["definedRequestOptions","val definedRequestOptions: RequestOptions","com.github.panpf.sketch.request.ImageRequest.definedRequestOptions"]},{"name":"val degrees: Int","description":"com.github.panpf.sketch.transform.RotateTransformation.degrees","location":"sketch-core/com.github.panpf.sketch.transform/-rotate-transformation/degrees.html","searchKeys":["degrees","val degrees: Int","com.github.panpf.sketch.transform.RotateTransformation.degrees"]},{"name":"val depth: Depth","description":"com.github.panpf.sketch.request.DepthHolder.depth","location":"sketch-core/com.github.panpf.sketch.request/-depth-holder/depth.html","searchKeys":["depth","val depth: Depth","com.github.panpf.sketch.request.DepthHolder.depth"]},{"name":"val depthHolder: DepthHolder","description":"com.github.panpf.sketch.request.ImageRequest.depthHolder","location":"sketch-core/com.github.panpf.sketch.request/-image-request/depth-holder.html","searchKeys":["depthHolder","val depthHolder: DepthHolder","com.github.panpf.sketch.request.ImageRequest.depthHolder"]},{"name":"val depthHolder: DepthHolder?","description":"com.github.panpf.sketch.request.ImageOptions.depthHolder","location":"sketch-core/com.github.panpf.sketch.request/-image-options/depth-holder.html","searchKeys":["depthHolder","val depthHolder: DepthHolder?","com.github.panpf.sketch.request.ImageOptions.depthHolder"]},{"name":"val directory: Path? = null","description":"com.github.panpf.sketch.cache.DiskCache.Options.directory","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-options/directory.html","searchKeys":["directory","val directory: Path? = null","com.github.panpf.sketch.cache.DiskCache.Options.directory"]},{"name":"val downloadCache: DiskCache","description":"com.github.panpf.sketch.Sketch.downloadCache","location":"sketch-core/com.github.panpf.sketch/-sketch/download-cache.html","searchKeys":["downloadCache","val downloadCache: DiskCache","com.github.panpf.sketch.Sketch.downloadCache"]},{"name":"val downloadCacheKey: String","description":"com.github.panpf.sketch.request.ImageResult.Success.downloadCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-success/download-cache-key.html","searchKeys":["downloadCacheKey","val downloadCacheKey: String","com.github.panpf.sketch.request.ImageResult.Success.downloadCacheKey"]},{"name":"val downloadCacheKey: String","description":"com.github.panpf.sketch.request.RequestContext.downloadCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-request-context/download-cache-key.html","searchKeys":["downloadCacheKey","val downloadCacheKey: String","com.github.panpf.sketch.request.RequestContext.downloadCacheKey"]},{"name":"val downloadCacheKey: String?","description":"com.github.panpf.sketch.request.ImageOptions.downloadCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-options/download-cache-key.html","searchKeys":["downloadCacheKey","val downloadCacheKey: String?","com.github.panpf.sketch.request.ImageOptions.downloadCacheKey"]},{"name":"val downloadCacheKey: String?","description":"com.github.panpf.sketch.request.ImageRequest.downloadCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-request/download-cache-key.html","searchKeys":["downloadCacheKey","val downloadCacheKey: String?","com.github.panpf.sketch.request.ImageRequest.downloadCacheKey"]},{"name":"val downloadCacheKeyMapper: CacheKeyMapper?","description":"com.github.panpf.sketch.request.ImageOptions.downloadCacheKeyMapper","location":"sketch-core/com.github.panpf.sketch.request/-image-options/download-cache-key-mapper.html","searchKeys":["downloadCacheKeyMapper","val downloadCacheKeyMapper: CacheKeyMapper?","com.github.panpf.sketch.request.ImageOptions.downloadCacheKeyMapper"]},{"name":"val downloadCacheKeyMapper: CacheKeyMapper?","description":"com.github.panpf.sketch.request.ImageRequest.downloadCacheKeyMapper","location":"sketch-core/com.github.panpf.sketch.request/-image-request/download-cache-key-mapper.html","searchKeys":["downloadCacheKeyMapper","val downloadCacheKeyMapper: CacheKeyMapper?","com.github.panpf.sketch.request.ImageRequest.downloadCacheKeyMapper"]},{"name":"val downloadCachePolicy: CachePolicy","description":"com.github.panpf.sketch.request.ImageRequest.downloadCachePolicy","location":"sketch-core/com.github.panpf.sketch.request/-image-request/download-cache-policy.html","searchKeys":["downloadCachePolicy","val downloadCachePolicy: CachePolicy","com.github.panpf.sketch.request.ImageRequest.downloadCachePolicy"]},{"name":"val downloadCachePolicy: CachePolicy?","description":"com.github.panpf.sketch.request.ImageOptions.downloadCachePolicy","location":"sketch-core/com.github.panpf.sketch.request/-image-options/download-cache-policy.html","searchKeys":["downloadCachePolicy","val downloadCachePolicy: CachePolicy?","com.github.panpf.sketch.request.ImageOptions.downloadCachePolicy"]},{"name":"val drawable: Drawable","description":"com.github.panpf.sketch.DrawableImage.drawable","location":"sketch-core/com.github.panpf.sketch/-drawable-image/drawable.html","searchKeys":["drawable","val drawable: Drawable","com.github.panpf.sketch.DrawableImage.drawable"]},{"name":"val drawable: Drawable","description":"com.github.panpf.sketch.source.DrawableDataSource.drawable","location":"sketch-core/com.github.panpf.sketch.source/-drawable-data-source/drawable.html","searchKeys":["drawable","val drawable: Drawable","com.github.panpf.sketch.source.DrawableDataSource.drawable"]},{"name":"val drawable: EquitableDrawable","description":"com.github.panpf.sketch.drawable.RealDrawableFetcher.drawable","location":"sketch-core/com.github.panpf.sketch.drawable/-real-drawable-fetcher/drawable.html","searchKeys":["drawable","val drawable: EquitableDrawable","com.github.panpf.sketch.drawable.RealDrawableFetcher.drawable"]},{"name":"val drawableFetcher: DrawableFetcher","description":"com.github.panpf.sketch.source.DrawableDataSource.drawableFetcher","location":"sketch-core/com.github.panpf.sketch.source/-drawable-data-source/drawable-fetcher.html","searchKeys":["drawableFetcher","val drawableFetcher: DrawableFetcher","com.github.panpf.sketch.source.DrawableDataSource.drawableFetcher"]},{"name":"val drawableFetcher: DrawableFetcher","description":"com.github.panpf.sketch.state.DrawableStateImage.drawableFetcher","location":"sketch-core/com.github.panpf.sketch.state/-drawable-state-image/drawable-fetcher.html","searchKeys":["drawableFetcher","val drawableFetcher: DrawableFetcher","com.github.panpf.sketch.state.DrawableStateImage.drawableFetcher"]},{"name":"val dstRect: Rect","description":"com.github.panpf.sketch.resize.ResizeMapping.dstRect","location":"sketch-core/com.github.panpf.sketch.resize/-resize-mapping/dst-rect.html","searchKeys":["dstRect","val dstRect: Rect","com.github.panpf.sketch.resize.ResizeMapping.dstRect"]},{"name":"val durationMillis: Int","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Factory.durationMillis","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-factory/duration-millis.html","searchKeys":["durationMillis","val durationMillis: Int","com.github.panpf.sketch.transition.CrossfadeTransition.Factory.durationMillis"]},{"name":"val entries: EnumEntries<Base64Spec>","description":"com.github.panpf.sketch.fetch.Base64Spec.entries","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-spec/entries.html","searchKeys":["entries","val entries: EnumEntries<Base64Spec>","com.github.panpf.sketch.fetch.Base64Spec.entries"]},{"name":"val entries: EnumEntries<CachePolicy>","description":"com.github.panpf.sketch.cache.CachePolicy.entries","location":"sketch-core/com.github.panpf.sketch.cache/-cache-policy/entries.html","searchKeys":["entries","val entries: EnumEntries<CachePolicy>","com.github.panpf.sketch.cache.CachePolicy.entries"]},{"name":"val entries: EnumEntries<ColorType>","description":"com.github.panpf.sketch.ColorType.entries","location":"sketch-core/com.github.panpf.sketch/-color-type/entries.html","searchKeys":["entries","val entries: EnumEntries<ColorType>","com.github.panpf.sketch.ColorType.entries"]},{"name":"val entries: EnumEntries<DataFrom>","description":"com.github.panpf.sketch.source.DataFrom.entries","location":"sketch-core/com.github.panpf.sketch.source/-data-from/entries.html","searchKeys":["entries","val entries: EnumEntries<DataFrom>","com.github.panpf.sketch.source.DataFrom.entries"]},{"name":"val entries: EnumEntries<Depth>","description":"com.github.panpf.sketch.request.Depth.entries","location":"sketch-core/com.github.panpf.sketch.request/-depth/entries.html","searchKeys":["entries","val entries: EnumEntries<Depth>","com.github.panpf.sketch.request.Depth.entries"]},{"name":"val entries: EnumEntries<ImageFormat>","description":"com.github.panpf.sketch.decode.internal.ImageFormat.entries","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/entries.html","searchKeys":["entries","val entries: EnumEntries<ImageFormat>","com.github.panpf.sketch.decode.internal.ImageFormat.entries"]},{"name":"val entries: EnumEntries<Logger.Level>","description":"com.github.panpf.sketch.util.Logger.Level.entries","location":"sketch-core/com.github.panpf.sketch.util/-logger/-level/entries.html","searchKeys":["entries","val entries: EnumEntries<Logger.Level>","com.github.panpf.sketch.util.Logger.Level.entries"]},{"name":"val entries: EnumEntries<Precision>","description":"com.github.panpf.sketch.resize.Precision.entries","location":"sketch-core/com.github.panpf.sketch.resize/-precision/entries.html","searchKeys":["entries","val entries: EnumEntries<Precision>","com.github.panpf.sketch.resize.Precision.entries"]},{"name":"val entries: EnumEntries<Scale>","description":"com.github.panpf.sketch.resize.Scale.entries","location":"sketch-core/com.github.panpf.sketch.resize/-scale/entries.html","searchKeys":["entries","val entries: EnumEntries<Scale>","com.github.panpf.sketch.resize.Scale.entries"]},{"name":"val entries: Map<String, Extras.Entry>","description":"com.github.panpf.sketch.request.Extras.entries","location":"sketch-core/com.github.panpf.sketch.request/-extras/entries.html","searchKeys":["entries","val entries: Map<String, Extras.Entry>","com.github.panpf.sketch.request.Extras.entries"]},{"name":"val equalityKey: Any","description":"com.github.panpf.sketch.drawable.EquitableDrawable.equalityKey","location":"sketch-core/com.github.panpf.sketch.drawable/-equitable-drawable/equality-key.html","searchKeys":["equalityKey","val equalityKey: Any","com.github.panpf.sketch.drawable.EquitableDrawable.equalityKey"]},{"name":"val error: StateImage?","description":"com.github.panpf.sketch.request.ImageOptions.error","location":"sketch-core/com.github.panpf.sketch.request/-image-options/error.html","searchKeys":["error","val error: StateImage?","com.github.panpf.sketch.request.ImageOptions.error"]},{"name":"val error: StateImage?","description":"com.github.panpf.sketch.request.ImageRequest.error","location":"sketch-core/com.github.panpf.sketch.request/-image-request/error.html","searchKeys":["error","val error: StateImage?","com.github.panpf.sketch.request.ImageRequest.error"]},{"name":"val exifOrientation: Int","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.exifOrientation","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/exif-orientation.html","searchKeys":["exifOrientation","val exifOrientation: Int","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.exifOrientation"]},{"name":"val extras: Extras?","description":"com.github.panpf.sketch.request.ImageOptions.extras","location":"sketch-core/com.github.panpf.sketch.request/-image-options/extras.html","searchKeys":["extras","val extras: Extras?","com.github.panpf.sketch.request.ImageOptions.extras"]},{"name":"val extras: Extras?","description":"com.github.panpf.sketch.request.ImageRequest.extras","location":"sketch-core/com.github.panpf.sketch.request/-image-request/extras.html","searchKeys":["extras","val extras: Extras?","com.github.panpf.sketch.request.ImageRequest.extras"]},{"name":"val extras: Map<String, String>?","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.extras","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/-metadata/extras.html","searchKeys":["extras","val extras: Map<String, String>?","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.extras"]},{"name":"val extras: Map<String, String>?","description":"com.github.panpf.sketch.decode.DecodeResult.extras","location":"sketch-core/com.github.panpf.sketch.decode/-decode-result/extras.html","searchKeys":["extras","val extras: Map<String, String>?","com.github.panpf.sketch.decode.DecodeResult.extras"]},{"name":"val extras: Map<String, String>?","description":"com.github.panpf.sketch.request.ImageData.extras","location":"sketch-core/com.github.panpf.sketch.request/-image-data/extras.html","searchKeys":["extras","val extras: Map<String, String>?","com.github.panpf.sketch.request.ImageData.extras"]},{"name":"val extras: Map<String, String>?","description":"com.github.panpf.sketch.request.ImageResult.Success.extras","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-success/extras.html","searchKeys":["extras","val extras: Map<String, String>?","com.github.panpf.sketch.request.ImageResult.Success.extras"]},{"name":"val fadeStart: Boolean","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Factory.fadeStart","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-factory/fade-start.html","searchKeys":["fadeStart","val fadeStart: Boolean","com.github.panpf.sketch.transition.CrossfadeTransition.Factory.fadeStart"]},{"name":"val fallback: StateImage?","description":"com.github.panpf.sketch.request.ImageOptions.fallback","location":"sketch-core/com.github.panpf.sketch.request/-image-options/fallback.html","searchKeys":["fallback","val fallback: StateImage?","com.github.panpf.sketch.request.ImageOptions.fallback"]},{"name":"val fallback: StateImage?","description":"com.github.panpf.sketch.request.ImageRequest.fallback","location":"sketch-core/com.github.panpf.sketch.request/-image-request/fallback.html","searchKeys":["fallback","val fallback: StateImage?","com.github.panpf.sketch.request.ImageRequest.fallback"]},{"name":"val fetcherFactoryList: List<Fetcher.Factory>","description":"com.github.panpf.sketch.ComponentRegistry.fetcherFactoryList","location":"sketch-core/com.github.panpf.sketch/-component-registry/fetcher-factory-list.html","searchKeys":["fetcherFactoryList","val fetcherFactoryList: List<Fetcher.Factory>","com.github.panpf.sketch.ComponentRegistry.fetcherFactoryList"]},{"name":"val fileName: String","description":"com.github.panpf.sketch.fetch.AssetUriFetcher.fileName","location":"sketch-core/com.github.panpf.sketch.fetch/-asset-uri-fetcher/file-name.html","searchKeys":["fileName","val fileName: String","com.github.panpf.sketch.fetch.AssetUriFetcher.fileName"]},{"name":"val fileName: String","description":"com.github.panpf.sketch.source.AssetDataSource.fileName","location":"sketch-core/com.github.panpf.sketch.source/-asset-data-source/file-name.html","searchKeys":["fileName","val fileName: String","com.github.panpf.sketch.source.AssetDataSource.fileName"]},{"name":"val filePath: String?","description":"com.github.panpf.sketch.util.Uri.filePath","location":"sketch-core/com.github.panpf.sketch.util/-uri/file-path.html","searchKeys":["filePath","val filePath: String?","com.github.panpf.sketch.util.Uri.filePath"]},{"name":"val fileSystem: <Error class: unknown class>","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.fileSystem","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/file-system.html","searchKeys":["fileSystem","val fileSystem: <Error class: unknown class>","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.fileSystem"]},{"name":"val fileSystem: <Error class: unknown class>","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.fileSystem","location":"sketch-core/com.github.panpf.sketch.source/[ios]-kotlin-resource-data-source/file-system.html","searchKeys":["fileSystem","val fileSystem: <Error class: unknown class>","com.github.panpf.sketch.source.KotlinResourceDataSource.fileSystem"]},{"name":"val fileSystem: FileSystem","description":"com.github.panpf.sketch.Sketch.fileSystem","location":"sketch-core/com.github.panpf.sketch/-sketch/file-system.html","searchKeys":["fileSystem","val fileSystem: FileSystem","com.github.panpf.sketch.Sketch.fileSystem"]},{"name":"val fileSystem: FileSystem","description":"com.github.panpf.sketch.cache.DiskCache.Builder.fileSystem","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-builder/file-system.html","searchKeys":["fileSystem","val fileSystem: FileSystem","com.github.panpf.sketch.cache.DiskCache.Builder.fileSystem"]},{"name":"val fileSystem: FileSystem","description":"com.github.panpf.sketch.fetch.FileUriFetcher.fileSystem","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/file-system.html","searchKeys":["fileSystem","val fileSystem: FileSystem","com.github.panpf.sketch.fetch.FileUriFetcher.fileSystem"]},{"name":"val fileSystem: FileSystem","description":"com.github.panpf.sketch.source.FileDataSource.fileSystem","location":"sketch-core/com.github.panpf.sketch.source/-file-data-source/file-system.html","searchKeys":["fileSystem","val fileSystem: FileSystem","com.github.panpf.sketch.source.FileDataSource.fileSystem"]},{"name":"val fileSystem: FileSystem","description":"com.github.panpf.sketch.util.DownloadData.Cache.fileSystem","location":"sketch-core/com.github.panpf.sketch.util/-download-data/-cache/file-system.html","searchKeys":["fileSystem","val fileSystem: FileSystem","com.github.panpf.sketch.util.DownloadData.Cache.fileSystem"]},{"name":"val first: Listener","description":"com.github.panpf.sketch.request.internal.PairListener.first","location":"sketch-core/com.github.panpf.sketch.request.internal/-pair-listener/first.html","searchKeys":["first","val first: Listener","com.github.panpf.sketch.request.internal.PairListener.first"]},{"name":"val first: ProgressListener","description":"com.github.panpf.sketch.request.internal.PairProgressListener.first","location":"sketch-core/com.github.panpf.sketch.request.internal/-pair-progress-listener/first.html","searchKeys":["first","val first: ProgressListener","com.github.panpf.sketch.request.internal.PairProgressListener.first"]},{"name":"val fragment: String?","description":"com.github.panpf.sketch.util.Uri.Elements.fragment","location":"sketch-core/com.github.panpf.sketch.util/-uri/-elements/fragment.html","searchKeys":["fragment","val fragment: String?","com.github.panpf.sketch.util.Uri.Elements.fragment"]},{"name":"val fragment: String?","description":"com.github.panpf.sketch.util.Uri.fragment","location":"sketch-core/com.github.panpf.sketch.util/-uri/fragment.html","searchKeys":["fragment","val fragment: String?","com.github.panpf.sketch.util.Uri.fragment"]},{"name":"val from: String? = null","description":"com.github.panpf.sketch.request.DepthHolder.from","location":"sketch-core/com.github.panpf.sketch.request/-depth-holder/from.html","searchKeys":["from","val from: String? = null","com.github.panpf.sketch.request.DepthHolder.from"]},{"name":"val globalImageOptions: ImageOptions?","description":"com.github.panpf.sketch.Sketch.globalImageOptions","location":"sketch-core/com.github.panpf.sketch/-sketch/global-image-options.html","searchKeys":["globalImageOptions","val globalImageOptions: ImageOptions?","com.github.panpf.sketch.Sketch.globalImageOptions"]},{"name":"val hasAlphaBitmapBgColor: Int?","description":"com.github.panpf.sketch.transform.BlurTransformation.hasAlphaBitmapBgColor","location":"sketch-core/com.github.panpf.sketch.transform/-blur-transformation/has-alpha-bitmap-bg-color.html","searchKeys":["hasAlphaBitmapBgColor","val hasAlphaBitmapBgColor: Int?","com.github.panpf.sketch.transform.BlurTransformation.hasAlphaBitmapBgColor"]},{"name":"val headerBytes: ByteArray","description":"com.github.panpf.sketch.fetch.FetchResult.headerBytes","location":"sketch-core/com.github.panpf.sketch.fetch/-fetch-result/header-bytes.html","searchKeys":["headerBytes","val headerBytes: ByteArray","com.github.panpf.sketch.fetch.FetchResult.headerBytes"]},{"name":"val height: Int","description":"com.github.panpf.sketch.decode.ImageInfo.height","location":"sketch-core/com.github.panpf.sketch.decode/-image-info/height.html","searchKeys":["height","val height: Int","com.github.panpf.sketch.decode.ImageInfo.height"]},{"name":"val height: Int","description":"com.github.panpf.sketch.util.Size.height","location":"sketch-core/com.github.panpf.sketch.util/-size/height.html","searchKeys":["height","val height: Int","com.github.panpf.sketch.util.Size.height"]},{"name":"val icon: Drawable","description":"com.github.panpf.sketch.drawable.IconDrawable.icon","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/icon.html","searchKeys":["icon","val icon: Drawable","com.github.panpf.sketch.drawable.IconDrawable.icon"]},{"name":"val icon: DrawableFetcher","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.icon","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image/icon.html","searchKeys":["icon","val icon: DrawableFetcher","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.icon"]},{"name":"val icon: DrawableFetcher","description":"com.github.panpf.sketch.state.IconDrawableStateImage.icon","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image/icon.html","searchKeys":["icon","val icon: DrawableFetcher","com.github.panpf.sketch.state.IconDrawableStateImage.icon"]},{"name":"val iconSize: <Error class: unknown class>? = null","description":"com.github.panpf.sketch.drawable.IconDrawable.iconSize","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/icon-size.html","searchKeys":["iconSize","val iconSize: <Error class: unknown class>? = null","com.github.panpf.sketch.drawable.IconDrawable.iconSize"]},{"name":"val iconSize: <Error class: unknown class>? = null","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.iconSize","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image/icon-size.html","searchKeys":["iconSize","val iconSize: <Error class: unknown class>? = null","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.iconSize"]},{"name":"val iconSize: <Error class: unknown class>? = null","description":"com.github.panpf.sketch.state.IconDrawableStateImage.iconSize","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image/icon-size.html","searchKeys":["iconSize","val iconSize: <Error class: unknown class>? = null","com.github.panpf.sketch.state.IconDrawableStateImage.iconSize"]},{"name":"val iconTint: ColorFetcher? = null","description":"com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.iconTint","location":"sketch-core/com.github.panpf.sketch.state/-icon-animatable-drawable-state-image/icon-tint.html","searchKeys":["iconTint","val iconTint: ColorFetcher? = null","com.github.panpf.sketch.state.IconAnimatableDrawableStateImage.iconTint"]},{"name":"val iconTint: ColorFetcher? = null","description":"com.github.panpf.sketch.state.IconDrawableStateImage.iconTint","location":"sketch-core/com.github.panpf.sketch.state/-icon-drawable-state-image/icon-tint.html","searchKeys":["iconTint","val iconTint: ColorFetcher? = null","com.github.panpf.sketch.state.IconDrawableStateImage.iconTint"]},{"name":"val iconTint: Int? = null","description":"com.github.panpf.sketch.drawable.IconDrawable.iconTint","location":"sketch-core/com.github.panpf.sketch.drawable/-icon-drawable/icon-tint.html","searchKeys":["iconTint","val iconTint: Int? = null","com.github.panpf.sketch.drawable.IconDrawable.iconTint"]},{"name":"val image: Image","description":"com.github.panpf.sketch.decode.DecodeResult.image","location":"sketch-core/com.github.panpf.sketch.decode/-decode-result/image.html","searchKeys":["image","val image: Image","com.github.panpf.sketch.decode.DecodeResult.image"]},{"name":"val image: Image","description":"com.github.panpf.sketch.request.ImageData.image","location":"sketch-core/com.github.panpf.sketch.request/-image-data/image.html","searchKeys":["image","val image: Image","com.github.panpf.sketch.request.ImageData.image"]},{"name":"val image: Image","description":"com.github.panpf.sketch.transform.TransformResult.image","location":"sketch-core/com.github.panpf.sketch.transform/-transform-result/image.html","searchKeys":["image","val image: Image","com.github.panpf.sketch.transform.TransformResult.image"]},{"name":"val imageInfo: ImageInfo","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.imageInfo","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/-metadata/image-info.html","searchKeys":["imageInfo","val imageInfo: ImageInfo","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.imageInfo"]},{"name":"val imageInfo: ImageInfo","description":"com.github.panpf.sketch.decode.DecodeResult.imageInfo","location":"sketch-core/com.github.panpf.sketch.decode/-decode-result/image-info.html","searchKeys":["imageInfo","val imageInfo: ImageInfo","com.github.panpf.sketch.decode.DecodeResult.imageInfo"]},{"name":"val imageInfo: ImageInfo","description":"com.github.panpf.sketch.request.ImageData.imageInfo","location":"sketch-core/com.github.panpf.sketch.request/-image-data/image-info.html","searchKeys":["imageInfo","val imageInfo: ImageInfo","com.github.panpf.sketch.request.ImageData.imageInfo"]},{"name":"val imageInfo: ImageInfo","description":"com.github.panpf.sketch.request.ImageResult.Success.imageInfo","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-success/image-info.html","searchKeys":["imageInfo","val imageInfo: ImageInfo","com.github.panpf.sketch.request.ImageResult.Success.imageInfo"]},{"name":"val index: Int","description":"com.github.panpf.sketch.util.UriCodec.UriSyntaxException.index","location":"sketch-core/com.github.panpf.sketch.util/-uri-codec/-uri-syntax-exception/--index--.html","searchKeys":["index","val index: Int","com.github.panpf.sketch.util.UriCodec.UriSyntaxException.index"]},{"name":"val initialRequest: ImageRequest","description":"com.github.panpf.sketch.request.RequestContext.initialRequest","location":"sketch-core/com.github.panpf.sketch.request/-request-context/initial-request.html","searchKeys":["initialRequest","val initialRequest: ImageRequest","com.github.panpf.sketch.request.RequestContext.initialRequest"]},{"name":"val input: String","description":"com.github.panpf.sketch.util.UriCodec.UriSyntaxException.input","location":"sketch-core/com.github.panpf.sketch.util/-uri-codec/-uri-syntax-exception/input.html","searchKeys":["input","val input: String","com.github.panpf.sketch.util.UriCodec.UriSyntaxException.input"]},{"name":"val isEmpty: Boolean","description":"com.github.panpf.sketch.util.Rect.isEmpty","location":"sketch-core/com.github.panpf.sketch.util/-rect/is-empty.html","searchKeys":["isEmpty","val isEmpty: Boolean","com.github.panpf.sketch.util.Rect.isEmpty"]},{"name":"val isEmpty: Boolean","description":"com.github.panpf.sketch.util.Size.isEmpty","location":"sketch-core/com.github.panpf.sketch.util/-size/is-empty.html","searchKeys":["isEmpty","val isEmpty: Boolean","com.github.panpf.sketch.util.Size.isEmpty"]},{"name":"val isFlipHorizontally: Boolean","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.isFlipHorizontally","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/is-flip-horizontally.html","searchKeys":["isFlipHorizontally","val isFlipHorizontally: Boolean","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.isFlipHorizontally"]},{"name":"val isRunning: Boolean","description":"com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.isRunning","location":"sketch-core/com.github.panpf.sketch.drawable.internal/-animatable-callback-helper/is-running.html","searchKeys":["isRunning","val isRunning: Boolean","com.github.panpf.sketch.drawable.internal.AnimatableCallbackHelper.isRunning"]},{"name":"val isShutdown: Boolean","description":"com.github.panpf.sketch.Sketch.isShutdown","location":"sketch-core/com.github.panpf.sketch/-sketch/is-shutdown.html","searchKeys":["isShutdown","val isShutdown: Boolean","com.github.panpf.sketch.Sketch.isShutdown"]},{"name":"val isValid: Boolean","description":"com.github.panpf.sketch.util.Rect.isValid","location":"sketch-core/com.github.panpf.sketch.util/-rect/is-valid.html","searchKeys":["isValid","val isValid: Boolean","com.github.panpf.sketch.util.Rect.isValid"]},{"name":"val lifecycleResolver: LifecycleResolver","description":"com.github.panpf.sketch.request.ImageRequest.lifecycleResolver","location":"sketch-core/com.github.panpf.sketch.request/-image-request/lifecycle-resolver.html","searchKeys":["lifecycleResolver","val lifecycleResolver: LifecycleResolver","com.github.panpf.sketch.request.ImageRequest.lifecycleResolver"]},{"name":"val lifecycleResolver: LifecycleResolver?","description":"com.github.panpf.sketch.request.internal.RequestOptions.lifecycleResolver","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-options/lifecycle-resolver.html","searchKeys":["lifecycleResolver","val lifecycleResolver: LifecycleResolver?","com.github.panpf.sketch.request.internal.RequestOptions.lifecycleResolver"]},{"name":"val list: List<Listener>","description":"com.github.panpf.sketch.request.internal.Listeners.list","location":"sketch-core/com.github.panpf.sketch.request.internal/-listeners/list.html","searchKeys":["list","val list: List<Listener>","com.github.panpf.sketch.request.internal.Listeners.list"]},{"name":"val list: List<ProgressListener>","description":"com.github.panpf.sketch.request.internal.ProgressListeners.list","location":"sketch-core/com.github.panpf.sketch.request.internal/-progress-listeners/list.html","searchKeys":["list","val list: List<ProgressListener>","com.github.panpf.sketch.request.internal.ProgressListeners.list"]},{"name":"val listener: Listener?","description":"com.github.panpf.sketch.request.ImageRequest.listener","location":"sketch-core/com.github.panpf.sketch.request/-image-request/listener.html","searchKeys":["listener","val listener: Listener?","com.github.panpf.sketch.request.ImageRequest.listener"]},{"name":"val listener: Listener?","description":"com.github.panpf.sketch.request.internal.RequestOptions.listener","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-options/listener.html","searchKeys":["listener","val listener: Listener?","com.github.panpf.sketch.request.internal.RequestOptions.listener"]},{"name":"val loadState: StateFlow<LoadState?>","description":"com.github.panpf.sketch.request.RequestState.loadState","location":"sketch-core/com.github.panpf.sketch.request/-request-state/load-state.html","searchKeys":["loadState","val loadState: StateFlow<LoadState?>","com.github.panpf.sketch.request.RequestState.loadState"]},{"name":"val logKey: String","description":"com.github.panpf.sketch.request.RequestContext.logKey","location":"sketch-core/com.github.panpf.sketch.request/-request-context/log-key.html","searchKeys":["logKey","val logKey: String","com.github.panpf.sketch.request.RequestContext.logKey"]},{"name":"val logger: Logger","description":"com.github.panpf.sketch.Sketch.logger","location":"sketch-core/com.github.panpf.sketch/-sketch/logger.html","searchKeys":["logger","val logger: Logger","com.github.panpf.sketch.Sketch.logger"]},{"name":"val longImage: Precision","description":"com.github.panpf.sketch.resize.LongImagePrecisionDecider.longImage","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-precision-decider/long-image.html","searchKeys":["longImage","val longImage: Precision","com.github.panpf.sketch.resize.LongImagePrecisionDecider.longImage"]},{"name":"val longImage: Scale","description":"com.github.panpf.sketch.resize.LongImageScaleDecider.longImage","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-scale-decider/long-image.html","searchKeys":["longImage","val longImage: Scale","com.github.panpf.sketch.resize.LongImageScaleDecider.longImage"]},{"name":"val longImageDecider: LongImageDecider","description":"com.github.panpf.sketch.resize.LongImagePrecisionDecider.longImageDecider","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-precision-decider/long-image-decider.html","searchKeys":["longImageDecider","val longImageDecider: LongImageDecider","com.github.panpf.sketch.resize.LongImagePrecisionDecider.longImageDecider"]},{"name":"val longImageDecider: LongImageDecider","description":"com.github.panpf.sketch.resize.LongImageScaleDecider.longImageDecider","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-scale-decider/long-image-decider.html","searchKeys":["longImageDecider","val longImageDecider: LongImageDecider","com.github.panpf.sketch.resize.LongImageScaleDecider.longImageDecider"]},{"name":"val maskColor: Int","description":"com.github.panpf.sketch.transform.MaskTransformation.maskColor","location":"sketch-core/com.github.panpf.sketch.transform/-mask-transformation/mask-color.html","searchKeys":["maskColor","val maskColor: Int","com.github.panpf.sketch.transform.MaskTransformation.maskColor"]},{"name":"val maskColor: Int? = null","description":"com.github.panpf.sketch.transform.BlurTransformation.maskColor","location":"sketch-core/com.github.panpf.sketch.transform/-blur-transformation/mask-color.html","searchKeys":["maskColor","val maskColor: Int? = null","com.github.panpf.sketch.transform.BlurTransformation.maskColor"]},{"name":"val maxMismatchCount: Int","description":"com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.maxMismatchCount","location":"sketch-core/com.github.panpf.sketch.state/-thumbnail-memory-cache-state-image/max-mismatch-count.html","searchKeys":["maxMismatchCount","val maxMismatchCount: Int","com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.maxMismatchCount"]},{"name":"val maxSize: Int?","description":"com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.maxSize","location":"sketch-core/com.github.panpf.sketch.decode.internal/-open-g-l-texture-helper/max-size.html","searchKeys":["maxSize","val maxSize: Int?","com.github.panpf.sketch.decode.internal.OpenGLTextureHelper.maxSize"]},{"name":"val maxSize: Long? = null","description":"com.github.panpf.sketch.cache.DiskCache.Options.maxSize","location":"sketch-core/com.github.panpf.sketch.cache/-disk-cache/-options/max-size.html","searchKeys":["maxSize","val maxSize: Long? = null","com.github.panpf.sketch.cache.DiskCache.Options.maxSize"]},{"name":"val memoryCache: MemoryCache","description":"com.github.panpf.sketch.Sketch.memoryCache","location":"sketch-core/com.github.panpf.sketch/-sketch/memory-cache.html","searchKeys":["memoryCache","val memoryCache: MemoryCache","com.github.panpf.sketch.Sketch.memoryCache"]},{"name":"val memoryCacheKey: String","description":"com.github.panpf.sketch.request.ImageResult.Success.memoryCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-success/memory-cache-key.html","searchKeys":["memoryCacheKey","val memoryCacheKey: String","com.github.panpf.sketch.request.ImageResult.Success.memoryCacheKey"]},{"name":"val memoryCacheKey: String","description":"com.github.panpf.sketch.request.RequestContext.memoryCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-request-context/memory-cache-key.html","searchKeys":["memoryCacheKey","val memoryCacheKey: String","com.github.panpf.sketch.request.RequestContext.memoryCacheKey"]},{"name":"val memoryCacheKey: String?","description":"com.github.panpf.sketch.request.ImageOptions.memoryCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-options/memory-cache-key.html","searchKeys":["memoryCacheKey","val memoryCacheKey: String?","com.github.panpf.sketch.request.ImageOptions.memoryCacheKey"]},{"name":"val memoryCacheKey: String?","description":"com.github.panpf.sketch.request.ImageRequest.memoryCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-request/memory-cache-key.html","searchKeys":["memoryCacheKey","val memoryCacheKey: String?","com.github.panpf.sketch.request.ImageRequest.memoryCacheKey"]},{"name":"val memoryCacheKeyMapper: CacheKeyMapper?","description":"com.github.panpf.sketch.request.ImageOptions.memoryCacheKeyMapper","location":"sketch-core/com.github.panpf.sketch.request/-image-options/memory-cache-key-mapper.html","searchKeys":["memoryCacheKeyMapper","val memoryCacheKeyMapper: CacheKeyMapper?","com.github.panpf.sketch.request.ImageOptions.memoryCacheKeyMapper"]},{"name":"val memoryCacheKeyMapper: CacheKeyMapper?","description":"com.github.panpf.sketch.request.ImageRequest.memoryCacheKeyMapper","location":"sketch-core/com.github.panpf.sketch.request/-image-request/memory-cache-key-mapper.html","searchKeys":["memoryCacheKeyMapper","val memoryCacheKeyMapper: CacheKeyMapper?","com.github.panpf.sketch.request.ImageRequest.memoryCacheKeyMapper"]},{"name":"val memoryCachePolicy: CachePolicy","description":"com.github.panpf.sketch.request.ImageRequest.memoryCachePolicy","location":"sketch-core/com.github.panpf.sketch.request/-image-request/memory-cache-policy.html","searchKeys":["memoryCachePolicy","val memoryCachePolicy: CachePolicy","com.github.panpf.sketch.request.ImageRequest.memoryCachePolicy"]},{"name":"val memoryCachePolicy: CachePolicy?","description":"com.github.panpf.sketch.request.ImageOptions.memoryCachePolicy","location":"sketch-core/com.github.panpf.sketch.request/-image-options/memory-cache-policy.html","searchKeys":["memoryCachePolicy","val memoryCachePolicy: CachePolicy?","com.github.panpf.sketch.request.ImageOptions.memoryCachePolicy"]},{"name":"val mimeType: String","description":"com.github.panpf.sketch.decode.ImageInfo.mimeType","location":"sketch-core/com.github.panpf.sketch.decode/-image-info/mime-type.html","searchKeys":["mimeType","val mimeType: String","com.github.panpf.sketch.decode.ImageInfo.mimeType"]},{"name":"val mimeType: String","description":"com.github.panpf.sketch.decode.internal.ImageFormat.mimeType","location":"sketch-core/com.github.panpf.sketch.decode.internal/-image-format/mime-type.html","searchKeys":["mimeType","val mimeType: String","com.github.panpf.sketch.decode.internal.ImageFormat.mimeType"]},{"name":"val mimeType: String","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.mimeType","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/mime-type.html","searchKeys":["mimeType","val mimeType: String","com.github.panpf.sketch.fetch.Base64UriFetcher.mimeType"]},{"name":"val mimeType: String?","description":"com.github.panpf.sketch.fetch.FetchResult.mimeType","location":"sketch-core/com.github.panpf.sketch.fetch/-fetch-result/mime-type.html","searchKeys":["mimeType","val mimeType: String?","com.github.panpf.sketch.fetch.FetchResult.mimeType"]},{"name":"val networkParallelismLimited: Int","description":"com.github.panpf.sketch.Sketch.networkParallelismLimited","location":"sketch-core/com.github.panpf.sketch/-sketch/network-parallelism-limited.html","searchKeys":["networkParallelismLimited","val networkParallelismLimited: Int","com.github.panpf.sketch.Sketch.networkParallelismLimited"]},{"name":"val networkTaskDispatcher: CoroutineDispatcher","description":"com.github.panpf.sketch.Sketch.networkTaskDispatcher","location":"sketch-core/com.github.panpf.sketch/-sketch/network-task-dispatcher.html","searchKeys":["networkTaskDispatcher","val networkTaskDispatcher: CoroutineDispatcher","com.github.panpf.sketch.Sketch.networkTaskDispatcher"]},{"name":"val newSize: Size","description":"com.github.panpf.sketch.resize.ResizeMapping.newSize","location":"sketch-core/com.github.panpf.sketch.resize/-resize-mapping/new-size.html","searchKeys":["newSize","val newSize: Size","com.github.panpf.sketch.resize.ResizeMapping.newSize"]},{"name":"val notSameDirectionMultiple: Float = 5.0f","description":"com.github.panpf.sketch.resize.DefaultLongImageDecider.notSameDirectionMultiple","location":"sketch-core/com.github.panpf.sketch.resize/-default-long-image-decider/not-same-direction-multiple.html","searchKeys":["notSameDirectionMultiple","val notSameDirectionMultiple: Float = 5.0f","com.github.panpf.sketch.resize.DefaultLongImageDecider.notSameDirectionMultiple"]},{"name":"val otherImage: Precision","description":"com.github.panpf.sketch.resize.LongImagePrecisionDecider.otherImage","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-precision-decider/other-image.html","searchKeys":["otherImage","val otherImage: Precision","com.github.panpf.sketch.resize.LongImagePrecisionDecider.otherImage"]},{"name":"val otherImage: Scale","description":"com.github.panpf.sketch.resize.LongImageScaleDecider.otherImage","location":"sketch-core/com.github.panpf.sketch.resize/-long-image-scale-decider/other-image.html","searchKeys":["otherImage","val otherImage: Scale","com.github.panpf.sketch.resize.LongImageScaleDecider.otherImage"]},{"name":"val owner: LifecycleOwner","description":"com.github.panpf.sketch.request.GlobalLifecycle.owner","location":"sketch-core/com.github.panpf.sketch.request/-global-lifecycle/owner.html","searchKeys":["owner","val owner: LifecycleOwner","com.github.panpf.sketch.request.GlobalLifecycle.owner"]},{"name":"val packageName: String","description":"com.github.panpf.sketch.source.ResourceDataSource.packageName","location":"sketch-core/com.github.panpf.sketch.source/-resource-data-source/package-name.html","searchKeys":["packageName","val packageName: String","com.github.panpf.sketch.source.ResourceDataSource.packageName"]},{"name":"val packageName: String? = null","description":"com.github.panpf.sketch.drawable.ResDrawableFetcher.packageName","location":"sketch-core/com.github.panpf.sketch.drawable/-res-drawable-fetcher/package-name.html","searchKeys":["packageName","val packageName: String? = null","com.github.panpf.sketch.drawable.ResDrawableFetcher.packageName"]},{"name":"val path: Path","description":"com.github.panpf.sketch.fetch.FileUriFetcher.path","location":"sketch-core/com.github.panpf.sketch.fetch/-file-uri-fetcher/path.html","searchKeys":["path","val path: Path","com.github.panpf.sketch.fetch.FileUriFetcher.path"]},{"name":"val path: Path","description":"com.github.panpf.sketch.source.FileDataSource.path","location":"sketch-core/com.github.panpf.sketch.source/-file-data-source/path.html","searchKeys":["path","val path: Path","com.github.panpf.sketch.source.FileDataSource.path"]},{"name":"val path: Path","description":"com.github.panpf.sketch.util.DownloadData.Cache.path","location":"sketch-core/com.github.panpf.sketch.util/-download-data/-cache/path.html","searchKeys":["path","val path: Path","com.github.panpf.sketch.util.DownloadData.Cache.path"]},{"name":"val path: String?","description":"com.github.panpf.sketch.util.Uri.Elements.path","location":"sketch-core/com.github.panpf.sketch.util/-uri/-elements/path.html","searchKeys":["path","val path: String?","com.github.panpf.sketch.util.Uri.Elements.path"]},{"name":"val path: String?","description":"com.github.panpf.sketch.util.Uri.path","location":"sketch-core/com.github.panpf.sketch.util/-uri/path.html","searchKeys":["path","val path: String?","com.github.panpf.sketch.util.Uri.path"]},{"name":"val pathSegments: List<String>","description":"com.github.panpf.sketch.util.Uri.pathSegments","location":"sketch-core/com.github.panpf.sketch.util/-uri/path-segments.html","searchKeys":["pathSegments","val pathSegments: List<String>","com.github.panpf.sketch.util.Uri.pathSegments"]},{"name":"val placeholder: StateImage?","description":"com.github.panpf.sketch.request.ImageOptions.placeholder","location":"sketch-core/com.github.panpf.sketch.request/-image-options/placeholder.html","searchKeys":["placeholder","val placeholder: StateImage?","com.github.panpf.sketch.request.ImageOptions.placeholder"]},{"name":"val placeholder: StateImage?","description":"com.github.panpf.sketch.request.ImageRequest.placeholder","location":"sketch-core/com.github.panpf.sketch.request/-image-request/placeholder.html","searchKeys":["placeholder","val placeholder: StateImage?","com.github.panpf.sketch.request.ImageRequest.placeholder"]},{"name":"val precision: Precision","description":"com.github.panpf.sketch.resize.Resize.precision","location":"sketch-core/com.github.panpf.sketch.resize/-resize/precision.html","searchKeys":["precision","val precision: Precision","com.github.panpf.sketch.resize.Resize.precision"]},{"name":"val precisionDecider: PrecisionDecider","description":"com.github.panpf.sketch.request.ImageRequest.precisionDecider","location":"sketch-core/com.github.panpf.sketch.request/-image-request/precision-decider.html","searchKeys":["precisionDecider","val precisionDecider: PrecisionDecider","com.github.panpf.sketch.request.ImageRequest.precisionDecider"]},{"name":"val precisionDecider: PrecisionDecider?","description":"com.github.panpf.sketch.request.ImageOptions.precisionDecider","location":"sketch-core/com.github.panpf.sketch.request/-image-options/precision-decider.html","searchKeys":["precisionDecider","val precisionDecider: PrecisionDecider?","com.github.panpf.sketch.request.ImageOptions.precisionDecider"]},{"name":"val preferExactIntrinsicSize: Boolean","description":"com.github.panpf.sketch.transition.CrossfadeTransition.Factory.preferExactIntrinsicSize","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/-factory/prefer-exact-intrinsic-size.html","searchKeys":["preferExactIntrinsicSize","val preferExactIntrinsicSize: Boolean","com.github.panpf.sketch.transition.CrossfadeTransition.Factory.preferExactIntrinsicSize"]},{"name":"val progressListener: ProgressListener?","description":"com.github.panpf.sketch.request.ImageRequest.progressListener","location":"sketch-core/com.github.panpf.sketch.request/-image-request/progress-listener.html","searchKeys":["progressListener","val progressListener: ProgressListener?","com.github.panpf.sketch.request.ImageRequest.progressListener"]},{"name":"val progressListener: ProgressListener?","description":"com.github.panpf.sketch.request.internal.RequestOptions.progressListener","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-options/progress-listener.html","searchKeys":["progressListener","val progressListener: ProgressListener?","com.github.panpf.sketch.request.internal.RequestOptions.progressListener"]},{"name":"val progressState: StateFlow<Progress?>","description":"com.github.panpf.sketch.request.RequestState.progressState","location":"sketch-core/com.github.panpf.sketch.request/-request-state/progress-state.html","searchKeys":["progressState","val progressState: StateFlow<Progress?>","com.github.panpf.sketch.request.RequestState.progressState"]},{"name":"val query: String?","description":"com.github.panpf.sketch.util.Uri.Elements.query","location":"sketch-core/com.github.panpf.sketch.util/-uri/-elements/query.html","searchKeys":["query","val query: String?","com.github.panpf.sketch.util.Uri.Elements.query"]},{"name":"val query: String?","description":"com.github.panpf.sketch.util.Uri.query","location":"sketch-core/com.github.panpf.sketch.util/-uri/query.html","searchKeys":["query","val query: String?","com.github.panpf.sketch.util.Uri.query"]},{"name":"val queryParameters: Map<String, String>","description":"com.github.panpf.sketch.util.Uri.queryParameters","location":"sketch-core/com.github.panpf.sketch.util/-uri/query-parameters.html","searchKeys":["queryParameters","val queryParameters: Map<String, String>","com.github.panpf.sketch.util.Uri.queryParameters"]},{"name":"val radius: Int = 15","description":"com.github.panpf.sketch.transform.BlurTransformation.radius","location":"sketch-core/com.github.panpf.sketch.transform/-blur-transformation/radius.html","searchKeys":["radius","val radius: Int = 15","com.github.panpf.sketch.transform.BlurTransformation.radius"]},{"name":"val radiusArray: FloatArray","description":"com.github.panpf.sketch.transform.RoundedCornersTransformation.radiusArray","location":"sketch-core/com.github.panpf.sketch.transform/-rounded-corners-transformation/radius-array.html","searchKeys":["radiusArray","val radiusArray: FloatArray","com.github.panpf.sketch.transform.RoundedCornersTransformation.radiusArray"]},{"name":"val readEnabled: Boolean","description":"com.github.panpf.sketch.cache.CachePolicy.readEnabled","location":"sketch-core/com.github.panpf.sketch.cache/-cache-policy/read-enabled.html","searchKeys":["readEnabled","val readEnabled: Boolean","com.github.panpf.sketch.cache.CachePolicy.readEnabled"]},{"name":"val reason: String","description":"com.github.panpf.sketch.util.UriCodec.UriSyntaxException.reason","location":"sketch-core/com.github.panpf.sketch.util/-uri-codec/-uri-syntax-exception/reason.html","searchKeys":["reason","val reason: String","com.github.panpf.sketch.util.UriCodec.UriSyntaxException.reason"]},{"name":"val registry: ComponentRegistry","description":"com.github.panpf.sketch.Components.registry","location":"sketch-core/com.github.panpf.sketch/-components/registry.html","searchKeys":["registry","val registry: ComponentRegistry","com.github.panpf.sketch.Components.registry"]},{"name":"val request: <Error class: unknown class>","description":"com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.request","location":"sketch-core/com.github.panpf.sketch.decode.internal/-bitmap-factory-decode-helper/request.html","searchKeys":["request","val request: <Error class: unknown class>","com.github.panpf.sketch.decode.internal.BitmapFactoryDecodeHelper.request"]},{"name":"val request: ImageRequest","description":"com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.request","location":"sketch-core/com.github.panpf.sketch.decode.internal/-skia-decode-helper/request.html","searchKeys":["request","val request: ImageRequest","com.github.panpf.sketch.decode.internal.SkiaDecodeHelper.request"]},{"name":"val request: ImageRequest","description":"com.github.panpf.sketch.request.RequestContext.request","location":"sketch-core/com.github.panpf.sketch.request/-request-context/request.html","searchKeys":["request","val request: ImageRequest","com.github.panpf.sketch.request.RequestContext.request"]},{"name":"val requestInterceptorList: List<RequestInterceptor>","description":"com.github.panpf.sketch.ComponentRegistry.requestInterceptorList","location":"sketch-core/com.github.panpf.sketch/-component-registry/request-interceptor-list.html","searchKeys":["requestInterceptorList","val requestInterceptorList: List<RequestInterceptor>","com.github.panpf.sketch.ComponentRegistry.requestInterceptorList"]},{"name":"val requestKey: String?","description":"com.github.panpf.sketch.request.Extras.Entry.requestKey","location":"sketch-core/com.github.panpf.sketch.request/-extras/-entry/request-key.html","searchKeys":["requestKey","val requestKey: String?","com.github.panpf.sketch.request.Extras.Entry.requestKey"]},{"name":"val requestKey: String?","description":"com.github.panpf.sketch.request.Extras.requestKey","location":"sketch-core/com.github.panpf.sketch.request/-extras/request-key.html","searchKeys":["requestKey","val requestKey: String?","com.github.panpf.sketch.request.Extras.requestKey"]},{"name":"val requestList: List<ImageRequest>","description":"com.github.panpf.sketch.request.RequestContext.requestList","location":"sketch-core/com.github.panpf.sketch.request/-request-context/request-list.html","searchKeys":["requestList","val requestList: List<ImageRequest>","com.github.panpf.sketch.request.RequestContext.requestList"]},{"name":"val requestManager: RequestManager","description":"com.github.panpf.sketch.request.ReusableDisposable.requestManager","location":"sketch-core/com.github.panpf.sketch.request/-reusable-disposable/request-manager.html","searchKeys":["requestManager","val requestManager: RequestManager","com.github.panpf.sketch.request.ReusableDisposable.requestManager"]},{"name":"val resId: Int","description":"com.github.panpf.sketch.drawable.ResColorDrawableFetcher.resId","location":"sketch-core/com.github.panpf.sketch.drawable/-res-color-drawable-fetcher/res-id.html","searchKeys":["resId","val resId: Int","com.github.panpf.sketch.drawable.ResColorDrawableFetcher.resId"]},{"name":"val resId: Int","description":"com.github.panpf.sketch.drawable.ResDrawableFetcher.resId","location":"sketch-core/com.github.panpf.sketch.drawable/-res-drawable-fetcher/res-id.html","searchKeys":["resId","val resId: Int","com.github.panpf.sketch.drawable.ResDrawableFetcher.resId"]},{"name":"val resId: Int","description":"com.github.panpf.sketch.source.ResourceDataSource.resId","location":"sketch-core/com.github.panpf.sketch.source/-resource-data-source/res-id.html","searchKeys":["resId","val resId: Int","com.github.panpf.sketch.source.ResourceDataSource.resId"]},{"name":"val resId: Int","description":"com.github.panpf.sketch.util.ResColorFetcher.resId","location":"sketch-core/com.github.panpf.sketch.util/-res-color-fetcher/res-id.html","searchKeys":["resId","val resId: Int","com.github.panpf.sketch.util.ResColorFetcher.resId"]},{"name":"val resize: Resize","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.resize","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/-metadata/resize.html","searchKeys":["resize","val resize: Resize","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.resize"]},{"name":"val resize: Resize","description":"com.github.panpf.sketch.decode.DecodeResult.resize","location":"sketch-core/com.github.panpf.sketch.decode/-decode-result/resize.html","searchKeys":["resize","val resize: Resize","com.github.panpf.sketch.decode.DecodeResult.resize"]},{"name":"val resize: Resize","description":"com.github.panpf.sketch.request.ImageData.resize","location":"sketch-core/com.github.panpf.sketch.request/-image-data/resize.html","searchKeys":["resize","val resize: Resize","com.github.panpf.sketch.request.ImageData.resize"]},{"name":"val resize: Resize","description":"com.github.panpf.sketch.request.ImageResult.Success.resize","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-success/resize.html","searchKeys":["resize","val resize: Resize","com.github.panpf.sketch.request.ImageResult.Success.resize"]},{"name":"val resizeOnDraw: Boolean?","description":"com.github.panpf.sketch.request.ImageOptions.resizeOnDraw","location":"sketch-core/com.github.panpf.sketch.request/-image-options/resize-on-draw.html","searchKeys":["resizeOnDraw","val resizeOnDraw: Boolean?","com.github.panpf.sketch.request.ImageOptions.resizeOnDraw"]},{"name":"val resizeOnDraw: Boolean?","description":"com.github.panpf.sketch.request.ImageRequest.resizeOnDraw","location":"sketch-core/com.github.panpf.sketch.request/-image-request/resize-on-draw.html","searchKeys":["resizeOnDraw","val resizeOnDraw: Boolean?","com.github.panpf.sketch.request.ImageRequest.resizeOnDraw"]},{"name":"val resourcePath: String","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.resourcePath","location":"sketch-core/com.github.panpf.sketch.fetch/[desktop]-kotlin-resource-uri-fetcher/resource-path.html","searchKeys":["resourcePath","val resourcePath: String","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.resourcePath"]},{"name":"val resourcePath: String","description":"com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.resourcePath","location":"sketch-core/com.github.panpf.sketch.fetch/[ios]-kotlin-resource-uri-fetcher/resource-path.html","searchKeys":["resourcePath","val resourcePath: String","com.github.panpf.sketch.fetch.KotlinResourceUriFetcher.resourcePath"]},{"name":"val resourcePath: String","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.resourcePath","location":"sketch-core/com.github.panpf.sketch.source/[desktop]-kotlin-resource-data-source/resource-path.html","searchKeys":["resourcePath","val resourcePath: String","com.github.panpf.sketch.source.KotlinResourceDataSource.resourcePath"]},{"name":"val resourcePath: String","description":"com.github.panpf.sketch.source.KotlinResourceDataSource.resourcePath","location":"sketch-core/com.github.panpf.sketch.source/[ios]-kotlin-resource-data-source/resource-path.html","searchKeys":["resourcePath","val resourcePath: String","com.github.panpf.sketch.source.KotlinResourceDataSource.resourcePath"]},{"name":"val resourceUri: <Error class: unknown class>","description":"com.github.panpf.sketch.fetch.ResourceUriFetcher.resourceUri","location":"sketch-core/com.github.panpf.sketch.fetch/-resource-uri-fetcher/resource-uri.html","searchKeys":["resourceUri","val resourceUri: <Error class: unknown class>","com.github.panpf.sketch.fetch.ResourceUriFetcher.resourceUri"]},{"name":"val resources: Resources","description":"com.github.panpf.sketch.source.ResourceDataSource.resources","location":"sketch-core/com.github.panpf.sketch.source/-resource-data-source/resources.html","searchKeys":["resources","val resources: Resources","com.github.panpf.sketch.source.ResourceDataSource.resources"]},{"name":"val resources: Resources? = null","description":"com.github.panpf.sketch.drawable.ResDrawableFetcher.resources","location":"sketch-core/com.github.panpf.sketch.drawable/-res-drawable-fetcher/resources.html","searchKeys":["resources","val resources: Resources? = null","com.github.panpf.sketch.drawable.ResDrawableFetcher.resources"]},{"name":"val result: ImageResult.Error","description":"com.github.panpf.sketch.request.LoadState.Error.result","location":"sketch-core/com.github.panpf.sketch.request/-load-state/-error/result.html","searchKeys":["result","val result: ImageResult.Error","com.github.panpf.sketch.request.LoadState.Error.result"]},{"name":"val result: ImageResult.Success","description":"com.github.panpf.sketch.request.LoadState.Success.result","location":"sketch-core/com.github.panpf.sketch.request/-load-state/-success/result.html","searchKeys":["result","val result: ImageResult.Success","com.github.panpf.sketch.request.LoadState.Success.result"]},{"name":"val resultCache: DiskCache","description":"com.github.panpf.sketch.Sketch.resultCache","location":"sketch-core/com.github.panpf.sketch/-sketch/result-cache.html","searchKeys":["resultCache","val resultCache: DiskCache","com.github.panpf.sketch.Sketch.resultCache"]},{"name":"val resultCacheKey: String","description":"com.github.panpf.sketch.request.ImageResult.Success.resultCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-success/result-cache-key.html","searchKeys":["resultCacheKey","val resultCacheKey: String","com.github.panpf.sketch.request.ImageResult.Success.resultCacheKey"]},{"name":"val resultCacheKey: String","description":"com.github.panpf.sketch.request.RequestContext.resultCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-request-context/result-cache-key.html","searchKeys":["resultCacheKey","val resultCacheKey: String","com.github.panpf.sketch.request.RequestContext.resultCacheKey"]},{"name":"val resultCacheKey: String?","description":"com.github.panpf.sketch.request.ImageOptions.resultCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-options/result-cache-key.html","searchKeys":["resultCacheKey","val resultCacheKey: String?","com.github.panpf.sketch.request.ImageOptions.resultCacheKey"]},{"name":"val resultCacheKey: String?","description":"com.github.panpf.sketch.request.ImageRequest.resultCacheKey","location":"sketch-core/com.github.panpf.sketch.request/-image-request/result-cache-key.html","searchKeys":["resultCacheKey","val resultCacheKey: String?","com.github.panpf.sketch.request.ImageRequest.resultCacheKey"]},{"name":"val resultCacheKeyMapper: CacheKeyMapper?","description":"com.github.panpf.sketch.request.ImageOptions.resultCacheKeyMapper","location":"sketch-core/com.github.panpf.sketch.request/-image-options/result-cache-key-mapper.html","searchKeys":["resultCacheKeyMapper","val resultCacheKeyMapper: CacheKeyMapper?","com.github.panpf.sketch.request.ImageOptions.resultCacheKeyMapper"]},{"name":"val resultCacheKeyMapper: CacheKeyMapper?","description":"com.github.panpf.sketch.request.ImageRequest.resultCacheKeyMapper","location":"sketch-core/com.github.panpf.sketch.request/-image-request/result-cache-key-mapper.html","searchKeys":["resultCacheKeyMapper","val resultCacheKeyMapper: CacheKeyMapper?","com.github.panpf.sketch.request.ImageRequest.resultCacheKeyMapper"]},{"name":"val resultCachePolicy: CachePolicy","description":"com.github.panpf.sketch.request.ImageRequest.resultCachePolicy","location":"sketch-core/com.github.panpf.sketch.request/-image-request/result-cache-policy.html","searchKeys":["resultCachePolicy","val resultCachePolicy: CachePolicy","com.github.panpf.sketch.request.ImageRequest.resultCachePolicy"]},{"name":"val resultCachePolicy: CachePolicy?","description":"com.github.panpf.sketch.request.ImageOptions.resultCachePolicy","location":"sketch-core/com.github.panpf.sketch.request/-image-options/result-cache-policy.html","searchKeys":["resultCachePolicy","val resultCachePolicy: CachePolicy?","com.github.panpf.sketch.request.ImageOptions.resultCachePolicy"]},{"name":"val resultState: StateFlow<ImageResult?>","description":"com.github.panpf.sketch.request.RequestState.resultState","location":"sketch-core/com.github.panpf.sketch.request/-request-state/result-state.html","searchKeys":["resultState","val resultState: StateFlow<ImageResult?>","com.github.panpf.sketch.request.RequestState.resultState"]},{"name":"val rotationDegrees: Int","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.rotationDegrees","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/rotation-degrees.html","searchKeys":["rotationDegrees","val rotationDegrees: Int","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.rotationDegrees"]},{"name":"val sameDirectionMultiple: Float = 2.5f","description":"com.github.panpf.sketch.resize.DefaultLongImageDecider.sameDirectionMultiple","location":"sketch-core/com.github.panpf.sketch.resize/-default-long-image-decider/same-direction-multiple.html","searchKeys":["sameDirectionMultiple","val sameDirectionMultiple: Float = 2.5f","com.github.panpf.sketch.resize.DefaultLongImageDecider.sameDirectionMultiple"]},{"name":"val scale: Scale","description":"com.github.panpf.sketch.resize.Resize.scale","location":"sketch-core/com.github.panpf.sketch.resize/-resize/scale.html","searchKeys":["scale","val scale: Scale","com.github.panpf.sketch.resize.Resize.scale"]},{"name":"val scale: Scale? = null","description":"com.github.panpf.sketch.transform.CircleCropTransformation.scale","location":"sketch-core/com.github.panpf.sketch.transform/-circle-crop-transformation/scale.html","searchKeys":["scale","val scale: Scale? = null","com.github.panpf.sketch.transform.CircleCropTransformation.scale"]},{"name":"val scaleDecider: ScaleDecider","description":"com.github.panpf.sketch.request.ImageRequest.scaleDecider","location":"sketch-core/com.github.panpf.sketch.request/-image-request/scale-decider.html","searchKeys":["scaleDecider","val scaleDecider: ScaleDecider","com.github.panpf.sketch.request.ImageRequest.scaleDecider"]},{"name":"val scaleDecider: ScaleDecider?","description":"com.github.panpf.sketch.request.ImageOptions.scaleDecider","location":"sketch-core/com.github.panpf.sketch.request/-image-options/scale-decider.html","searchKeys":["scaleDecider","val scaleDecider: ScaleDecider?","com.github.panpf.sketch.request.ImageOptions.scaleDecider"]},{"name":"val scheme: String?","description":"com.github.panpf.sketch.util.Uri.Elements.scheme","location":"sketch-core/com.github.panpf.sketch.util/-uri/-elements/scheme.html","searchKeys":["scheme","val scheme: String?","com.github.panpf.sketch.util.Uri.Elements.scheme"]},{"name":"val scheme: String?","description":"com.github.panpf.sketch.util.Uri.scheme","location":"sketch-core/com.github.panpf.sketch.util/-uri/scheme.html","searchKeys":["scheme","val scheme: String?","com.github.panpf.sketch.util.Uri.scheme"]},{"name":"val second: Listener","description":"com.github.panpf.sketch.request.internal.PairListener.second","location":"sketch-core/com.github.panpf.sketch.request.internal/-pair-listener/second.html","searchKeys":["second","val second: Listener","com.github.panpf.sketch.request.internal.PairListener.second"]},{"name":"val second: ProgressListener","description":"com.github.panpf.sketch.request.internal.PairProgressListener.second","location":"sketch-core/com.github.panpf.sketch.request.internal/-pair-progress-listener/second.html","searchKeys":["second","val second: ProgressListener","com.github.panpf.sketch.request.internal.PairProgressListener.second"]},{"name":"val separator: String","description":"com.github.panpf.sketch.util.Uri.separator","location":"sketch-core/com.github.panpf.sketch.util/-uri/separator.html","searchKeys":["separator","val separator: String","com.github.panpf.sketch.util.Uri.separator"]},{"name":"val size: Int","description":"com.github.panpf.sketch.request.Extras.size","location":"sketch-core/com.github.panpf.sketch.request/-extras/size.html","searchKeys":["size","val size: Int","com.github.panpf.sketch.request.Extras.size"]},{"name":"val size: Size","description":"com.github.panpf.sketch.decode.ImageInfo.size","location":"sketch-core/com.github.panpf.sketch.decode/-image-info/size.html","searchKeys":["size","val size: Size","com.github.panpf.sketch.decode.ImageInfo.size"]},{"name":"val size: Size","description":"com.github.panpf.sketch.resize.Resize.size","location":"sketch-core/com.github.panpf.sketch.resize/-resize/size.html","searchKeys":["size","val size: Size","com.github.panpf.sketch.resize.Resize.size"]},{"name":"val sizeMultiplier: Float?","description":"com.github.panpf.sketch.request.ImageOptions.sizeMultiplier","location":"sketch-core/com.github.panpf.sketch.request/-image-options/size-multiplier.html","searchKeys":["sizeMultiplier","val sizeMultiplier: Float?","com.github.panpf.sketch.request.ImageOptions.sizeMultiplier"]},{"name":"val sizeMultiplier: Float?","description":"com.github.panpf.sketch.request.ImageRequest.sizeMultiplier","location":"sketch-core/com.github.panpf.sketch.request/-image-request/size-multiplier.html","searchKeys":["sizeMultiplier","val sizeMultiplier: Float?","com.github.panpf.sketch.request.ImageRequest.sizeMultiplier"]},{"name":"val sizeResolver: SizeResolver","description":"com.github.panpf.sketch.request.ImageRequest.sizeResolver","location":"sketch-core/com.github.panpf.sketch.request/-image-request/size-resolver.html","searchKeys":["sizeResolver","val sizeResolver: SizeResolver","com.github.panpf.sketch.request.ImageRequest.sizeResolver"]},{"name":"val sizeResolver: SizeResolver?","description":"com.github.panpf.sketch.request.ImageOptions.sizeResolver","location":"sketch-core/com.github.panpf.sketch.request/-image-options/size-resolver.html","searchKeys":["sizeResolver","val sizeResolver: SizeResolver?","com.github.panpf.sketch.request.ImageOptions.sizeResolver"]},{"name":"val sketch: Sketch","description":"com.github.panpf.sketch.request.RequestContext.sketch","location":"sketch-core/com.github.panpf.sketch.request/-request-context/sketch.html","searchKeys":["sketch","val sketch: Sketch","com.github.panpf.sketch.request.RequestContext.sketch"]},{"name":"val sketch: Sketch","description":"com.github.panpf.sketch.request.internal.RequestExecutor.sketch","location":"sketch-core/com.github.panpf.sketch.request.internal/-request-executor/sketch.html","searchKeys":["sketch","val sketch: Sketch","com.github.panpf.sketch.request.internal.RequestExecutor.sketch"]},{"name":"val spec: Base64Spec? = null","description":"com.github.panpf.sketch.fetch.Base64UriFetcher.spec","location":"sketch-core/com.github.panpf.sketch.fetch/-base64-uri-fetcher/spec.html","searchKeys":["spec","val spec: Base64Spec? = null","com.github.panpf.sketch.fetch.Base64UriFetcher.spec"]},{"name":"val srcRect: Rect","description":"com.github.panpf.sketch.resize.ResizeMapping.srcRect","location":"sketch-core/com.github.panpf.sketch.resize/-resize-mapping/src-rect.html","searchKeys":["srcRect","val srcRect: Rect","com.github.panpf.sketch.resize.ResizeMapping.srcRect"]},{"name":"val stateList: List<Pair<ConditionStateImage.Condition, StateImage>>","description":"com.github.panpf.sketch.state.ConditionStateImage.stateList","location":"sketch-core/com.github.panpf.sketch.state/-condition-state-image/state-list.html","searchKeys":["stateList","val stateList: List<Pair<ConditionStateImage.Condition, StateImage>>","com.github.panpf.sketch.state.ConditionStateImage.stateList"]},{"name":"val systemCallbacks: SystemCallbacks","description":"com.github.panpf.sketch.Sketch.systemCallbacks","location":"sketch-core/com.github.panpf.sketch/-sketch/system-callbacks.html","searchKeys":["systemCallbacks","val systemCallbacks: SystemCallbacks","com.github.panpf.sketch.Sketch.systemCallbacks"]},{"name":"val target: Target?","description":"com.github.panpf.sketch.request.ImageRequest.target","location":"sketch-core/com.github.panpf.sketch.request/-image-request/target.html","searchKeys":["target","val target: Target?","com.github.panpf.sketch.request.ImageRequest.target"]},{"name":"val throwable: Throwable","description":"com.github.panpf.sketch.request.ImageResult.Error.throwable","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-error/throwable.html","searchKeys":["throwable","val throwable: Throwable","com.github.panpf.sketch.request.ImageResult.Error.throwable"]},{"name":"val totalLength: Long","description":"com.github.panpf.sketch.request.Progress.totalLength","location":"sketch-core/com.github.panpf.sketch.request/-progress/total-length.html","searchKeys":["totalLength","val totalLength: Long","com.github.panpf.sketch.request.Progress.totalLength"]},{"name":"val transformations: List<Transformation>?","description":"com.github.panpf.sketch.request.ImageOptions.transformations","location":"sketch-core/com.github.panpf.sketch.request/-image-options/transformations.html","searchKeys":["transformations","val transformations: List<Transformation>?","com.github.panpf.sketch.request.ImageOptions.transformations"]},{"name":"val transformations: List<Transformation>?","description":"com.github.panpf.sketch.request.ImageRequest.transformations","location":"sketch-core/com.github.panpf.sketch.request/-image-request/transformations.html","searchKeys":["transformations","val transformations: List<Transformation>?","com.github.panpf.sketch.request.ImageRequest.transformations"]},{"name":"val transformed: String","description":"com.github.panpf.sketch.transform.TransformResult.transformed","location":"sketch-core/com.github.panpf.sketch.transform/-transform-result/transformed.html","searchKeys":["transformed","val transformed: String","com.github.panpf.sketch.transform.TransformResult.transformed"]},{"name":"val transformeds: List<String>?","description":"com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.transformeds","location":"sketch-core/com.github.panpf.sketch.cache.internal/-result-cache-decode-interceptor/-metadata/transformeds.html","searchKeys":["transformeds","val transformeds: List<String>?","com.github.panpf.sketch.cache.internal.ResultCacheDecodeInterceptor.Metadata.transformeds"]},{"name":"val transformeds: List<String>?","description":"com.github.panpf.sketch.decode.DecodeResult.transformeds","location":"sketch-core/com.github.panpf.sketch.decode/-decode-result/transformeds.html","searchKeys":["transformeds","val transformeds: List<String>?","com.github.panpf.sketch.decode.DecodeResult.transformeds"]},{"name":"val transformeds: List<String>?","description":"com.github.panpf.sketch.request.ImageData.transformeds","location":"sketch-core/com.github.panpf.sketch.request/-image-data/transformeds.html","searchKeys":["transformeds","val transformeds: List<String>?","com.github.panpf.sketch.request.ImageData.transformeds"]},{"name":"val transformeds: List<String>?","description":"com.github.panpf.sketch.request.ImageResult.Success.transformeds","location":"sketch-core/com.github.panpf.sketch.request/-image-result/-success/transformeds.html","searchKeys":["transformeds","val transformeds: List<String>?","com.github.panpf.sketch.request.ImageResult.Success.transformeds"]},{"name":"val transitionFactory: Transition.Factory?","description":"com.github.panpf.sketch.request.ImageOptions.transitionFactory","location":"sketch-core/com.github.panpf.sketch.request/-image-options/transition-factory.html","searchKeys":["transitionFactory","val transitionFactory: Transition.Factory?","com.github.panpf.sketch.request.ImageOptions.transitionFactory"]},{"name":"val transitionFactory: Transition.Factory?","description":"com.github.panpf.sketch.request.ImageRequest.transitionFactory","location":"sketch-core/com.github.panpf.sketch.request/-image-request/transition-factory.html","searchKeys":["transitionFactory","val transitionFactory: Transition.Factory?","com.github.panpf.sketch.request.ImageRequest.transitionFactory"]},{"name":"val uri: String? = null","description":"com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.uri","location":"sketch-core/com.github.panpf.sketch.state/-thumbnail-memory-cache-state-image/uri.html","searchKeys":["uri","val uri: String? = null","com.github.panpf.sketch.state.ThumbnailMemoryCacheStateImage.uri"]},{"name":"val uri: Uri","description":"com.github.panpf.sketch.request.ImageRequest.uri","location":"sketch-core/com.github.panpf.sketch.request/-image-request/uri.html","searchKeys":["uri","val uri: Uri","com.github.panpf.sketch.request.ImageRequest.uri"]},{"name":"val value: Any?","description":"com.github.panpf.sketch.request.Extras.Entry.value","location":"sketch-core/com.github.panpf.sketch.request/-extras/-entry/value.html","searchKeys":["value","val value: Any?","com.github.panpf.sketch.request.Extras.Entry.value"]},{"name":"val value: String","description":"com.github.panpf.sketch.decode.FixedColorSpace.value","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-space/[android]value.html","searchKeys":["value","val value: String","com.github.panpf.sketch.decode.FixedColorSpace.value"]},{"name":"val value: String","description":"com.github.panpf.sketch.decode.FixedColorSpace.value","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-space/[non-android]value.html","searchKeys":["value","val value: String","com.github.panpf.sketch.decode.FixedColorSpace.value"]},{"name":"val value: String","description":"com.github.panpf.sketch.decode.FixedColorType.value","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-type/[android]value.html","searchKeys":["value","val value: String","com.github.panpf.sketch.decode.FixedColorType.value"]},{"name":"val value: String","description":"com.github.panpf.sketch.decode.FixedColorType.value","location":"sketch-core/com.github.panpf.sketch.decode/-fixed-color-type/[non-android]value.html","searchKeys":["value","val value: String","com.github.panpf.sketch.decode.FixedColorType.value"]},{"name":"val valueLimitedSize: Long","description":"com.github.panpf.sketch.cache.internal.LruMemoryCache.valueLimitedSize","location":"sketch-core/com.github.panpf.sketch.cache.internal/-lru-memory-cache/value-limited-size.html","searchKeys":["valueLimitedSize","val valueLimitedSize: Long","com.github.panpf.sketch.cache.internal.LruMemoryCache.valueLimitedSize"]},{"name":"val values: IntArray","description":"com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.values","location":"sketch-core/com.github.panpf.sketch.decode.internal/-exif-orientation-helper/-companion/values.html","searchKeys":["values","val values: IntArray","com.github.panpf.sketch.decode.internal.ExifOrientationHelper.Companion.values"]},{"name":"val width: Int","description":"com.github.panpf.sketch.decode.ImageInfo.width","location":"sketch-core/com.github.panpf.sketch.decode/-image-info/width.html","searchKeys":["width","val width: Int","com.github.panpf.sketch.decode.ImageInfo.width"]},{"name":"val width: Int","description":"com.github.panpf.sketch.util.Size.width","location":"sketch-core/com.github.panpf.sketch.util/-size/width.html","searchKeys":["width","val width: Int","com.github.panpf.sketch.util.Size.width"]},{"name":"val wrappedTransition: Transition","description":"com.github.panpf.sketch.transition.CrossfadeTransition.wrappedTransition","location":"sketch-core/com.github.panpf.sketch.transition/-crossfade-transition/wrapped-transition.html","searchKeys":["wrappedTransition","val wrappedTransition: Transition","com.github.panpf.sketch.transition.CrossfadeTransition.wrappedTransition"]},{"name":"val writeEnabled: Boolean","description":"com.github.panpf.sketch.cache.CachePolicy.writeEnabled","location":"sketch-core/com.github.panpf.sketch.cache/-cache-policy/write-enabled.html","searchKeys":["writeEnabled","val writeEnabled: Boolean","com.github.panpf.sketch.cache.CachePolicy.writeEnabled"]},{"name":"var bottom: Int","description":"com.github.panpf.sketch.util.Rect.bottom","location":"sketch-core/com.github.panpf.sketch.util/-rect/bottom.html","searchKeys":["bottom","var bottom: Int","com.github.panpf.sketch.util.Rect.bottom"]},{"name":"var colorSpace: ColorSpace?","description":"com.github.panpf.sketch.decode.DecodeConfig.colorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-decode-config/[android]color-space.html","searchKeys":["colorSpace","var colorSpace: ColorSpace?","com.github.panpf.sketch.decode.DecodeConfig.colorSpace"]},{"name":"var colorSpace: ColorSpace?","description":"com.github.panpf.sketch.decode.DecodeConfig.colorSpace","location":"sketch-core/com.github.panpf.sketch.decode/-decode-config/[non-android]color-space.html","searchKeys":["colorSpace","var colorSpace: ColorSpace?","com.github.panpf.sketch.decode.DecodeConfig.colorSpace"]},{"name":"var colorType: ColorType?","description":"com.github.panpf.sketch.decode.DecodeConfig.colorType","location":"sketch-core/com.github.panpf.sketch.decode/-decode-config/[android]color-type.html","searchKeys":["colorType","var colorType: ColorType?","com.github.panpf.sketch.decode.DecodeConfig.colorType"]},{"name":"var colorType: ColorType?","description":"com.github.panpf.sketch.decode.DecodeConfig.colorType","location":"sketch-core/com.github.panpf.sketch.decode/-decode-config/[non-android]color-type.html","searchKeys":["colorType","var colorType: ColorType?","com.github.panpf.sketch.decode.DecodeConfig.colorType"]},{"name":"var left: Int","description":"com.github.panpf.sketch.util.Rect.left","location":"sketch-core/com.github.panpf.sketch.util/-rect/left.html","searchKeys":["left","var left: Int","com.github.panpf.sketch.util.Rect.left"]},{"name":"var level: Logger.Level","description":"com.github.panpf.sketch.util.Logger.level","location":"sketch-core/com.github.panpf.sketch.util/-logger/level.html","searchKeys":["level","var level: Logger.Level","com.github.panpf.sketch.util.Logger.level"]},{"name":"var preferQualityOverSpeed: Boolean?","description":"com.github.panpf.sketch.decode.DecodeConfig.preferQualityOverSpeed","location":"sketch-core/com.github.panpf.sketch.decode/-decode-config/prefer-quality-over-speed.html","searchKeys":["preferQualityOverSpeed","var preferQualityOverSpeed: Boolean?","com.github.panpf.sketch.decode.DecodeConfig.preferQualityOverSpeed"]},{"name":"var right: Int","description":"com.github.panpf.sketch.util.Rect.right","location":"sketch-core/com.github.panpf.sketch.util/-rect/right.html","searchKeys":["right","var right: Int","com.github.panpf.sketch.util.Rect.right"]},{"name":"var sampleSize: Int?","description":"com.github.panpf.sketch.decode.DecodeConfig.sampleSize","location":"sketch-core/com.github.panpf.sketch.decode/-decode-config/[android]sample-size.html","searchKeys":["sampleSize","var sampleSize: Int?","com.github.panpf.sketch.decode.DecodeConfig.sampleSize"]},{"name":"var sampleSize: Int?","description":"com.github.panpf.sketch.decode.DecodeConfig.sampleSize","location":"sketch-core/com.github.panpf.sketch.decode/-decode-config/[non-android]sample-size.html","searchKeys":["sampleSize","var sampleSize: Int?","com.github.panpf.sketch.decode.DecodeConfig.sampleSize"]},{"name":"var size: Size","description":"com.github.panpf.sketch.request.RequestContext.size","location":"sketch-core/com.github.panpf.sketch.request/-request-context/size.html","searchKeys":["size","var size: Size","com.github.panpf.sketch.request.RequestContext.size"]},{"name":"var top: Int","description":"com.github.panpf.sketch.util.Rect.top","location":"sketch-core/com.github.panpf.sketch.util/-rect/top.html","searchKeys":["top","var top: Int","com.github.panpf.sketch.util.Rect.top"]},{"name":"class Factory : Decoder.Factory","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.Factory","location":"sketch-animated-heif/com.github.panpf.sketch.decode/-image-decoder-animated-heif-decoder/-factory/index.html","searchKeys":["Factory","class Factory : Decoder.Factory","com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.Factory"]},{"name":"class ImageDecoderAnimatedHeifDecoder(requestContext: RequestContext, dataSource: DataSource) : ImageDecoderAnimatedDecoder","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder","location":"sketch-animated-heif/com.github.panpf.sketch.decode/-image-decoder-animated-heif-decoder/index.html","searchKeys":["ImageDecoderAnimatedHeifDecoder","class ImageDecoderAnimatedHeifDecoder(requestContext: RequestContext, dataSource: DataSource) : ImageDecoderAnimatedDecoder","com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder"]},{"name":"class ImageDecoderAnimatedHeifDecoderProvider : DecoderProvider","description":"com.github.panpf.sketch.decode.internal.ImageDecoderAnimatedHeifDecoderProvider","location":"sketch-animated-heif/com.github.panpf.sketch.decode.internal/-image-decoder-animated-heif-decoder-provider/index.html","searchKeys":["ImageDecoderAnimatedHeifDecoderProvider","class ImageDecoderAnimatedHeifDecoderProvider : DecoderProvider","com.github.panpf.sketch.decode.internal.ImageDecoderAnimatedHeifDecoderProvider"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.Factory.Factory","location":"sketch-animated-heif/com.github.panpf.sketch.decode/-image-decoder-animated-heif-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.internal.ImageDecoderAnimatedHeifDecoderProvider.ImageDecoderAnimatedHeifDecoderProvider","location":"sketch-animated-heif/com.github.panpf.sketch.decode.internal/-image-decoder-animated-heif-decoder-provider/-image-decoder-animated-heif-decoder-provider.html","searchKeys":["ImageDecoderAnimatedHeifDecoderProvider","constructor()","com.github.panpf.sketch.decode.internal.ImageDecoderAnimatedHeifDecoderProvider.ImageDecoderAnimatedHeifDecoderProvider"]},{"name":"constructor(requestContext: RequestContext, dataSource: DataSource)","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.ImageDecoderAnimatedHeifDecoder","location":"sketch-animated-heif/com.github.panpf.sketch.decode/-image-decoder-animated-heif-decoder/-image-decoder-animated-heif-decoder.html","searchKeys":["ImageDecoderAnimatedHeifDecoder","constructor(requestContext: RequestContext, dataSource: DataSource)","com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.ImageDecoderAnimatedHeifDecoder"]},{"name":"fun ComponentRegistry.Builder.supportAnimatedHeif(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.decode.supportAnimatedHeif","location":"sketch-animated-heif/com.github.panpf.sketch.decode/support-animated-heif.html","searchKeys":["supportAnimatedHeif","fun ComponentRegistry.Builder.supportAnimatedHeif(): ComponentRegistry.Builder","com.github.panpf.sketch.decode.supportAnimatedHeif"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.Factory.equals","location":"sketch-animated-heif/com.github.panpf.sketch.decode/-image-decoder-animated-heif-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.Factory.equals"]},{"name":"open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.Factory.create","location":"sketch-animated-heif/com.github.panpf.sketch.decode/-image-decoder-animated-heif-decoder/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.Factory.create"]},{"name":"open override fun factory(context: <Error class: unknown class>): ImageDecoderAnimatedHeifDecoder.Factory?","description":"com.github.panpf.sketch.decode.internal.ImageDecoderAnimatedHeifDecoderProvider.factory","location":"sketch-animated-heif/com.github.panpf.sketch.decode.internal/-image-decoder-animated-heif-decoder-provider/factory.html","searchKeys":["factory","open override fun factory(context: <Error class: unknown class>): ImageDecoderAnimatedHeifDecoder.Factory?","com.github.panpf.sketch.decode.internal.ImageDecoderAnimatedHeifDecoderProvider.factory"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.Factory.hashCode","location":"sketch-animated-heif/com.github.panpf.sketch.decode/-image-decoder-animated-heif-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.Factory.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.Factory.toString","location":"sketch-animated-heif/com.github.panpf.sketch.decode/-image-decoder-animated-heif-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.Factory.toString"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.Factory.key","location":"sketch-animated-heif/com.github.panpf.sketch.decode/-image-decoder-animated-heif-decoder/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.decode.ImageDecoderAnimatedHeifDecoder.Factory.key"]},{"name":"class Factory(val useViewBoundsAsIntrinsicSize: Boolean = true) : Decoder.Factory","description":"com.github.panpf.sketch.decode.SvgDecoder.Factory","location":"sketch-svg/com.github.panpf.sketch.decode/-svg-decoder/-factory/index.html","searchKeys":["Factory","class Factory(val useViewBoundsAsIntrinsicSize: Boolean = true) : Decoder.Factory","com.github.panpf.sketch.decode.SvgDecoder.Factory"]},{"name":"class SvgDecoder(requestContext: RequestContext, dataSource: DataSource, useViewBoundsAsIntrinsicSize: Boolean = true) : Decoder","description":"com.github.panpf.sketch.decode.SvgDecoder","location":"sketch-svg/com.github.panpf.sketch.decode/-svg-decoder/index.html","searchKeys":["SvgDecoder","class SvgDecoder(requestContext: RequestContext, dataSource: DataSource, useViewBoundsAsIntrinsicSize: Boolean = true) : Decoder","com.github.panpf.sketch.decode.SvgDecoder"]},{"name":"const val MIME_TYPE: String","description":"com.github.panpf.sketch.decode.SvgDecoder.Companion.MIME_TYPE","location":"sketch-svg/com.github.panpf.sketch.decode/-svg-decoder/-companion/-m-i-m-e_-t-y-p-e.html","searchKeys":["MIME_TYPE","const val MIME_TYPE: String","com.github.panpf.sketch.decode.SvgDecoder.Companion.MIME_TYPE"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.internal.SvgDecoderProvider.SvgDecoderProvider","location":"sketch-svg/com.github.panpf.sketch.decode.internal/-svg-decoder-provider/-svg-decoder-provider.html","searchKeys":["SvgDecoderProvider","constructor()","com.github.panpf.sketch.decode.internal.SvgDecoderProvider.SvgDecoderProvider"]},{"name":"constructor(requestContext: RequestContext, dataSource: DataSource, useViewBoundsAsIntrinsicSize: Boolean = true)","description":"com.github.panpf.sketch.decode.SvgDecoder.SvgDecoder","location":"sketch-svg/com.github.panpf.sketch.decode/-svg-decoder/-svg-decoder.html","searchKeys":["SvgDecoder","constructor(requestContext: RequestContext, dataSource: DataSource, useViewBoundsAsIntrinsicSize: Boolean = true)","com.github.panpf.sketch.decode.SvgDecoder.SvgDecoder"]},{"name":"constructor(useViewBoundsAsIntrinsicSize: Boolean = true)","description":"com.github.panpf.sketch.decode.SvgDecoder.Factory.Factory","location":"sketch-svg/com.github.panpf.sketch.decode/-svg-decoder/-factory/-factory.html","searchKeys":["Factory","constructor(useViewBoundsAsIntrinsicSize: Boolean = true)","com.github.panpf.sketch.decode.SvgDecoder.Factory.Factory"]},{"name":"expect class SvgDecoderProvider : DecoderProvider","description":"com.github.panpf.sketch.decode.internal.SvgDecoderProvider","location":"sketch-svg/com.github.panpf.sketch.decode.internal/-svg-decoder-provider/index.html","searchKeys":["SvgDecoderProvider","expect class SvgDecoderProvider : DecoderProvider","com.github.panpf.sketch.decode.internal.SvgDecoderProvider"]},{"name":"expect open override fun factory(context: PlatformContext): SvgDecoder.Factory","description":"com.github.panpf.sketch.decode.internal.SvgDecoderProvider.factory","location":"sketch-svg/com.github.panpf.sketch.decode.internal/-svg-decoder-provider/factory.html","searchKeys":["factory","expect open override fun factory(context: PlatformContext): SvgDecoder.Factory","com.github.panpf.sketch.decode.internal.SvgDecoderProvider.factory"]},{"name":"fun ByteArray.isSvg(): Boolean","description":"com.github.panpf.sketch.decode.internal.isSvg","location":"sketch-svg/com.github.panpf.sketch.decode.internal/is-svg.html","searchKeys":["isSvg","fun ByteArray.isSvg(): Boolean","com.github.panpf.sketch.decode.internal.isSvg"]},{"name":"fun ComponentRegistry.Builder.supportSvg(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.decode.supportSvg","location":"sketch-svg/com.github.panpf.sketch.decode/support-svg.html","searchKeys":["supportSvg","fun ComponentRegistry.Builder.supportSvg(): ComponentRegistry.Builder","com.github.panpf.sketch.decode.supportSvg"]},{"name":"fun ImageOptions.Builder.svgBackgroundColor(color: Int?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.svgBackgroundColor","location":"sketch-svg/com.github.panpf.sketch.request/svg-background-color.html","searchKeys":["svgBackgroundColor","fun ImageOptions.Builder.svgBackgroundColor(color: Int?): ImageOptions.Builder","com.github.panpf.sketch.request.svgBackgroundColor"]},{"name":"fun ImageOptions.Builder.svgCss(css: String?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.svgCss","location":"sketch-svg/com.github.panpf.sketch.request/svg-css.html","searchKeys":["svgCss","fun ImageOptions.Builder.svgCss(css: String?): ImageOptions.Builder","com.github.panpf.sketch.request.svgCss"]},{"name":"fun ImageRequest.Builder.svgBackgroundColor(color: Int?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.svgBackgroundColor","location":"sketch-svg/com.github.panpf.sketch.request/svg-background-color.html","searchKeys":["svgBackgroundColor","fun ImageRequest.Builder.svgBackgroundColor(color: Int?): ImageRequest.Builder","com.github.panpf.sketch.request.svgBackgroundColor"]},{"name":"fun ImageRequest.Builder.svgCss(css: String?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.svgCss","location":"sketch-svg/com.github.panpf.sketch.request/svg-css.html","searchKeys":["svgCss","fun ImageRequest.Builder.svgCss(css: String?): ImageRequest.Builder","com.github.panpf.sketch.request.svgCss"]},{"name":"object Companion","description":"com.github.panpf.sketch.decode.SvgDecoder.Companion","location":"sketch-svg/com.github.panpf.sketch.decode/-svg-decoder/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.decode.SvgDecoder.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.SvgDecoder.Factory.equals","location":"sketch-svg/com.github.panpf.sketch.decode/-svg-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.SvgDecoder.Factory.equals"]},{"name":"open override fun create(requestContext: RequestContext, fetchResult: FetchResult): SvgDecoder?","description":"com.github.panpf.sketch.decode.SvgDecoder.Factory.create","location":"sketch-svg/com.github.panpf.sketch.decode/-svg-decoder/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext, fetchResult: FetchResult): SvgDecoder?","com.github.panpf.sketch.decode.SvgDecoder.Factory.create"]},{"name":"open override fun decode(): DecodeResult","description":"com.github.panpf.sketch.decode.SvgDecoder.decode","location":"sketch-svg/com.github.panpf.sketch.decode/-svg-decoder/decode.html","searchKeys":["decode","open override fun decode(): DecodeResult","com.github.panpf.sketch.decode.SvgDecoder.decode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.SvgDecoder.Factory.hashCode","location":"sketch-svg/com.github.panpf.sketch.decode/-svg-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.SvgDecoder.Factory.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.SvgDecoder.Factory.toString","location":"sketch-svg/com.github.panpf.sketch.decode/-svg-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.SvgDecoder.Factory.toString"]},{"name":"open override val imageInfo: ImageInfo","description":"com.github.panpf.sketch.decode.SvgDecoder.imageInfo","location":"sketch-svg/com.github.panpf.sketch.decode/-svg-decoder/image-info.html","searchKeys":["imageInfo","open override val imageInfo: ImageInfo","com.github.panpf.sketch.decode.SvgDecoder.imageInfo"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.decode.SvgDecoder.Factory.key","location":"sketch-svg/com.github.panpf.sketch.decode/-svg-decoder/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.decode.SvgDecoder.Factory.key"]},{"name":"val ImageOptions.svgBackgroundColor: Int?","description":"com.github.panpf.sketch.request.svgBackgroundColor","location":"sketch-svg/com.github.panpf.sketch.request/svg-background-color.html","searchKeys":["svgBackgroundColor","val ImageOptions.svgBackgroundColor: Int?","com.github.panpf.sketch.request.svgBackgroundColor"]},{"name":"val ImageOptions.svgCss: String?","description":"com.github.panpf.sketch.request.svgCss","location":"sketch-svg/com.github.panpf.sketch.request/svg-css.html","searchKeys":["svgCss","val ImageOptions.svgCss: String?","com.github.panpf.sketch.request.svgCss"]},{"name":"val ImageRequest.svgBackgroundColor: Int?","description":"com.github.panpf.sketch.request.svgBackgroundColor","location":"sketch-svg/com.github.panpf.sketch.request/svg-background-color.html","searchKeys":["svgBackgroundColor","val ImageRequest.svgBackgroundColor: Int?","com.github.panpf.sketch.request.svgBackgroundColor"]},{"name":"val ImageRequest.svgCss: String?","description":"com.github.panpf.sketch.request.svgCss","location":"sketch-svg/com.github.panpf.sketch.request/svg-css.html","searchKeys":["svgCss","val ImageRequest.svgCss: String?","com.github.panpf.sketch.request.svgCss"]},{"name":"val useViewBoundsAsIntrinsicSize: Boolean = true","description":"com.github.panpf.sketch.decode.SvgDecoder.Factory.useViewBoundsAsIntrinsicSize","location":"sketch-svg/com.github.panpf.sketch.decode/-svg-decoder/-factory/use-view-bounds-as-intrinsic-size.html","searchKeys":["useViewBoundsAsIntrinsicSize","val useViewBoundsAsIntrinsicSize: Boolean = true","com.github.panpf.sketch.decode.SvgDecoder.Factory.useViewBoundsAsIntrinsicSize"]},{"name":"class BlurHashDataSource(val blurHashUri: Uri) : DataSource","description":"com.github.panpf.sketch.source.BlurHashDataSource","location":"sketch-blurhash/com.github.panpf.sketch.source/-blur-hash-data-source/index.html","searchKeys":["BlurHashDataSource","class BlurHashDataSource(val blurHashUri: Uri) : DataSource","com.github.panpf.sketch.source.BlurHashDataSource"]},{"name":"class BlurHashDecodeHelper(val requestContext: RequestContext, val blurHashUri: Uri) : DecodeHelper","description":"com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper","location":"sketch-blurhash/com.github.panpf.sketch.decode.internal/-blur-hash-decode-helper/index.html","searchKeys":["BlurHashDecodeHelper","class BlurHashDecodeHelper(val requestContext: RequestContext, val blurHashUri: Uri) : DecodeHelper","com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper"]},{"name":"class BlurHashDecoder(requestContext: RequestContext, dataSource: BlurHashDataSource) : HelperDecoder","description":"com.github.panpf.sketch.decode.BlurHashDecoder","location":"sketch-blurhash/com.github.panpf.sketch.decode/-blur-hash-decoder/index.html","searchKeys":["BlurHashDecoder","class BlurHashDecoder(requestContext: RequestContext, dataSource: BlurHashDataSource) : HelperDecoder","com.github.panpf.sketch.decode.BlurHashDecoder"]},{"name":"class BlurHashUriFetcher(val blurHashUri: Uri) : Fetcher","description":"com.github.panpf.sketch.fetch.BlurHashUriFetcher","location":"sketch-blurhash/com.github.panpf.sketch.fetch/-blur-hash-uri-fetcher/index.html","searchKeys":["BlurHashUriFetcher","class BlurHashUriFetcher(val blurHashUri: Uri) : Fetcher","com.github.panpf.sketch.fetch.BlurHashUriFetcher"]},{"name":"class Factory : Decoder.Factory","description":"com.github.panpf.sketch.decode.BlurHashDecoder.Factory","location":"sketch-blurhash/com.github.panpf.sketch.decode/-blur-hash-decoder/-factory/index.html","searchKeys":["Factory","class Factory : Decoder.Factory","com.github.panpf.sketch.decode.BlurHashDecoder.Factory"]},{"name":"class Factory : Fetcher.Factory","description":"com.github.panpf.sketch.fetch.BlurHashUriFetcher.Factory","location":"sketch-blurhash/com.github.panpf.sketch.fetch/-blur-hash-uri-fetcher/-factory/index.html","searchKeys":["Factory","class Factory : Fetcher.Factory","com.github.panpf.sketch.fetch.BlurHashUriFetcher.Factory"]},{"name":"const val SCHEME: String","description":"com.github.panpf.sketch.fetch.BlurHashUriFetcher.Companion.SCHEME","location":"sketch-blurhash/com.github.panpf.sketch.fetch/-blur-hash-uri-fetcher/-companion/-s-c-h-e-m-e.html","searchKeys":["SCHEME","const val SCHEME: String","com.github.panpf.sketch.fetch.BlurHashUriFetcher.Companion.SCHEME"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.BlurHashDecoder.Factory.Factory","location":"sketch-blurhash/com.github.panpf.sketch.decode/-blur-hash-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.BlurHashDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.internal.BlurHashDecoderProvider.BlurHashDecoderProvider","location":"sketch-blurhash/com.github.panpf.sketch.decode.internal/-blur-hash-decoder-provider/-blur-hash-decoder-provider.html","searchKeys":["BlurHashDecoderProvider","constructor()","com.github.panpf.sketch.decode.internal.BlurHashDecoderProvider.BlurHashDecoderProvider"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.BlurHashUriFetcher.Factory.Factory","location":"sketch-blurhash/com.github.panpf.sketch.fetch/-blur-hash-uri-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.fetch.BlurHashUriFetcher.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.internal.BlurHashUriFetcherProvider.BlurHashUriFetcherProvider","location":"sketch-blurhash/com.github.panpf.sketch.fetch.internal/-blur-hash-uri-fetcher-provider/-blur-hash-uri-fetcher-provider.html","searchKeys":["BlurHashUriFetcherProvider","constructor()","com.github.panpf.sketch.fetch.internal.BlurHashUriFetcherProvider.BlurHashUriFetcherProvider"]},{"name":"constructor(blurHash: String, size: Size? = null, maxSide: Int? = null, cachePolicy: CachePolicy? = null)","description":"com.github.panpf.sketch.state.BlurHashStateImage.BlurHashStateImage","location":"sketch-blurhash/com.github.panpf.sketch.state/-blur-hash-state-image/-blur-hash-state-image.html","searchKeys":["BlurHashStateImage","constructor(blurHash: String, size: Size? = null, maxSide: Int? = null, cachePolicy: CachePolicy? = null)","com.github.panpf.sketch.state.BlurHashStateImage.BlurHashStateImage"]},{"name":"constructor(blurHashUri: Uri)","description":"com.github.panpf.sketch.fetch.BlurHashUriFetcher.BlurHashUriFetcher","location":"sketch-blurhash/com.github.panpf.sketch.fetch/-blur-hash-uri-fetcher/-blur-hash-uri-fetcher.html","searchKeys":["BlurHashUriFetcher","constructor(blurHashUri: Uri)","com.github.panpf.sketch.fetch.BlurHashUriFetcher.BlurHashUriFetcher"]},{"name":"constructor(blurHashUri: Uri)","description":"com.github.panpf.sketch.source.BlurHashDataSource.BlurHashDataSource","location":"sketch-blurhash/com.github.panpf.sketch.source/-blur-hash-data-source/-blur-hash-data-source.html","searchKeys":["BlurHashDataSource","constructor(blurHashUri: Uri)","com.github.panpf.sketch.source.BlurHashDataSource.BlurHashDataSource"]},{"name":"constructor(requestContext: RequestContext, blurHashUri: Uri)","description":"com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.BlurHashDecodeHelper","location":"sketch-blurhash/com.github.panpf.sketch.decode.internal/-blur-hash-decode-helper/-blur-hash-decode-helper.html","searchKeys":["BlurHashDecodeHelper","constructor(requestContext: RequestContext, blurHashUri: Uri)","com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.BlurHashDecodeHelper"]},{"name":"constructor(requestContext: RequestContext, dataSource: BlurHashDataSource)","description":"com.github.panpf.sketch.decode.BlurHashDecoder.BlurHashDecoder","location":"sketch-blurhash/com.github.panpf.sketch.decode/-blur-hash-decoder/-blur-hash-decoder.html","searchKeys":["BlurHashDecoder","constructor(requestContext: RequestContext, dataSource: BlurHashDataSource)","com.github.panpf.sketch.decode.BlurHashDecoder.BlurHashDecoder"]},{"name":"data class BlurHashStateImage(val blurHash: String, val size: Size? = null, val maxSide: Int? = null, val cachePolicy: CachePolicy? = null) : StateImage","description":"com.github.panpf.sketch.state.BlurHashStateImage","location":"sketch-blurhash/com.github.panpf.sketch.state/-blur-hash-state-image/index.html","searchKeys":["BlurHashStateImage","data class BlurHashStateImage(val blurHash: String, val size: Size? = null, val maxSide: Int? = null, val cachePolicy: CachePolicy? = null) : StateImage","com.github.panpf.sketch.state.BlurHashStateImage"]},{"name":"expect class BlurHashDecoderProvider : DecoderProvider","description":"com.github.panpf.sketch.decode.internal.BlurHashDecoderProvider","location":"sketch-blurhash/com.github.panpf.sketch.decode.internal/-blur-hash-decoder-provider/index.html","searchKeys":["BlurHashDecoderProvider","expect class BlurHashDecoderProvider : DecoderProvider","com.github.panpf.sketch.decode.internal.BlurHashDecoderProvider"]},{"name":"expect class BlurHashUriFetcherProvider : FetcherProvider","description":"com.github.panpf.sketch.fetch.internal.BlurHashUriFetcherProvider","location":"sketch-blurhash/com.github.panpf.sketch.fetch.internal/-blur-hash-uri-fetcher-provider/index.html","searchKeys":["BlurHashUriFetcherProvider","expect class BlurHashUriFetcherProvider : FetcherProvider","com.github.panpf.sketch.fetch.internal.BlurHashUriFetcherProvider"]},{"name":"expect fun createBlurHashBitmap(width: Int, height: Int, decodeConfig: DecodeConfig? = null): Bitmap","description":"com.github.panpf.sketch.util.createBlurHashBitmap","location":"sketch-blurhash/com.github.panpf.sketch.util/create-blur-hash-bitmap.html","searchKeys":["createBlurHashBitmap","expect fun createBlurHashBitmap(width: Int, height: Int, decodeConfig: DecodeConfig? = null): Bitmap","com.github.panpf.sketch.util.createBlurHashBitmap"]},{"name":"expect open override fun factory(context: PlatformContext): BlurHashDecoder.Factory","description":"com.github.panpf.sketch.decode.internal.BlurHashDecoderProvider.factory","location":"sketch-blurhash/com.github.panpf.sketch.decode.internal/-blur-hash-decoder-provider/factory.html","searchKeys":["factory","expect open override fun factory(context: PlatformContext): BlurHashDecoder.Factory","com.github.panpf.sketch.decode.internal.BlurHashDecoderProvider.factory"]},{"name":"expect open override fun factory(context: PlatformContext): BlurHashUriFetcher.Factory","description":"com.github.panpf.sketch.fetch.internal.BlurHashUriFetcherProvider.factory","location":"sketch-blurhash/com.github.panpf.sketch.fetch.internal/-blur-hash-uri-fetcher-provider/factory.html","searchKeys":["factory","expect open override fun factory(context: PlatformContext): BlurHashUriFetcher.Factory","com.github.panpf.sketch.fetch.internal.BlurHashUriFetcherProvider.factory"]},{"name":"fun ComponentRegistry.Builder.supportBlurHash(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.fetch.supportBlurHash","location":"sketch-blurhash/com.github.panpf.sketch.fetch/support-blur-hash.html","searchKeys":["supportBlurHash","fun ComponentRegistry.Builder.supportBlurHash(): ComponentRegistry.Builder","com.github.panpf.sketch.fetch.supportBlurHash"]},{"name":"fun ImageOptions.Builder.blurHashError(blurHash: String, size: Size? = null, maxSide: Int? = null, cachePolicy: CachePolicy? = null): ImageOptions.Builder","description":"com.github.panpf.sketch.request.blurHashError","location":"sketch-blurhash/com.github.panpf.sketch.request/blur-hash-error.html","searchKeys":["blurHashError","fun ImageOptions.Builder.blurHashError(blurHash: String, size: Size? = null, maxSide: Int? = null, cachePolicy: CachePolicy? = null): ImageOptions.Builder","com.github.panpf.sketch.request.blurHashError"]},{"name":"fun ImageOptions.Builder.blurHashFallback(blurHash: String, size: Size? = null, maxSide: Int? = null, cachePolicy: CachePolicy? = null): ImageOptions.Builder","description":"com.github.panpf.sketch.request.blurHashFallback","location":"sketch-blurhash/com.github.panpf.sketch.request/blur-hash-fallback.html","searchKeys":["blurHashFallback","fun ImageOptions.Builder.blurHashFallback(blurHash: String, size: Size? = null, maxSide: Int? = null, cachePolicy: CachePolicy? = null): ImageOptions.Builder","com.github.panpf.sketch.request.blurHashFallback"]},{"name":"fun ImageOptions.Builder.blurHashPlaceholder(blurHash: String, size: Size? = null, maxSide: Int? = null, cachePolicy: CachePolicy? = null): ImageOptions.Builder","description":"com.github.panpf.sketch.request.blurHashPlaceholder","location":"sketch-blurhash/com.github.panpf.sketch.request/blur-hash-placeholder.html","searchKeys":["blurHashPlaceholder","fun ImageOptions.Builder.blurHashPlaceholder(blurHash: String, size: Size? = null, maxSide: Int? = null, cachePolicy: CachePolicy? = null): ImageOptions.Builder","com.github.panpf.sketch.request.blurHashPlaceholder"]},{"name":"fun ImageRequest.Builder.blurHashError(blurHash: String, size: Size? = null, maxSide: Int? = null, cachePolicy: CachePolicy? = null): ImageRequest.Builder","description":"com.github.panpf.sketch.request.blurHashError","location":"sketch-blurhash/com.github.panpf.sketch.request/blur-hash-error.html","searchKeys":["blurHashError","fun ImageRequest.Builder.blurHashError(blurHash: String, size: Size? = null, maxSide: Int? = null, cachePolicy: CachePolicy? = null): ImageRequest.Builder","com.github.panpf.sketch.request.blurHashError"]},{"name":"fun ImageRequest.Builder.blurHashFallback(blurHash: String, size: Size? = null, maxSide: Int? = null, cachePolicy: CachePolicy? = null): ImageRequest.Builder","description":"com.github.panpf.sketch.request.blurHashFallback","location":"sketch-blurhash/com.github.panpf.sketch.request/blur-hash-fallback.html","searchKeys":["blurHashFallback","fun ImageRequest.Builder.blurHashFallback(blurHash: String, size: Size? = null, maxSide: Int? = null, cachePolicy: CachePolicy? = null): ImageRequest.Builder","com.github.panpf.sketch.request.blurHashFallback"]},{"name":"fun ImageRequest.Builder.blurHashPlaceholder(blurHash: String, size: Size? = null, maxSide: Int? = null, cachePolicy: CachePolicy? = null): ImageRequest.Builder","description":"com.github.panpf.sketch.request.blurHashPlaceholder","location":"sketch-blurhash/com.github.panpf.sketch.request/blur-hash-placeholder.html","searchKeys":["blurHashPlaceholder","fun ImageRequest.Builder.blurHashPlaceholder(blurHash: String, size: Size? = null, maxSide: Int? = null, cachePolicy: CachePolicy? = null): ImageRequest.Builder","com.github.panpf.sketch.request.blurHashPlaceholder"]},{"name":"fun blurHashMemoryCacheKey(blurHash: String, size: Size): String","description":"com.github.panpf.sketch.util.blurHashMemoryCacheKey","location":"sketch-blurhash/com.github.panpf.sketch.util/blur-hash-memory-cache-key.html","searchKeys":["blurHashMemoryCacheKey","fun blurHashMemoryCacheKey(blurHash: String, size: Size): String","com.github.panpf.sketch.util.blurHashMemoryCacheKey"]},{"name":"fun decodeBlurHashToBitmap(blurHash: String, width: Int, height: Int, punch: Float = 1.0f, decodeConfig: DecodeConfig? = null): Bitmap","description":"com.github.panpf.sketch.util.decodeBlurHashToBitmap","location":"sketch-blurhash/com.github.panpf.sketch.util/decode-blur-hash-to-bitmap.html","searchKeys":["decodeBlurHashToBitmap","fun decodeBlurHashToBitmap(blurHash: String, width: Int, height: Int, punch: Float = 1.0f, decodeConfig: DecodeConfig? = null): Bitmap","com.github.panpf.sketch.util.decodeBlurHashToBitmap"]},{"name":"fun decodeByte(blurHash: String, width: Int, height: Int, punch: Float = 1.0f): ByteArray","description":"com.github.panpf.sketch.util.BlurHashUtil.decodeByte","location":"sketch-blurhash/com.github.panpf.sketch.util/-blur-hash-util/decode-byte.html","searchKeys":["decodeByte","fun decodeByte(blurHash: String, width: Int, height: Int, punch: Float = 1.0f): ByteArray","com.github.panpf.sketch.util.BlurHashUtil.decodeByte"]},{"name":"fun isBlurHashUri(uri: String): Boolean","description":"com.github.panpf.sketch.fetch.isBlurHashUri","location":"sketch-blurhash/com.github.panpf.sketch.fetch/is-blur-hash-uri.html","searchKeys":["isBlurHashUri","fun isBlurHashUri(uri: String): Boolean","com.github.panpf.sketch.fetch.isBlurHashUri"]},{"name":"fun isBlurHashUri(uri: Uri): Boolean","description":"com.github.panpf.sketch.fetch.isBlurHashUri","location":"sketch-blurhash/com.github.panpf.sketch.fetch/is-blur-hash-uri.html","searchKeys":["isBlurHashUri","fun isBlurHashUri(uri: Uri): Boolean","com.github.panpf.sketch.fetch.isBlurHashUri"]},{"name":"fun isValid(blurHash: String?): Boolean","description":"com.github.panpf.sketch.util.BlurHashUtil.isValid","location":"sketch-blurhash/com.github.panpf.sketch.util/-blur-hash-util/is-valid.html","searchKeys":["isValid","fun isValid(blurHash: String?): Boolean","com.github.panpf.sketch.util.BlurHashUtil.isValid"]},{"name":"fun newBlurHashUri(blurHash: String, size: Size? = null): String","description":"com.github.panpf.sketch.fetch.newBlurHashUri","location":"sketch-blurhash/com.github.panpf.sketch.fetch/new-blur-hash-uri.html","searchKeys":["newBlurHashUri","fun newBlurHashUri(blurHash: String, size: Size? = null): String","com.github.panpf.sketch.fetch.newBlurHashUri"]},{"name":"fun newBlurHashUri(blurHash: String, width: Int? = null, height: Int? = null): String","description":"com.github.panpf.sketch.fetch.newBlurHashUri","location":"sketch-blurhash/com.github.panpf.sketch.fetch/new-blur-hash-uri.html","searchKeys":["newBlurHashUri","fun newBlurHashUri(blurHash: String, width: Int? = null, height: Int? = null): String","com.github.panpf.sketch.fetch.newBlurHashUri"]},{"name":"fun readSizeFromBlurHashUri(uri: Uri): Size?","description":"com.github.panpf.sketch.fetch.readSizeFromBlurHashUri","location":"sketch-blurhash/com.github.panpf.sketch.fetch/read-size-from-blur-hash-uri.html","searchKeys":["readSizeFromBlurHashUri","fun readSizeFromBlurHashUri(uri: Uri): Size?","com.github.panpf.sketch.fetch.readSizeFromBlurHashUri"]},{"name":"fun resolveBlurHashBitmapSize(blurHashUri: Uri?, size: Size?): Size","description":"com.github.panpf.sketch.util.resolveBlurHashBitmapSize","location":"sketch-blurhash/com.github.panpf.sketch.util/resolve-blur-hash-bitmap-size.html","searchKeys":["resolveBlurHashBitmapSize","fun resolveBlurHashBitmapSize(blurHashUri: Uri?, size: Size?): Size","com.github.panpf.sketch.util.resolveBlurHashBitmapSize"]},{"name":"object BlurHashUtil","description":"com.github.panpf.sketch.util.BlurHashUtil","location":"sketch-blurhash/com.github.panpf.sketch.util/-blur-hash-util/index.html","searchKeys":["BlurHashUtil","object BlurHashUtil","com.github.panpf.sketch.util.BlurHashUtil"]},{"name":"object Companion","description":"com.github.panpf.sketch.fetch.BlurHashUriFetcher.Companion","location":"sketch-blurhash/com.github.panpf.sketch.fetch/-blur-hash-uri-fetcher/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.fetch.BlurHashUriFetcher.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.BlurHashDecoder.Factory.equals","location":"sketch-blurhash/com.github.panpf.sketch.decode/-blur-hash-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.BlurHashDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.BlurHashUriFetcher.Factory.equals","location":"sketch-blurhash/com.github.panpf.sketch.fetch/-blur-hash-uri-fetcher/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.BlurHashUriFetcher.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.BlurHashUriFetcher.equals","location":"sketch-blurhash/com.github.panpf.sketch.fetch/-blur-hash-uri-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.BlurHashUriFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.source.BlurHashDataSource.equals","location":"sketch-blurhash/com.github.panpf.sketch.source/-blur-hash-data-source/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.source.BlurHashDataSource.equals"]},{"name":"open override fun close()","description":"com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.close","location":"sketch-blurhash/com.github.panpf.sketch.decode.internal/-blur-hash-decode-helper/close.html","searchKeys":["close","open override fun close()","com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.close"]},{"name":"open override fun create(requestContext: RequestContext): BlurHashUriFetcher?","description":"com.github.panpf.sketch.fetch.BlurHashUriFetcher.Factory.create","location":"sketch-blurhash/com.github.panpf.sketch.fetch/-blur-hash-uri-fetcher/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext): BlurHashUriFetcher?","com.github.panpf.sketch.fetch.BlurHashUriFetcher.Factory.create"]},{"name":"open override fun create(requestContext: RequestContext, fetchResult: FetchResult): BlurHashDecoder?","description":"com.github.panpf.sketch.decode.BlurHashDecoder.Factory.create","location":"sketch-blurhash/com.github.panpf.sketch.decode/-blur-hash-decoder/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext, fetchResult: FetchResult): BlurHashDecoder?","com.github.panpf.sketch.decode.BlurHashDecoder.Factory.create"]},{"name":"open override fun decode(sampleSize: Int): Image","description":"com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.decode","location":"sketch-blurhash/com.github.panpf.sketch.decode.internal/-blur-hash-decode-helper/decode.html","searchKeys":["decode","open override fun decode(sampleSize: Int): Image","com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.decode"]},{"name":"open override fun decodeRegion(region: Rect, sampleSize: Int): Image","description":"com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.decodeRegion","location":"sketch-blurhash/com.github.panpf.sketch.decode.internal/-blur-hash-decode-helper/decode-region.html","searchKeys":["decodeRegion","open override fun decodeRegion(region: Rect, sampleSize: Int): Image","com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.decodeRegion"]},{"name":"open override fun getFile(sketch: Sketch): Path","description":"com.github.panpf.sketch.source.BlurHashDataSource.getFile","location":"sketch-blurhash/com.github.panpf.sketch.source/-blur-hash-data-source/get-file.html","searchKeys":["getFile","open override fun getFile(sketch: Sketch): Path","com.github.panpf.sketch.source.BlurHashDataSource.getFile"]},{"name":"open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image?","description":"com.github.panpf.sketch.state.BlurHashStateImage.getImage","location":"sketch-blurhash/com.github.panpf.sketch.state/-blur-hash-state-image/get-image.html","searchKeys":["getImage","open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image?","com.github.panpf.sketch.state.BlurHashStateImage.getImage"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.BlurHashDecoder.Factory.hashCode","location":"sketch-blurhash/com.github.panpf.sketch.decode/-blur-hash-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.BlurHashDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.BlurHashUriFetcher.Factory.hashCode","location":"sketch-blurhash/com.github.panpf.sketch.fetch/-blur-hash-uri-fetcher/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.BlurHashUriFetcher.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.BlurHashUriFetcher.hashCode","location":"sketch-blurhash/com.github.panpf.sketch.fetch/-blur-hash-uri-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.BlurHashUriFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.source.BlurHashDataSource.hashCode","location":"sketch-blurhash/com.github.panpf.sketch.source/-blur-hash-data-source/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.source.BlurHashDataSource.hashCode"]},{"name":"open override fun openSource(): Source","description":"com.github.panpf.sketch.source.BlurHashDataSource.openSource","location":"sketch-blurhash/com.github.panpf.sketch.source/-blur-hash-data-source/open-source.html","searchKeys":["openSource","open override fun openSource(): Source","com.github.panpf.sketch.source.BlurHashDataSource.openSource"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.BlurHashDecoder.Factory.toString","location":"sketch-blurhash/com.github.panpf.sketch.decode/-blur-hash-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.BlurHashDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.BlurHashUriFetcher.Factory.toString","location":"sketch-blurhash/com.github.panpf.sketch.fetch/-blur-hash-uri-fetcher/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.BlurHashUriFetcher.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.BlurHashUriFetcher.toString","location":"sketch-blurhash/com.github.panpf.sketch.fetch/-blur-hash-uri-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.BlurHashUriFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.source.BlurHashDataSource.toString","location":"sketch-blurhash/com.github.panpf.sketch.source/-blur-hash-data-source/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.source.BlurHashDataSource.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.state.BlurHashStateImage.toString","location":"sketch-blurhash/com.github.panpf.sketch.state/-blur-hash-state-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.state.BlurHashStateImage.toString"]},{"name":"open override val dataFrom: DataFrom","description":"com.github.panpf.sketch.source.BlurHashDataSource.dataFrom","location":"sketch-blurhash/com.github.panpf.sketch.source/-blur-hash-data-source/data-from.html","searchKeys":["dataFrom","open override val dataFrom: DataFrom","com.github.panpf.sketch.source.BlurHashDataSource.dataFrom"]},{"name":"open override val imageInfo: ImageInfo","description":"com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.imageInfo","location":"sketch-blurhash/com.github.panpf.sketch.decode.internal/-blur-hash-decode-helper/image-info.html","searchKeys":["imageInfo","open override val imageInfo: ImageInfo","com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.imageInfo"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.decode.BlurHashDecoder.Factory.key","location":"sketch-blurhash/com.github.panpf.sketch.decode/-blur-hash-decoder/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.decode.BlurHashDecoder.Factory.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.source.BlurHashDataSource.key","location":"sketch-blurhash/com.github.panpf.sketch.source/-blur-hash-data-source/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.source.BlurHashDataSource.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.state.BlurHashStateImage.key","location":"sketch-blurhash/com.github.panpf.sketch.state/-blur-hash-state-image/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.state.BlurHashStateImage.key"]},{"name":"open override val supportRegion: Boolean = false","description":"com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.supportRegion","location":"sketch-blurhash/com.github.panpf.sketch.decode.internal/-blur-hash-decode-helper/support-region.html","searchKeys":["supportRegion","open override val supportRegion: Boolean = false","com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.supportRegion"]},{"name":"open suspend override fun fetch(): Result<FetchResult>","description":"com.github.panpf.sketch.fetch.BlurHashUriFetcher.fetch","location":"sketch-blurhash/com.github.panpf.sketch.fetch/-blur-hash-uri-fetcher/fetch.html","searchKeys":["fetch","open suspend override fun fetch(): Result<FetchResult>","com.github.panpf.sketch.fetch.BlurHashUriFetcher.fetch"]},{"name":"val blurHash: String","description":"com.github.panpf.sketch.state.BlurHashStateImage.blurHash","location":"sketch-blurhash/com.github.panpf.sketch.state/-blur-hash-state-image/blur-hash.html","searchKeys":["blurHash","val blurHash: String","com.github.panpf.sketch.state.BlurHashStateImage.blurHash"]},{"name":"val blurHashUri: Uri","description":"com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.blurHashUri","location":"sketch-blurhash/com.github.panpf.sketch.decode.internal/-blur-hash-decode-helper/blur-hash-uri.html","searchKeys":["blurHashUri","val blurHashUri: Uri","com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.blurHashUri"]},{"name":"val blurHashUri: Uri","description":"com.github.panpf.sketch.fetch.BlurHashUriFetcher.blurHashUri","location":"sketch-blurhash/com.github.panpf.sketch.fetch/-blur-hash-uri-fetcher/blur-hash-uri.html","searchKeys":["blurHashUri","val blurHashUri: Uri","com.github.panpf.sketch.fetch.BlurHashUriFetcher.blurHashUri"]},{"name":"val blurHashUri: Uri","description":"com.github.panpf.sketch.source.BlurHashDataSource.blurHashUri","location":"sketch-blurhash/com.github.panpf.sketch.source/-blur-hash-data-source/blur-hash-uri.html","searchKeys":["blurHashUri","val blurHashUri: Uri","com.github.panpf.sketch.source.BlurHashDataSource.blurHashUri"]},{"name":"val cachePolicy: CachePolicy? = null","description":"com.github.panpf.sketch.state.BlurHashStateImage.cachePolicy","location":"sketch-blurhash/com.github.panpf.sketch.state/-blur-hash-state-image/cache-policy.html","searchKeys":["cachePolicy","val cachePolicy: CachePolicy? = null","com.github.panpf.sketch.state.BlurHashStateImage.cachePolicy"]},{"name":"val defaultBlurHashBitmapSize: Size","description":"com.github.panpf.sketch.util.defaultBlurHashBitmapSize","location":"sketch-blurhash/com.github.panpf.sketch.util/default-blur-hash-bitmap-size.html","searchKeys":["defaultBlurHashBitmapSize","val defaultBlurHashBitmapSize: Size","com.github.panpf.sketch.util.defaultBlurHashBitmapSize"]},{"name":"val maxSide: Int? = null","description":"com.github.panpf.sketch.state.BlurHashStateImage.maxSide","location":"sketch-blurhash/com.github.panpf.sketch.state/-blur-hash-state-image/max-side.html","searchKeys":["maxSide","val maxSide: Int? = null","com.github.panpf.sketch.state.BlurHashStateImage.maxSide"]},{"name":"val requestContext: RequestContext","description":"com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.requestContext","location":"sketch-blurhash/com.github.panpf.sketch.decode.internal/-blur-hash-decode-helper/request-context.html","searchKeys":["requestContext","val requestContext: RequestContext","com.github.panpf.sketch.decode.internal.BlurHashDecodeHelper.requestContext"]},{"name":"val size: Size? = null","description":"com.github.panpf.sketch.state.BlurHashStateImage.size","location":"sketch-blurhash/com.github.panpf.sketch.state/-blur-hash-state-image/size.html","searchKeys":["size","val size: Size? = null","com.github.panpf.sketch.state.BlurHashStateImage.size"]},{"name":"fun ImageView.loadAssetImage(fileName: String?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","description":"com.github.panpf.sketch.loadAssetImage","location":"sketch-view-koin/com.github.panpf.sketch/load-asset-image.html","searchKeys":["loadAssetImage","fun ImageView.loadAssetImage(fileName: String?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","com.github.panpf.sketch.loadAssetImage"]},{"name":"fun ImageView.loadImage(file: File?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","description":"com.github.panpf.sketch.loadImage","location":"sketch-view-koin/com.github.panpf.sketch/load-image.html","searchKeys":["loadImage","fun ImageView.loadImage(file: File?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","com.github.panpf.sketch.loadImage"]},{"name":"fun ImageView.loadImage(resId: Int?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","description":"com.github.panpf.sketch.loadImage","location":"sketch-view-koin/com.github.panpf.sketch/load-image.html","searchKeys":["loadImage","fun ImageView.loadImage(resId: Int?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","com.github.panpf.sketch.loadImage"]},{"name":"fun ImageView.loadImage(uri: String?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","description":"com.github.panpf.sketch.loadImage","location":"sketch-view-koin/com.github.panpf.sketch/load-image.html","searchKeys":["loadImage","fun ImageView.loadImage(uri: String?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","com.github.panpf.sketch.loadImage"]},{"name":"fun ImageView.loadImage(uri: Uri?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","description":"com.github.panpf.sketch.loadImage","location":"sketch-view-koin/com.github.panpf.sketch/load-image.html","searchKeys":["loadImage","fun ImageView.loadImage(uri: Uri?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","com.github.panpf.sketch.loadImage"]},{"name":"fun ImageView.loadResourceImage(packageName: String, resId: Int, block: ImageRequest.Builder.() -> Unit? = null): Disposable","description":"com.github.panpf.sketch.loadResourceImage","location":"sketch-view-koin/com.github.panpf.sketch/load-resource-image.html","searchKeys":["loadResourceImage","fun ImageView.loadResourceImage(packageName: String, resId: Int, block: ImageRequest.Builder.() -> Unit? = null): Disposable","com.github.panpf.sketch.loadResourceImage"]},{"name":"fun ImageView.loadResourceImage(resId: Int?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","description":"com.github.panpf.sketch.loadResourceImage","location":"sketch-view-koin/com.github.panpf.sketch/load-resource-image.html","searchKeys":["loadResourceImage","fun ImageView.loadResourceImage(resId: Int?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","com.github.panpf.sketch.loadResourceImage"]},{"name":"class AnimatedWebpDecoder(val decoder: Decoder) : Decoder","description":"com.github.panpf.sketch.decode.AnimatedWebpDecoder","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-animated-webp-decoder/index.html","searchKeys":["AnimatedWebpDecoder","class AnimatedWebpDecoder(val decoder: Decoder) : Decoder","com.github.panpf.sketch.decode.AnimatedWebpDecoder"]},{"name":"class Factory : Decoder.Factory","description":"com.github.panpf.sketch.decode.AnimatedWebpDecoder.Factory","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-animated-webp-decoder/-factory/index.html","searchKeys":["Factory","class Factory : Decoder.Factory","com.github.panpf.sketch.decode.AnimatedWebpDecoder.Factory"]},{"name":"class Factory : Decoder.Factory","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.Factory","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-image-decoder-animated-webp-decoder/-factory/index.html","searchKeys":["Factory","class Factory : Decoder.Factory","com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.Factory"]},{"name":"class Factory : Decoder.Factory","description":"com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.Factory","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-skia-animated-webp-decoder/-factory/index.html","searchKeys":["Factory","class Factory : Decoder.Factory","com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.Factory"]},{"name":"class ImageDecoderAnimatedWebpDecoder(requestContext: RequestContext, dataSource: DataSource) : ImageDecoderAnimatedDecoder","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-image-decoder-animated-webp-decoder/index.html","searchKeys":["ImageDecoderAnimatedWebpDecoder","class ImageDecoderAnimatedWebpDecoder(requestContext: RequestContext, dataSource: DataSource) : ImageDecoderAnimatedDecoder","com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder"]},{"name":"class SkiaAnimatedWebpDecoder(requestContext: RequestContext, dataSource: DataSource) : SkiaAnimatedDecoder","description":"com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-skia-animated-webp-decoder/index.html","searchKeys":["SkiaAnimatedWebpDecoder","class SkiaAnimatedWebpDecoder(requestContext: RequestContext, dataSource: DataSource) : SkiaAnimatedDecoder","com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.AnimatedWebpDecoder.Factory.Factory","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-animated-webp-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.AnimatedWebpDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.Factory.Factory","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-image-decoder-animated-webp-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.Factory.Factory","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-skia-animated-webp-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.internal.AnimatedWebpDecoderProvider.AnimatedWebpDecoderProvider","location":"sketch-animated-webp/com.github.panpf.sketch.decode.internal/-animated-webp-decoder-provider/-animated-webp-decoder-provider.html","searchKeys":["AnimatedWebpDecoderProvider","constructor()","com.github.panpf.sketch.decode.internal.AnimatedWebpDecoderProvider.AnimatedWebpDecoderProvider"]},{"name":"constructor(decoder: Decoder)","description":"com.github.panpf.sketch.decode.AnimatedWebpDecoder.AnimatedWebpDecoder","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-animated-webp-decoder/-animated-webp-decoder.html","searchKeys":["AnimatedWebpDecoder","constructor(decoder: Decoder)","com.github.panpf.sketch.decode.AnimatedWebpDecoder.AnimatedWebpDecoder"]},{"name":"constructor(requestContext: RequestContext, dataSource: DataSource)","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.ImageDecoderAnimatedWebpDecoder","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-image-decoder-animated-webp-decoder/-image-decoder-animated-webp-decoder.html","searchKeys":["ImageDecoderAnimatedWebpDecoder","constructor(requestContext: RequestContext, dataSource: DataSource)","com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.ImageDecoderAnimatedWebpDecoder"]},{"name":"constructor(requestContext: RequestContext, dataSource: DataSource)","description":"com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.SkiaAnimatedWebpDecoder","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-skia-animated-webp-decoder/-skia-animated-webp-decoder.html","searchKeys":["SkiaAnimatedWebpDecoder","constructor(requestContext: RequestContext, dataSource: DataSource)","com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.SkiaAnimatedWebpDecoder"]},{"name":"expect class AnimatedWebpDecoderProvider : DecoderProvider","description":"com.github.panpf.sketch.decode.internal.AnimatedWebpDecoderProvider","location":"sketch-animated-webp/com.github.panpf.sketch.decode.internal/-animated-webp-decoder-provider/index.html","searchKeys":["AnimatedWebpDecoderProvider","expect class AnimatedWebpDecoderProvider : DecoderProvider","com.github.panpf.sketch.decode.internal.AnimatedWebpDecoderProvider"]},{"name":"expect fun defaultAnimatedWebpDecoderFactory(): Decoder.Factory?","description":"com.github.panpf.sketch.decode.defaultAnimatedWebpDecoderFactory","location":"sketch-animated-webp/com.github.panpf.sketch.decode/default-animated-webp-decoder-factory.html","searchKeys":["defaultAnimatedWebpDecoderFactory","expect fun defaultAnimatedWebpDecoderFactory(): Decoder.Factory?","com.github.panpf.sketch.decode.defaultAnimatedWebpDecoderFactory"]},{"name":"expect open override fun factory(context: PlatformContext): AnimatedWebpDecoder.Factory","description":"com.github.panpf.sketch.decode.internal.AnimatedWebpDecoderProvider.factory","location":"sketch-animated-webp/com.github.panpf.sketch.decode.internal/-animated-webp-decoder-provider/factory.html","searchKeys":["factory","expect open override fun factory(context: PlatformContext): AnimatedWebpDecoder.Factory","com.github.panpf.sketch.decode.internal.AnimatedWebpDecoderProvider.factory"]},{"name":"fun ComponentRegistry.Builder.supportAnimatedWebp(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.decode.supportAnimatedWebp","location":"sketch-animated-webp/com.github.panpf.sketch.decode/support-animated-webp.html","searchKeys":["supportAnimatedWebp","fun ComponentRegistry.Builder.supportAnimatedWebp(): ComponentRegistry.Builder","com.github.panpf.sketch.decode.supportAnimatedWebp"]},{"name":"fun ComponentRegistry.Builder.supportImageDecoderAnimatedWebp(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.decode.supportImageDecoderAnimatedWebp","location":"sketch-animated-webp/com.github.panpf.sketch.decode/support-image-decoder-animated-webp.html","searchKeys":["supportImageDecoderAnimatedWebp","fun ComponentRegistry.Builder.supportImageDecoderAnimatedWebp(): ComponentRegistry.Builder","com.github.panpf.sketch.decode.supportImageDecoderAnimatedWebp"]},{"name":"fun ComponentRegistry.Builder.supportSkiaAnimatedWebp(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.decode.supportSkiaAnimatedWebp","location":"sketch-animated-webp/com.github.panpf.sketch.decode/support-skia-animated-webp.html","searchKeys":["supportSkiaAnimatedWebp","fun ComponentRegistry.Builder.supportSkiaAnimatedWebp(): ComponentRegistry.Builder","com.github.panpf.sketch.decode.supportSkiaAnimatedWebp"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.AnimatedWebpDecoder.Factory.equals","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-animated-webp-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.AnimatedWebpDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.Factory.equals","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-image-decoder-animated-webp-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.Factory.equals","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-skia-animated-webp-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.Factory.equals"]},{"name":"open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","description":"com.github.panpf.sketch.decode.AnimatedWebpDecoder.Factory.create","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-animated-webp-decoder/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","com.github.panpf.sketch.decode.AnimatedWebpDecoder.Factory.create"]},{"name":"open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.Factory.create","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-image-decoder-animated-webp-decoder/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.Factory.create"]},{"name":"open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","description":"com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.Factory.create","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-skia-animated-webp-decoder/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.Factory.create"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.AnimatedWebpDecoder.Factory.hashCode","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-animated-webp-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.AnimatedWebpDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.Factory.hashCode","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-image-decoder-animated-webp-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.Factory.hashCode","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-skia-animated-webp-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.Factory.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.AnimatedWebpDecoder.Factory.toString","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-animated-webp-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.AnimatedWebpDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.Factory.toString","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-image-decoder-animated-webp-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.Factory.toString","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-skia-animated-webp-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.Factory.toString"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.decode.AnimatedWebpDecoder.Factory.key","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-animated-webp-decoder/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.decode.AnimatedWebpDecoder.Factory.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.Factory.key","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-image-decoder-animated-webp-decoder/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.decode.ImageDecoderAnimatedWebpDecoder.Factory.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.Factory.key","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-skia-animated-webp-decoder/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.decode.SkiaAnimatedWebpDecoder.Factory.key"]},{"name":"val decoder: Decoder","description":"com.github.panpf.sketch.decode.AnimatedWebpDecoder.decoder","location":"sketch-animated-webp/com.github.panpf.sketch.decode/-animated-webp-decoder/decoder.html","searchKeys":["decoder","val decoder: Decoder","com.github.panpf.sketch.decode.AnimatedWebpDecoder.decoder"]},{"name":"fun ImageView.loadAssetImage(fileName: String?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","description":"com.github.panpf.sketch.loadAssetImage","location":"sketch-view/com.github.panpf.sketch/load-asset-image.html","searchKeys":["loadAssetImage","fun ImageView.loadAssetImage(fileName: String?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","com.github.panpf.sketch.loadAssetImage"]},{"name":"fun ImageView.loadImage(file: File?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","description":"com.github.panpf.sketch.loadImage","location":"sketch-view/com.github.panpf.sketch/load-image.html","searchKeys":["loadImage","fun ImageView.loadImage(file: File?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","com.github.panpf.sketch.loadImage"]},{"name":"fun ImageView.loadImage(resId: Int?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","description":"com.github.panpf.sketch.loadImage","location":"sketch-view/com.github.panpf.sketch/load-image.html","searchKeys":["loadImage","fun ImageView.loadImage(resId: Int?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","com.github.panpf.sketch.loadImage"]},{"name":"fun ImageView.loadImage(uri: String?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","description":"com.github.panpf.sketch.loadImage","location":"sketch-view/com.github.panpf.sketch/load-image.html","searchKeys":["loadImage","fun ImageView.loadImage(uri: String?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","com.github.panpf.sketch.loadImage"]},{"name":"fun ImageView.loadImage(uri: Uri?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","description":"com.github.panpf.sketch.loadImage","location":"sketch-view/com.github.panpf.sketch/load-image.html","searchKeys":["loadImage","fun ImageView.loadImage(uri: Uri?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","com.github.panpf.sketch.loadImage"]},{"name":"fun ImageView.loadResourceImage(packageName: String, resId: Int, block: ImageRequest.Builder.() -> Unit? = null): Disposable","description":"com.github.panpf.sketch.loadResourceImage","location":"sketch-view/com.github.panpf.sketch/load-resource-image.html","searchKeys":["loadResourceImage","fun ImageView.loadResourceImage(packageName: String, resId: Int, block: ImageRequest.Builder.() -> Unit? = null): Disposable","com.github.panpf.sketch.loadResourceImage"]},{"name":"fun ImageView.loadResourceImage(resId: Int?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","description":"com.github.panpf.sketch.loadResourceImage","location":"sketch-view/com.github.panpf.sketch/load-resource-image.html","searchKeys":["loadResourceImage","fun ImageView.loadResourceImage(resId: Int?, block: ImageRequest.Builder.() -> Unit? = null): Disposable","com.github.panpf.sketch.loadResourceImage"]},{"name":"class Content(channel: ByteReadChannel) : HttpStack.Content","description":"com.github.panpf.sketch.http.KtorStack.Content","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/-content/index.html","searchKeys":["Content","class Content(channel: ByteReadChannel) : HttpStack.Content","com.github.panpf.sketch.http.KtorStack.Content"]},{"name":"class Factory(val httpStack: KtorStack = KtorStack()) : Fetcher.Factory","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-factory/index.html","searchKeys":["Factory","class Factory(val httpStack: KtorStack = KtorStack()) : Fetcher.Factory","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory"]},{"name":"class KtorHttpUriFetcher(sketch: Sketch, httpStack: KtorStack, request: ImageRequest, downloadCacheKey: String) : HttpUriFetcher","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/index.html","searchKeys":["KtorHttpUriFetcher","class KtorHttpUriFetcher(sketch: Sketch, httpStack: KtorStack, request: ImageRequest, downloadCacheKey: String) : HttpUriFetcher","com.github.panpf.sketch.fetch.KtorHttpUriFetcher"]},{"name":"class KtorStack(val client: HttpClient = HttpClient()) : HttpStack","description":"com.github.panpf.sketch.http.KtorStack","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/index.html","searchKeys":["KtorStack","class KtorStack(val client: HttpClient = HttpClient()) : HttpStack","com.github.panpf.sketch.http.KtorStack"]},{"name":"class Response(val httpResponse: HttpResponse) : HttpStack.Response","description":"com.github.panpf.sketch.http.KtorStack.Response","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/-response/index.html","searchKeys":["Response","class Response(val httpResponse: HttpResponse) : HttpStack.Response","com.github.panpf.sketch.http.KtorStack.Response"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.internal.KtorHttpUriFetcherProvider.KtorHttpUriFetcherProvider","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch.internal/-ktor-http-uri-fetcher-provider/-ktor-http-uri-fetcher-provider.html","searchKeys":["KtorHttpUriFetcherProvider","constructor()","com.github.panpf.sketch.fetch.internal.KtorHttpUriFetcherProvider.KtorHttpUriFetcherProvider"]},{"name":"constructor(channel: ByteReadChannel)","description":"com.github.panpf.sketch.http.KtorStack.Content.Content","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/-content/-content.html","searchKeys":["Content","constructor(channel: ByteReadChannel)","com.github.panpf.sketch.http.KtorStack.Content.Content"]},{"name":"constructor(client: HttpClient = HttpClient())","description":"com.github.panpf.sketch.http.KtorStack.KtorStack","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/-ktor-stack.html","searchKeys":["KtorStack","constructor(client: HttpClient = HttpClient())","com.github.panpf.sketch.http.KtorStack.KtorStack"]},{"name":"constructor(httpResponse: HttpResponse)","description":"com.github.panpf.sketch.http.KtorStack.Response.Response","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/-response/-response.html","searchKeys":["Response","constructor(httpResponse: HttpResponse)","com.github.panpf.sketch.http.KtorStack.Response.Response"]},{"name":"constructor(httpStack: KtorStack = KtorStack())","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.Factory","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor(httpStack: KtorStack = KtorStack())","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.Factory"]},{"name":"constructor(sketch: Sketch, httpStack: KtorStack, request: ImageRequest, downloadCacheKey: String)","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.KtorHttpUriFetcher","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-ktor-http-uri-fetcher.html","searchKeys":["KtorHttpUriFetcher","constructor(sketch: Sketch, httpStack: KtorStack, request: ImageRequest, downloadCacheKey: String)","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.KtorHttpUriFetcher"]},{"name":"expect class KtorHttpUriFetcherProvider : FetcherProvider","description":"com.github.panpf.sketch.fetch.internal.KtorHttpUriFetcherProvider","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch.internal/-ktor-http-uri-fetcher-provider/index.html","searchKeys":["KtorHttpUriFetcherProvider","expect class KtorHttpUriFetcherProvider : FetcherProvider","com.github.panpf.sketch.fetch.internal.KtorHttpUriFetcherProvider"]},{"name":"expect open override fun factory(context: PlatformContext): KtorHttpUriFetcher.Factory","description":"com.github.panpf.sketch.fetch.internal.KtorHttpUriFetcherProvider.factory","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch.internal/-ktor-http-uri-fetcher-provider/factory.html","searchKeys":["factory","expect open override fun factory(context: PlatformContext): KtorHttpUriFetcher.Factory","com.github.panpf.sketch.fetch.internal.KtorHttpUriFetcherProvider.factory"]},{"name":"fun ComponentRegistry.Builder.supportKtorHttpUri(httpStack: KtorStack = KtorStack()): ComponentRegistry.Builder","description":"com.github.panpf.sketch.fetch.supportKtorHttpUri","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch/support-ktor-http-uri.html","searchKeys":["supportKtorHttpUri","fun ComponentRegistry.Builder.supportKtorHttpUri(httpStack: KtorStack = KtorStack()): ComponentRegistry.Builder","com.github.panpf.sketch.fetch.supportKtorHttpUri"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.equals","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.equals","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.equals"]},{"name":"open override fun close()","description":"com.github.panpf.sketch.http.KtorStack.Content.close","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/-content/close.html","searchKeys":["close","open override fun close()","com.github.panpf.sketch.http.KtorStack.Content.close"]},{"name":"open override fun create(requestContext: RequestContext): HttpUriFetcher?","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.create","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext): HttpUriFetcher?","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.create"]},{"name":"open override fun getHeaderField(name: String): String?","description":"com.github.panpf.sketch.http.KtorStack.Response.getHeaderField","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/-response/get-header-field.html","searchKeys":["getHeaderField","open override fun getHeaderField(name: String): String?","com.github.panpf.sketch.http.KtorStack.Response.getHeaderField"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.hashCode","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.hashCode","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.toString","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.toString","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.http.KtorStack.toString","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.http.KtorStack.toString"]},{"name":"open override val code: Int","description":"com.github.panpf.sketch.http.KtorStack.Response.code","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/-response/code.html","searchKeys":["code","open override val code: Int","com.github.panpf.sketch.http.KtorStack.Response.code"]},{"name":"open override val contentLength: Long","description":"com.github.panpf.sketch.http.KtorStack.Response.contentLength","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/-response/content-length.html","searchKeys":["contentLength","open override val contentLength: Long","com.github.panpf.sketch.http.KtorStack.Response.contentLength"]},{"name":"open override val contentType: String?","description":"com.github.panpf.sketch.http.KtorStack.Response.contentType","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/-response/content-type.html","searchKeys":["contentType","open override val contentType: String?","com.github.panpf.sketch.http.KtorStack.Response.contentType"]},{"name":"open override val message: String","description":"com.github.panpf.sketch.http.KtorStack.Response.message","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/-response/message.html","searchKeys":["message","open override val message: String","com.github.panpf.sketch.http.KtorStack.Response.message"]},{"name":"open suspend override fun <T> request(url: String, httpHeaders: HttpHeaders?, extras: Extras?, block: suspend (HttpStack.Response) -> T): T","description":"com.github.panpf.sketch.http.KtorStack.request","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/request.html","searchKeys":["request","open suspend override fun <T> request(url: String, httpHeaders: HttpHeaders?, extras: Extras?, block: suspend (HttpStack.Response) -> T): T","com.github.panpf.sketch.http.KtorStack.request"]},{"name":"open suspend override fun content(): HttpStack.Content","description":"com.github.panpf.sketch.http.KtorStack.Response.content","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/-response/content.html","searchKeys":["content","open suspend override fun content(): HttpStack.Content","com.github.panpf.sketch.http.KtorStack.Response.content"]},{"name":"open suspend override fun getResponse(url: String, httpHeaders: HttpHeaders?, extras: Extras?): HttpStack.Response","description":"com.github.panpf.sketch.http.KtorStack.getResponse","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/get-response.html","searchKeys":["getResponse","open suspend override fun getResponse(url: String, httpHeaders: HttpHeaders?, extras: Extras?): HttpStack.Response","com.github.panpf.sketch.http.KtorStack.getResponse"]},{"name":"open suspend override fun read(buffer: ByteArray): Int","description":"com.github.panpf.sketch.http.KtorStack.Content.read","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/-content/read.html","searchKeys":["read","open suspend override fun read(buffer: ByteArray): Int","com.github.panpf.sketch.http.KtorStack.Content.read"]},{"name":"val client: HttpClient","description":"com.github.panpf.sketch.http.KtorStack.client","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/client.html","searchKeys":["client","val client: HttpClient","com.github.panpf.sketch.http.KtorStack.client"]},{"name":"val httpResponse: HttpResponse","description":"com.github.panpf.sketch.http.KtorStack.Response.httpResponse","location":"sketch-http-ktor2-core/com.github.panpf.sketch.http/-ktor-stack/-response/http-response.html","searchKeys":["httpResponse","val httpResponse: HttpResponse","com.github.panpf.sketch.http.KtorStack.Response.httpResponse"]},{"name":"val httpStack: KtorStack","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.httpStack","location":"sketch-http-ktor2-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-factory/http-stack.html","searchKeys":["httpStack","val httpStack: KtorStack","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.httpStack"]},{"name":"class Builder","description":"com.github.panpf.sketch.http.OkHttpStack.Builder","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-builder/index.html","searchKeys":["Builder","class Builder","com.github.panpf.sketch.http.OkHttpStack.Builder"]},{"name":"class Content(inputStream: <Error class: unknown class>) : HttpStack.Content","description":"com.github.panpf.sketch.http.OkHttpStack.Content","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-content/index.html","searchKeys":["Content","class Content(inputStream: <Error class: unknown class>) : HttpStack.Content","com.github.panpf.sketch.http.OkHttpStack.Content"]},{"name":"class Factory(val httpStack: OkHttpStack = OkHttpStack.Builder().build()) : Fetcher.Factory","description":"com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.Factory","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch/-ok-http-http-uri-fetcher/-factory/index.html","searchKeys":["Factory","class Factory(val httpStack: OkHttpStack = OkHttpStack.Builder().build()) : Fetcher.Factory","com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.Factory"]},{"name":"class OkHttpHttpUriFetcher(sketch: Sketch, httpStack: OkHttpStack, request: ImageRequest, downloadCacheKey: String) : HttpUriFetcher","description":"com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch/-ok-http-http-uri-fetcher/index.html","searchKeys":["OkHttpHttpUriFetcher","class OkHttpHttpUriFetcher(sketch: Sketch, httpStack: OkHttpStack, request: ImageRequest, downloadCacheKey: String) : HttpUriFetcher","com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher"]},{"name":"class OkHttpHttpUriFetcherProvider : FetcherProvider","description":"com.github.panpf.sketch.fetch.internal.OkHttpHttpUriFetcherProvider","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch.internal/-ok-http-http-uri-fetcher-provider/index.html","searchKeys":["OkHttpHttpUriFetcherProvider","class OkHttpHttpUriFetcherProvider : FetcherProvider","com.github.panpf.sketch.fetch.internal.OkHttpHttpUriFetcherProvider"]},{"name":"class OkHttpStack(val okHttpClient: <Error class: unknown class>) : HttpStack","description":"com.github.panpf.sketch.http.OkHttpStack","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/index.html","searchKeys":["OkHttpStack","class OkHttpStack(val okHttpClient: <Error class: unknown class>) : HttpStack","com.github.panpf.sketch.http.OkHttpStack"]},{"name":"class Response(val response: <Error class: unknown class>) : HttpStack.Response","description":"com.github.panpf.sketch.http.OkHttpStack.Response","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-response/index.html","searchKeys":["Response","class Response(val response: <Error class: unknown class>) : HttpStack.Response","com.github.panpf.sketch.http.OkHttpStack.Response"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.internal.OkHttpHttpUriFetcherProvider.OkHttpHttpUriFetcherProvider","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch.internal/-ok-http-http-uri-fetcher-provider/-ok-http-http-uri-fetcher-provider.html","searchKeys":["OkHttpHttpUriFetcherProvider","constructor()","com.github.panpf.sketch.fetch.internal.OkHttpHttpUriFetcherProvider.OkHttpHttpUriFetcherProvider"]},{"name":"constructor()","description":"com.github.panpf.sketch.http.OkHttpStack.Builder.Builder","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-builder/-builder.html","searchKeys":["Builder","constructor()","com.github.panpf.sketch.http.OkHttpStack.Builder.Builder"]},{"name":"constructor(httpStack: OkHttpStack = OkHttpStack.Builder().build())","description":"com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.Factory.Factory","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch/-ok-http-http-uri-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor(httpStack: OkHttpStack = OkHttpStack.Builder().build())","com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.Factory.Factory"]},{"name":"constructor(inputStream: <Error class: unknown class>)","description":"com.github.panpf.sketch.http.OkHttpStack.Content.Content","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-content/-content.html","searchKeys":["Content","constructor(inputStream: <Error class: unknown class>)","com.github.panpf.sketch.http.OkHttpStack.Content.Content"]},{"name":"constructor(okHttpClient: <Error class: unknown class>)","description":"com.github.panpf.sketch.http.OkHttpStack.OkHttpStack","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-ok-http-stack.html","searchKeys":["OkHttpStack","constructor(okHttpClient: <Error class: unknown class>)","com.github.panpf.sketch.http.OkHttpStack.OkHttpStack"]},{"name":"constructor(response: <Error class: unknown class>)","description":"com.github.panpf.sketch.http.OkHttpStack.Response.Response","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-response/-response.html","searchKeys":["Response","constructor(response: <Error class: unknown class>)","com.github.panpf.sketch.http.OkHttpStack.Response.Response"]},{"name":"constructor(sketch: Sketch, httpStack: OkHttpStack, request: ImageRequest, downloadCacheKey: String)","description":"com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.OkHttpHttpUriFetcher","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch/-ok-http-http-uri-fetcher/-ok-http-http-uri-fetcher.html","searchKeys":["OkHttpHttpUriFetcher","constructor(sketch: Sketch, httpStack: OkHttpStack, request: ImageRequest, downloadCacheKey: String)","com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.OkHttpHttpUriFetcher"]},{"name":"constructor(userAgent: String?, headers: Map<String, String>? = null, addHeaders: List<Pair<String, String>>? = null)","description":"com.github.panpf.sketch.http.OkHttpStack.MyInterceptor.MyInterceptor","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-my-interceptor/-my-interceptor.html","searchKeys":["MyInterceptor","constructor(userAgent: String?, headers: Map<String, String>? = null, addHeaders: List<Pair<String, String>>? = null)","com.github.panpf.sketch.http.OkHttpStack.MyInterceptor.MyInterceptor"]},{"name":"data class MyInterceptor(val userAgent: String?, val headers: Map<String, String>? = null, val addHeaders: List<Pair<String, String>>? = null)","description":"com.github.panpf.sketch.http.OkHttpStack.MyInterceptor","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-my-interceptor/index.html","searchKeys":["MyInterceptor","data class MyInterceptor(val userAgent: String?, val headers: Map<String, String>? = null, val addHeaders: List<Pair<String, String>>? = null)","com.github.panpf.sketch.http.OkHttpStack.MyInterceptor"]},{"name":"fun ComponentRegistry.Builder.supportOkHttpHttpUri(httpStack: OkHttpStack = OkHttpStack.Builder().build()): ComponentRegistry.Builder","description":"com.github.panpf.sketch.fetch.supportOkHttpHttpUri","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch/support-ok-http-http-uri.html","searchKeys":["supportOkHttpHttpUri","fun ComponentRegistry.Builder.supportOkHttpHttpUri(httpStack: OkHttpStack = OkHttpStack.Builder().build()): ComponentRegistry.Builder","com.github.panpf.sketch.fetch.supportOkHttpHttpUri"]},{"name":"fun addHeaders(headers: List<Pair<String, String>>): OkHttpStack.Builder","description":"com.github.panpf.sketch.http.OkHttpStack.Builder.addHeaders","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-builder/add-headers.html","searchKeys":["addHeaders","fun addHeaders(headers: List<Pair<String, String>>): OkHttpStack.Builder","com.github.panpf.sketch.http.OkHttpStack.Builder.addHeaders"]},{"name":"fun addHeaders(vararg headers: Pair<String, String>): OkHttpStack.Builder","description":"com.github.panpf.sketch.http.OkHttpStack.Builder.addHeaders","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-builder/add-headers.html","searchKeys":["addHeaders","fun addHeaders(vararg headers: Pair<String, String>): OkHttpStack.Builder","com.github.panpf.sketch.http.OkHttpStack.Builder.addHeaders"]},{"name":"fun build(): OkHttpStack","description":"com.github.panpf.sketch.http.OkHttpStack.Builder.build","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-builder/build.html","searchKeys":["build","fun build(): OkHttpStack","com.github.panpf.sketch.http.OkHttpStack.Builder.build"]},{"name":"fun connectTimeoutMillis(connectTimeout: Int): OkHttpStack.Builder","description":"com.github.panpf.sketch.http.OkHttpStack.Builder.connectTimeoutMillis","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-builder/connect-timeout-millis.html","searchKeys":["connectTimeoutMillis","fun connectTimeoutMillis(connectTimeout: Int): OkHttpStack.Builder","com.github.panpf.sketch.http.OkHttpStack.Builder.connectTimeoutMillis"]},{"name":"fun headers(headers: Map<String, String>): OkHttpStack.Builder","description":"com.github.panpf.sketch.http.OkHttpStack.Builder.headers","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-builder/headers.html","searchKeys":["headers","fun headers(headers: Map<String, String>): OkHttpStack.Builder","com.github.panpf.sketch.http.OkHttpStack.Builder.headers"]},{"name":"fun headers(vararg headers: Pair<String, String>): OkHttpStack.Builder","description":"com.github.panpf.sketch.http.OkHttpStack.Builder.headers","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-builder/headers.html","searchKeys":["headers","fun headers(vararg headers: Pair<String, String>): OkHttpStack.Builder","com.github.panpf.sketch.http.OkHttpStack.Builder.headers"]},{"name":"fun interceptors(vararg interceptors: <Error class: unknown class>): OkHttpStack.Builder","description":"com.github.panpf.sketch.http.OkHttpStack.Builder.interceptors","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-builder/interceptors.html","searchKeys":["interceptors","fun interceptors(vararg interceptors: <Error class: unknown class>): OkHttpStack.Builder","com.github.panpf.sketch.http.OkHttpStack.Builder.interceptors"]},{"name":"fun networkInterceptors(vararg networkInterceptors: <Error class: unknown class>): OkHttpStack.Builder","description":"com.github.panpf.sketch.http.OkHttpStack.Builder.networkInterceptors","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-builder/network-interceptors.html","searchKeys":["networkInterceptors","fun networkInterceptors(vararg networkInterceptors: <Error class: unknown class>): OkHttpStack.Builder","com.github.panpf.sketch.http.OkHttpStack.Builder.networkInterceptors"]},{"name":"fun readTimeoutMillis(readTimeout: Int): OkHttpStack.Builder","description":"com.github.panpf.sketch.http.OkHttpStack.Builder.readTimeoutMillis","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-builder/read-timeout-millis.html","searchKeys":["readTimeoutMillis","fun readTimeoutMillis(readTimeout: Int): OkHttpStack.Builder","com.github.panpf.sketch.http.OkHttpStack.Builder.readTimeoutMillis"]},{"name":"fun userAgent(userAgent: String?): OkHttpStack.Builder","description":"com.github.panpf.sketch.http.OkHttpStack.Builder.userAgent","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-builder/user-agent.html","searchKeys":["userAgent","fun userAgent(userAgent: String?): OkHttpStack.Builder","com.github.panpf.sketch.http.OkHttpStack.Builder.userAgent"]},{"name":"open fun intercept(chain: <Error class: unknown class>): <Error class: unknown class>","description":"com.github.panpf.sketch.http.OkHttpStack.MyInterceptor.intercept","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-my-interceptor/intercept.html","searchKeys":["intercept","open fun intercept(chain: <Error class: unknown class>): <Error class: unknown class>","com.github.panpf.sketch.http.OkHttpStack.MyInterceptor.intercept"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.Factory.equals","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch/-ok-http-http-uri-fetcher/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.equals","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch/-ok-http-http-uri-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.http.OkHttpStack.equals","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.http.OkHttpStack.equals"]},{"name":"open override fun close()","description":"com.github.panpf.sketch.http.OkHttpStack.Content.close","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-content/close.html","searchKeys":["close","open override fun close()","com.github.panpf.sketch.http.OkHttpStack.Content.close"]},{"name":"open override fun create(requestContext: RequestContext): HttpUriFetcher?","description":"com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.Factory.create","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch/-ok-http-http-uri-fetcher/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext): HttpUriFetcher?","com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.Factory.create"]},{"name":"open override fun factory(context: PlatformContext): OkHttpHttpUriFetcher.Factory","description":"com.github.panpf.sketch.fetch.internal.OkHttpHttpUriFetcherProvider.factory","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch.internal/-ok-http-http-uri-fetcher-provider/factory.html","searchKeys":["factory","open override fun factory(context: PlatformContext): OkHttpHttpUriFetcher.Factory","com.github.panpf.sketch.fetch.internal.OkHttpHttpUriFetcherProvider.factory"]},{"name":"open override fun getHeaderField(name: String): String?","description":"com.github.panpf.sketch.http.OkHttpStack.Response.getHeaderField","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-response/get-header-field.html","searchKeys":["getHeaderField","open override fun getHeaderField(name: String): String?","com.github.panpf.sketch.http.OkHttpStack.Response.getHeaderField"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.Factory.hashCode","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch/-ok-http-http-uri-fetcher/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.hashCode","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch/-ok-http-http-uri-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.http.OkHttpStack.hashCode","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.http.OkHttpStack.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.Factory.toString","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch/-ok-http-http-uri-fetcher/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.toString","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch/-ok-http-http-uri-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.http.OkHttpStack.toString","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.http.OkHttpStack.toString"]},{"name":"open override val code: Int","description":"com.github.panpf.sketch.http.OkHttpStack.Response.code","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-response/code.html","searchKeys":["code","open override val code: Int","com.github.panpf.sketch.http.OkHttpStack.Response.code"]},{"name":"open override val contentLength: Long","description":"com.github.panpf.sketch.http.OkHttpStack.Response.contentLength","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-response/content-length.html","searchKeys":["contentLength","open override val contentLength: Long","com.github.panpf.sketch.http.OkHttpStack.Response.contentLength"]},{"name":"open override val contentType: String?","description":"com.github.panpf.sketch.http.OkHttpStack.Response.contentType","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-response/content-type.html","searchKeys":["contentType","open override val contentType: String?","com.github.panpf.sketch.http.OkHttpStack.Response.contentType"]},{"name":"open override val message: String","description":"com.github.panpf.sketch.http.OkHttpStack.Response.message","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-response/message.html","searchKeys":["message","open override val message: String","com.github.panpf.sketch.http.OkHttpStack.Response.message"]},{"name":"open suspend override fun <T> request(url: String, httpHeaders: HttpHeaders?, extras: Extras?, block: suspend (HttpStack.Response) -> T): T","description":"com.github.panpf.sketch.http.OkHttpStack.request","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/request.html","searchKeys":["request","open suspend override fun <T> request(url: String, httpHeaders: HttpHeaders?, extras: Extras?, block: suspend (HttpStack.Response) -> T): T","com.github.panpf.sketch.http.OkHttpStack.request"]},{"name":"open suspend override fun content(): HttpStack.Content","description":"com.github.panpf.sketch.http.OkHttpStack.Response.content","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-response/content.html","searchKeys":["content","open suspend override fun content(): HttpStack.Content","com.github.panpf.sketch.http.OkHttpStack.Response.content"]},{"name":"open suspend override fun getResponse(url: String, httpHeaders: HttpHeaders?, extras: Extras?): HttpStack.Response","description":"com.github.panpf.sketch.http.OkHttpStack.getResponse","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/get-response.html","searchKeys":["getResponse","open suspend override fun getResponse(url: String, httpHeaders: HttpHeaders?, extras: Extras?): HttpStack.Response","com.github.panpf.sketch.http.OkHttpStack.getResponse"]},{"name":"open suspend override fun read(buffer: ByteArray): Int","description":"com.github.panpf.sketch.http.OkHttpStack.Content.read","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-content/read.html","searchKeys":["read","open suspend override fun read(buffer: ByteArray): Int","com.github.panpf.sketch.http.OkHttpStack.Content.read"]},{"name":"val addHeaders: List<Pair<String, String>>? = null","description":"com.github.panpf.sketch.http.OkHttpStack.MyInterceptor.addHeaders","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-my-interceptor/add-headers.html","searchKeys":["addHeaders","val addHeaders: List<Pair<String, String>>? = null","com.github.panpf.sketch.http.OkHttpStack.MyInterceptor.addHeaders"]},{"name":"val headers: Map<String, String>? = null","description":"com.github.panpf.sketch.http.OkHttpStack.MyInterceptor.headers","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-my-interceptor/headers.html","searchKeys":["headers","val headers: Map<String, String>? = null","com.github.panpf.sketch.http.OkHttpStack.MyInterceptor.headers"]},{"name":"val httpStack: OkHttpStack","description":"com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.Factory.httpStack","location":"sketch-http-okhttp/com.github.panpf.sketch.fetch/-ok-http-http-uri-fetcher/-factory/http-stack.html","searchKeys":["httpStack","val httpStack: OkHttpStack","com.github.panpf.sketch.fetch.OkHttpHttpUriFetcher.Factory.httpStack"]},{"name":"val okHttpClient: <Error class: unknown class>","description":"com.github.panpf.sketch.http.OkHttpStack.okHttpClient","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/ok-http-client.html","searchKeys":["okHttpClient","val okHttpClient: <Error class: unknown class>","com.github.panpf.sketch.http.OkHttpStack.okHttpClient"]},{"name":"val response: <Error class: unknown class>","description":"com.github.panpf.sketch.http.OkHttpStack.Response.response","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-response/response.html","searchKeys":["response","val response: <Error class: unknown class>","com.github.panpf.sketch.http.OkHttpStack.Response.response"]},{"name":"val userAgent: String?","description":"com.github.panpf.sketch.http.OkHttpStack.MyInterceptor.userAgent","location":"sketch-http-okhttp/com.github.panpf.sketch.http/-ok-http-stack/-my-interceptor/user-agent.html","searchKeys":["userAgent","val userAgent: String?","com.github.panpf.sketch.http.OkHttpStack.MyInterceptor.userAgent"]},{"name":"class Factory : Decoder.Factory","description":"com.github.panpf.sketch.decode.GifDecoder.Factory","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-gif-decoder/-factory/index.html","searchKeys":["Factory","class Factory : Decoder.Factory","com.github.panpf.sketch.decode.GifDecoder.Factory"]},{"name":"class Factory : Decoder.Factory","description":"com.github.panpf.sketch.decode.ImageDecoderGifDecoder.Factory","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-image-decoder-gif-decoder/-factory/index.html","searchKeys":["Factory","class Factory : Decoder.Factory","com.github.panpf.sketch.decode.ImageDecoderGifDecoder.Factory"]},{"name":"class Factory : Decoder.Factory","description":"com.github.panpf.sketch.decode.MovieGifDecoder.Factory","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-movie-gif-decoder/-factory/index.html","searchKeys":["Factory","class Factory : Decoder.Factory","com.github.panpf.sketch.decode.MovieGifDecoder.Factory"]},{"name":"class Factory : Decoder.Factory","description":"com.github.panpf.sketch.decode.SkiaGifDecoder.Factory","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-skia-gif-decoder/-factory/index.html","searchKeys":["Factory","class Factory : Decoder.Factory","com.github.panpf.sketch.decode.SkiaGifDecoder.Factory"]},{"name":"class GifDecoder(val decoder: Decoder) : Decoder","description":"com.github.panpf.sketch.decode.GifDecoder","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-gif-decoder/index.html","searchKeys":["GifDecoder","class GifDecoder(val decoder: Decoder) : Decoder","com.github.panpf.sketch.decode.GifDecoder"]},{"name":"class ImageDecoderGifDecoder(requestContext: RequestContext, dataSource: DataSource) : ImageDecoderAnimatedDecoder","description":"com.github.panpf.sketch.decode.ImageDecoderGifDecoder","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-image-decoder-gif-decoder/index.html","searchKeys":["ImageDecoderGifDecoder","class ImageDecoderGifDecoder(requestContext: RequestContext, dataSource: DataSource) : ImageDecoderAnimatedDecoder","com.github.panpf.sketch.decode.ImageDecoderGifDecoder"]},{"name":"class MovieDrawable(movie: Movie, val config: Bitmap.Config = Bitmap.Config.ARGB_8888) : Drawable, Animatable2Compat, SketchDrawable","description":"com.github.panpf.sketch.drawable.MovieDrawable","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/index.html","searchKeys":["MovieDrawable","class MovieDrawable(movie: Movie, val config: Bitmap.Config = Bitmap.Config.ARGB_8888) : Drawable, Animatable2Compat, SketchDrawable","com.github.panpf.sketch.drawable.MovieDrawable"]},{"name":"class MovieGifDecoder(requestContext: RequestContext, dataSource: DataSource) : Decoder","description":"com.github.panpf.sketch.decode.MovieGifDecoder","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-movie-gif-decoder/index.html","searchKeys":["MovieGifDecoder","class MovieGifDecoder(requestContext: RequestContext, dataSource: DataSource) : Decoder","com.github.panpf.sketch.decode.MovieGifDecoder"]},{"name":"class SkiaGifDecoder(requestContext: RequestContext, dataSource: DataSource) : SkiaAnimatedDecoder","description":"com.github.panpf.sketch.decode.SkiaGifDecoder","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-skia-gif-decoder/index.html","searchKeys":["SkiaGifDecoder","class SkiaGifDecoder(requestContext: RequestContext, dataSource: DataSource) : SkiaAnimatedDecoder","com.github.panpf.sketch.decode.SkiaGifDecoder"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.GifDecoder.Factory.Factory","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-gif-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.GifDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.ImageDecoderGifDecoder.Factory.Factory","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-image-decoder-gif-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.ImageDecoderGifDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.MovieGifDecoder.Factory.Factory","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-movie-gif-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.MovieGifDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.SkiaGifDecoder.Factory.Factory","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-skia-gif-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.SkiaGifDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.internal.GifDecoderProvider.GifDecoderProvider","location":"sketch-animated-gif/com.github.panpf.sketch.decode.internal/-gif-decoder-provider/-gif-decoder-provider.html","searchKeys":["GifDecoderProvider","constructor()","com.github.panpf.sketch.decode.internal.GifDecoderProvider.GifDecoderProvider"]},{"name":"constructor(decoder: Decoder)","description":"com.github.panpf.sketch.decode.GifDecoder.GifDecoder","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-gif-decoder/-gif-decoder.html","searchKeys":["GifDecoder","constructor(decoder: Decoder)","com.github.panpf.sketch.decode.GifDecoder.GifDecoder"]},{"name":"constructor(movie: Movie, config: Bitmap.Config = Bitmap.Config.ARGB_8888)","description":"com.github.panpf.sketch.drawable.MovieDrawable.MovieDrawable","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/-movie-drawable.html","searchKeys":["MovieDrawable","constructor(movie: Movie, config: Bitmap.Config = Bitmap.Config.ARGB_8888)","com.github.panpf.sketch.drawable.MovieDrawable.MovieDrawable"]},{"name":"constructor(requestContext: RequestContext, dataSource: DataSource)","description":"com.github.panpf.sketch.decode.ImageDecoderGifDecoder.ImageDecoderGifDecoder","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-image-decoder-gif-decoder/-image-decoder-gif-decoder.html","searchKeys":["ImageDecoderGifDecoder","constructor(requestContext: RequestContext, dataSource: DataSource)","com.github.panpf.sketch.decode.ImageDecoderGifDecoder.ImageDecoderGifDecoder"]},{"name":"constructor(requestContext: RequestContext, dataSource: DataSource)","description":"com.github.panpf.sketch.decode.MovieGifDecoder.MovieGifDecoder","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-movie-gif-decoder/-movie-gif-decoder.html","searchKeys":["MovieGifDecoder","constructor(requestContext: RequestContext, dataSource: DataSource)","com.github.panpf.sketch.decode.MovieGifDecoder.MovieGifDecoder"]},{"name":"constructor(requestContext: RequestContext, dataSource: DataSource)","description":"com.github.panpf.sketch.decode.SkiaGifDecoder.SkiaGifDecoder","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-skia-gif-decoder/-skia-gif-decoder.html","searchKeys":["SkiaGifDecoder","constructor(requestContext: RequestContext, dataSource: DataSource)","com.github.panpf.sketch.decode.SkiaGifDecoder.SkiaGifDecoder"]},{"name":"expect class GifDecoderProvider : DecoderProvider","description":"com.github.panpf.sketch.decode.internal.GifDecoderProvider","location":"sketch-animated-gif/com.github.panpf.sketch.decode.internal/-gif-decoder-provider/index.html","searchKeys":["GifDecoderProvider","expect class GifDecoderProvider : DecoderProvider","com.github.panpf.sketch.decode.internal.GifDecoderProvider"]},{"name":"expect fun defaultGifDecoderFactory(): Decoder.Factory","description":"com.github.panpf.sketch.decode.defaultGifDecoderFactory","location":"sketch-animated-gif/com.github.panpf.sketch.decode/default-gif-decoder-factory.html","searchKeys":["defaultGifDecoderFactory","expect fun defaultGifDecoderFactory(): Decoder.Factory","com.github.panpf.sketch.decode.defaultGifDecoderFactory"]},{"name":"expect open override fun factory(context: PlatformContext): GifDecoder.Factory","description":"com.github.panpf.sketch.decode.internal.GifDecoderProvider.factory","location":"sketch-animated-gif/com.github.panpf.sketch.decode.internal/-gif-decoder-provider/factory.html","searchKeys":["factory","expect open override fun factory(context: PlatformContext): GifDecoder.Factory","com.github.panpf.sketch.decode.internal.GifDecoderProvider.factory"]},{"name":"fun ComponentRegistry.Builder.supportGif(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.decode.supportGif","location":"sketch-animated-gif/com.github.panpf.sketch.decode/support-gif.html","searchKeys":["supportGif","fun ComponentRegistry.Builder.supportGif(): ComponentRegistry.Builder","com.github.panpf.sketch.decode.supportGif"]},{"name":"fun ComponentRegistry.Builder.supportImageDecoderGif(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.decode.supportImageDecoderGif","location":"sketch-animated-gif/com.github.panpf.sketch.decode/support-image-decoder-gif.html","searchKeys":["supportImageDecoderGif","fun ComponentRegistry.Builder.supportImageDecoderGif(): ComponentRegistry.Builder","com.github.panpf.sketch.decode.supportImageDecoderGif"]},{"name":"fun ComponentRegistry.Builder.supportMovieGif(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.decode.supportMovieGif","location":"sketch-animated-gif/com.github.panpf.sketch.decode/support-movie-gif.html","searchKeys":["supportMovieGif","fun ComponentRegistry.Builder.supportMovieGif(): ComponentRegistry.Builder","com.github.panpf.sketch.decode.supportMovieGif"]},{"name":"fun ComponentRegistry.Builder.supportSkiaGif(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.decode.supportSkiaGif","location":"sketch-animated-gif/com.github.panpf.sketch.decode/support-skia-gif.html","searchKeys":["supportSkiaGif","fun ComponentRegistry.Builder.supportSkiaGif(): ComponentRegistry.Builder","com.github.panpf.sketch.decode.supportSkiaGif"]},{"name":"fun getAnimatedTransformation(): AnimatedTransformation?","description":"com.github.panpf.sketch.drawable.MovieDrawable.getAnimatedTransformation","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/get-animated-transformation.html","searchKeys":["getAnimatedTransformation","fun getAnimatedTransformation(): AnimatedTransformation?","com.github.panpf.sketch.drawable.MovieDrawable.getAnimatedTransformation"]},{"name":"fun getRepeatCount(): Int","description":"com.github.panpf.sketch.drawable.MovieDrawable.getRepeatCount","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/get-repeat-count.html","searchKeys":["getRepeatCount","fun getRepeatCount(): Int","com.github.panpf.sketch.drawable.MovieDrawable.getRepeatCount"]},{"name":"fun setAnimatedTransformation(animatedTransformation: AnimatedTransformation?)","description":"com.github.panpf.sketch.drawable.MovieDrawable.setAnimatedTransformation","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/set-animated-transformation.html","searchKeys":["setAnimatedTransformation","fun setAnimatedTransformation(animatedTransformation: AnimatedTransformation?)","com.github.panpf.sketch.drawable.MovieDrawable.setAnimatedTransformation"]},{"name":"fun setRepeatCount(repeatCount: Int)","description":"com.github.panpf.sketch.drawable.MovieDrawable.setRepeatCount","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/set-repeat-count.html","searchKeys":["setRepeatCount","fun setRepeatCount(repeatCount: Int)","com.github.panpf.sketch.drawable.MovieDrawable.setRepeatCount"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.GifDecoder.Factory.equals","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-gif-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.GifDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.ImageDecoderGifDecoder.Factory.equals","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-image-decoder-gif-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.ImageDecoderGifDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.MovieGifDecoder.Factory.equals","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-movie-gif-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.MovieGifDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.SkiaGifDecoder.Factory.equals","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-skia-gif-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.SkiaGifDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.MovieDrawable.equals","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.MovieDrawable.equals"]},{"name":"open override fun clearAnimationCallbacks(): <Error class: unknown class>","description":"com.github.panpf.sketch.drawable.MovieDrawable.clearAnimationCallbacks","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/clear-animation-callbacks.html","searchKeys":["clearAnimationCallbacks","open override fun clearAnimationCallbacks(): <Error class: unknown class>","com.github.panpf.sketch.drawable.MovieDrawable.clearAnimationCallbacks"]},{"name":"open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","description":"com.github.panpf.sketch.decode.GifDecoder.Factory.create","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-gif-decoder/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","com.github.panpf.sketch.decode.GifDecoder.Factory.create"]},{"name":"open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","description":"com.github.panpf.sketch.decode.ImageDecoderGifDecoder.Factory.create","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-image-decoder-gif-decoder/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","com.github.panpf.sketch.decode.ImageDecoderGifDecoder.Factory.create"]},{"name":"open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","description":"com.github.panpf.sketch.decode.MovieGifDecoder.Factory.create","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-movie-gif-decoder/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","com.github.panpf.sketch.decode.MovieGifDecoder.Factory.create"]},{"name":"open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","description":"com.github.panpf.sketch.decode.SkiaGifDecoder.Factory.create","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-skia-gif-decoder/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","com.github.panpf.sketch.decode.SkiaGifDecoder.Factory.create"]},{"name":"open override fun decode(): DecodeResult","description":"com.github.panpf.sketch.decode.MovieGifDecoder.decode","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-movie-gif-decoder/decode.html","searchKeys":["decode","open override fun decode(): DecodeResult","com.github.panpf.sketch.decode.MovieGifDecoder.decode"]},{"name":"open override fun draw(canvas: Canvas)","description":"com.github.panpf.sketch.drawable.MovieDrawable.draw","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/draw.html","searchKeys":["draw","open override fun draw(canvas: Canvas)","com.github.panpf.sketch.drawable.MovieDrawable.draw"]},{"name":"open override fun getIntrinsicHeight(): Int","description":"com.github.panpf.sketch.drawable.MovieDrawable.getIntrinsicHeight","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/get-intrinsic-height.html","searchKeys":["getIntrinsicHeight","open override fun getIntrinsicHeight(): Int","com.github.panpf.sketch.drawable.MovieDrawable.getIntrinsicHeight"]},{"name":"open override fun getIntrinsicWidth(): Int","description":"com.github.panpf.sketch.drawable.MovieDrawable.getIntrinsicWidth","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/get-intrinsic-width.html","searchKeys":["getIntrinsicWidth","open override fun getIntrinsicWidth(): Int","com.github.panpf.sketch.drawable.MovieDrawable.getIntrinsicWidth"]},{"name":"open override fun getOpacity(): Int","description":"com.github.panpf.sketch.drawable.MovieDrawable.getOpacity","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/get-opacity.html","searchKeys":["getOpacity","open override fun getOpacity(): Int","com.github.panpf.sketch.drawable.MovieDrawable.getOpacity"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.GifDecoder.Factory.hashCode","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-gif-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.GifDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.ImageDecoderGifDecoder.Factory.hashCode","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-image-decoder-gif-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.ImageDecoderGifDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.MovieGifDecoder.Factory.hashCode","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-movie-gif-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.MovieGifDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.SkiaGifDecoder.Factory.hashCode","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-skia-gif-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.SkiaGifDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.MovieDrawable.hashCode","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.MovieDrawable.hashCode"]},{"name":"open override fun isRunning(): Boolean","description":"com.github.panpf.sketch.drawable.MovieDrawable.isRunning","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","com.github.panpf.sketch.drawable.MovieDrawable.isRunning"]},{"name":"open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","description":"com.github.panpf.sketch.drawable.MovieDrawable.registerAnimationCallback","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/register-animation-callback.html","searchKeys":["registerAnimationCallback","open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","com.github.panpf.sketch.drawable.MovieDrawable.registerAnimationCallback"]},{"name":"open override fun setAlpha(alpha: Int)","description":"com.github.panpf.sketch.drawable.MovieDrawable.setAlpha","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/set-alpha.html","searchKeys":["setAlpha","open override fun setAlpha(alpha: Int)","com.github.panpf.sketch.drawable.MovieDrawable.setAlpha"]},{"name":"open override fun setColorFilter(colorFilter: ColorFilter?)","description":"com.github.panpf.sketch.drawable.MovieDrawable.setColorFilter","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/set-color-filter.html","searchKeys":["setColorFilter","open override fun setColorFilter(colorFilter: ColorFilter?)","com.github.panpf.sketch.drawable.MovieDrawable.setColorFilter"]},{"name":"open override fun start()","description":"com.github.panpf.sketch.drawable.MovieDrawable.start","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/start.html","searchKeys":["start","open override fun start()","com.github.panpf.sketch.drawable.MovieDrawable.start"]},{"name":"open override fun stop()","description":"com.github.panpf.sketch.drawable.MovieDrawable.stop","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/stop.html","searchKeys":["stop","open override fun stop()","com.github.panpf.sketch.drawable.MovieDrawable.stop"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.GifDecoder.Factory.toString","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-gif-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.GifDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.ImageDecoderGifDecoder.Factory.toString","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-image-decoder-gif-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.ImageDecoderGifDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.MovieGifDecoder.Factory.toString","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-movie-gif-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.MovieGifDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.SkiaGifDecoder.Factory.toString","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-skia-gif-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.SkiaGifDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.MovieDrawable.toString","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.MovieDrawable.toString"]},{"name":"open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","description":"com.github.panpf.sketch.drawable.MovieDrawable.unregisterAnimationCallback","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/unregister-animation-callback.html","searchKeys":["unregisterAnimationCallback","open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","com.github.panpf.sketch.drawable.MovieDrawable.unregisterAnimationCallback"]},{"name":"open override val imageInfo: ImageInfo","description":"com.github.panpf.sketch.decode.MovieGifDecoder.imageInfo","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-movie-gif-decoder/image-info.html","searchKeys":["imageInfo","open override val imageInfo: ImageInfo","com.github.panpf.sketch.decode.MovieGifDecoder.imageInfo"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.decode.GifDecoder.Factory.key","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-gif-decoder/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.decode.GifDecoder.Factory.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.decode.ImageDecoderGifDecoder.Factory.key","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-image-decoder-gif-decoder/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.decode.ImageDecoderGifDecoder.Factory.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.decode.MovieGifDecoder.Factory.key","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-movie-gif-decoder/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.decode.MovieGifDecoder.Factory.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.decode.SkiaGifDecoder.Factory.key","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-skia-gif-decoder/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.decode.SkiaGifDecoder.Factory.key"]},{"name":"val config: Bitmap.Config","description":"com.github.panpf.sketch.drawable.MovieDrawable.config","location":"sketch-animated-gif/com.github.panpf.sketch.drawable/-movie-drawable/config.html","searchKeys":["config","val config: Bitmap.Config","com.github.panpf.sketch.drawable.MovieDrawable.config"]},{"name":"val decoder: Decoder","description":"com.github.panpf.sketch.decode.GifDecoder.decoder","location":"sketch-animated-gif/com.github.panpf.sketch.decode/-gif-decoder/decoder.html","searchKeys":["decoder","val decoder: Decoder","com.github.panpf.sketch.decode.GifDecoder.decoder"]},{"name":"class Content(channel: ByteReadChannel) : HttpStack.Content","description":"com.github.panpf.sketch.http.KtorStack.Content","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/-content/index.html","searchKeys":["Content","class Content(channel: ByteReadChannel) : HttpStack.Content","com.github.panpf.sketch.http.KtorStack.Content"]},{"name":"class Factory(val httpStack: KtorStack = KtorStack()) : Fetcher.Factory","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-factory/index.html","searchKeys":["Factory","class Factory(val httpStack: KtorStack = KtorStack()) : Fetcher.Factory","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory"]},{"name":"class KtorHttpUriFetcher(sketch: Sketch, httpStack: KtorStack, request: ImageRequest, downloadCacheKey: String) : HttpUriFetcher","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/index.html","searchKeys":["KtorHttpUriFetcher","class KtorHttpUriFetcher(sketch: Sketch, httpStack: KtorStack, request: ImageRequest, downloadCacheKey: String) : HttpUriFetcher","com.github.panpf.sketch.fetch.KtorHttpUriFetcher"]},{"name":"class KtorStack(val client: HttpClient = HttpClient()) : HttpStack","description":"com.github.panpf.sketch.http.KtorStack","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/index.html","searchKeys":["KtorStack","class KtorStack(val client: HttpClient = HttpClient()) : HttpStack","com.github.panpf.sketch.http.KtorStack"]},{"name":"class Response(val httpResponse: HttpResponse) : HttpStack.Response","description":"com.github.panpf.sketch.http.KtorStack.Response","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/-response/index.html","searchKeys":["Response","class Response(val httpResponse: HttpResponse) : HttpStack.Response","com.github.panpf.sketch.http.KtorStack.Response"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.internal.KtorHttpUriFetcherProvider.KtorHttpUriFetcherProvider","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch.internal/-ktor-http-uri-fetcher-provider/-ktor-http-uri-fetcher-provider.html","searchKeys":["KtorHttpUriFetcherProvider","constructor()","com.github.panpf.sketch.fetch.internal.KtorHttpUriFetcherProvider.KtorHttpUriFetcherProvider"]},{"name":"constructor(channel: ByteReadChannel)","description":"com.github.panpf.sketch.http.KtorStack.Content.Content","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/-content/-content.html","searchKeys":["Content","constructor(channel: ByteReadChannel)","com.github.panpf.sketch.http.KtorStack.Content.Content"]},{"name":"constructor(client: HttpClient = HttpClient())","description":"com.github.panpf.sketch.http.KtorStack.KtorStack","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/-ktor-stack.html","searchKeys":["KtorStack","constructor(client: HttpClient = HttpClient())","com.github.panpf.sketch.http.KtorStack.KtorStack"]},{"name":"constructor(httpResponse: HttpResponse)","description":"com.github.panpf.sketch.http.KtorStack.Response.Response","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/-response/-response.html","searchKeys":["Response","constructor(httpResponse: HttpResponse)","com.github.panpf.sketch.http.KtorStack.Response.Response"]},{"name":"constructor(httpStack: KtorStack = KtorStack())","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.Factory","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor(httpStack: KtorStack = KtorStack())","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.Factory"]},{"name":"constructor(sketch: Sketch, httpStack: KtorStack, request: ImageRequest, downloadCacheKey: String)","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.KtorHttpUriFetcher","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-ktor-http-uri-fetcher.html","searchKeys":["KtorHttpUriFetcher","constructor(sketch: Sketch, httpStack: KtorStack, request: ImageRequest, downloadCacheKey: String)","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.KtorHttpUriFetcher"]},{"name":"expect class KtorHttpUriFetcherProvider : FetcherProvider","description":"com.github.panpf.sketch.fetch.internal.KtorHttpUriFetcherProvider","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch.internal/-ktor-http-uri-fetcher-provider/index.html","searchKeys":["KtorHttpUriFetcherProvider","expect class KtorHttpUriFetcherProvider : FetcherProvider","com.github.panpf.sketch.fetch.internal.KtorHttpUriFetcherProvider"]},{"name":"expect open override fun factory(context: PlatformContext): KtorHttpUriFetcher.Factory","description":"com.github.panpf.sketch.fetch.internal.KtorHttpUriFetcherProvider.factory","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch.internal/-ktor-http-uri-fetcher-provider/factory.html","searchKeys":["factory","expect open override fun factory(context: PlatformContext): KtorHttpUriFetcher.Factory","com.github.panpf.sketch.fetch.internal.KtorHttpUriFetcherProvider.factory"]},{"name":"fun ComponentRegistry.Builder.supportKtorHttpUri(httpStack: KtorStack = KtorStack()): ComponentRegistry.Builder","description":"com.github.panpf.sketch.fetch.supportKtorHttpUri","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch/support-ktor-http-uri.html","searchKeys":["supportKtorHttpUri","fun ComponentRegistry.Builder.supportKtorHttpUri(httpStack: KtorStack = KtorStack()): ComponentRegistry.Builder","com.github.panpf.sketch.fetch.supportKtorHttpUri"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.equals","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.equals","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.equals"]},{"name":"open override fun close()","description":"com.github.panpf.sketch.http.KtorStack.Content.close","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/-content/close.html","searchKeys":["close","open override fun close()","com.github.panpf.sketch.http.KtorStack.Content.close"]},{"name":"open override fun create(requestContext: RequestContext): HttpUriFetcher?","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.create","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext): HttpUriFetcher?","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.create"]},{"name":"open override fun getHeaderField(name: String): String?","description":"com.github.panpf.sketch.http.KtorStack.Response.getHeaderField","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/-response/get-header-field.html","searchKeys":["getHeaderField","open override fun getHeaderField(name: String): String?","com.github.panpf.sketch.http.KtorStack.Response.getHeaderField"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.hashCode","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.hashCode","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.toString","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.toString","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.http.KtorStack.toString","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.http.KtorStack.toString"]},{"name":"open override val code: Int","description":"com.github.panpf.sketch.http.KtorStack.Response.code","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/-response/code.html","searchKeys":["code","open override val code: Int","com.github.panpf.sketch.http.KtorStack.Response.code"]},{"name":"open override val contentLength: Long","description":"com.github.panpf.sketch.http.KtorStack.Response.contentLength","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/-response/content-length.html","searchKeys":["contentLength","open override val contentLength: Long","com.github.panpf.sketch.http.KtorStack.Response.contentLength"]},{"name":"open override val contentType: String?","description":"com.github.panpf.sketch.http.KtorStack.Response.contentType","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/-response/content-type.html","searchKeys":["contentType","open override val contentType: String?","com.github.panpf.sketch.http.KtorStack.Response.contentType"]},{"name":"open override val message: String","description":"com.github.panpf.sketch.http.KtorStack.Response.message","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/-response/message.html","searchKeys":["message","open override val message: String","com.github.panpf.sketch.http.KtorStack.Response.message"]},{"name":"open suspend override fun <T> request(url: String, httpHeaders: HttpHeaders?, extras: Extras?, block: suspend (HttpStack.Response) -> T): T","description":"com.github.panpf.sketch.http.KtorStack.request","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/request.html","searchKeys":["request","open suspend override fun <T> request(url: String, httpHeaders: HttpHeaders?, extras: Extras?, block: suspend (HttpStack.Response) -> T): T","com.github.panpf.sketch.http.KtorStack.request"]},{"name":"open suspend override fun content(): HttpStack.Content","description":"com.github.panpf.sketch.http.KtorStack.Response.content","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/-response/content.html","searchKeys":["content","open suspend override fun content(): HttpStack.Content","com.github.panpf.sketch.http.KtorStack.Response.content"]},{"name":"open suspend override fun getResponse(url: String, httpHeaders: HttpHeaders?, extras: Extras?): HttpStack.Response","description":"com.github.panpf.sketch.http.KtorStack.getResponse","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/get-response.html","searchKeys":["getResponse","open suspend override fun getResponse(url: String, httpHeaders: HttpHeaders?, extras: Extras?): HttpStack.Response","com.github.panpf.sketch.http.KtorStack.getResponse"]},{"name":"open suspend override fun read(buffer: ByteArray): Int","description":"com.github.panpf.sketch.http.KtorStack.Content.read","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/-content/read.html","searchKeys":["read","open suspend override fun read(buffer: ByteArray): Int","com.github.panpf.sketch.http.KtorStack.Content.read"]},{"name":"val client: HttpClient","description":"com.github.panpf.sketch.http.KtorStack.client","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/client.html","searchKeys":["client","val client: HttpClient","com.github.panpf.sketch.http.KtorStack.client"]},{"name":"val httpResponse: HttpResponse","description":"com.github.panpf.sketch.http.KtorStack.Response.httpResponse","location":"sketch-http-ktor3-core/com.github.panpf.sketch.http/-ktor-stack/-response/http-response.html","searchKeys":["httpResponse","val httpResponse: HttpResponse","com.github.panpf.sketch.http.KtorStack.Response.httpResponse"]},{"name":"val httpStack: KtorStack","description":"com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.httpStack","location":"sketch-http-ktor3-core/com.github.panpf.sketch.fetch/-ktor-http-uri-fetcher/-factory/http-stack.html","searchKeys":["httpStack","val httpStack: KtorStack","com.github.panpf.sketch.fetch.KtorHttpUriFetcher.Factory.httpStack"]},{"name":"class Factory : Decoder.Factory","description":"com.github.panpf.sketch.decode.KoralGifDecoder.Factory","location":"sketch-animated-gif-koral/com.github.panpf.sketch.decode/-koral-gif-decoder/-factory/index.html","searchKeys":["Factory","class Factory : Decoder.Factory","com.github.panpf.sketch.decode.KoralGifDecoder.Factory"]},{"name":"class GifDrawableWrapperDrawable(val gifDrawable: GifDrawable) : DrawableWrapperCompat, Animatable, MediaController.MediaPlayerControl, SketchDrawable","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/index.html","searchKeys":["GifDrawableWrapperDrawable","class GifDrawableWrapperDrawable(val gifDrawable: GifDrawable) : DrawableWrapperCompat, Animatable, MediaController.MediaPlayerControl, SketchDrawable","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable"]},{"name":"class GifInfoHandleHelper(val sketch: Sketch, dataSource: DataSource)","description":"pl.droidsonroids.gif.GifInfoHandleHelper","location":"sketch-animated-gif-koral/pl.droidsonroids.gif/-gif-info-handle-helper/index.html","searchKeys":["GifInfoHandleHelper","class GifInfoHandleHelper(val sketch: Sketch, dataSource: DataSource)","pl.droidsonroids.gif.GifInfoHandleHelper"]},{"name":"class KoralGifDecoder(requestContext: RequestContext, dataSource: DataSource) : Decoder","description":"com.github.panpf.sketch.decode.KoralGifDecoder","location":"sketch-animated-gif-koral/com.github.panpf.sketch.decode/-koral-gif-decoder/index.html","searchKeys":["KoralGifDecoder","class KoralGifDecoder(requestContext: RequestContext, dataSource: DataSource) : Decoder","com.github.panpf.sketch.decode.KoralGifDecoder"]},{"name":"class KoralGifDecoderProvider : DecoderProvider","description":"com.github.panpf.sketch.decode.internal.KoralGifDecoderProvider","location":"sketch-animated-gif-koral/com.github.panpf.sketch.decode.internal/-koral-gif-decoder-provider/index.html","searchKeys":["KoralGifDecoderProvider","class KoralGifDecoderProvider : DecoderProvider","com.github.panpf.sketch.decode.internal.KoralGifDecoderProvider"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.KoralGifDecoder.Factory.Factory","location":"sketch-animated-gif-koral/com.github.panpf.sketch.decode/-koral-gif-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.KoralGifDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.internal.KoralGifDecoderProvider.KoralGifDecoderProvider","location":"sketch-animated-gif-koral/com.github.panpf.sketch.decode.internal/-koral-gif-decoder-provider/-koral-gif-decoder-provider.html","searchKeys":["KoralGifDecoderProvider","constructor()","com.github.panpf.sketch.decode.internal.KoralGifDecoderProvider.KoralGifDecoderProvider"]},{"name":"constructor(gifDrawable: GifDrawable)","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.GifDrawableWrapperDrawable","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/-gif-drawable-wrapper-drawable.html","searchKeys":["GifDrawableWrapperDrawable","constructor(gifDrawable: GifDrawable)","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.GifDrawableWrapperDrawable"]},{"name":"constructor(requestContext: RequestContext, dataSource: DataSource)","description":"com.github.panpf.sketch.decode.KoralGifDecoder.KoralGifDecoder","location":"sketch-animated-gif-koral/com.github.panpf.sketch.decode/-koral-gif-decoder/-koral-gif-decoder.html","searchKeys":["KoralGifDecoder","constructor(requestContext: RequestContext, dataSource: DataSource)","com.github.panpf.sketch.decode.KoralGifDecoder.KoralGifDecoder"]},{"name":"constructor(sketch: Sketch, dataSource: DataSource)","description":"pl.droidsonroids.gif.GifInfoHandleHelper.GifInfoHandleHelper","location":"sketch-animated-gif-koral/pl.droidsonroids.gif/-gif-info-handle-helper/-gif-info-handle-helper.html","searchKeys":["GifInfoHandleHelper","constructor(sketch: Sketch, dataSource: DataSource)","pl.droidsonroids.gif.GifInfoHandleHelper.GifInfoHandleHelper"]},{"name":"fun ComponentRegistry.Builder.supportKoralGif(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.decode.supportKoralGif","location":"sketch-animated-gif-koral/com.github.panpf.sketch.decode/support-koral-gif.html","searchKeys":["supportKoralGif","fun ComponentRegistry.Builder.supportKoralGif(): ComponentRegistry.Builder","com.github.panpf.sketch.decode.supportKoralGif"]},{"name":"fun createGifDrawable(): GifDrawable","description":"pl.droidsonroids.gif.GifInfoHandleHelper.createGifDrawable","location":"sketch-animated-gif-koral/pl.droidsonroids.gif/-gif-info-handle-helper/create-gif-drawable.html","searchKeys":["createGifDrawable","fun createGifDrawable(): GifDrawable","pl.droidsonroids.gif.GifInfoHandleHelper.createGifDrawable"]},{"name":"fun setOptions(options: GifOptions)","description":"pl.droidsonroids.gif.GifInfoHandleHelper.setOptions","location":"sketch-animated-gif-koral/pl.droidsonroids.gif/-gif-info-handle-helper/set-options.html","searchKeys":["setOptions","fun setOptions(options: GifOptions)","pl.droidsonroids.gif.GifInfoHandleHelper.setOptions"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.KoralGifDecoder.Factory.equals","location":"sketch-animated-gif-koral/com.github.panpf.sketch.decode/-koral-gif-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.KoralGifDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.equals","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.equals"]},{"name":"open override fun canPause(): Boolean","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.canPause","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/can-pause.html","searchKeys":["canPause","open override fun canPause(): Boolean","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.canPause"]},{"name":"open override fun canSeekBackward(): Boolean","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.canSeekBackward","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/can-seek-backward.html","searchKeys":["canSeekBackward","open override fun canSeekBackward(): Boolean","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.canSeekBackward"]},{"name":"open override fun canSeekForward(): Boolean","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.canSeekForward","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/can-seek-forward.html","searchKeys":["canSeekForward","open override fun canSeekForward(): Boolean","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.canSeekForward"]},{"name":"open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","description":"com.github.panpf.sketch.decode.KoralGifDecoder.Factory.create","location":"sketch-animated-gif-koral/com.github.panpf.sketch.decode/-koral-gif-decoder/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","com.github.panpf.sketch.decode.KoralGifDecoder.Factory.create"]},{"name":"open override fun decode(): DecodeResult","description":"com.github.panpf.sketch.decode.KoralGifDecoder.decode","location":"sketch-animated-gif-koral/com.github.panpf.sketch.decode/-koral-gif-decoder/decode.html","searchKeys":["decode","open override fun decode(): DecodeResult","com.github.panpf.sketch.decode.KoralGifDecoder.decode"]},{"name":"open override fun factory(context: <Error class: unknown class>): KoralGifDecoder.Factory","description":"com.github.panpf.sketch.decode.internal.KoralGifDecoderProvider.factory","location":"sketch-animated-gif-koral/com.github.panpf.sketch.decode.internal/-koral-gif-decoder-provider/factory.html","searchKeys":["factory","open override fun factory(context: <Error class: unknown class>): KoralGifDecoder.Factory","com.github.panpf.sketch.decode.internal.KoralGifDecoderProvider.factory"]},{"name":"open override fun getAudioSessionId(): Int","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.getAudioSessionId","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/get-audio-session-id.html","searchKeys":["getAudioSessionId","open override fun getAudioSessionId(): Int","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.getAudioSessionId"]},{"name":"open override fun getBufferPercentage(): Int","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.getBufferPercentage","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/get-buffer-percentage.html","searchKeys":["getBufferPercentage","open override fun getBufferPercentage(): Int","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.getBufferPercentage"]},{"name":"open override fun getCurrentPosition(): Int","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.getCurrentPosition","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/get-current-position.html","searchKeys":["getCurrentPosition","open override fun getCurrentPosition(): Int","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.getCurrentPosition"]},{"name":"open override fun getDuration(): Int","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.getDuration","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/get-duration.html","searchKeys":["getDuration","open override fun getDuration(): Int","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.getDuration"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.KoralGifDecoder.Factory.hashCode","location":"sketch-animated-gif-koral/com.github.panpf.sketch.decode/-koral-gif-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.KoralGifDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.hashCode","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.hashCode"]},{"name":"open override fun isPlaying(): Boolean","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.isPlaying","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/is-playing.html","searchKeys":["isPlaying","open override fun isPlaying(): Boolean","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.isPlaying"]},{"name":"open override fun isRunning(): Boolean","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.isRunning","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.isRunning"]},{"name":"open override fun mutate(): GifDrawableWrapperDrawable","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.mutate","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/mutate.html","searchKeys":["mutate","open override fun mutate(): GifDrawableWrapperDrawable","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.mutate"]},{"name":"open override fun pause()","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.pause","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/pause.html","searchKeys":["pause","open override fun pause()","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.pause"]},{"name":"open override fun seekTo(pos: Int)","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.seekTo","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/seek-to.html","searchKeys":["seekTo","open override fun seekTo(pos: Int)","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.seekTo"]},{"name":"open override fun start()","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.start","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/start.html","searchKeys":["start","open override fun start()","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.start"]},{"name":"open override fun stop()","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.stop","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/stop.html","searchKeys":["stop","open override fun stop()","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.stop"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.KoralGifDecoder.Factory.toString","location":"sketch-animated-gif-koral/com.github.panpf.sketch.decode/-koral-gif-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.KoralGifDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.toString","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.toString"]},{"name":"open override val imageInfo: ImageInfo","description":"com.github.panpf.sketch.decode.KoralGifDecoder.imageInfo","location":"sketch-animated-gif-koral/com.github.panpf.sketch.decode/-koral-gif-decoder/image-info.html","searchKeys":["imageInfo","open override val imageInfo: ImageInfo","com.github.panpf.sketch.decode.KoralGifDecoder.imageInfo"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.decode.KoralGifDecoder.Factory.key","location":"sketch-animated-gif-koral/com.github.panpf.sketch.decode/-koral-gif-decoder/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.decode.KoralGifDecoder.Factory.key"]},{"name":"val duration: Int","description":"pl.droidsonroids.gif.GifInfoHandleHelper.duration","location":"sketch-animated-gif-koral/pl.droidsonroids.gif/-gif-info-handle-helper/duration.html","searchKeys":["duration","val duration: Int","pl.droidsonroids.gif.GifInfoHandleHelper.duration"]},{"name":"val gifDrawable: GifDrawable","description":"com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.gifDrawable","location":"sketch-animated-gif-koral/com.github.panpf.sketch.drawable/-gif-drawable-wrapper-drawable/gif-drawable.html","searchKeys":["gifDrawable","val gifDrawable: GifDrawable","com.github.panpf.sketch.drawable.GifDrawableWrapperDrawable.gifDrawable"]},{"name":"val height: Int","description":"pl.droidsonroids.gif.GifInfoHandleHelper.height","location":"sketch-animated-gif-koral/pl.droidsonroids.gif/-gif-info-handle-helper/height.html","searchKeys":["height","val height: Int","pl.droidsonroids.gif.GifInfoHandleHelper.height"]},{"name":"val numberOfFrames: Int","description":"pl.droidsonroids.gif.GifInfoHandleHelper.numberOfFrames","location":"sketch-animated-gif-koral/pl.droidsonroids.gif/-gif-info-handle-helper/number-of-frames.html","searchKeys":["numberOfFrames","val numberOfFrames: Int","pl.droidsonroids.gif.GifInfoHandleHelper.numberOfFrames"]},{"name":"val sketch: Sketch","description":"pl.droidsonroids.gif.GifInfoHandleHelper.sketch","location":"sketch-animated-gif-koral/pl.droidsonroids.gif/-gif-info-handle-helper/sketch.html","searchKeys":["sketch","val sketch: Sketch","pl.droidsonroids.gif.GifInfoHandleHelper.sketch"]},{"name":"val width: Int","description":"pl.droidsonroids.gif.GifInfoHandleHelper.width","location":"sketch-animated-gif-koral/pl.droidsonroids.gif/-gif-info-handle-helper/width.html","searchKeys":["width","val width: Int","pl.droidsonroids.gif.GifInfoHandleHelper.width"]},{"name":"fun ImageOptions.Builder.videoFrameMicros(frameMicros: Long?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.videoFrameMicros","location":"sketch-video-core/com.github.panpf.sketch.request/video-frame-micros.html","searchKeys":["videoFrameMicros","fun ImageOptions.Builder.videoFrameMicros(frameMicros: Long?): ImageOptions.Builder","com.github.panpf.sketch.request.videoFrameMicros"]},{"name":"fun ImageOptions.Builder.videoFrameMillis(frameMillis: Long): ImageOptions.Builder","description":"com.github.panpf.sketch.request.videoFrameMillis","location":"sketch-video-core/com.github.panpf.sketch.request/video-frame-millis.html","searchKeys":["videoFrameMillis","fun ImageOptions.Builder.videoFrameMillis(frameMillis: Long): ImageOptions.Builder","com.github.panpf.sketch.request.videoFrameMillis"]},{"name":"fun ImageOptions.Builder.videoFrameOption(option: Int?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.videoFrameOption","location":"sketch-video-core/com.github.panpf.sketch.request/video-frame-option.html","searchKeys":["videoFrameOption","fun ImageOptions.Builder.videoFrameOption(option: Int?): ImageOptions.Builder","com.github.panpf.sketch.request.videoFrameOption"]},{"name":"fun ImageOptions.Builder.videoFramePercent(framePercent: Float?): <Error class: unknown class>","description":"com.github.panpf.sketch.request.videoFramePercent","location":"sketch-video-core/com.github.panpf.sketch.request/video-frame-percent.html","searchKeys":["videoFramePercent","fun ImageOptions.Builder.videoFramePercent(framePercent: Float?): <Error class: unknown class>","com.github.panpf.sketch.request.videoFramePercent"]},{"name":"fun ImageRequest.Builder.videoFrameMicros(frameMicros: Long?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.videoFrameMicros","location":"sketch-video-core/com.github.panpf.sketch.request/video-frame-micros.html","searchKeys":["videoFrameMicros","fun ImageRequest.Builder.videoFrameMicros(frameMicros: Long?): ImageRequest.Builder","com.github.panpf.sketch.request.videoFrameMicros"]},{"name":"fun ImageRequest.Builder.videoFrameMillis(frameMillis: Long): ImageRequest.Builder","description":"com.github.panpf.sketch.request.videoFrameMillis","location":"sketch-video-core/com.github.panpf.sketch.request/video-frame-millis.html","searchKeys":["videoFrameMillis","fun ImageRequest.Builder.videoFrameMillis(frameMillis: Long): ImageRequest.Builder","com.github.panpf.sketch.request.videoFrameMillis"]},{"name":"fun ImageRequest.Builder.videoFrameOption(option: Int?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.videoFrameOption","location":"sketch-video-core/com.github.panpf.sketch.request/video-frame-option.html","searchKeys":["videoFrameOption","fun ImageRequest.Builder.videoFrameOption(option: Int?): ImageRequest.Builder","com.github.panpf.sketch.request.videoFrameOption"]},{"name":"fun ImageRequest.Builder.videoFramePercent(framePercent: Float?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.videoFramePercent","location":"sketch-video-core/com.github.panpf.sketch.request/video-frame-percent.html","searchKeys":["videoFramePercent","fun ImageRequest.Builder.videoFramePercent(framePercent: Float?): ImageRequest.Builder","com.github.panpf.sketch.request.videoFramePercent"]},{"name":"val ImageOptions.videoFrameMicros: Long?","description":"com.github.panpf.sketch.request.videoFrameMicros","location":"sketch-video-core/com.github.panpf.sketch.request/video-frame-micros.html","searchKeys":["videoFrameMicros","val ImageOptions.videoFrameMicros: Long?","com.github.panpf.sketch.request.videoFrameMicros"]},{"name":"val ImageOptions.videoFrameOption: Int?","description":"com.github.panpf.sketch.request.videoFrameOption","location":"sketch-video-core/com.github.panpf.sketch.request/video-frame-option.html","searchKeys":["videoFrameOption","val ImageOptions.videoFrameOption: Int?","com.github.panpf.sketch.request.videoFrameOption"]},{"name":"val ImageOptions.videoFramePercent: Float?","description":"com.github.panpf.sketch.request.videoFramePercent","location":"sketch-video-core/com.github.panpf.sketch.request/video-frame-percent.html","searchKeys":["videoFramePercent","val ImageOptions.videoFramePercent: Float?","com.github.panpf.sketch.request.videoFramePercent"]},{"name":"val ImageRequest.videoFrameMicros: Long?","description":"com.github.panpf.sketch.request.videoFrameMicros","location":"sketch-video-core/com.github.panpf.sketch.request/video-frame-micros.html","searchKeys":["videoFrameMicros","val ImageRequest.videoFrameMicros: Long?","com.github.panpf.sketch.request.videoFrameMicros"]},{"name":"val ImageRequest.videoFrameOption: Int?","description":"com.github.panpf.sketch.request.videoFrameOption","location":"sketch-video-core/com.github.panpf.sketch.request/video-frame-option.html","searchKeys":["videoFrameOption","val ImageRequest.videoFrameOption: Int?","com.github.panpf.sketch.request.videoFrameOption"]},{"name":"val ImageRequest.videoFramePercent: Float?","description":"com.github.panpf.sketch.request.videoFramePercent","location":"sketch-video-core/com.github.panpf.sketch.request/video-frame-percent.html","searchKeys":["videoFramePercent","val ImageRequest.videoFramePercent: Float?","com.github.panpf.sketch.request.videoFramePercent"]},{"name":"class AppIconDrawableFetcher(packageName: String, versionCode: Int) : DrawableFetcher","description":"com.github.panpf.sketch.drawable.AppIconDrawableFetcher","location":"sketch-extensions-appicon/com.github.panpf.sketch.drawable/-app-icon-drawable-fetcher/index.html","searchKeys":["AppIconDrawableFetcher","class AppIconDrawableFetcher(packageName: String, versionCode: Int) : DrawableFetcher","com.github.panpf.sketch.drawable.AppIconDrawableFetcher"]},{"name":"class AppIconUriFetcher(val context: Context, val packageName: String, val versionCode: Int) : Fetcher","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/index.html","searchKeys":["AppIconUriFetcher","class AppIconUriFetcher(val context: Context, val packageName: String, val versionCode: Int) : Fetcher","com.github.panpf.sketch.fetch.AppIconUriFetcher"]},{"name":"class AppIconUriFetcherProvider : FetcherProvider","description":"com.github.panpf.sketch.fetch.internal.AppIconUriFetcherProvider","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch.internal/-app-icon-uri-fetcher-provider/index.html","searchKeys":["AppIconUriFetcherProvider","class AppIconUriFetcherProvider : FetcherProvider","com.github.panpf.sketch.fetch.internal.AppIconUriFetcherProvider"]},{"name":"class Factory : Fetcher.Factory","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.Factory","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/-factory/index.html","searchKeys":["Factory","class Factory : Fetcher.Factory","com.github.panpf.sketch.fetch.AppIconUriFetcher.Factory"]},{"name":"const val IMAGE_MIME_TYPE: String","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.Companion.IMAGE_MIME_TYPE","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/-companion/-i-m-a-g-e_-m-i-m-e_-t-y-p-e.html","searchKeys":["IMAGE_MIME_TYPE","const val IMAGE_MIME_TYPE: String","com.github.panpf.sketch.fetch.AppIconUriFetcher.Companion.IMAGE_MIME_TYPE"]},{"name":"const val SCHEME: String","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.Companion.SCHEME","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/-companion/-s-c-h-e-m-e.html","searchKeys":["SCHEME","const val SCHEME: String","com.github.panpf.sketch.fetch.AppIconUriFetcher.Companion.SCHEME"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.Factory.Factory","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.fetch.AppIconUriFetcher.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.internal.AppIconUriFetcherProvider.AppIconUriFetcherProvider","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch.internal/-app-icon-uri-fetcher-provider/-app-icon-uri-fetcher-provider.html","searchKeys":["AppIconUriFetcherProvider","constructor()","com.github.panpf.sketch.fetch.internal.AppIconUriFetcherProvider.AppIconUriFetcherProvider"]},{"name":"constructor(context: Context, packageName: String, versionCode: Int)","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.AppIconUriFetcher","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/-app-icon-uri-fetcher.html","searchKeys":["AppIconUriFetcher","constructor(context: Context, packageName: String, versionCode: Int)","com.github.panpf.sketch.fetch.AppIconUriFetcher.AppIconUriFetcher"]},{"name":"constructor(packageName: String, versionCode: Int)","description":"com.github.panpf.sketch.drawable.AppIconDrawableFetcher.AppIconDrawableFetcher","location":"sketch-extensions-appicon/com.github.panpf.sketch.drawable/-app-icon-drawable-fetcher/-app-icon-drawable-fetcher.html","searchKeys":["AppIconDrawableFetcher","constructor(packageName: String, versionCode: Int)","com.github.panpf.sketch.drawable.AppIconDrawableFetcher.AppIconDrawableFetcher"]},{"name":"fun ComponentRegistry.Builder.supportAppIcon(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.fetch.supportAppIcon","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/support-app-icon.html","searchKeys":["supportAppIcon","fun ComponentRegistry.Builder.supportAppIcon(): ComponentRegistry.Builder","com.github.panpf.sketch.fetch.supportAppIcon"]},{"name":"fun isAppIconUri(uri: Uri): Boolean","description":"com.github.panpf.sketch.fetch.isAppIconUri","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/is-app-icon-uri.html","searchKeys":["isAppIconUri","fun isAppIconUri(uri: Uri): Boolean","com.github.panpf.sketch.fetch.isAppIconUri"]},{"name":"fun newAppIconUri(packageName: String, versionCode: Int): String","description":"com.github.panpf.sketch.fetch.newAppIconUri","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/new-app-icon-uri.html","searchKeys":["newAppIconUri","fun newAppIconUri(packageName: String, versionCode: Int): String","com.github.panpf.sketch.fetch.newAppIconUri"]},{"name":"object Companion","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.Companion","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.fetch.AppIconUriFetcher.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.AppIconDrawableFetcher.equals","location":"sketch-extensions-appicon/com.github.panpf.sketch.drawable/-app-icon-drawable-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.AppIconDrawableFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.Factory.equals","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.AppIconUriFetcher.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.equals","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.AppIconUriFetcher.equals"]},{"name":"open override fun create(requestContext: RequestContext): AppIconUriFetcher?","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.Factory.create","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext): AppIconUriFetcher?","com.github.panpf.sketch.fetch.AppIconUriFetcher.Factory.create"]},{"name":"open override fun factory(context: <Error class: unknown class>): AppIconUriFetcher.Factory","description":"com.github.panpf.sketch.fetch.internal.AppIconUriFetcherProvider.factory","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch.internal/-app-icon-uri-fetcher-provider/factory.html","searchKeys":["factory","open override fun factory(context: <Error class: unknown class>): AppIconUriFetcher.Factory","com.github.panpf.sketch.fetch.internal.AppIconUriFetcherProvider.factory"]},{"name":"open override fun getDrawable(context: Context): Drawable","description":"com.github.panpf.sketch.drawable.AppIconDrawableFetcher.getDrawable","location":"sketch-extensions-appicon/com.github.panpf.sketch.drawable/-app-icon-drawable-fetcher/get-drawable.html","searchKeys":["getDrawable","open override fun getDrawable(context: Context): Drawable","com.github.panpf.sketch.drawable.AppIconDrawableFetcher.getDrawable"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.AppIconDrawableFetcher.hashCode","location":"sketch-extensions-appicon/com.github.panpf.sketch.drawable/-app-icon-drawable-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.AppIconDrawableFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.Factory.hashCode","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.AppIconUriFetcher.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.hashCode","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.AppIconUriFetcher.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.AppIconDrawableFetcher.toString","location":"sketch-extensions-appicon/com.github.panpf.sketch.drawable/-app-icon-drawable-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.AppIconDrawableFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.Factory.toString","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.AppIconUriFetcher.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.toString","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.AppIconUriFetcher.toString"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.drawable.AppIconDrawableFetcher.key","location":"sketch-extensions-appicon/com.github.panpf.sketch.drawable/-app-icon-drawable-fetcher/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.drawable.AppIconDrawableFetcher.key"]},{"name":"open suspend override fun fetch(): Result<FetchResult>","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.fetch","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/fetch.html","searchKeys":["fetch","open suspend override fun fetch(): Result<FetchResult>","com.github.panpf.sketch.fetch.AppIconUriFetcher.fetch"]},{"name":"val context: Context","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.context","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/context.html","searchKeys":["context","val context: Context","com.github.panpf.sketch.fetch.AppIconUriFetcher.context"]},{"name":"val packageName: String","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.packageName","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/package-name.html","searchKeys":["packageName","val packageName: String","com.github.panpf.sketch.fetch.AppIconUriFetcher.packageName"]},{"name":"val versionCode: Int","description":"com.github.panpf.sketch.fetch.AppIconUriFetcher.versionCode","location":"sketch-extensions-appicon/com.github.panpf.sketch.fetch/-app-icon-uri-fetcher/version-code.html","searchKeys":["versionCode","val versionCode: Int","com.github.panpf.sketch.fetch.AppIconUriFetcher.versionCode"]},{"name":"abstract fun intercept(chain: HurlStack.Interceptor.Chain): HurlStack.Response","description":"com.github.panpf.sketch.http.HurlStack.Interceptor.intercept","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-interceptor/intercept.html","searchKeys":["intercept","abstract fun intercept(chain: HurlStack.Interceptor.Chain): HurlStack.Response","com.github.panpf.sketch.http.HurlStack.Interceptor.intercept"]},{"name":"abstract fun proceed(): HurlStack.Response","description":"com.github.panpf.sketch.http.HurlStack.Interceptor.Chain.proceed","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-interceptor/-chain/proceed.html","searchKeys":["proceed","abstract fun proceed(): HurlStack.Response","com.github.panpf.sketch.http.HurlStack.Interceptor.Chain.proceed"]},{"name":"abstract val connection: <Error class: unknown class>","description":"com.github.panpf.sketch.http.HurlStack.Interceptor.Chain.connection","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-interceptor/-chain/connection.html","searchKeys":["connection","abstract val connection: <Error class: unknown class>","com.github.panpf.sketch.http.HurlStack.Interceptor.Chain.connection"]},{"name":"class Builder","description":"com.github.panpf.sketch.http.HurlStack.Builder","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-builder/index.html","searchKeys":["Builder","class Builder","com.github.panpf.sketch.http.HurlStack.Builder"]},{"name":"class Content(inputStream: <Error class: unknown class>) : HttpStack.Content","description":"com.github.panpf.sketch.http.HurlStack.Content","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-content/index.html","searchKeys":["Content","class Content(inputStream: <Error class: unknown class>) : HttpStack.Content","com.github.panpf.sketch.http.HurlStack.Content"]},{"name":"class Factory(val httpStack: HurlStack = Builder().build()) : Fetcher.Factory","description":"com.github.panpf.sketch.fetch.HurlHttpUriFetcher.Factory","location":"sketch-http-hurl/com.github.panpf.sketch.fetch/-hurl-http-uri-fetcher/-factory/index.html","searchKeys":["Factory","class Factory(val httpStack: HurlStack = Builder().build()) : Fetcher.Factory","com.github.panpf.sketch.fetch.HurlHttpUriFetcher.Factory"]},{"name":"class HurlHttpUriFetcher(sketch: Sketch, httpStack: HurlStack, request: ImageRequest, downloadCacheKey: String) : HttpUriFetcher","description":"com.github.panpf.sketch.fetch.HurlHttpUriFetcher","location":"sketch-http-hurl/com.github.panpf.sketch.fetch/-hurl-http-uri-fetcher/index.html","searchKeys":["HurlHttpUriFetcher","class HurlHttpUriFetcher(sketch: Sketch, httpStack: HurlStack, request: ImageRequest, downloadCacheKey: String) : HttpUriFetcher","com.github.panpf.sketch.fetch.HurlHttpUriFetcher"]},{"name":"class HurlHttpUriFetcherProvider : FetcherProvider","description":"com.github.panpf.sketch.fetch.internal.HurlHttpUriFetcherProvider","location":"sketch-http-hurl/com.github.panpf.sketch.fetch.internal/-hurl-http-uri-fetcher-provider/index.html","searchKeys":["HurlHttpUriFetcherProvider","class HurlHttpUriFetcherProvider : FetcherProvider","com.github.panpf.sketch.fetch.internal.HurlHttpUriFetcherProvider"]},{"name":"class HurlStack : HttpStack","description":"com.github.panpf.sketch.http.HurlStack","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/index.html","searchKeys":["HurlStack","class HurlStack : HttpStack","com.github.panpf.sketch.http.HurlStack"]},{"name":"class Response(val connection: <Error class: unknown class>) : HttpStack.Response","description":"com.github.panpf.sketch.http.HurlStack.Response","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-response/index.html","searchKeys":["Response","class Response(val connection: <Error class: unknown class>) : HttpStack.Response","com.github.panpf.sketch.http.HurlStack.Response"]},{"name":"class TlsCompatSocketFactory(val enabledTlsProtocols: Array<String>)","description":"com.github.panpf.sketch.http.internal.TlsCompatSocketFactory","location":"sketch-http-hurl/com.github.panpf.sketch.http.internal/-tls-compat-socket-factory/index.html","searchKeys":["TlsCompatSocketFactory","class TlsCompatSocketFactory(val enabledTlsProtocols: Array<String>)","com.github.panpf.sketch.http.internal.TlsCompatSocketFactory"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.internal.HurlHttpUriFetcherProvider.HurlHttpUriFetcherProvider","location":"sketch-http-hurl/com.github.panpf.sketch.fetch.internal/-hurl-http-uri-fetcher-provider/-hurl-http-uri-fetcher-provider.html","searchKeys":["HurlHttpUriFetcherProvider","constructor()","com.github.panpf.sketch.fetch.internal.HurlHttpUriFetcherProvider.HurlHttpUriFetcherProvider"]},{"name":"constructor()","description":"com.github.panpf.sketch.http.HurlStack.Builder.Builder","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-builder/-builder.html","searchKeys":["Builder","constructor()","com.github.panpf.sketch.http.HurlStack.Builder.Builder"]},{"name":"constructor(connectTimeout: Int? = null, readTimeout: Int? = null)","description":"com.github.panpf.sketch.http.HurlStack.TimeoutInterceptor.TimeoutInterceptor","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-timeout-interceptor/-timeout-interceptor.html","searchKeys":["TimeoutInterceptor","constructor(connectTimeout: Int? = null, readTimeout: Int? = null)","com.github.panpf.sketch.http.HurlStack.TimeoutInterceptor.TimeoutInterceptor"]},{"name":"constructor(connection: <Error class: unknown class>)","description":"com.github.panpf.sketch.http.HurlStack.Response.Response","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-response/-response.html","searchKeys":["Response","constructor(connection: <Error class: unknown class>)","com.github.panpf.sketch.http.HurlStack.Response.Response"]},{"name":"constructor(enabledTlsProtocols: Array<String>)","description":"com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.TlsCompatSocketFactory","location":"sketch-http-hurl/com.github.panpf.sketch.http.internal/-tls-compat-socket-factory/-tls-compat-socket-factory.html","searchKeys":["TlsCompatSocketFactory","constructor(enabledTlsProtocols: Array<String>)","com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.TlsCompatSocketFactory"]},{"name":"constructor(httpHeaders: HttpHeaders?)","description":"com.github.panpf.sketch.http.HurlStack.HttpHeadersInterceptor.HttpHeadersInterceptor","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-http-headers-interceptor/-http-headers-interceptor.html","searchKeys":["HttpHeadersInterceptor","constructor(httpHeaders: HttpHeaders?)","com.github.panpf.sketch.http.HurlStack.HttpHeadersInterceptor.HttpHeadersInterceptor"]},{"name":"constructor(httpStack: HurlStack = Builder().build())","description":"com.github.panpf.sketch.fetch.HurlHttpUriFetcher.Factory.Factory","location":"sketch-http-hurl/com.github.panpf.sketch.fetch/-hurl-http-uri-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor(httpStack: HurlStack = Builder().build())","com.github.panpf.sketch.fetch.HurlHttpUriFetcher.Factory.Factory"]},{"name":"constructor(inputStream: <Error class: unknown class>)","description":"com.github.panpf.sketch.http.HurlStack.Content.Content","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-content/-content.html","searchKeys":["Content","constructor(inputStream: <Error class: unknown class>)","com.github.panpf.sketch.http.HurlStack.Content.Content"]},{"name":"constructor(sketch: Sketch, httpStack: HurlStack, request: ImageRequest, downloadCacheKey: String)","description":"com.github.panpf.sketch.fetch.HurlHttpUriFetcher.HurlHttpUriFetcher","location":"sketch-http-hurl/com.github.panpf.sketch.fetch/-hurl-http-uri-fetcher/-hurl-http-uri-fetcher.html","searchKeys":["HurlHttpUriFetcher","constructor(sketch: Sketch, httpStack: HurlStack, request: ImageRequest, downloadCacheKey: String)","com.github.panpf.sketch.fetch.HurlHttpUriFetcher.HurlHttpUriFetcher"]},{"name":"constructor(userAgent: String)","description":"com.github.panpf.sketch.http.HurlStack.UserAgentInterceptor.UserAgentInterceptor","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-user-agent-interceptor/-user-agent-interceptor.html","searchKeys":["UserAgentInterceptor","constructor(userAgent: String)","com.github.panpf.sketch.http.HurlStack.UserAgentInterceptor.UserAgentInterceptor"]},{"name":"data class HttpHeadersInterceptor(val httpHeaders: HttpHeaders?) : HurlStack.Interceptor","description":"com.github.panpf.sketch.http.HurlStack.HttpHeadersInterceptor","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-http-headers-interceptor/index.html","searchKeys":["HttpHeadersInterceptor","data class HttpHeadersInterceptor(val httpHeaders: HttpHeaders?) : HurlStack.Interceptor","com.github.panpf.sketch.http.HurlStack.HttpHeadersInterceptor"]},{"name":"data class TimeoutInterceptor(val connectTimeout: Int? = null, val readTimeout: Int? = null) : HurlStack.Interceptor","description":"com.github.panpf.sketch.http.HurlStack.TimeoutInterceptor","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-timeout-interceptor/index.html","searchKeys":["TimeoutInterceptor","data class TimeoutInterceptor(val connectTimeout: Int? = null, val readTimeout: Int? = null) : HurlStack.Interceptor","com.github.panpf.sketch.http.HurlStack.TimeoutInterceptor"]},{"name":"data class UserAgentInterceptor(val userAgent: String) : HurlStack.Interceptor","description":"com.github.panpf.sketch.http.HurlStack.UserAgentInterceptor","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-user-agent-interceptor/index.html","searchKeys":["UserAgentInterceptor","data class UserAgentInterceptor(val userAgent: String) : HurlStack.Interceptor","com.github.panpf.sketch.http.HurlStack.UserAgentInterceptor"]},{"name":"fun ComponentRegistry.Builder.supportHurlHttpUri(httpStack: HurlStack = Builder().build()): ComponentRegistry.Builder","description":"com.github.panpf.sketch.fetch.supportHurlHttpUri","location":"sketch-http-hurl/com.github.panpf.sketch.fetch/support-hurl-http-uri.html","searchKeys":["supportHurlHttpUri","fun ComponentRegistry.Builder.supportHurlHttpUri(httpStack: HurlStack = Builder().build()): ComponentRegistry.Builder","com.github.panpf.sketch.fetch.supportHurlHttpUri"]},{"name":"fun addHeaders(headers: List<Pair<String, String>>): HurlStack.Builder","description":"com.github.panpf.sketch.http.HurlStack.Builder.addHeaders","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-builder/add-headers.html","searchKeys":["addHeaders","fun addHeaders(headers: List<Pair<String, String>>): HurlStack.Builder","com.github.panpf.sketch.http.HurlStack.Builder.addHeaders"]},{"name":"fun addHeaders(vararg headers: Pair<String, String>): HurlStack.Builder","description":"com.github.panpf.sketch.http.HurlStack.Builder.addHeaders","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-builder/add-headers.html","searchKeys":["addHeaders","fun addHeaders(vararg headers: Pair<String, String>): HurlStack.Builder","com.github.panpf.sketch.http.HurlStack.Builder.addHeaders"]},{"name":"fun addInterceptor(interceptor: HurlStack.Interceptor): HurlStack.Builder","description":"com.github.panpf.sketch.http.HurlStack.Builder.addInterceptor","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-builder/add-interceptor.html","searchKeys":["addInterceptor","fun addInterceptor(interceptor: HurlStack.Interceptor): HurlStack.Builder","com.github.panpf.sketch.http.HurlStack.Builder.addInterceptor"]},{"name":"fun build(): HurlStack","description":"com.github.panpf.sketch.http.HurlStack.Builder.build","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-builder/build.html","searchKeys":["build","fun build(): HurlStack","com.github.panpf.sketch.http.HurlStack.Builder.build"]},{"name":"fun connectTimeoutMillis(connectTimeoutMillis: Int): HurlStack.Builder","description":"com.github.panpf.sketch.http.HurlStack.Builder.connectTimeoutMillis","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-builder/connect-timeout-millis.html","searchKeys":["connectTimeoutMillis","fun connectTimeoutMillis(connectTimeoutMillis: Int): HurlStack.Builder","com.github.panpf.sketch.http.HurlStack.Builder.connectTimeoutMillis"]},{"name":"fun headers(headers: Map<String, String>): HurlStack.Builder","description":"com.github.panpf.sketch.http.HurlStack.Builder.headers","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-builder/headers.html","searchKeys":["headers","fun headers(headers: Map<String, String>): HurlStack.Builder","com.github.panpf.sketch.http.HurlStack.Builder.headers"]},{"name":"fun headers(vararg headers: Pair<String, String>): HurlStack.Builder","description":"com.github.panpf.sketch.http.HurlStack.Builder.headers","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-builder/headers.html","searchKeys":["headers","fun headers(vararg headers: Pair<String, String>): HurlStack.Builder","com.github.panpf.sketch.http.HurlStack.Builder.headers"]},{"name":"fun readTimeoutMillis(readTimeoutMillis: Int): HurlStack.Builder","description":"com.github.panpf.sketch.http.HurlStack.Builder.readTimeoutMillis","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-builder/read-timeout-millis.html","searchKeys":["readTimeoutMillis","fun readTimeoutMillis(readTimeoutMillis: Int): HurlStack.Builder","com.github.panpf.sketch.http.HurlStack.Builder.readTimeoutMillis"]},{"name":"fun userAgent(userAgent: String?): HurlStack.Builder","description":"com.github.panpf.sketch.http.HurlStack.Builder.userAgent","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-builder/user-agent.html","searchKeys":["userAgent","fun userAgent(userAgent: String?): HurlStack.Builder","com.github.panpf.sketch.http.HurlStack.Builder.userAgent"]},{"name":"interface Chain","description":"com.github.panpf.sketch.http.HurlStack.Interceptor.Chain","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-interceptor/-chain/index.html","searchKeys":["Chain","interface Chain","com.github.panpf.sketch.http.HurlStack.Interceptor.Chain"]},{"name":"interface Interceptor","description":"com.github.panpf.sketch.http.HurlStack.Interceptor","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-interceptor/index.html","searchKeys":["Interceptor","interface Interceptor","com.github.panpf.sketch.http.HurlStack.Interceptor"]},{"name":"open fun createSocket(address: <Error class: unknown class>, port: Int, localAddress: <Error class: unknown class>, localPort: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.createSocket","location":"sketch-http-hurl/com.github.panpf.sketch.http.internal/-tls-compat-socket-factory/create-socket.html","searchKeys":["createSocket","open fun createSocket(address: <Error class: unknown class>, port: Int, localAddress: <Error class: unknown class>, localPort: Int): <Error class: unknown class>","com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.createSocket"]},{"name":"open fun createSocket(host: <Error class: unknown class>, port: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.createSocket","location":"sketch-http-hurl/com.github.panpf.sketch.http.internal/-tls-compat-socket-factory/create-socket.html","searchKeys":["createSocket","open fun createSocket(host: <Error class: unknown class>, port: Int): <Error class: unknown class>","com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.createSocket"]},{"name":"open fun createSocket(host: String, port: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.createSocket","location":"sketch-http-hurl/com.github.panpf.sketch.http.internal/-tls-compat-socket-factory/create-socket.html","searchKeys":["createSocket","open fun createSocket(host: String, port: Int): <Error class: unknown class>","com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.createSocket"]},{"name":"open fun createSocket(host: String, port: Int, localHost: <Error class: unknown class>, localPort: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.createSocket","location":"sketch-http-hurl/com.github.panpf.sketch.http.internal/-tls-compat-socket-factory/create-socket.html","searchKeys":["createSocket","open fun createSocket(host: String, port: Int, localHost: <Error class: unknown class>, localPort: Int): <Error class: unknown class>","com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.createSocket"]},{"name":"open fun createSocket(s: <Error class: unknown class>, host: String, port: Int, autoClose: Boolean): <Error class: unknown class>","description":"com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.createSocket","location":"sketch-http-hurl/com.github.panpf.sketch.http.internal/-tls-compat-socket-factory/create-socket.html","searchKeys":["createSocket","open fun createSocket(s: <Error class: unknown class>, host: String, port: Int, autoClose: Boolean): <Error class: unknown class>","com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.createSocket"]},{"name":"open fun getDefaultCipherSuites(): Array<String>","description":"com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.getDefaultCipherSuites","location":"sketch-http-hurl/com.github.panpf.sketch.http.internal/-tls-compat-socket-factory/get-default-cipher-suites.html","searchKeys":["getDefaultCipherSuites","open fun getDefaultCipherSuites(): Array<String>","com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.getDefaultCipherSuites"]},{"name":"open fun getSupportedCipherSuites(): Array<String>","description":"com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.getSupportedCipherSuites","location":"sketch-http-hurl/com.github.panpf.sketch.http.internal/-tls-compat-socket-factory/get-supported-cipher-suites.html","searchKeys":["getSupportedCipherSuites","open fun getSupportedCipherSuites(): Array<String>","com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.getSupportedCipherSuites"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.HurlHttpUriFetcher.Factory.equals","location":"sketch-http-hurl/com.github.panpf.sketch.fetch/-hurl-http-uri-fetcher/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.HurlHttpUriFetcher.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.HurlHttpUriFetcher.equals","location":"sketch-http-hurl/com.github.panpf.sketch.fetch/-hurl-http-uri-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.HurlHttpUriFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.http.HurlStack.equals","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.http.HurlStack.equals"]},{"name":"open override fun close()","description":"com.github.panpf.sketch.http.HurlStack.Content.close","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-content/close.html","searchKeys":["close","open override fun close()","com.github.panpf.sketch.http.HurlStack.Content.close"]},{"name":"open override fun create(requestContext: RequestContext): HttpUriFetcher?","description":"com.github.panpf.sketch.fetch.HurlHttpUriFetcher.Factory.create","location":"sketch-http-hurl/com.github.panpf.sketch.fetch/-hurl-http-uri-fetcher/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext): HttpUriFetcher?","com.github.panpf.sketch.fetch.HurlHttpUriFetcher.Factory.create"]},{"name":"open override fun factory(context: PlatformContext): HurlHttpUriFetcher.Factory","description":"com.github.panpf.sketch.fetch.internal.HurlHttpUriFetcherProvider.factory","location":"sketch-http-hurl/com.github.panpf.sketch.fetch.internal/-hurl-http-uri-fetcher-provider/factory.html","searchKeys":["factory","open override fun factory(context: PlatformContext): HurlHttpUriFetcher.Factory","com.github.panpf.sketch.fetch.internal.HurlHttpUriFetcherProvider.factory"]},{"name":"open override fun getHeaderField(name: String): String?","description":"com.github.panpf.sketch.http.HurlStack.Response.getHeaderField","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-response/get-header-field.html","searchKeys":["getHeaderField","open override fun getHeaderField(name: String): String?","com.github.panpf.sketch.http.HurlStack.Response.getHeaderField"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.HurlHttpUriFetcher.Factory.hashCode","location":"sketch-http-hurl/com.github.panpf.sketch.fetch/-hurl-http-uri-fetcher/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.HurlHttpUriFetcher.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.HurlHttpUriFetcher.hashCode","location":"sketch-http-hurl/com.github.panpf.sketch.fetch/-hurl-http-uri-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.HurlHttpUriFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.http.HurlStack.hashCode","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.http.HurlStack.hashCode"]},{"name":"open override fun intercept(chain: HurlStack.Interceptor.Chain): HurlStack.Response","description":"com.github.panpf.sketch.http.HurlStack.HttpHeadersInterceptor.intercept","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-http-headers-interceptor/intercept.html","searchKeys":["intercept","open override fun intercept(chain: HurlStack.Interceptor.Chain): HurlStack.Response","com.github.panpf.sketch.http.HurlStack.HttpHeadersInterceptor.intercept"]},{"name":"open override fun intercept(chain: HurlStack.Interceptor.Chain): HurlStack.Response","description":"com.github.panpf.sketch.http.HurlStack.TimeoutInterceptor.intercept","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-timeout-interceptor/intercept.html","searchKeys":["intercept","open override fun intercept(chain: HurlStack.Interceptor.Chain): HurlStack.Response","com.github.panpf.sketch.http.HurlStack.TimeoutInterceptor.intercept"]},{"name":"open override fun intercept(chain: HurlStack.Interceptor.Chain): HurlStack.Response","description":"com.github.panpf.sketch.http.HurlStack.UserAgentInterceptor.intercept","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-user-agent-interceptor/intercept.html","searchKeys":["intercept","open override fun intercept(chain: HurlStack.Interceptor.Chain): HurlStack.Response","com.github.panpf.sketch.http.HurlStack.UserAgentInterceptor.intercept"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.HurlHttpUriFetcher.Factory.toString","location":"sketch-http-hurl/com.github.panpf.sketch.fetch/-hurl-http-uri-fetcher/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.HurlHttpUriFetcher.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.HurlHttpUriFetcher.toString","location":"sketch-http-hurl/com.github.panpf.sketch.fetch/-hurl-http-uri-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.HurlHttpUriFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.http.HurlStack.toString","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.http.HurlStack.toString"]},{"name":"open override val code: Int","description":"com.github.panpf.sketch.http.HurlStack.Response.code","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-response/code.html","searchKeys":["code","open override val code: Int","com.github.panpf.sketch.http.HurlStack.Response.code"]},{"name":"open override val contentLength: Long","description":"com.github.panpf.sketch.http.HurlStack.Response.contentLength","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-response/content-length.html","searchKeys":["contentLength","open override val contentLength: Long","com.github.panpf.sketch.http.HurlStack.Response.contentLength"]},{"name":"open override val contentType: String?","description":"com.github.panpf.sketch.http.HurlStack.Response.contentType","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-response/content-type.html","searchKeys":["contentType","open override val contentType: String?","com.github.panpf.sketch.http.HurlStack.Response.contentType"]},{"name":"open override val message: String?","description":"com.github.panpf.sketch.http.HurlStack.Response.message","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-response/message.html","searchKeys":["message","open override val message: String?","com.github.panpf.sketch.http.HurlStack.Response.message"]},{"name":"open suspend override fun <T> request(url: String, httpHeaders: HttpHeaders?, extras: Extras?, block: suspend (HttpStack.Response) -> T): T","description":"com.github.panpf.sketch.http.HurlStack.request","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/request.html","searchKeys":["request","open suspend override fun <T> request(url: String, httpHeaders: HttpHeaders?, extras: Extras?, block: suspend (HttpStack.Response) -> T): T","com.github.panpf.sketch.http.HurlStack.request"]},{"name":"open suspend override fun content(): HttpStack.Content","description":"com.github.panpf.sketch.http.HurlStack.Response.content","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-response/content.html","searchKeys":["content","open suspend override fun content(): HttpStack.Content","com.github.panpf.sketch.http.HurlStack.Response.content"]},{"name":"open suspend override fun getResponse(url: String, httpHeaders: HttpHeaders?, extras: Extras?): HttpStack.Response","description":"com.github.panpf.sketch.http.HurlStack.getResponse","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/get-response.html","searchKeys":["getResponse","open suspend override fun getResponse(url: String, httpHeaders: HttpHeaders?, extras: Extras?): HttpStack.Response","com.github.panpf.sketch.http.HurlStack.getResponse"]},{"name":"open suspend override fun read(buffer: ByteArray): Int","description":"com.github.panpf.sketch.http.HurlStack.Content.read","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-content/read.html","searchKeys":["read","open suspend override fun read(buffer: ByteArray): Int","com.github.panpf.sketch.http.HurlStack.Content.read"]},{"name":"val connectTimeout: Int? = null","description":"com.github.panpf.sketch.http.HurlStack.TimeoutInterceptor.connectTimeout","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-timeout-interceptor/connect-timeout.html","searchKeys":["connectTimeout","val connectTimeout: Int? = null","com.github.panpf.sketch.http.HurlStack.TimeoutInterceptor.connectTimeout"]},{"name":"val connection: <Error class: unknown class>","description":"com.github.panpf.sketch.http.HurlStack.Response.connection","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-response/connection.html","searchKeys":["connection","val connection: <Error class: unknown class>","com.github.panpf.sketch.http.HurlStack.Response.connection"]},{"name":"val enabledTlsProtocols: Array<String>","description":"com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.enabledTlsProtocols","location":"sketch-http-hurl/com.github.panpf.sketch.http.internal/-tls-compat-socket-factory/enabled-tls-protocols.html","searchKeys":["enabledTlsProtocols","val enabledTlsProtocols: Array<String>","com.github.panpf.sketch.http.internal.TlsCompatSocketFactory.enabledTlsProtocols"]},{"name":"val httpHeaders: HttpHeaders?","description":"com.github.panpf.sketch.http.HurlStack.HttpHeadersInterceptor.httpHeaders","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-http-headers-interceptor/http-headers.html","searchKeys":["httpHeaders","val httpHeaders: HttpHeaders?","com.github.panpf.sketch.http.HurlStack.HttpHeadersInterceptor.httpHeaders"]},{"name":"val httpStack: HurlStack","description":"com.github.panpf.sketch.fetch.HurlHttpUriFetcher.Factory.httpStack","location":"sketch-http-hurl/com.github.panpf.sketch.fetch/-hurl-http-uri-fetcher/-factory/http-stack.html","searchKeys":["httpStack","val httpStack: HurlStack","com.github.panpf.sketch.fetch.HurlHttpUriFetcher.Factory.httpStack"]},{"name":"val interceptors: List<HurlStack.Interceptor>","description":"com.github.panpf.sketch.http.HurlStack.interceptors","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/interceptors.html","searchKeys":["interceptors","val interceptors: List<HurlStack.Interceptor>","com.github.panpf.sketch.http.HurlStack.interceptors"]},{"name":"val readTimeout: Int? = null","description":"com.github.panpf.sketch.http.HurlStack.TimeoutInterceptor.readTimeout","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-timeout-interceptor/read-timeout.html","searchKeys":["readTimeout","val readTimeout: Int? = null","com.github.panpf.sketch.http.HurlStack.TimeoutInterceptor.readTimeout"]},{"name":"val userAgent: String","description":"com.github.panpf.sketch.http.HurlStack.UserAgentInterceptor.userAgent","location":"sketch-http-hurl/com.github.panpf.sketch.http/-hurl-stack/-user-agent-interceptor/user-agent.html","searchKeys":["userAgent","val userAgent: String","com.github.panpf.sketch.http.HurlStack.UserAgentInterceptor.userAgent"]},{"name":"abstract fun createSketch(context: PlatformContext): Sketch","description":"com.github.panpf.sketch.SingletonSketch.Factory.createSketch","location":"sketch-singleton/com.github.panpf.sketch/-singleton-sketch/-factory/create-sketch.html","searchKeys":["createSketch","abstract fun createSketch(context: PlatformContext): Sketch","com.github.panpf.sketch.SingletonSketch.Factory.createSketch"]},{"name":"expect val PlatformContext.sketch: Sketch","description":"com.github.panpf.sketch.sketch","location":"sketch-singleton/com.github.panpf.sketch/sketch.html","searchKeys":["sketch","expect val PlatformContext.sketch: Sketch","com.github.panpf.sketch.sketch"]},{"name":"fun ImageRequest.enqueue(sketch: Sketch = SingletonSketch.get(context)): Disposable","description":"com.github.panpf.sketch.request.enqueue","location":"sketch-singleton/com.github.panpf.sketch.request/enqueue.html","searchKeys":["enqueue","fun ImageRequest.enqueue(sketch: Sketch = SingletonSketch.get(context)): Disposable","com.github.panpf.sketch.request.enqueue"]},{"name":"fun SingletonSketch.get(): Sketch","description":"com.github.panpf.sketch.get","location":"sketch-singleton/com.github.panpf.sketch/get.html","searchKeys":["get","fun SingletonSketch.get(): Sketch","com.github.panpf.sketch.get"]},{"name":"fun get(context: PlatformContext): Sketch","description":"com.github.panpf.sketch.SingletonSketch.get","location":"sketch-singleton/com.github.panpf.sketch/-singleton-sketch/get.html","searchKeys":["get","fun get(context: PlatformContext): Sketch","com.github.panpf.sketch.SingletonSketch.get"]},{"name":"fun interface Factory","description":"com.github.panpf.sketch.SingletonSketch.Factory","location":"sketch-singleton/com.github.panpf.sketch/-singleton-sketch/-factory/index.html","searchKeys":["Factory","fun interface Factory","com.github.panpf.sketch.SingletonSketch.Factory"]},{"name":"fun reset()","description":"com.github.panpf.sketch.SingletonSketch.reset","location":"sketch-singleton/com.github.panpf.sketch/-singleton-sketch/reset.html","searchKeys":["reset","fun reset()","com.github.panpf.sketch.SingletonSketch.reset"]},{"name":"fun setSafe(factory: SingletonSketch.Factory)","description":"com.github.panpf.sketch.SingletonSketch.setSafe","location":"sketch-singleton/com.github.panpf.sketch/-singleton-sketch/set-safe.html","searchKeys":["setSafe","fun setSafe(factory: SingletonSketch.Factory)","com.github.panpf.sketch.SingletonSketch.setSafe"]},{"name":"fun setUnsafe(factory: SingletonSketch.Factory)","description":"com.github.panpf.sketch.SingletonSketch.setUnsafe","location":"sketch-singleton/com.github.panpf.sketch/-singleton-sketch/set-unsafe.html","searchKeys":["setUnsafe","fun setUnsafe(factory: SingletonSketch.Factory)","com.github.panpf.sketch.SingletonSketch.setUnsafe"]},{"name":"fun setUnsafe(sketch: Sketch)","description":"com.github.panpf.sketch.SingletonSketch.setUnsafe","location":"sketch-singleton/com.github.panpf.sketch/-singleton-sketch/set-unsafe.html","searchKeys":["setUnsafe","fun setUnsafe(sketch: Sketch)","com.github.panpf.sketch.SingletonSketch.setUnsafe"]},{"name":"object SingletonSketch","description":"com.github.panpf.sketch.SingletonSketch","location":"sketch-singleton/com.github.panpf.sketch/-singleton-sketch/index.html","searchKeys":["SingletonSketch","object SingletonSketch","com.github.panpf.sketch.SingletonSketch"]},{"name":"suspend fun ImageRequest.execute(sketch: Sketch = SingletonSketch.get(context)): ImageResult","description":"com.github.panpf.sketch.request.execute","location":"sketch-singleton/com.github.panpf.sketch.request/execute.html","searchKeys":["execute","suspend fun ImageRequest.execute(sketch: Sketch = SingletonSketch.get(context)): ImageResult","com.github.panpf.sketch.request.execute"]},{"name":"val View.sketch: Sketch","description":"com.github.panpf.sketch.sketch","location":"sketch-singleton/com.github.panpf.sketch/sketch.html","searchKeys":["sketch","val View.sketch: Sketch","com.github.panpf.sketch.sketch"]},{"name":"fun AsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","description":"com.github.panpf.sketch.AsyncImage","location":"sketch-compose-koin/com.github.panpf.sketch/-async-image.html","searchKeys":["AsyncImage","fun AsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","com.github.panpf.sketch.AsyncImage"]},{"name":"fun AsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","description":"com.github.panpf.sketch.AsyncImage","location":"sketch-compose-koin/com.github.panpf.sketch/-async-image.html","searchKeys":["AsyncImage","fun AsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","com.github.panpf.sketch.AsyncImage"]},{"name":"fun SubcomposeAsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","description":"com.github.panpf.sketch.SubcomposeAsyncImage","location":"sketch-compose-koin/com.github.panpf.sketch/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","com.github.panpf.sketch.SubcomposeAsyncImage"]},{"name":"fun SubcomposeAsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), loading: SubcomposeAsyncImageScope.(PainterState.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(PainterState.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","description":"com.github.panpf.sketch.SubcomposeAsyncImage","location":"sketch-compose-koin/com.github.panpf.sketch/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), loading: SubcomposeAsyncImageScope.(PainterState.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(PainterState.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","com.github.panpf.sketch.SubcomposeAsyncImage"]},{"name":"fun SubcomposeAsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","description":"com.github.panpf.sketch.SubcomposeAsyncImage","location":"sketch-compose-koin/com.github.panpf.sketch/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","com.github.panpf.sketch.SubcomposeAsyncImage"]},{"name":"fun SubcomposeAsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), loading: SubcomposeAsyncImageScope.(PainterState.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(PainterState.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","description":"com.github.panpf.sketch.SubcomposeAsyncImage","location":"sketch-compose-koin/com.github.panpf.sketch/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), loading: SubcomposeAsyncImageScope.(PainterState.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(PainterState.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","com.github.panpf.sketch.SubcomposeAsyncImage"]},{"name":"fun rememberAsyncImagePainter(request: ImageRequest, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"com.github.panpf.sketch.rememberAsyncImagePainter","location":"sketch-compose-koin/com.github.panpf.sketch/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(request: ImageRequest, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","com.github.panpf.sketch.rememberAsyncImagePainter"]},{"name":"fun rememberAsyncImagePainter(request: ImageRequest, state: AsyncImageState = rememberAsyncImageState(), contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"com.github.panpf.sketch.rememberAsyncImagePainter","location":"sketch-compose-koin/com.github.panpf.sketch/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(request: ImageRequest, state: AsyncImageState = rememberAsyncImageState(), contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","com.github.panpf.sketch.rememberAsyncImagePainter"]},{"name":"fun rememberAsyncImagePainter(uri: String?, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"com.github.panpf.sketch.rememberAsyncImagePainter","location":"sketch-compose-koin/com.github.panpf.sketch/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(uri: String?, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","com.github.panpf.sketch.rememberAsyncImagePainter"]},{"name":"fun rememberAsyncImagePainter(uri: String?, state: AsyncImageState = rememberAsyncImageState(), contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"com.github.panpf.sketch.rememberAsyncImagePainter","location":"sketch-compose-koin/com.github.panpf.sketch/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(uri: String?, state: AsyncImageState = rememberAsyncImageState(), contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","com.github.panpf.sketch.rememberAsyncImagePainter"]},{"name":"class ApkIconDecoder(requestContext: RequestContext, dataFrom: DataFrom, file: File) : DrawableDecoder","description":"com.github.panpf.sketch.decode.ApkIconDecoder","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode/-apk-icon-decoder/index.html","searchKeys":["ApkIconDecoder","class ApkIconDecoder(requestContext: RequestContext, dataFrom: DataFrom, file: File) : DrawableDecoder","com.github.panpf.sketch.decode.ApkIconDecoder"]},{"name":"class ApkIconDecoderProvider : DecoderProvider","description":"com.github.panpf.sketch.decode.internal.ApkIconDecoderProvider","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode.internal/-apk-icon-decoder-provider/index.html","searchKeys":["ApkIconDecoderProvider","class ApkIconDecoderProvider : DecoderProvider","com.github.panpf.sketch.decode.internal.ApkIconDecoderProvider"]},{"name":"class ApkIconDrawableFetcher(file: File) : DrawableFetcher","description":"com.github.panpf.sketch.drawable.ApkIconDrawableFetcher","location":"sketch-extensions-apkicon/com.github.panpf.sketch.drawable/-apk-icon-drawable-fetcher/index.html","searchKeys":["ApkIconDrawableFetcher","class ApkIconDrawableFetcher(file: File) : DrawableFetcher","com.github.panpf.sketch.drawable.ApkIconDrawableFetcher"]},{"name":"class Factory : Decoder.Factory","description":"com.github.panpf.sketch.decode.ApkIconDecoder.Factory","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode/-apk-icon-decoder/-factory/index.html","searchKeys":["Factory","class Factory : Decoder.Factory","com.github.panpf.sketch.decode.ApkIconDecoder.Factory"]},{"name":"const val IMAGE_MIME_TYPE: String","description":"com.github.panpf.sketch.decode.ApkIconDecoder.Companion.IMAGE_MIME_TYPE","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode/-apk-icon-decoder/-companion/-i-m-a-g-e_-m-i-m-e_-t-y-p-e.html","searchKeys":["IMAGE_MIME_TYPE","const val IMAGE_MIME_TYPE: String","com.github.panpf.sketch.decode.ApkIconDecoder.Companion.IMAGE_MIME_TYPE"]},{"name":"const val MIME_TYPE: String","description":"com.github.panpf.sketch.decode.ApkIconDecoder.Companion.MIME_TYPE","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode/-apk-icon-decoder/-companion/-m-i-m-e_-t-y-p-e.html","searchKeys":["MIME_TYPE","const val MIME_TYPE: String","com.github.panpf.sketch.decode.ApkIconDecoder.Companion.MIME_TYPE"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.ApkIconDecoder.Factory.Factory","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode/-apk-icon-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.ApkIconDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.internal.ApkIconDecoderProvider.ApkIconDecoderProvider","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode.internal/-apk-icon-decoder-provider/-apk-icon-decoder-provider.html","searchKeys":["ApkIconDecoderProvider","constructor()","com.github.panpf.sketch.decode.internal.ApkIconDecoderProvider.ApkIconDecoderProvider"]},{"name":"constructor(file: File)","description":"com.github.panpf.sketch.drawable.ApkIconDrawableFetcher.ApkIconDrawableFetcher","location":"sketch-extensions-apkicon/com.github.panpf.sketch.drawable/-apk-icon-drawable-fetcher/-apk-icon-drawable-fetcher.html","searchKeys":["ApkIconDrawableFetcher","constructor(file: File)","com.github.panpf.sketch.drawable.ApkIconDrawableFetcher.ApkIconDrawableFetcher"]},{"name":"constructor(requestContext: RequestContext, dataFrom: DataFrom, file: File)","description":"com.github.panpf.sketch.decode.ApkIconDecoder.ApkIconDecoder","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode/-apk-icon-decoder/-apk-icon-decoder.html","searchKeys":["ApkIconDecoder","constructor(requestContext: RequestContext, dataFrom: DataFrom, file: File)","com.github.panpf.sketch.decode.ApkIconDecoder.ApkIconDecoder"]},{"name":"fun ComponentRegistry.Builder.supportApkIcon(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.decode.supportApkIcon","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode/support-apk-icon.html","searchKeys":["supportApkIcon","fun ComponentRegistry.Builder.supportApkIcon(): ComponentRegistry.Builder","com.github.panpf.sketch.decode.supportApkIcon"]},{"name":"object Companion","description":"com.github.panpf.sketch.decode.ApkIconDecoder.Companion","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode/-apk-icon-decoder/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.decode.ApkIconDecoder.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.ApkIconDecoder.Factory.equals","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode/-apk-icon-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.ApkIconDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.ApkIconDrawableFetcher.equals","location":"sketch-extensions-apkicon/com.github.panpf.sketch.drawable/-apk-icon-drawable-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.ApkIconDrawableFetcher.equals"]},{"name":"open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","description":"com.github.panpf.sketch.decode.ApkIconDecoder.Factory.create","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode/-apk-icon-decoder/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext, fetchResult: FetchResult): Decoder?","com.github.panpf.sketch.decode.ApkIconDecoder.Factory.create"]},{"name":"open override fun factory(context: <Error class: unknown class>): ApkIconDecoder.Factory","description":"com.github.panpf.sketch.decode.internal.ApkIconDecoderProvider.factory","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode.internal/-apk-icon-decoder-provider/factory.html","searchKeys":["factory","open override fun factory(context: <Error class: unknown class>): ApkIconDecoder.Factory","com.github.panpf.sketch.decode.internal.ApkIconDecoderProvider.factory"]},{"name":"open override fun getDrawable(context: Context): Drawable","description":"com.github.panpf.sketch.drawable.ApkIconDrawableFetcher.getDrawable","location":"sketch-extensions-apkicon/com.github.panpf.sketch.drawable/-apk-icon-drawable-fetcher/get-drawable.html","searchKeys":["getDrawable","open override fun getDrawable(context: Context): Drawable","com.github.panpf.sketch.drawable.ApkIconDrawableFetcher.getDrawable"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.ApkIconDecoder.Factory.hashCode","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode/-apk-icon-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.ApkIconDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.ApkIconDrawableFetcher.hashCode","location":"sketch-extensions-apkicon/com.github.panpf.sketch.drawable/-apk-icon-drawable-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.ApkIconDrawableFetcher.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.ApkIconDecoder.Factory.toString","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode/-apk-icon-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.ApkIconDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.ApkIconDrawableFetcher.toString","location":"sketch-extensions-apkicon/com.github.panpf.sketch.drawable/-apk-icon-drawable-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.ApkIconDrawableFetcher.toString"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.decode.ApkIconDecoder.Factory.key","location":"sketch-extensions-apkicon/com.github.panpf.sketch.decode/-apk-icon-decoder/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.decode.ApkIconDecoder.Factory.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.drawable.ApkIconDrawableFetcher.key","location":"sketch-extensions-apkicon/com.github.panpf.sketch.drawable/-apk-icon-drawable-fetcher/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.drawable.ApkIconDrawableFetcher.key"]},{"name":"abstract fun getHeaderField(name: String): String?","description":"com.github.panpf.sketch.http.HttpStack.Response.getHeaderField","location":"sketch-http-core/com.github.panpf.sketch.http/-http-stack/-response/get-header-field.html","searchKeys":["getHeaderField","abstract fun getHeaderField(name: String): String?","com.github.panpf.sketch.http.HttpStack.Response.getHeaderField"]},{"name":"abstract suspend fun <T> request(url: String, httpHeaders: HttpHeaders?, extras: Extras?, block: suspend (HttpStack.Response) -> T): T","description":"com.github.panpf.sketch.http.HttpStack.request","location":"sketch-http-core/com.github.panpf.sketch.http/-http-stack/request.html","searchKeys":["request","abstract suspend fun <T> request(url: String, httpHeaders: HttpHeaders?, extras: Extras?, block: suspend (HttpStack.Response) -> T): T","com.github.panpf.sketch.http.HttpStack.request"]},{"name":"abstract suspend fun content(): HttpStack.Content","description":"com.github.panpf.sketch.http.HttpStack.Response.content","location":"sketch-http-core/com.github.panpf.sketch.http/-http-stack/-response/content.html","searchKeys":["content","abstract suspend fun content(): HttpStack.Content","com.github.panpf.sketch.http.HttpStack.Response.content"]},{"name":"abstract suspend fun read(buffer: ByteArray): Int","description":"com.github.panpf.sketch.http.HttpStack.Content.read","location":"sketch-http-core/com.github.panpf.sketch.http/-http-stack/-content/read.html","searchKeys":["read","abstract suspend fun read(buffer: ByteArray): Int","com.github.panpf.sketch.http.HttpStack.Content.read"]},{"name":"abstract val code: Int","description":"com.github.panpf.sketch.http.HttpStack.Response.code","location":"sketch-http-core/com.github.panpf.sketch.http/-http-stack/-response/code.html","searchKeys":["code","abstract val code: Int","com.github.panpf.sketch.http.HttpStack.Response.code"]},{"name":"abstract val contentLength: Long","description":"com.github.panpf.sketch.http.HttpStack.Response.contentLength","location":"sketch-http-core/com.github.panpf.sketch.http/-http-stack/-response/content-length.html","searchKeys":["contentLength","abstract val contentLength: Long","com.github.panpf.sketch.http.HttpStack.Response.contentLength"]},{"name":"abstract val contentType: String?","description":"com.github.panpf.sketch.http.HttpStack.Response.contentType","location":"sketch-http-core/com.github.panpf.sketch.http/-http-stack/-response/content-type.html","searchKeys":["contentType","abstract val contentType: String?","com.github.panpf.sketch.http.HttpStack.Response.contentType"]},{"name":"abstract val message: String?","description":"com.github.panpf.sketch.http.HttpStack.Response.message","location":"sketch-http-core/com.github.panpf.sketch.http/-http-stack/-response/message.html","searchKeys":["message","abstract val message: String?","com.github.panpf.sketch.http.HttpStack.Response.message"]},{"name":"class Builder","description":"com.github.panpf.sketch.http.HttpHeaders.Builder","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/-builder/index.html","searchKeys":["Builder","class Builder","com.github.panpf.sketch.http.HttpHeaders.Builder"]},{"name":"class HttpHeaders(val addList: List<Pair<String, String>>, val setList: List<Pair<String, String>>) : Mergeable","description":"com.github.panpf.sketch.http.HttpHeaders","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/index.html","searchKeys":["HttpHeaders","class HttpHeaders(val addList: List<Pair<String, String>>, val setList: List<Pair<String, String>>) : Mergeable","com.github.panpf.sketch.http.HttpHeaders"]},{"name":"const val MIME_TYPE_TEXT_PLAIN: String","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.Companion.MIME_TYPE_TEXT_PLAIN","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/-companion/-m-i-m-e_-t-y-p-e_-t-e-x-t_-p-l-a-i-n.html","searchKeys":["MIME_TYPE_TEXT_PLAIN","const val MIME_TYPE_TEXT_PLAIN: String","com.github.panpf.sketch.fetch.HttpUriFetcher.Companion.MIME_TYPE_TEXT_PLAIN"]},{"name":"const val SCHEME_HTTP: String","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.Companion.SCHEME_HTTP","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/-companion/-s-c-h-e-m-e_-h-t-t-p.html","searchKeys":["SCHEME_HTTP","const val SCHEME_HTTP: String","com.github.panpf.sketch.fetch.HttpUriFetcher.Companion.SCHEME_HTTP"]},{"name":"const val SCHEME_HTTPS: String","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.Companion.SCHEME_HTTPS","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/-companion/-s-c-h-e-m-e_-h-t-t-p-s.html","searchKeys":["SCHEME_HTTPS","const val SCHEME_HTTPS: String","com.github.panpf.sketch.fetch.HttpUriFetcher.Companion.SCHEME_HTTPS"]},{"name":"constructor()","description":"com.github.panpf.sketch.http.HttpHeaders.Builder.Builder","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/-builder/-builder.html","searchKeys":["Builder","constructor()","com.github.panpf.sketch.http.HttpHeaders.Builder.Builder"]},{"name":"constructor()","description":"com.github.panpf.sketch.http.HttpHeaders.HttpHeaders","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/-http-headers.html","searchKeys":["HttpHeaders","constructor()","com.github.panpf.sketch.http.HttpHeaders.HttpHeaders"]},{"name":"constructor(addList: List<Pair<String, String>>, setList: List<Pair<String, String>>)","description":"com.github.panpf.sketch.http.HttpHeaders.HttpHeaders","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/-http-headers.html","searchKeys":["HttpHeaders","constructor(addList: List<Pair<String, String>>, setList: List<Pair<String, String>>)","com.github.panpf.sketch.http.HttpHeaders.HttpHeaders"]},{"name":"constructor(headers: HttpHeaders)","description":"com.github.panpf.sketch.http.HttpHeaders.Builder.Builder","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/-builder/-builder.html","searchKeys":["Builder","constructor(headers: HttpHeaders)","com.github.panpf.sketch.http.HttpHeaders.Builder.Builder"]},{"name":"constructor(httpStack: HttpStack)","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.Factory.Factory","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor(httpStack: HttpStack)","com.github.panpf.sketch.fetch.HttpUriFetcher.Factory.Factory"]},{"name":"constructor(sketch: Sketch, httpStack: HttpStack, request: ImageRequest, downloadCacheKey: String)","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.HttpUriFetcher","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/-http-uri-fetcher.html","searchKeys":["HttpUriFetcher","constructor(sketch: Sketch, httpStack: HttpStack, request: ImageRequest, downloadCacheKey: String)","com.github.panpf.sketch.fetch.HttpUriFetcher.HttpUriFetcher"]},{"name":"fun HttpHeaders(block: HttpHeaders.Builder.() -> Unit): HttpHeaders","description":"com.github.panpf.sketch.http.HttpHeaders","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers.html","searchKeys":["HttpHeaders","fun HttpHeaders(block: HttpHeaders.Builder.() -> Unit): HttpHeaders","com.github.panpf.sketch.http.HttpHeaders"]},{"name":"fun HttpHeaders.isNotEmpty(): Boolean","description":"com.github.panpf.sketch.http.isNotEmpty","location":"sketch-http-core/com.github.panpf.sketch.http/is-not-empty.html","searchKeys":["isNotEmpty","fun HttpHeaders.isNotEmpty(): Boolean","com.github.panpf.sketch.http.isNotEmpty"]},{"name":"fun HttpHeaders?.merged(other: HttpHeaders?): HttpHeaders?","description":"com.github.panpf.sketch.http.merged","location":"sketch-http-core/com.github.panpf.sketch.http/merged.html","searchKeys":["merged","fun HttpHeaders?.merged(other: HttpHeaders?): HttpHeaders?","com.github.panpf.sketch.http.merged"]},{"name":"fun ImageOptions.Builder.httpHeaders(httpHeaders: HttpHeaders?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.httpHeaders","location":"sketch-http-core/com.github.panpf.sketch.request/http-headers.html","searchKeys":["httpHeaders","fun ImageOptions.Builder.httpHeaders(httpHeaders: HttpHeaders?): ImageOptions.Builder","com.github.panpf.sketch.request.httpHeaders"]},{"name":"fun ImageRequest.Builder.httpHeaders(httpHeaders: HttpHeaders?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.httpHeaders","location":"sketch-http-core/com.github.panpf.sketch.request/http-headers.html","searchKeys":["httpHeaders","fun ImageRequest.Builder.httpHeaders(httpHeaders: HttpHeaders?): ImageRequest.Builder","com.github.panpf.sketch.request.httpHeaders"]},{"name":"fun add(name: String, value: String): HttpHeaders.Builder","description":"com.github.panpf.sketch.http.HttpHeaders.Builder.add","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/-builder/add.html","searchKeys":["add","fun add(name: String, value: String): HttpHeaders.Builder","com.github.panpf.sketch.http.HttpHeaders.Builder.add"]},{"name":"fun build(): HttpHeaders","description":"com.github.panpf.sketch.http.HttpHeaders.Builder.build","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/-builder/build.html","searchKeys":["build","fun build(): HttpHeaders","com.github.panpf.sketch.http.HttpHeaders.Builder.build"]},{"name":"fun getAdd(key: String): List<String>?","description":"com.github.panpf.sketch.http.HttpHeaders.getAdd","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/get-add.html","searchKeys":["getAdd","fun getAdd(key: String): List<String>?","com.github.panpf.sketch.http.HttpHeaders.getAdd"]},{"name":"fun getSet(key: String): String?","description":"com.github.panpf.sketch.http.HttpHeaders.getSet","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/get-set.html","searchKeys":["getSet","fun getSet(key: String): String?","com.github.panpf.sketch.http.HttpHeaders.getSet"]},{"name":"fun isEmpty(): Boolean","description":"com.github.panpf.sketch.http.HttpHeaders.isEmpty","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/is-empty.html","searchKeys":["isEmpty","fun isEmpty(): Boolean","com.github.panpf.sketch.http.HttpHeaders.isEmpty"]},{"name":"fun isHttpUri(uri: Uri): Boolean","description":"com.github.panpf.sketch.fetch.isHttpUri","location":"sketch-http-core/com.github.panpf.sketch.fetch/is-http-uri.html","searchKeys":["isHttpUri","fun isHttpUri(uri: Uri): Boolean","com.github.panpf.sketch.fetch.isHttpUri"]},{"name":"fun newBuilder(block: HttpHeaders.Builder.() -> Unit? = null): HttpHeaders.Builder","description":"com.github.panpf.sketch.http.HttpHeaders.newBuilder","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/new-builder.html","searchKeys":["newBuilder","fun newBuilder(block: HttpHeaders.Builder.() -> Unit? = null): HttpHeaders.Builder","com.github.panpf.sketch.http.HttpHeaders.newBuilder"]},{"name":"fun newHttpHeaders(block: HttpHeaders.Builder.() -> Unit? = null): HttpHeaders","description":"com.github.panpf.sketch.http.HttpHeaders.newHttpHeaders","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/new-http-headers.html","searchKeys":["newHttpHeaders","fun newHttpHeaders(block: HttpHeaders.Builder.() -> Unit? = null): HttpHeaders","com.github.panpf.sketch.http.HttpHeaders.newHttpHeaders"]},{"name":"fun removeAll(name: String): HttpHeaders.Builder","description":"com.github.panpf.sketch.http.HttpHeaders.Builder.removeAll","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/-builder/remove-all.html","searchKeys":["removeAll","fun removeAll(name: String): HttpHeaders.Builder","com.github.panpf.sketch.http.HttpHeaders.Builder.removeAll"]},{"name":"fun set(name: String, value: String): HttpHeaders.Builder","description":"com.github.panpf.sketch.http.HttpHeaders.Builder.set","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/-builder/set.html","searchKeys":["set","fun set(name: String, value: String): HttpHeaders.Builder","com.github.panpf.sketch.http.HttpHeaders.Builder.set"]},{"name":"interface Content : Closeable","description":"com.github.panpf.sketch.http.HttpStack.Content","location":"sketch-http-core/com.github.panpf.sketch.http/-http-stack/-content/index.html","searchKeys":["Content","interface Content : Closeable","com.github.panpf.sketch.http.HttpStack.Content"]},{"name":"interface HttpStack","description":"com.github.panpf.sketch.http.HttpStack","location":"sketch-http-core/com.github.panpf.sketch.http/-http-stack/index.html","searchKeys":["HttpStack","interface HttpStack","com.github.panpf.sketch.http.HttpStack"]},{"name":"interface Response","description":"com.github.panpf.sketch.http.HttpStack.Response","location":"sketch-http-core/com.github.panpf.sketch.http/-http-stack/-response/index.html","searchKeys":["Response","interface Response","com.github.panpf.sketch.http.HttpStack.Response"]},{"name":"object Companion","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.Companion","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.fetch.HttpUriFetcher.Companion"]},{"name":"open class Factory(val httpStack: HttpStack) : Fetcher.Factory","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.Factory","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/-factory/index.html","searchKeys":["Factory","open class Factory(val httpStack: HttpStack) : Fetcher.Factory","com.github.panpf.sketch.fetch.HttpUriFetcher.Factory"]},{"name":"open class HttpUriFetcher(val sketch: Sketch, val httpStack: HttpStack, val request: ImageRequest, val downloadCacheKey: String) : Fetcher","description":"com.github.panpf.sketch.fetch.HttpUriFetcher","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/index.html","searchKeys":["HttpUriFetcher","open class HttpUriFetcher(val sketch: Sketch, val httpStack: HttpStack, val request: ImageRequest, val downloadCacheKey: String) : Fetcher","com.github.panpf.sketch.fetch.HttpUriFetcher"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.Factory.equals","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.HttpUriFetcher.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.equals","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.HttpUriFetcher.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.http.HttpHeaders.equals","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.http.HttpHeaders.equals"]},{"name":"open override fun create(requestContext: RequestContext): HttpUriFetcher?","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.Factory.create","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext): HttpUriFetcher?","com.github.panpf.sketch.fetch.HttpUriFetcher.Factory.create"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.Factory.hashCode","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.HttpUriFetcher.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.hashCode","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.HttpUriFetcher.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.http.HttpHeaders.hashCode","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.http.HttpHeaders.hashCode"]},{"name":"open override fun merge(other: Mergeable): Mergeable","description":"com.github.panpf.sketch.http.HttpHeaders.merge","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/merge.html","searchKeys":["merge","open override fun merge(other: Mergeable): Mergeable","com.github.panpf.sketch.http.HttpHeaders.merge"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.Factory.toString","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.HttpUriFetcher.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.toString","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.HttpUriFetcher.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.http.HttpHeaders.toString","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.http.HttpHeaders.toString"]},{"name":"open suspend fun getResponse(url: String, httpHeaders: HttpHeaders?, extras: Extras?): HttpStack.Response","description":"com.github.panpf.sketch.http.HttpStack.getResponse","location":"sketch-http-core/com.github.panpf.sketch.http/-http-stack/get-response.html","searchKeys":["getResponse","open suspend fun getResponse(url: String, httpHeaders: HttpHeaders?, extras: Extras?): HttpStack.Response","com.github.panpf.sketch.http.HttpStack.getResponse"]},{"name":"open suspend override fun fetch(): Result<FetchResult>","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.fetch","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/fetch.html","searchKeys":["fetch","open suspend override fun fetch(): Result<FetchResult>","com.github.panpf.sketch.fetch.HttpUriFetcher.fetch"]},{"name":"val ImageOptions.httpHeaders: HttpHeaders?","description":"com.github.panpf.sketch.request.httpHeaders","location":"sketch-http-core/com.github.panpf.sketch.request/http-headers.html","searchKeys":["httpHeaders","val ImageOptions.httpHeaders: HttpHeaders?","com.github.panpf.sketch.request.httpHeaders"]},{"name":"val ImageRequest.httpHeaders: HttpHeaders?","description":"com.github.panpf.sketch.request.httpHeaders","location":"sketch-http-core/com.github.panpf.sketch.request/http-headers.html","searchKeys":["httpHeaders","val ImageRequest.httpHeaders: HttpHeaders?","com.github.panpf.sketch.request.httpHeaders"]},{"name":"val addList: List<Pair<String, String>>","description":"com.github.panpf.sketch.http.HttpHeaders.addList","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/add-list.html","searchKeys":["addList","val addList: List<Pair<String, String>>","com.github.panpf.sketch.http.HttpHeaders.addList"]},{"name":"val addSize: Int","description":"com.github.panpf.sketch.http.HttpHeaders.addSize","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/add-size.html","searchKeys":["addSize","val addSize: Int","com.github.panpf.sketch.http.HttpHeaders.addSize"]},{"name":"val downloadCacheKey: String","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.downloadCacheKey","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/download-cache-key.html","searchKeys":["downloadCacheKey","val downloadCacheKey: String","com.github.panpf.sketch.fetch.HttpUriFetcher.downloadCacheKey"]},{"name":"val httpStack: HttpStack","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.Factory.httpStack","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/-factory/http-stack.html","searchKeys":["httpStack","val httpStack: HttpStack","com.github.panpf.sketch.fetch.HttpUriFetcher.Factory.httpStack"]},{"name":"val httpStack: HttpStack","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.httpStack","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/http-stack.html","searchKeys":["httpStack","val httpStack: HttpStack","com.github.panpf.sketch.fetch.HttpUriFetcher.httpStack"]},{"name":"val request: ImageRequest","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.request","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/request.html","searchKeys":["request","val request: ImageRequest","com.github.panpf.sketch.fetch.HttpUriFetcher.request"]},{"name":"val setList: List<Pair<String, String>>","description":"com.github.panpf.sketch.http.HttpHeaders.setList","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/set-list.html","searchKeys":["setList","val setList: List<Pair<String, String>>","com.github.panpf.sketch.http.HttpHeaders.setList"]},{"name":"val setSize: Int","description":"com.github.panpf.sketch.http.HttpHeaders.setSize","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/set-size.html","searchKeys":["setSize","val setSize: Int","com.github.panpf.sketch.http.HttpHeaders.setSize"]},{"name":"val size: Int","description":"com.github.panpf.sketch.http.HttpHeaders.size","location":"sketch-http-core/com.github.panpf.sketch.http/-http-headers/size.html","searchKeys":["size","val size: Int","com.github.panpf.sketch.http.HttpHeaders.size"]},{"name":"val sketch: Sketch","description":"com.github.panpf.sketch.fetch.HttpUriFetcher.sketch","location":"sketch-http-core/com.github.panpf.sketch.fetch/-http-uri-fetcher/sketch.html","searchKeys":["sketch","val sketch: Sketch","com.github.panpf.sketch.fetch.HttpUriFetcher.sketch"]},{"name":"class Factory : Decoder.Factory","description":"com.github.panpf.sketch.decode.VideoFrameDecoder.Factory","location":"sketch-video/com.github.panpf.sketch.decode/-video-frame-decoder/-factory/index.html","searchKeys":["Factory","class Factory : Decoder.Factory","com.github.panpf.sketch.decode.VideoFrameDecoder.Factory"]},{"name":"class VideoFrameDecodeHelper(val sketch: Sketch, val request: ImageRequest, val dataSource: DataSource, mimeType: String) : DecodeHelper","description":"com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper","location":"sketch-video/com.github.panpf.sketch.decode.internal/-video-frame-decode-helper/index.html","searchKeys":["VideoFrameDecodeHelper","class VideoFrameDecodeHelper(val sketch: Sketch, val request: ImageRequest, val dataSource: DataSource, mimeType: String) : DecodeHelper","com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper"]},{"name":"class VideoFrameDecoder(requestContext: RequestContext, dataSource: DataSource, mimeType: String) : HelperDecoder","description":"com.github.panpf.sketch.decode.VideoFrameDecoder","location":"sketch-video/com.github.panpf.sketch.decode/-video-frame-decoder/index.html","searchKeys":["VideoFrameDecoder","class VideoFrameDecoder(requestContext: RequestContext, dataSource: DataSource, mimeType: String) : HelperDecoder","com.github.panpf.sketch.decode.VideoFrameDecoder"]},{"name":"class VideoFrameDecoderProvider : DecoderProvider","description":"com.github.panpf.sketch.decode.internal.VideoFrameDecoderProvider","location":"sketch-video/com.github.panpf.sketch.decode.internal/-video-frame-decoder-provider/index.html","searchKeys":["VideoFrameDecoderProvider","class VideoFrameDecoderProvider : DecoderProvider","com.github.panpf.sketch.decode.internal.VideoFrameDecoderProvider"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.VideoFrameDecoder.Factory.Factory","location":"sketch-video/com.github.panpf.sketch.decode/-video-frame-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.VideoFrameDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.internal.VideoFrameDecoderProvider.VideoFrameDecoderProvider","location":"sketch-video/com.github.panpf.sketch.decode.internal/-video-frame-decoder-provider/-video-frame-decoder-provider.html","searchKeys":["VideoFrameDecoderProvider","constructor()","com.github.panpf.sketch.decode.internal.VideoFrameDecoderProvider.VideoFrameDecoderProvider"]},{"name":"constructor(requestContext: RequestContext, dataSource: DataSource, mimeType: String)","description":"com.github.panpf.sketch.decode.VideoFrameDecoder.VideoFrameDecoder","location":"sketch-video/com.github.panpf.sketch.decode/-video-frame-decoder/-video-frame-decoder.html","searchKeys":["VideoFrameDecoder","constructor(requestContext: RequestContext, dataSource: DataSource, mimeType: String)","com.github.panpf.sketch.decode.VideoFrameDecoder.VideoFrameDecoder"]},{"name":"constructor(sketch: Sketch, request: ImageRequest, dataSource: DataSource, mimeType: String)","description":"com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.VideoFrameDecodeHelper","location":"sketch-video/com.github.panpf.sketch.decode.internal/-video-frame-decode-helper/-video-frame-decode-helper.html","searchKeys":["VideoFrameDecodeHelper","constructor(sketch: Sketch, request: ImageRequest, dataSource: DataSource, mimeType: String)","com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.VideoFrameDecodeHelper"]},{"name":"fun ComponentRegistry.Builder.supportVideoFrame(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.decode.supportVideoFrame","location":"sketch-video/com.github.panpf.sketch.decode/support-video-frame.html","searchKeys":["supportVideoFrame","fun ComponentRegistry.Builder.supportVideoFrame(): ComponentRegistry.Builder","com.github.panpf.sketch.decode.supportVideoFrame"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.VideoFrameDecoder.Factory.equals","location":"sketch-video/com.github.panpf.sketch.decode/-video-frame-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.VideoFrameDecoder.Factory.equals"]},{"name":"open override fun close()","description":"com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.close","location":"sketch-video/com.github.panpf.sketch.decode.internal/-video-frame-decode-helper/close.html","searchKeys":["close","open override fun close()","com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.close"]},{"name":"open override fun create(requestContext: RequestContext, fetchResult: FetchResult): VideoFrameDecoder?","description":"com.github.panpf.sketch.decode.VideoFrameDecoder.Factory.create","location":"sketch-video/com.github.panpf.sketch.decode/-video-frame-decoder/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext, fetchResult: FetchResult): VideoFrameDecoder?","com.github.panpf.sketch.decode.VideoFrameDecoder.Factory.create"]},{"name":"open override fun decode(sampleSize: Int): Image","description":"com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.decode","location":"sketch-video/com.github.panpf.sketch.decode.internal/-video-frame-decode-helper/decode.html","searchKeys":["decode","open override fun decode(sampleSize: Int): Image","com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.decode"]},{"name":"open override fun decodeRegion(region: Rect, sampleSize: Int): Image","description":"com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.decodeRegion","location":"sketch-video/com.github.panpf.sketch.decode.internal/-video-frame-decode-helper/decode-region.html","searchKeys":["decodeRegion","open override fun decodeRegion(region: Rect, sampleSize: Int): Image","com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.decodeRegion"]},{"name":"open override fun factory(context: <Error class: unknown class>): VideoFrameDecoder.Factory","description":"com.github.panpf.sketch.decode.internal.VideoFrameDecoderProvider.factory","location":"sketch-video/com.github.panpf.sketch.decode.internal/-video-frame-decoder-provider/factory.html","searchKeys":["factory","open override fun factory(context: <Error class: unknown class>): VideoFrameDecoder.Factory","com.github.panpf.sketch.decode.internal.VideoFrameDecoderProvider.factory"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.VideoFrameDecoder.Factory.hashCode","location":"sketch-video/com.github.panpf.sketch.decode/-video-frame-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.VideoFrameDecoder.Factory.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.VideoFrameDecoder.Factory.toString","location":"sketch-video/com.github.panpf.sketch.decode/-video-frame-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.VideoFrameDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.toString","location":"sketch-video/com.github.panpf.sketch.decode.internal/-video-frame-decode-helper/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.toString"]},{"name":"open override val imageInfo: ImageInfo","description":"com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.imageInfo","location":"sketch-video/com.github.panpf.sketch.decode.internal/-video-frame-decode-helper/image-info.html","searchKeys":["imageInfo","open override val imageInfo: ImageInfo","com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.imageInfo"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.decode.VideoFrameDecoder.Factory.key","location":"sketch-video/com.github.panpf.sketch.decode/-video-frame-decoder/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.decode.VideoFrameDecoder.Factory.key"]},{"name":"open override val supportRegion: Boolean = false","description":"com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.supportRegion","location":"sketch-video/com.github.panpf.sketch.decode.internal/-video-frame-decode-helper/support-region.html","searchKeys":["supportRegion","open override val supportRegion: Boolean = false","com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.supportRegion"]},{"name":"val dataSource: DataSource","description":"com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.dataSource","location":"sketch-video/com.github.panpf.sketch.decode.internal/-video-frame-decode-helper/data-source.html","searchKeys":["dataSource","val dataSource: DataSource","com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.dataSource"]},{"name":"val request: ImageRequest","description":"com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.request","location":"sketch-video/com.github.panpf.sketch.decode.internal/-video-frame-decode-helper/request.html","searchKeys":["request","val request: ImageRequest","com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.request"]},{"name":"val sketch: Sketch","description":"com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.sketch","location":"sketch-video/com.github.panpf.sketch.decode.internal/-video-frame-decode-helper/sketch.html","searchKeys":["sketch","val sketch: Sketch","com.github.panpf.sketch.decode.internal.VideoFrameDecodeHelper.sketch"]},{"name":"class ComposeResourceUriFetcher(val resourcePath: String) : Fetcher","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/index.html","searchKeys":["ComposeResourceUriFetcher","class ComposeResourceUriFetcher(val resourcePath: String) : Fetcher","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher"]},{"name":"class Factory : Fetcher.Factory","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Factory","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/-factory/index.html","searchKeys":["Factory","class Factory : Fetcher.Factory","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Factory"]},{"name":"const val PATH_ROOT: String","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Companion.PATH_ROOT","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/-companion/-p-a-t-h_-r-o-o-t.html","searchKeys":["PATH_ROOT","const val PATH_ROOT: String","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Companion.PATH_ROOT"]},{"name":"const val SCHEME: String","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Companion.SCHEME","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/-companion/-s-c-h-e-m-e.html","searchKeys":["SCHEME","const val SCHEME: String","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Companion.SCHEME"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Factory.Factory","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.fetch.internal.ComposeResourceUriFetcherProvider.ComposeResourceUriFetcherProvider","location":"sketch-compose-resources/com.github.panpf.sketch.fetch.internal/-compose-resource-uri-fetcher-provider/-compose-resource-uri-fetcher-provider.html","searchKeys":["ComposeResourceUriFetcherProvider","constructor()","com.github.panpf.sketch.fetch.internal.ComposeResourceUriFetcherProvider.ComposeResourceUriFetcherProvider"]},{"name":"constructor(resourcePath: String)","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.ComposeResourceUriFetcher","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/-compose-resource-uri-fetcher.html","searchKeys":["ComposeResourceUriFetcher","constructor(resourcePath: String)","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.ComposeResourceUriFetcher"]},{"name":"expect class ComposeResourceUriFetcherProvider : FetcherProvider","description":"com.github.panpf.sketch.fetch.internal.ComposeResourceUriFetcherProvider","location":"sketch-compose-resources/com.github.panpf.sketch.fetch.internal/-compose-resource-uri-fetcher-provider/index.html","searchKeys":["ComposeResourceUriFetcherProvider","expect class ComposeResourceUriFetcherProvider : FetcherProvider","com.github.panpf.sketch.fetch.internal.ComposeResourceUriFetcherProvider"]},{"name":"expect open override fun factory(context: PlatformContext): ComposeResourceUriFetcher.Factory","description":"com.github.panpf.sketch.fetch.internal.ComposeResourceUriFetcherProvider.factory","location":"sketch-compose-resources/com.github.panpf.sketch.fetch.internal/-compose-resource-uri-fetcher-provider/factory.html","searchKeys":["factory","expect open override fun factory(context: PlatformContext): ComposeResourceUriFetcher.Factory","com.github.panpf.sketch.fetch.internal.ComposeResourceUriFetcherProvider.factory"]},{"name":"fun ComponentRegistry.Builder.supportComposeResources(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.fetch.supportComposeResources","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/support-compose-resources.html","searchKeys":["supportComposeResources","fun ComponentRegistry.Builder.supportComposeResources(): ComponentRegistry.Builder","com.github.panpf.sketch.fetch.supportComposeResources"]},{"name":"fun ConditionStateImage.Builder.addState(condition: ConditionStateImage.Condition, resource: DrawableResource): ConditionStateImage.Builder","description":"com.github.panpf.sketch.state.addState","location":"sketch-compose-resources/com.github.panpf.sketch.state/add-state.html","searchKeys":["addState","fun ConditionStateImage.Builder.addState(condition: ConditionStateImage.Condition, resource: DrawableResource): ConditionStateImage.Builder","com.github.panpf.sketch.state.addState"]},{"name":"fun ImageOptions.Builder.error(resource: DrawableResource): ImageOptions.Builder","description":"com.github.panpf.sketch.request.error","location":"sketch-compose-resources/com.github.panpf.sketch.request/error.html","searchKeys":["error","fun ImageOptions.Builder.error(resource: DrawableResource): ImageOptions.Builder","com.github.panpf.sketch.request.error"]},{"name":"fun ImageOptions.Builder.fallback(resource: DrawableResource): ImageOptions.Builder","description":"com.github.panpf.sketch.request.fallback","location":"sketch-compose-resources/com.github.panpf.sketch.request/fallback.html","searchKeys":["fallback","fun ImageOptions.Builder.fallback(resource: DrawableResource): ImageOptions.Builder","com.github.panpf.sketch.request.fallback"]},{"name":"fun ImageOptions.Builder.placeholder(resource: DrawableResource): ImageOptions.Builder","description":"com.github.panpf.sketch.request.placeholder","location":"sketch-compose-resources/com.github.panpf.sketch.request/placeholder.html","searchKeys":["placeholder","fun ImageOptions.Builder.placeholder(resource: DrawableResource): ImageOptions.Builder","com.github.panpf.sketch.request.placeholder"]},{"name":"fun ImageRequest.Builder.error(resource: DrawableResource): ImageRequest.Builder","description":"com.github.panpf.sketch.request.error","location":"sketch-compose-resources/com.github.panpf.sketch.request/error.html","searchKeys":["error","fun ImageRequest.Builder.error(resource: DrawableResource): ImageRequest.Builder","com.github.panpf.sketch.request.error"]},{"name":"fun ImageRequest.Builder.fallback(resource: DrawableResource): ImageRequest.Builder","description":"com.github.panpf.sketch.request.fallback","location":"sketch-compose-resources/com.github.panpf.sketch.request/fallback.html","searchKeys":["fallback","fun ImageRequest.Builder.fallback(resource: DrawableResource): ImageRequest.Builder","com.github.panpf.sketch.request.fallback"]},{"name":"fun ImageRequest.Builder.placeholder(resource: DrawableResource): ImageRequest.Builder","description":"com.github.panpf.sketch.request.placeholder","location":"sketch-compose-resources/com.github.panpf.sketch.request/placeholder.html","searchKeys":["placeholder","fun ImageRequest.Builder.placeholder(resource: DrawableResource): ImageRequest.Builder","com.github.panpf.sketch.request.placeholder"]},{"name":"fun equitablePainterResource(resource: DrawableResource): EquitablePainter","description":"com.github.panpf.sketch.painter.equitablePainterResource","location":"sketch-compose-resources/com.github.panpf.sketch.painter/equitable-painter-resource.html","searchKeys":["equitablePainterResource","fun equitablePainterResource(resource: DrawableResource): EquitablePainter","com.github.panpf.sketch.painter.equitablePainterResource"]},{"name":"fun isComposeResourceUri(uri: Uri): Boolean","description":"com.github.panpf.sketch.fetch.isComposeResourceUri","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/is-compose-resource-uri.html","searchKeys":["isComposeResourceUri","fun isComposeResourceUri(uri: Uri): Boolean","com.github.panpf.sketch.fetch.isComposeResourceUri"]},{"name":"fun newComposeResourceUri(resourcePath: String): String","description":"com.github.panpf.sketch.fetch.newComposeResourceUri","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/new-compose-resource-uri.html","searchKeys":["newComposeResourceUri","fun newComposeResourceUri(resourcePath: String): String","com.github.panpf.sketch.fetch.newComposeResourceUri"]},{"name":"fun rememberEquitablePainterResource(resource: DrawableResource): EquitablePainter","description":"com.github.panpf.sketch.painter.rememberEquitablePainterResource","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-equitable-painter-resource.html","searchKeys":["rememberEquitablePainterResource","fun rememberEquitablePainterResource(resource: DrawableResource): EquitablePainter","com.github.panpf.sketch.painter.rememberEquitablePainterResource"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitablePainter, background: DrawableResource? = null): IconAnimatablePainter","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitablePainter, background: DrawableResource? = null): IconAnimatablePainter","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null): IconAnimatablePainter","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null): IconAnimatablePainter","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainter","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainter","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: DrawableResource? = null): IconAnimatablePainterStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: DrawableResource? = null): IconAnimatablePainterStateImage","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null): IconAnimatablePainterStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null): IconAnimatablePainterStateImage","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainterStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainterStateImage","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconPainter(icon: DrawableResource): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: DrawableResource): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: DrawableResource, background: Color? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: DrawableResource, background: Color? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: DrawableResource, background: Color? = null, iconSize: Size? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: DrawableResource, background: Color? = null, iconSize: Size? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: DrawableResource, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: DrawableResource, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: DrawableResource, background: DrawableResource? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: DrawableResource, background: DrawableResource? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: DrawableResource, background: DrawableResource? = null, iconSize: Size? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: DrawableResource, background: DrawableResource? = null, iconSize: Size? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: DrawableResource, background: DrawableResource? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: DrawableResource, background: DrawableResource? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: DrawableResource, background: EquitablePainter? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: DrawableResource, background: EquitablePainter? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: DrawableResource, background: EquitablePainter? = null, iconSize: Size? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: DrawableResource, background: EquitablePainter? = null, iconSize: Size? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: DrawableResource, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: DrawableResource, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: DrawableResource, iconSize: Size? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: DrawableResource, iconSize: Size? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: DrawableResource, iconSize: Size? = null, iconTint: Color? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: DrawableResource, iconSize: Size? = null, iconTint: Color? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitablePainter, background: DrawableResource? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitablePainter, background: DrawableResource? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-resources/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainterStateImage(icon: DrawableResource): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: DrawableResource): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: DrawableResource, background: Color? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: DrawableResource, background: Color? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: DrawableResource, background: Color? = null, iconSize: Size? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: DrawableResource, background: Color? = null, iconSize: Size? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: DrawableResource, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: DrawableResource, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: DrawableResource, background: DrawableResource? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: DrawableResource, background: DrawableResource? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: DrawableResource, background: DrawableResource? = null, iconSize: Size? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: DrawableResource, background: DrawableResource? = null, iconSize: Size? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: DrawableResource, background: DrawableResource? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: DrawableResource, background: DrawableResource? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: DrawableResource, background: EquitablePainter? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: DrawableResource, background: EquitablePainter? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: DrawableResource, background: EquitablePainter? = null, iconSize: Size? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: DrawableResource, background: EquitablePainter? = null, iconSize: Size? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: DrawableResource, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: DrawableResource, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: DrawableResource, iconSize: Size? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: DrawableResource, iconSize: Size? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: DrawableResource, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: DrawableResource, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitablePainter, background: DrawableResource? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitablePainter, background: DrawableResource? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitablePainter, background: DrawableResource? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberPainterStateImage(resource: DrawableResource): PainterStateImage","description":"com.github.panpf.sketch.state.rememberPainterStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/remember-painter-state-image.html","searchKeys":["rememberPainterStateImage","fun rememberPainterStateImage(resource: DrawableResource): PainterStateImage","com.github.panpf.sketch.state.rememberPainterStateImage"]},{"name":"inline fun ComposableConditionStateImage(defaultImage: DrawableResource, crossinline conditionBlock: ConditionStateImage.Builder.() -> Unit): ConditionStateImage","description":"com.github.panpf.sketch.state.ComposableConditionStateImage","location":"sketch-compose-resources/com.github.panpf.sketch.state/-composable-condition-state-image.html","searchKeys":["ComposableConditionStateImage","inline fun ComposableConditionStateImage(defaultImage: DrawableResource, crossinline conditionBlock: ConditionStateImage.Builder.() -> Unit): ConditionStateImage","com.github.panpf.sketch.state.ComposableConditionStateImage"]},{"name":"object Companion","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Companion","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Factory.equals","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.equals","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.equals"]},{"name":"open override fun create(requestContext: RequestContext): ComposeResourceUriFetcher?","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Factory.create","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext): ComposeResourceUriFetcher?","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Factory.create"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Factory.hashCode","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.hashCode","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Factory.toString","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.toString","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.toString"]},{"name":"open suspend override fun fetch(): Result<FetchResult>","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.fetch","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/fetch.html","searchKeys":["fetch","open suspend override fun fetch(): Result<FetchResult>","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.fetch"]},{"name":"val resourcePath: String","description":"com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.resourcePath","location":"sketch-compose-resources/com.github.panpf.sketch.fetch/-compose-resource-uri-fetcher/resource-path.html","searchKeys":["resourcePath","val resourcePath: String","com.github.panpf.sketch.fetch.ComposeResourceUriFetcher.resourcePath"]},{"name":"fun ConditionStateImage.Builder.saveCellularTrafficError(resource: DrawableResource): ConditionStateImage.Builder","description":"com.github.panpf.sketch.state.saveCellularTrafficError","location":"sketch-extensions-compose-resources/com.github.panpf.sketch.state/save-cellular-traffic-error.html","searchKeys":["saveCellularTrafficError","fun ConditionStateImage.Builder.saveCellularTrafficError(resource: DrawableResource): ConditionStateImage.Builder","com.github.panpf.sketch.state.saveCellularTrafficError"]},{"name":"abstract class AbsAbilityImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : AppCompatImageView, ViewAbilityContainer","description":"com.github.panpf.sketch.ability.AbsAbilityImageView","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/index.html","searchKeys":["AbsAbilityImageView","abstract class AbsAbilityImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : AppCompatImageView, ViewAbilityContainer","com.github.panpf.sketch.ability.AbsAbilityImageView"]},{"name":"abstract fun addViewAbility(viewAbility: ViewAbility)","description":"com.github.panpf.sketch.ability.ViewAbilityContainer.addViewAbility","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-container/add-view-ability.html","searchKeys":["addViewAbility","abstract fun addViewAbility(viewAbility: ViewAbility)","com.github.panpf.sketch.ability.ViewAbilityContainer.addViewAbility"]},{"name":"abstract fun addViewAbility(viewAbility: ViewAbility): ViewAbilityManager","description":"com.github.panpf.sketch.ability.ViewAbilityManager.addViewAbility","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/add-view-ability.html","searchKeys":["addViewAbility","abstract fun addViewAbility(viewAbility: ViewAbility): ViewAbilityManager","com.github.panpf.sketch.ability.ViewAbilityManager.addViewAbility"]},{"name":"abstract fun getContext(): Context","description":"com.github.panpf.sketch.ability.ViewAbilityContainer.getContext","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-container/get-context.html","searchKeys":["getContext","abstract fun getContext(): Context","com.github.panpf.sketch.ability.ViewAbilityContainer.getContext"]},{"name":"abstract fun getDrawable(): Drawable?","description":"com.github.panpf.sketch.ability.ViewAbilityContainer.getDrawable","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-container/get-drawable.html","searchKeys":["getDrawable","abstract fun getDrawable(): Drawable?","com.github.panpf.sketch.ability.ViewAbilityContainer.getDrawable"]},{"name":"abstract fun getImageMatrix(): Matrix?","description":"com.github.panpf.sketch.ability.ImageMatrixObserver.getImageMatrix","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-image-matrix-observer/get-image-matrix.html","searchKeys":["getImageMatrix","abstract fun getImageMatrix(): Matrix?","com.github.panpf.sketch.ability.ImageMatrixObserver.getImageMatrix"]},{"name":"abstract fun getImageMatrix(): Matrix?","description":"com.github.panpf.sketch.ability.ViewAbilityManager.getImageMatrix","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/get-image-matrix.html","searchKeys":["getImageMatrix","abstract fun getImageMatrix(): Matrix?","com.github.panpf.sketch.ability.ViewAbilityManager.getImageMatrix"]},{"name":"abstract fun getRequestListener(): Listener?","description":"com.github.panpf.sketch.ability.ViewAbilityManager.getRequestListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/get-request-listener.html","searchKeys":["getRequestListener","abstract fun getRequestListener(): Listener?","com.github.panpf.sketch.ability.ViewAbilityManager.getRequestListener"]},{"name":"abstract fun getRequestProgressListener(): ProgressListener?","description":"com.github.panpf.sketch.ability.ViewAbilityManager.getRequestProgressListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/get-request-progress-listener.html","searchKeys":["getRequestProgressListener","abstract fun getRequestProgressListener(): ProgressListener?","com.github.panpf.sketch.ability.ViewAbilityManager.getRequestProgressListener"]},{"name":"abstract fun getScaleType(): ImageView.ScaleType?","description":"com.github.panpf.sketch.ability.ScaleTypeObserver.getScaleType","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-scale-type-observer/get-scale-type.html","searchKeys":["getScaleType","abstract fun getScaleType(): ImageView.ScaleType?","com.github.panpf.sketch.ability.ScaleTypeObserver.getScaleType"]},{"name":"abstract fun getScaleType(): ImageView.ScaleType?","description":"com.github.panpf.sketch.ability.ViewAbilityManager.getScaleType","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/get-scale-type.html","searchKeys":["getScaleType","abstract fun getScaleType(): ImageView.ScaleType?","com.github.panpf.sketch.ability.ViewAbilityManager.getScaleType"]},{"name":"abstract fun onAttachedToWindow()","description":"com.github.panpf.sketch.ability.AttachObserver.onAttachedToWindow","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-attach-observer/on-attached-to-window.html","searchKeys":["onAttachedToWindow","abstract fun onAttachedToWindow()","com.github.panpf.sketch.ability.AttachObserver.onAttachedToWindow"]},{"name":"abstract fun onAttachedToWindow()","description":"com.github.panpf.sketch.ability.ViewAbilityManager.onAttachedToWindow","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/on-attached-to-window.html","searchKeys":["onAttachedToWindow","abstract fun onAttachedToWindow()","com.github.panpf.sketch.ability.ViewAbilityManager.onAttachedToWindow"]},{"name":"abstract fun onClick(v: View): Boolean","description":"com.github.panpf.sketch.ability.ClickObserver.onClick","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-click-observer/on-click.html","searchKeys":["onClick","abstract fun onClick(v: View): Boolean","com.github.panpf.sketch.ability.ClickObserver.onClick"]},{"name":"abstract fun onDetachedFromWindow()","description":"com.github.panpf.sketch.ability.AttachObserver.onDetachedFromWindow","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-attach-observer/on-detached-from-window.html","searchKeys":["onDetachedFromWindow","abstract fun onDetachedFromWindow()","com.github.panpf.sketch.ability.AttachObserver.onDetachedFromWindow"]},{"name":"abstract fun onDetachedFromWindow()","description":"com.github.panpf.sketch.ability.ViewAbilityManager.onDetachedFromWindow","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/on-detached-from-window.html","searchKeys":["onDetachedFromWindow","abstract fun onDetachedFromWindow()","com.github.panpf.sketch.ability.ViewAbilityManager.onDetachedFromWindow"]},{"name":"abstract fun onDraw(canvas: Canvas)","description":"com.github.panpf.sketch.ability.DrawObserver.onDraw","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-draw-observer/on-draw.html","searchKeys":["onDraw","abstract fun onDraw(canvas: Canvas)","com.github.panpf.sketch.ability.DrawObserver.onDraw"]},{"name":"abstract fun onDraw(canvas: Canvas)","description":"com.github.panpf.sketch.ability.ViewAbilityManager.onDraw","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/on-draw.html","searchKeys":["onDraw","abstract fun onDraw(canvas: Canvas)","com.github.panpf.sketch.ability.ViewAbilityManager.onDraw"]},{"name":"abstract fun onDrawBefore(canvas: Canvas)","description":"com.github.panpf.sketch.ability.DrawObserver.onDrawBefore","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-draw-observer/on-draw-before.html","searchKeys":["onDrawBefore","abstract fun onDrawBefore(canvas: Canvas)","com.github.panpf.sketch.ability.DrawObserver.onDrawBefore"]},{"name":"abstract fun onDrawBefore(canvas: Canvas)","description":"com.github.panpf.sketch.ability.ViewAbilityManager.onDrawBefore","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/on-draw-before.html","searchKeys":["onDrawBefore","abstract fun onDrawBefore(canvas: Canvas)","com.github.panpf.sketch.ability.ViewAbilityManager.onDrawBefore"]},{"name":"abstract fun onDrawForeground(canvas: Canvas)","description":"com.github.panpf.sketch.ability.DrawForegroundObserver.onDrawForeground","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-draw-foreground-observer/on-draw-foreground.html","searchKeys":["onDrawForeground","abstract fun onDrawForeground(canvas: Canvas)","com.github.panpf.sketch.ability.DrawForegroundObserver.onDrawForeground"]},{"name":"abstract fun onDrawForeground(canvas: Canvas)","description":"com.github.panpf.sketch.ability.ViewAbilityManager.onDrawForeground","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/on-draw-foreground.html","searchKeys":["onDrawForeground","abstract fun onDrawForeground(canvas: Canvas)","com.github.panpf.sketch.ability.ViewAbilityManager.onDrawForeground"]},{"name":"abstract fun onDrawForegroundBefore(canvas: Canvas)","description":"com.github.panpf.sketch.ability.DrawForegroundObserver.onDrawForegroundBefore","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-draw-foreground-observer/on-draw-foreground-before.html","searchKeys":["onDrawForegroundBefore","abstract fun onDrawForegroundBefore(canvas: Canvas)","com.github.panpf.sketch.ability.DrawForegroundObserver.onDrawForegroundBefore"]},{"name":"abstract fun onDrawForegroundBefore(canvas: Canvas)","description":"com.github.panpf.sketch.ability.ViewAbilityManager.onDrawForegroundBefore","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/on-draw-foreground-before.html","searchKeys":["onDrawForegroundBefore","abstract fun onDrawForegroundBefore(canvas: Canvas)","com.github.panpf.sketch.ability.ViewAbilityManager.onDrawForegroundBefore"]},{"name":"abstract fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","description":"com.github.panpf.sketch.ability.DrawableObserver.onDrawableChanged","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-drawable-observer/on-drawable-changed.html","searchKeys":["onDrawableChanged","abstract fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","com.github.panpf.sketch.ability.DrawableObserver.onDrawableChanged"]},{"name":"abstract fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","description":"com.github.panpf.sketch.ability.ViewAbilityManager.onDrawableChanged","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/on-drawable-changed.html","searchKeys":["onDrawableChanged","abstract fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","com.github.panpf.sketch.ability.ViewAbilityManager.onDrawableChanged"]},{"name":"abstract fun onLayout(changed: Boolean, left: Int, top: Int, right: Int, bottom: Int)","description":"com.github.panpf.sketch.ability.LayoutObserver.onLayout","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-layout-observer/on-layout.html","searchKeys":["onLayout","abstract fun onLayout(changed: Boolean, left: Int, top: Int, right: Int, bottom: Int)","com.github.panpf.sketch.ability.LayoutObserver.onLayout"]},{"name":"abstract fun onLayout(changed: Boolean, left: Int, top: Int, right: Int, bottom: Int)","description":"com.github.panpf.sketch.ability.ViewAbilityManager.onLayout","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/on-layout.html","searchKeys":["onLayout","abstract fun onLayout(changed: Boolean, left: Int, top: Int, right: Int, bottom: Int)","com.github.panpf.sketch.ability.ViewAbilityManager.onLayout"]},{"name":"abstract fun onLongClick(v: View): Boolean","description":"com.github.panpf.sketch.ability.LongClickObserver.onLongClick","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-long-click-observer/on-long-click.html","searchKeys":["onLongClick","abstract fun onLongClick(v: View): Boolean","com.github.panpf.sketch.ability.LongClickObserver.onLongClick"]},{"name":"abstract fun onRequestError(request: ImageRequest, error: ImageResult.Error)","description":"com.github.panpf.sketch.ability.RequestListenerObserver.onRequestError","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-request-listener-observer/on-request-error.html","searchKeys":["onRequestError","abstract fun onRequestError(request: ImageRequest, error: ImageResult.Error)","com.github.panpf.sketch.ability.RequestListenerObserver.onRequestError"]},{"name":"abstract fun onRequestStart(request: ImageRequest)","description":"com.github.panpf.sketch.ability.RequestListenerObserver.onRequestStart","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-request-listener-observer/on-request-start.html","searchKeys":["onRequestStart","abstract fun onRequestStart(request: ImageRequest)","com.github.panpf.sketch.ability.RequestListenerObserver.onRequestStart"]},{"name":"abstract fun onRequestSuccess(request: ImageRequest, result: ImageResult.Success)","description":"com.github.panpf.sketch.ability.RequestListenerObserver.onRequestSuccess","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-request-listener-observer/on-request-success.html","searchKeys":["onRequestSuccess","abstract fun onRequestSuccess(request: ImageRequest, result: ImageResult.Success)","com.github.panpf.sketch.ability.RequestListenerObserver.onRequestSuccess"]},{"name":"abstract fun onRestoreInstanceState(state: Bundle?)","description":"com.github.panpf.sketch.ability.InstanceStateObserver.onRestoreInstanceState","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-instance-state-observer/on-restore-instance-state.html","searchKeys":["onRestoreInstanceState","abstract fun onRestoreInstanceState(state: Bundle?)","com.github.panpf.sketch.ability.InstanceStateObserver.onRestoreInstanceState"]},{"name":"abstract fun onRestoreInstanceState(state: Bundle?)","description":"com.github.panpf.sketch.ability.ViewAbilityManager.onRestoreInstanceState","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/on-restore-instance-state.html","searchKeys":["onRestoreInstanceState","abstract fun onRestoreInstanceState(state: Bundle?)","com.github.panpf.sketch.ability.ViewAbilityManager.onRestoreInstanceState"]},{"name":"abstract fun onSaveInstanceState(): Bundle?","description":"com.github.panpf.sketch.ability.InstanceStateObserver.onSaveInstanceState","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-instance-state-observer/on-save-instance-state.html","searchKeys":["onSaveInstanceState","abstract fun onSaveInstanceState(): Bundle?","com.github.panpf.sketch.ability.InstanceStateObserver.onSaveInstanceState"]},{"name":"abstract fun onSaveInstanceState(): Bundle?","description":"com.github.panpf.sketch.ability.ViewAbilityManager.onSaveInstanceState","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/on-save-instance-state.html","searchKeys":["onSaveInstanceState","abstract fun onSaveInstanceState(): Bundle?","com.github.panpf.sketch.ability.ViewAbilityManager.onSaveInstanceState"]},{"name":"abstract fun onSizeChanged(width: Int, height: Int, oldWidth: Int, oldHeight: Int)","description":"com.github.panpf.sketch.ability.SizeChangedObserver.onSizeChanged","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-size-changed-observer/on-size-changed.html","searchKeys":["onSizeChanged","abstract fun onSizeChanged(width: Int, height: Int, oldWidth: Int, oldHeight: Int)","com.github.panpf.sketch.ability.SizeChangedObserver.onSizeChanged"]},{"name":"abstract fun onSizeChanged(width: Int, height: Int, oldWidth: Int, oldHeight: Int)","description":"com.github.panpf.sketch.ability.ViewAbilityManager.onSizeChanged","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/on-size-changed.html","searchKeys":["onSizeChanged","abstract fun onSizeChanged(width: Int, height: Int, oldWidth: Int, oldHeight: Int)","com.github.panpf.sketch.ability.ViewAbilityManager.onSizeChanged"]},{"name":"abstract fun onTouchEvent(event: MotionEvent): Boolean","description":"com.github.panpf.sketch.ability.TouchEventObserver.onTouchEvent","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-touch-event-observer/on-touch-event.html","searchKeys":["onTouchEvent","abstract fun onTouchEvent(event: MotionEvent): Boolean","com.github.panpf.sketch.ability.TouchEventObserver.onTouchEvent"]},{"name":"abstract fun onTouchEvent(event: MotionEvent): Boolean","description":"com.github.panpf.sketch.ability.ViewAbilityManager.onTouchEvent","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/on-touch-event.html","searchKeys":["onTouchEvent","abstract fun onTouchEvent(event: MotionEvent): Boolean","com.github.panpf.sketch.ability.ViewAbilityManager.onTouchEvent"]},{"name":"abstract fun onUpdateRequestProgress(request: ImageRequest, progress: Progress)","description":"com.github.panpf.sketch.ability.RequestProgressListenerObserver.onUpdateRequestProgress","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-request-progress-listener-observer/on-update-request-progress.html","searchKeys":["onUpdateRequestProgress","abstract fun onUpdateRequestProgress(request: ImageRequest, progress: Progress)","com.github.panpf.sketch.ability.RequestProgressListenerObserver.onUpdateRequestProgress"]},{"name":"abstract fun onVisibilityChanged(changedView: View, visibility: Int)","description":"com.github.panpf.sketch.ability.ViewAbilityManager.onVisibilityChanged","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/on-visibility-changed.html","searchKeys":["onVisibilityChanged","abstract fun onVisibilityChanged(changedView: View, visibility: Int)","com.github.panpf.sketch.ability.ViewAbilityManager.onVisibilityChanged"]},{"name":"abstract fun onVisibilityChanged(changedView: View, visibility: Int)","description":"com.github.panpf.sketch.ability.VisibilityChangedObserver.onVisibilityChanged","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-visibility-changed-observer/on-visibility-changed.html","searchKeys":["onVisibilityChanged","abstract fun onVisibilityChanged(changedView: View, visibility: Int)","com.github.panpf.sketch.ability.VisibilityChangedObserver.onVisibilityChanged"]},{"name":"abstract fun removeViewAbility(viewAbility: ViewAbility)","description":"com.github.panpf.sketch.ability.ViewAbilityContainer.removeViewAbility","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-container/remove-view-ability.html","searchKeys":["removeViewAbility","abstract fun removeViewAbility(viewAbility: ViewAbility)","com.github.panpf.sketch.ability.ViewAbilityContainer.removeViewAbility"]},{"name":"abstract fun removeViewAbility(viewAbility: ViewAbility): ViewAbilityManager","description":"com.github.panpf.sketch.ability.ViewAbilityManager.removeViewAbility","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/remove-view-ability.html","searchKeys":["removeViewAbility","abstract fun removeViewAbility(viewAbility: ViewAbility): ViewAbilityManager","com.github.panpf.sketch.ability.ViewAbilityManager.removeViewAbility"]},{"name":"abstract fun setImageMatrix(imageMatrix: Matrix?): Boolean","description":"com.github.panpf.sketch.ability.ImageMatrixObserver.setImageMatrix","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-image-matrix-observer/set-image-matrix.html","searchKeys":["setImageMatrix","abstract fun setImageMatrix(imageMatrix: Matrix?): Boolean","com.github.panpf.sketch.ability.ImageMatrixObserver.setImageMatrix"]},{"name":"abstract fun setImageMatrix(imageMatrix: Matrix?): Boolean","description":"com.github.panpf.sketch.ability.ViewAbilityManager.setImageMatrix","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/set-image-matrix.html","searchKeys":["setImageMatrix","abstract fun setImageMatrix(imageMatrix: Matrix?): Boolean","com.github.panpf.sketch.ability.ViewAbilityManager.setImageMatrix"]},{"name":"abstract fun setOnClickListener(l: View.OnClickListener?)","description":"com.github.panpf.sketch.ability.ViewAbilityManager.setOnClickListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/set-on-click-listener.html","searchKeys":["setOnClickListener","abstract fun setOnClickListener(l: View.OnClickListener?)","com.github.panpf.sketch.ability.ViewAbilityManager.setOnClickListener"]},{"name":"abstract fun setOnLongClickListener(l: View.OnLongClickListener?)","description":"com.github.panpf.sketch.ability.ViewAbilityManager.setOnLongClickListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/set-on-long-click-listener.html","searchKeys":["setOnLongClickListener","abstract fun setOnLongClickListener(l: View.OnLongClickListener?)","com.github.panpf.sketch.ability.ViewAbilityManager.setOnLongClickListener"]},{"name":"abstract fun setScaleType(scaleType: ImageView.ScaleType): Boolean","description":"com.github.panpf.sketch.ability.ScaleTypeObserver.setScaleType","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-scale-type-observer/set-scale-type.html","searchKeys":["setScaleType","abstract fun setScaleType(scaleType: ImageView.ScaleType): Boolean","com.github.panpf.sketch.ability.ScaleTypeObserver.setScaleType"]},{"name":"abstract fun setScaleType(scaleType: ImageView.ScaleType): Boolean","description":"com.github.panpf.sketch.ability.ViewAbilityManager.setScaleType","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/set-scale-type.html","searchKeys":["setScaleType","abstract fun setScaleType(scaleType: ImageView.ScaleType): Boolean","com.github.panpf.sketch.ability.ViewAbilityManager.setScaleType"]},{"name":"abstract fun superGetImageMatrix(): Matrix?","description":"com.github.panpf.sketch.ability.ViewAbilityContainer.superGetImageMatrix","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-container/super-get-image-matrix.html","searchKeys":["superGetImageMatrix","abstract fun superGetImageMatrix(): Matrix?","com.github.panpf.sketch.ability.ViewAbilityContainer.superGetImageMatrix"]},{"name":"abstract fun superGetScaleType(): ImageView.ScaleType","description":"com.github.panpf.sketch.ability.ViewAbilityContainer.superGetScaleType","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-container/super-get-scale-type.html","searchKeys":["superGetScaleType","abstract fun superGetScaleType(): ImageView.ScaleType","com.github.panpf.sketch.ability.ViewAbilityContainer.superGetScaleType"]},{"name":"abstract fun superSetImageMatrix(matrix: Matrix?)","description":"com.github.panpf.sketch.ability.ViewAbilityContainer.superSetImageMatrix","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-container/super-set-image-matrix.html","searchKeys":["superSetImageMatrix","abstract fun superSetImageMatrix(matrix: Matrix?)","com.github.panpf.sketch.ability.ViewAbilityContainer.superSetImageMatrix"]},{"name":"abstract fun superSetOnClickListener(listener: View.OnClickListener?)","description":"com.github.panpf.sketch.ability.ViewAbilityContainer.superSetOnClickListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-container/super-set-on-click-listener.html","searchKeys":["superSetOnClickListener","abstract fun superSetOnClickListener(listener: View.OnClickListener?)","com.github.panpf.sketch.ability.ViewAbilityContainer.superSetOnClickListener"]},{"name":"abstract fun superSetOnLongClickListener(listener: View.OnLongClickListener?)","description":"com.github.panpf.sketch.ability.ViewAbilityContainer.superSetOnLongClickListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-container/super-set-on-long-click-listener.html","searchKeys":["superSetOnLongClickListener","abstract fun superSetOnLongClickListener(listener: View.OnLongClickListener?)","com.github.panpf.sketch.ability.ViewAbilityContainer.superSetOnLongClickListener"]},{"name":"abstract fun superSetScaleType(scaleType: ImageView.ScaleType)","description":"com.github.panpf.sketch.ability.ViewAbilityContainer.superSetScaleType","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-container/super-set-scale-type.html","searchKeys":["superSetScaleType","abstract fun superSetScaleType(scaleType: ImageView.ScaleType)","com.github.panpf.sketch.ability.ViewAbilityContainer.superSetScaleType"]},{"name":"abstract val canIntercept: Boolean","description":"com.github.panpf.sketch.ability.ClickObserver.canIntercept","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-click-observer/can-intercept.html","searchKeys":["canIntercept","abstract val canIntercept: Boolean","com.github.panpf.sketch.ability.ClickObserver.canIntercept"]},{"name":"abstract val canIntercept: Boolean","description":"com.github.panpf.sketch.ability.LongClickObserver.canIntercept","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-long-click-observer/can-intercept.html","searchKeys":["canIntercept","abstract val canIntercept: Boolean","com.github.panpf.sketch.ability.LongClickObserver.canIntercept"]},{"name":"abstract val requestState: RequestState","description":"com.github.panpf.sketch.ability.ViewAbilityContainer.requestState","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-container/request-state.html","searchKeys":["requestState","abstract val requestState: RequestState","com.github.panpf.sketch.ability.ViewAbilityContainer.requestState"]},{"name":"abstract val viewAbilityList: List<ViewAbility>","description":"com.github.panpf.sketch.ability.ViewAbilityContainer.viewAbilityList","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-container/view-ability-list.html","searchKeys":["viewAbilityList","abstract val viewAbilityList: List<ViewAbility>","com.github.panpf.sketch.ability.ViewAbilityContainer.viewAbilityList"]},{"name":"abstract val viewAbilityList: List<ViewAbility>","description":"com.github.panpf.sketch.ability.ViewAbilityManager.viewAbilityList","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/view-ability-list.html","searchKeys":["viewAbilityList","abstract val viewAbilityList: List<ViewAbility>","com.github.panpf.sketch.ability.ViewAbilityManager.viewAbilityList"]},{"name":"abstract var host: Host?","description":"com.github.panpf.sketch.ability.ViewAbility.host","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability/host.html","searchKeys":["host","abstract var host: Host?","com.github.panpf.sketch.ability.ViewAbility.host"]},{"name":"class Host(val view: View, val container: ViewAbilityContainer)","description":"com.github.panpf.sketch.ability.Host","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-host/index.html","searchKeys":["Host","class Host(val view: View, val container: ViewAbilityContainer)","com.github.panpf.sketch.ability.Host"]},{"name":"class RealViewAbilityManager(container: ViewAbilityContainer, view: View) : ViewAbilityManager","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/index.html","searchKeys":["RealViewAbilityManager","class RealViewAbilityManager(container: ViewAbilityContainer, view: View) : ViewAbilityManager","com.github.panpf.sketch.ability.internal.RealViewAbilityManager"]},{"name":"class SavedState : View.BaseSavedState","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.SavedState","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/-saved-state/index.html","searchKeys":["SavedState","class SavedState : View.BaseSavedState","com.github.panpf.sketch.ability.AbsAbilityImageView.SavedState"]},{"name":"constructor(container: ViewAbilityContainer, view: View)","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.RealViewAbilityManager","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/-real-view-ability-manager.html","searchKeys":["RealViewAbilityManager","constructor(container: ViewAbilityContainer, view: View)","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.RealViewAbilityManager"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.AbsAbilityImageView","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/-abs-ability-image-view.html","searchKeys":["AbsAbilityImageView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","com.github.panpf.sketch.ability.AbsAbilityImageView.AbsAbilityImageView"]},{"name":"constructor(view: View, container: ViewAbilityContainer)","description":"com.github.panpf.sketch.ability.Host.Host","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-host/-host.html","searchKeys":["Host","constructor(view: View, container: ViewAbilityContainer)","com.github.panpf.sketch.ability.Host.Host"]},{"name":"interface AttachObserver : ViewObserver","description":"com.github.panpf.sketch.ability.AttachObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-attach-observer/index.html","searchKeys":["AttachObserver","interface AttachObserver : ViewObserver","com.github.panpf.sketch.ability.AttachObserver"]},{"name":"interface ClickObserver : ViewObserver","description":"com.github.panpf.sketch.ability.ClickObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-click-observer/index.html","searchKeys":["ClickObserver","interface ClickObserver : ViewObserver","com.github.panpf.sketch.ability.ClickObserver"]},{"name":"interface DrawForegroundObserver : ViewObserver","description":"com.github.panpf.sketch.ability.DrawForegroundObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-draw-foreground-observer/index.html","searchKeys":["DrawForegroundObserver","interface DrawForegroundObserver : ViewObserver","com.github.panpf.sketch.ability.DrawForegroundObserver"]},{"name":"interface DrawObserver : ViewObserver","description":"com.github.panpf.sketch.ability.DrawObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-draw-observer/index.html","searchKeys":["DrawObserver","interface DrawObserver : ViewObserver","com.github.panpf.sketch.ability.DrawObserver"]},{"name":"interface DrawableObserver : ViewObserver","description":"com.github.panpf.sketch.ability.DrawableObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-drawable-observer/index.html","searchKeys":["DrawableObserver","interface DrawableObserver : ViewObserver","com.github.panpf.sketch.ability.DrawableObserver"]},{"name":"interface ImageMatrixObserver : ViewObserver","description":"com.github.panpf.sketch.ability.ImageMatrixObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-image-matrix-observer/index.html","searchKeys":["ImageMatrixObserver","interface ImageMatrixObserver : ViewObserver","com.github.panpf.sketch.ability.ImageMatrixObserver"]},{"name":"interface InstanceStateObserver : ViewObserver","description":"com.github.panpf.sketch.ability.InstanceStateObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-instance-state-observer/index.html","searchKeys":["InstanceStateObserver","interface InstanceStateObserver : ViewObserver","com.github.panpf.sketch.ability.InstanceStateObserver"]},{"name":"interface LayoutObserver : ViewObserver","description":"com.github.panpf.sketch.ability.LayoutObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-layout-observer/index.html","searchKeys":["LayoutObserver","interface LayoutObserver : ViewObserver","com.github.panpf.sketch.ability.LayoutObserver"]},{"name":"interface LongClickObserver : ViewObserver","description":"com.github.panpf.sketch.ability.LongClickObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-long-click-observer/index.html","searchKeys":["LongClickObserver","interface LongClickObserver : ViewObserver","com.github.panpf.sketch.ability.LongClickObserver"]},{"name":"interface RequestListenerObserver : ViewObserver","description":"com.github.panpf.sketch.ability.RequestListenerObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-request-listener-observer/index.html","searchKeys":["RequestListenerObserver","interface RequestListenerObserver : ViewObserver","com.github.panpf.sketch.ability.RequestListenerObserver"]},{"name":"interface RequestProgressListenerObserver : ViewObserver","description":"com.github.panpf.sketch.ability.RequestProgressListenerObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-request-progress-listener-observer/index.html","searchKeys":["RequestProgressListenerObserver","interface RequestProgressListenerObserver : ViewObserver","com.github.panpf.sketch.ability.RequestProgressListenerObserver"]},{"name":"interface ScaleTypeObserver : ViewObserver","description":"com.github.panpf.sketch.ability.ScaleTypeObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-scale-type-observer/index.html","searchKeys":["ScaleTypeObserver","interface ScaleTypeObserver : ViewObserver","com.github.panpf.sketch.ability.ScaleTypeObserver"]},{"name":"interface SizeChangedObserver : ViewObserver","description":"com.github.panpf.sketch.ability.SizeChangedObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-size-changed-observer/index.html","searchKeys":["SizeChangedObserver","interface SizeChangedObserver : ViewObserver","com.github.panpf.sketch.ability.SizeChangedObserver"]},{"name":"interface TouchEventObserver : ViewObserver","description":"com.github.panpf.sketch.ability.TouchEventObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-touch-event-observer/index.html","searchKeys":["TouchEventObserver","interface TouchEventObserver : ViewObserver","com.github.panpf.sketch.ability.TouchEventObserver"]},{"name":"interface ViewAbility","description":"com.github.panpf.sketch.ability.ViewAbility","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability/index.html","searchKeys":["ViewAbility","interface ViewAbility","com.github.panpf.sketch.ability.ViewAbility"]},{"name":"interface ViewAbilityContainer : ListenerProvider","description":"com.github.panpf.sketch.ability.ViewAbilityContainer","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-container/index.html","searchKeys":["ViewAbilityContainer","interface ViewAbilityContainer : ListenerProvider","com.github.panpf.sketch.ability.ViewAbilityContainer"]},{"name":"interface ViewAbilityManager","description":"com.github.panpf.sketch.ability.ViewAbilityManager","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-ability-manager/index.html","searchKeys":["ViewAbilityManager","interface ViewAbilityManager","com.github.panpf.sketch.ability.ViewAbilityManager"]},{"name":"interface ViewObserver","description":"com.github.panpf.sketch.ability.ViewObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-view-observer/index.html","searchKeys":["ViewObserver","interface ViewObserver","com.github.panpf.sketch.ability.ViewObserver"]},{"name":"interface VisibilityChangedObserver : ViewObserver","description":"com.github.panpf.sketch.ability.VisibilityChangedObserver","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-visibility-changed-observer/index.html","searchKeys":["VisibilityChangedObserver","interface VisibilityChangedObserver : ViewObserver","com.github.panpf.sketch.ability.VisibilityChangedObserver"]},{"name":"object Companion","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.SavedState.Companion","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/-saved-state/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.ability.AbsAbilityImageView.SavedState.Companion"]},{"name":"open override fun addViewAbility(viewAbility: ViewAbility): ViewAbilityManager","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.addViewAbility","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/add-view-ability.html","searchKeys":["addViewAbility","open override fun addViewAbility(viewAbility: ViewAbility): ViewAbilityManager","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.addViewAbility"]},{"name":"open override fun getImageMatrix(): Matrix?","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.getImageMatrix","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/get-image-matrix.html","searchKeys":["getImageMatrix","open override fun getImageMatrix(): Matrix?","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.getImageMatrix"]},{"name":"open override fun getListener(): Listener?","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.getListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/get-listener.html","searchKeys":["getListener","open override fun getListener(): Listener?","com.github.panpf.sketch.ability.AbsAbilityImageView.getListener"]},{"name":"open override fun getProgressListener(): ProgressListener?","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.getProgressListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/get-progress-listener.html","searchKeys":["getProgressListener","open override fun getProgressListener(): ProgressListener?","com.github.panpf.sketch.ability.AbsAbilityImageView.getProgressListener"]},{"name":"open override fun getRequestListener(): Listener?","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.getRequestListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/get-request-listener.html","searchKeys":["getRequestListener","open override fun getRequestListener(): Listener?","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.getRequestListener"]},{"name":"open override fun getRequestProgressListener(): ProgressListener?","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.getRequestProgressListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/get-request-progress-listener.html","searchKeys":["getRequestProgressListener","open override fun getRequestProgressListener(): ProgressListener?","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.getRequestProgressListener"]},{"name":"open override fun getScaleType(): ImageView.ScaleType?","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.getScaleType","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/get-scale-type.html","searchKeys":["getScaleType","open override fun getScaleType(): ImageView.ScaleType?","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.getScaleType"]},{"name":"open override fun onAttachedToWindow()","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onAttachedToWindow","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/on-attached-to-window.html","searchKeys":["onAttachedToWindow","open override fun onAttachedToWindow()","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onAttachedToWindow"]},{"name":"open override fun onDetachedFromWindow()","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onDetachedFromWindow","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/on-detached-from-window.html","searchKeys":["onDetachedFromWindow","open override fun onDetachedFromWindow()","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onDetachedFromWindow"]},{"name":"open override fun onDraw(canvas: Canvas)","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onDraw","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/on-draw.html","searchKeys":["onDraw","open override fun onDraw(canvas: Canvas)","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onDraw"]},{"name":"open override fun onDrawBefore(canvas: Canvas)","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onDrawBefore","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/on-draw-before.html","searchKeys":["onDrawBefore","open override fun onDrawBefore(canvas: Canvas)","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onDrawBefore"]},{"name":"open override fun onDrawForeground(canvas: Canvas)","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.onDrawForeground","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/on-draw-foreground.html","searchKeys":["onDrawForeground","open override fun onDrawForeground(canvas: Canvas)","com.github.panpf.sketch.ability.AbsAbilityImageView.onDrawForeground"]},{"name":"open override fun onDrawForeground(canvas: Canvas)","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onDrawForeground","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/on-draw-foreground.html","searchKeys":["onDrawForeground","open override fun onDrawForeground(canvas: Canvas)","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onDrawForeground"]},{"name":"open override fun onDrawForegroundBefore(canvas: Canvas)","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onDrawForegroundBefore","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/on-draw-foreground-before.html","searchKeys":["onDrawForegroundBefore","open override fun onDrawForegroundBefore(canvas: Canvas)","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onDrawForegroundBefore"]},{"name":"open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onDrawableChanged","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/on-drawable-changed.html","searchKeys":["onDrawableChanged","open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onDrawableChanged"]},{"name":"open override fun onLayout(changed: Boolean, left: Int, top: Int, right: Int, bottom: Int)","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onLayout","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/on-layout.html","searchKeys":["onLayout","open override fun onLayout(changed: Boolean, left: Int, top: Int, right: Int, bottom: Int)","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onLayout"]},{"name":"open override fun onRestoreInstanceState(state: Bundle?)","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onRestoreInstanceState","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/on-restore-instance-state.html","searchKeys":["onRestoreInstanceState","open override fun onRestoreInstanceState(state: Bundle?)","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onRestoreInstanceState"]},{"name":"open override fun onSaveInstanceState(): Bundle?","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onSaveInstanceState","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/on-save-instance-state.html","searchKeys":["onSaveInstanceState","open override fun onSaveInstanceState(): Bundle?","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onSaveInstanceState"]},{"name":"open override fun onSizeChanged(width: Int, height: Int, oldWidth: Int, oldHeight: Int)","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onSizeChanged","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/on-size-changed.html","searchKeys":["onSizeChanged","open override fun onSizeChanged(width: Int, height: Int, oldWidth: Int, oldHeight: Int)","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onSizeChanged"]},{"name":"open override fun onTouchEvent(event: MotionEvent): Boolean","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.onTouchEvent","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/on-touch-event.html","searchKeys":["onTouchEvent","open override fun onTouchEvent(event: MotionEvent): Boolean","com.github.panpf.sketch.ability.AbsAbilityImageView.onTouchEvent"]},{"name":"open override fun onTouchEvent(event: MotionEvent): Boolean","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onTouchEvent","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/on-touch-event.html","searchKeys":["onTouchEvent","open override fun onTouchEvent(event: MotionEvent): Boolean","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onTouchEvent"]},{"name":"open override fun onVisibilityChanged(changedView: View, visibility: Int)","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onVisibilityChanged","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/on-visibility-changed.html","searchKeys":["onVisibilityChanged","open override fun onVisibilityChanged(changedView: View, visibility: Int)","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.onVisibilityChanged"]},{"name":"open override fun removeViewAbility(viewAbility: ViewAbility)","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.removeViewAbility","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/remove-view-ability.html","searchKeys":["removeViewAbility","open override fun removeViewAbility(viewAbility: ViewAbility)","com.github.panpf.sketch.ability.AbsAbilityImageView.removeViewAbility"]},{"name":"open override fun removeViewAbility(viewAbility: ViewAbility): ViewAbilityManager","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.removeViewAbility","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/remove-view-ability.html","searchKeys":["removeViewAbility","open override fun removeViewAbility(viewAbility: ViewAbility): ViewAbilityManager","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.removeViewAbility"]},{"name":"open override fun setImageDrawable(drawable: Drawable?)","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.setImageDrawable","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/set-image-drawable.html","searchKeys":["setImageDrawable","open override fun setImageDrawable(drawable: Drawable?)","com.github.panpf.sketch.ability.AbsAbilityImageView.setImageDrawable"]},{"name":"open override fun setImageMatrix(imageMatrix: Matrix?): Boolean","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.setImageMatrix","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/set-image-matrix.html","searchKeys":["setImageMatrix","open override fun setImageMatrix(imageMatrix: Matrix?): Boolean","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.setImageMatrix"]},{"name":"open override fun setImageURI(uri: Uri?)","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.setImageURI","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/set-image-u-r-i.html","searchKeys":["setImageURI","open override fun setImageURI(uri: Uri?)","com.github.panpf.sketch.ability.AbsAbilityImageView.setImageURI"]},{"name":"open override fun setOnClickListener(l: View.OnClickListener?)","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.setOnClickListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/set-on-click-listener.html","searchKeys":["setOnClickListener","open override fun setOnClickListener(l: View.OnClickListener?)","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.setOnClickListener"]},{"name":"open override fun setOnLongClickListener(l: View.OnLongClickListener?)","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.setOnLongClickListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/set-on-long-click-listener.html","searchKeys":["setOnLongClickListener","open override fun setOnLongClickListener(l: View.OnLongClickListener?)","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.setOnLongClickListener"]},{"name":"open override fun setScaleType(scaleType: ImageView.ScaleType): Boolean","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.setScaleType","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/set-scale-type.html","searchKeys":["setScaleType","open override fun setScaleType(scaleType: ImageView.ScaleType): Boolean","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.setScaleType"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.SavedState.toString","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/-saved-state/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.ability.AbsAbilityImageView.SavedState.toString"]},{"name":"open override fun writeToParcel(out: Parcel, flags: Int)","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.SavedState.writeToParcel","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/-saved-state/write-to-parcel.html","searchKeys":["writeToParcel","open override fun writeToParcel(out: Parcel, flags: Int)","com.github.panpf.sketch.ability.AbsAbilityImageView.SavedState.writeToParcel"]},{"name":"open override val viewAbilityList: List<ViewAbility>","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.viewAbilityList","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/view-ability-list.html","searchKeys":["viewAbilityList","open override val viewAbilityList: List<ViewAbility>","com.github.panpf.sketch.ability.AbsAbilityImageView.viewAbilityList"]},{"name":"open override val viewAbilityList: List<ViewAbility>","description":"com.github.panpf.sketch.ability.internal.RealViewAbilityManager.viewAbilityList","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability.internal/-real-view-ability-manager/view-ability-list.html","searchKeys":["viewAbilityList","open override val viewAbilityList: List<ViewAbility>","com.github.panpf.sketch.ability.internal.RealViewAbilityManager.viewAbilityList"]},{"name":"override fun addViewAbility(viewAbility: ViewAbility)","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.addViewAbility","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/add-view-ability.html","searchKeys":["addViewAbility","override fun addViewAbility(viewAbility: ViewAbility)","com.github.panpf.sketch.ability.AbsAbilityImageView.addViewAbility"]},{"name":"override fun getImageMatrix(): Matrix","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.getImageMatrix","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/get-image-matrix.html","searchKeys":["getImageMatrix","override fun getImageMatrix(): Matrix","com.github.panpf.sketch.ability.AbsAbilityImageView.getImageMatrix"]},{"name":"override fun getScaleType(): ImageView.ScaleType","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.getScaleType","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/get-scale-type.html","searchKeys":["getScaleType","override fun getScaleType(): ImageView.ScaleType","com.github.panpf.sketch.ability.AbsAbilityImageView.getScaleType"]},{"name":"override fun setImageMatrix(matrix: Matrix?)","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.setImageMatrix","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/set-image-matrix.html","searchKeys":["setImageMatrix","override fun setImageMatrix(matrix: Matrix?)","com.github.panpf.sketch.ability.AbsAbilityImageView.setImageMatrix"]},{"name":"override fun setOnClickListener(l: View.OnClickListener?)","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.setOnClickListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/set-on-click-listener.html","searchKeys":["setOnClickListener","override fun setOnClickListener(l: View.OnClickListener?)","com.github.panpf.sketch.ability.AbsAbilityImageView.setOnClickListener"]},{"name":"override fun setOnLongClickListener(l: View.OnLongClickListener?)","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.setOnLongClickListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/set-on-long-click-listener.html","searchKeys":["setOnLongClickListener","override fun setOnLongClickListener(l: View.OnLongClickListener?)","com.github.panpf.sketch.ability.AbsAbilityImageView.setOnLongClickListener"]},{"name":"override fun setScaleType(scaleType: ImageView.ScaleType)","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.setScaleType","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/set-scale-type.html","searchKeys":["setScaleType","override fun setScaleType(scaleType: ImageView.ScaleType)","com.github.panpf.sketch.ability.AbsAbilityImageView.setScaleType"]},{"name":"override fun superGetImageMatrix(): Matrix","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.superGetImageMatrix","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/super-get-image-matrix.html","searchKeys":["superGetImageMatrix","override fun superGetImageMatrix(): Matrix","com.github.panpf.sketch.ability.AbsAbilityImageView.superGetImageMatrix"]},{"name":"override fun superGetScaleType(): ImageView.ScaleType","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.superGetScaleType","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/super-get-scale-type.html","searchKeys":["superGetScaleType","override fun superGetScaleType(): ImageView.ScaleType","com.github.panpf.sketch.ability.AbsAbilityImageView.superGetScaleType"]},{"name":"override fun superSetImageMatrix(matrix: Matrix?)","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.superSetImageMatrix","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/super-set-image-matrix.html","searchKeys":["superSetImageMatrix","override fun superSetImageMatrix(matrix: Matrix?)","com.github.panpf.sketch.ability.AbsAbilityImageView.superSetImageMatrix"]},{"name":"override fun superSetOnClickListener(listener: View.OnClickListener?)","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.superSetOnClickListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/super-set-on-click-listener.html","searchKeys":["superSetOnClickListener","override fun superSetOnClickListener(listener: View.OnClickListener?)","com.github.panpf.sketch.ability.AbsAbilityImageView.superSetOnClickListener"]},{"name":"override fun superSetOnLongClickListener(listener: View.OnLongClickListener?)","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.superSetOnLongClickListener","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/super-set-on-long-click-listener.html","searchKeys":["superSetOnLongClickListener","override fun superSetOnLongClickListener(listener: View.OnLongClickListener?)","com.github.panpf.sketch.ability.AbsAbilityImageView.superSetOnLongClickListener"]},{"name":"override fun superSetScaleType(scaleType: ImageView.ScaleType)","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.superSetScaleType","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/super-set-scale-type.html","searchKeys":["superSetScaleType","override fun superSetScaleType(scaleType: ImageView.ScaleType)","com.github.panpf.sketch.ability.AbsAbilityImageView.superSetScaleType"]},{"name":"val CREATOR: Parcelable.Creator<AbsAbilityImageView.SavedState>","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.SavedState.Companion.CREATOR","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/-saved-state/-companion/-c-r-e-a-t-o-r.html","searchKeys":["CREATOR","val CREATOR: Parcelable.Creator<AbsAbilityImageView.SavedState>","com.github.panpf.sketch.ability.AbsAbilityImageView.SavedState.Companion.CREATOR"]},{"name":"val container: ViewAbilityContainer","description":"com.github.panpf.sketch.ability.Host.container","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-host/container.html","searchKeys":["container","val container: ViewAbilityContainer","com.github.panpf.sketch.ability.Host.container"]},{"name":"val context: Context","description":"com.github.panpf.sketch.ability.Host.context","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-host/context.html","searchKeys":["context","val context: Context","com.github.panpf.sketch.ability.Host.context"]},{"name":"val view: View","description":"com.github.panpf.sketch.ability.Host.view","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-host/view.html","searchKeys":["view","val view: View","com.github.panpf.sketch.ability.Host.view"]},{"name":"var abilityListStateBundle: Bundle?","description":"com.github.panpf.sketch.ability.AbsAbilityImageView.SavedState.abilityListStateBundle","location":"sketch-extensions-viewability/com.github.panpf.sketch.ability/-abs-ability-image-view/-saved-state/ability-list-state-bundle.html","searchKeys":["abilityListStateBundle","var abilityListStateBundle: Bundle?","com.github.panpf.sketch.ability.AbsAbilityImageView.SavedState.abilityListStateBundle"]},{"name":"fun ImageRequest.enqueue(sketch: Sketch = KoinPlatform.getKoin().get<Sketch>()): Disposable","description":"com.github.panpf.sketch.request.enqueue","location":"sketch-koin/com.github.panpf.sketch.request/enqueue.html","searchKeys":["enqueue","fun ImageRequest.enqueue(sketch: Sketch = KoinPlatform.getKoin().get<Sketch>()): Disposable","com.github.panpf.sketch.request.enqueue"]},{"name":"suspend fun ImageRequest.execute(sketch: Sketch = KoinPlatform.getKoin().get<Sketch>()): ImageResult","description":"com.github.panpf.sketch.request.execute","location":"sketch-koin/com.github.panpf.sketch.request/execute.html","searchKeys":["execute","suspend fun ImageRequest.execute(sketch: Sketch = KoinPlatform.getKoin().get<Sketch>()): ImageResult","com.github.panpf.sketch.request.execute"]},{"name":"class FFmpegVideoFrameDecodeHelper(val sketch: Sketch, val request: ImageRequest, val dataSource: DataSource, mimeType: String) : DecodeHelper","description":"com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode.internal/-f-fmpeg-video-frame-decode-helper/index.html","searchKeys":["FFmpegVideoFrameDecodeHelper","class FFmpegVideoFrameDecodeHelper(val sketch: Sketch, val request: ImageRequest, val dataSource: DataSource, mimeType: String) : DecodeHelper","com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper"]},{"name":"class FFmpegVideoFrameDecoder(requestContext: RequestContext, dataSource: DataSource, mimeType: String) : HelperDecoder","description":"com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode/-f-fmpeg-video-frame-decoder/index.html","searchKeys":["FFmpegVideoFrameDecoder","class FFmpegVideoFrameDecoder(requestContext: RequestContext, dataSource: DataSource, mimeType: String) : HelperDecoder","com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder"]},{"name":"class FFmpegVideoFrameDecoderProvider : DecoderProvider","description":"com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecoderProvider","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode.internal/-f-fmpeg-video-frame-decoder-provider/index.html","searchKeys":["FFmpegVideoFrameDecoderProvider","class FFmpegVideoFrameDecoderProvider : DecoderProvider","com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecoderProvider"]},{"name":"class Factory : Decoder.Factory","description":"com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.Factory","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode/-f-fmpeg-video-frame-decoder/-factory/index.html","searchKeys":["Factory","class Factory : Decoder.Factory","com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.Factory.Factory","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode/-f-fmpeg-video-frame-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.Factory.Factory"]},{"name":"constructor()","description":"com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecoderProvider.FFmpegVideoFrameDecoderProvider","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode.internal/-f-fmpeg-video-frame-decoder-provider/-f-fmpeg-video-frame-decoder-provider.html","searchKeys":["FFmpegVideoFrameDecoderProvider","constructor()","com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecoderProvider.FFmpegVideoFrameDecoderProvider"]},{"name":"constructor(requestContext: RequestContext, dataSource: DataSource, mimeType: String)","description":"com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.FFmpegVideoFrameDecoder","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode/-f-fmpeg-video-frame-decoder/-f-fmpeg-video-frame-decoder.html","searchKeys":["FFmpegVideoFrameDecoder","constructor(requestContext: RequestContext, dataSource: DataSource, mimeType: String)","com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.FFmpegVideoFrameDecoder"]},{"name":"constructor(sketch: Sketch, request: ImageRequest, dataSource: DataSource, mimeType: String)","description":"com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.FFmpegVideoFrameDecodeHelper","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode.internal/-f-fmpeg-video-frame-decode-helper/-f-fmpeg-video-frame-decode-helper.html","searchKeys":["FFmpegVideoFrameDecodeHelper","constructor(sketch: Sketch, request: ImageRequest, dataSource: DataSource, mimeType: String)","com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.FFmpegVideoFrameDecodeHelper"]},{"name":"fun ComponentRegistry.Builder.supportFFmpegVideoFrame(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.decode.supportFFmpegVideoFrame","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode/support-f-fmpeg-video-frame.html","searchKeys":["supportFFmpegVideoFrame","fun ComponentRegistry.Builder.supportFFmpegVideoFrame(): ComponentRegistry.Builder","com.github.panpf.sketch.decode.supportFFmpegVideoFrame"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.Factory.equals","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode/-f-fmpeg-video-frame-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.Factory.equals"]},{"name":"open override fun close()","description":"com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.close","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode.internal/-f-fmpeg-video-frame-decode-helper/close.html","searchKeys":["close","open override fun close()","com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.close"]},{"name":"open override fun create(requestContext: RequestContext, fetchResult: FetchResult): FFmpegVideoFrameDecoder?","description":"com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.Factory.create","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode/-f-fmpeg-video-frame-decoder/-factory/create.html","searchKeys":["create","open override fun create(requestContext: RequestContext, fetchResult: FetchResult): FFmpegVideoFrameDecoder?","com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.Factory.create"]},{"name":"open override fun decode(sampleSize: Int): Image","description":"com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.decode","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode.internal/-f-fmpeg-video-frame-decode-helper/decode.html","searchKeys":["decode","open override fun decode(sampleSize: Int): Image","com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.decode"]},{"name":"open override fun decodeRegion(region: Rect, sampleSize: Int): Image","description":"com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.decodeRegion","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode.internal/-f-fmpeg-video-frame-decode-helper/decode-region.html","searchKeys":["decodeRegion","open override fun decodeRegion(region: Rect, sampleSize: Int): Image","com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.decodeRegion"]},{"name":"open override fun factory(context: <Error class: unknown class>): FFmpegVideoFrameDecoder.Factory","description":"com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecoderProvider.factory","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode.internal/-f-fmpeg-video-frame-decoder-provider/factory.html","searchKeys":["factory","open override fun factory(context: <Error class: unknown class>): FFmpegVideoFrameDecoder.Factory","com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecoderProvider.factory"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.Factory.hashCode","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode/-f-fmpeg-video-frame-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.Factory.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.Factory.toString","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode/-f-fmpeg-video-frame-decoder/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.Factory.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.toString","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode.internal/-f-fmpeg-video-frame-decode-helper/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.toString"]},{"name":"open override val imageInfo: ImageInfo","description":"com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.imageInfo","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode.internal/-f-fmpeg-video-frame-decode-helper/image-info.html","searchKeys":["imageInfo","open override val imageInfo: ImageInfo","com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.imageInfo"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.Factory.key","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode/-f-fmpeg-video-frame-decoder/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.decode.FFmpegVideoFrameDecoder.Factory.key"]},{"name":"open override val supportRegion: Boolean = false","description":"com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.supportRegion","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode.internal/-f-fmpeg-video-frame-decode-helper/support-region.html","searchKeys":["supportRegion","open override val supportRegion: Boolean = false","com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.supportRegion"]},{"name":"val dataSource: DataSource","description":"com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.dataSource","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode.internal/-f-fmpeg-video-frame-decode-helper/data-source.html","searchKeys":["dataSource","val dataSource: DataSource","com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.dataSource"]},{"name":"val request: ImageRequest","description":"com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.request","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode.internal/-f-fmpeg-video-frame-decode-helper/request.html","searchKeys":["request","val request: ImageRequest","com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.request"]},{"name":"val sketch: Sketch","description":"com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.sketch","location":"sketch-video-ffmpeg/com.github.panpf.sketch.decode.internal/-f-fmpeg-video-frame-decode-helper/sketch.html","searchKeys":["sketch","val sketch: Sketch","com.github.panpf.sketch.decode.internal.FFmpegVideoFrameDecodeHelper.sketch"]},{"name":"abstract class AbsProgressPainter(val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : ProgressPainter","description":"com.github.panpf.sketch.painter.internal.AbsProgressPainter","location":"sketch-extensions-compose/com.github.panpf.sketch.painter.internal/-abs-progress-painter/index.html","searchKeys":["AbsProgressPainter","abstract class AbsProgressPainter(val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : ProgressPainter","com.github.panpf.sketch.painter.internal.AbsProgressPainter"]},{"name":"abstract class ProgressPainter : Painter","description":"com.github.panpf.sketch.painter.ProgressPainter","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-progress-painter/index.html","searchKeys":["ProgressPainter","abstract class ProgressPainter : Painter","com.github.panpf.sketch.painter.ProgressPainter"]},{"name":"abstract fun DrawScope.drawProgress(drawProgress: Float)","description":"com.github.panpf.sketch.painter.internal.AbsProgressPainter.drawProgress","location":"sketch-extensions-compose/com.github.panpf.sketch.painter.internal/-abs-progress-painter/draw-progress.html","searchKeys":["drawProgress","abstract fun DrawScope.drawProgress(drawProgress: Float)","com.github.panpf.sketch.painter.internal.AbsProgressPainter.drawProgress"]},{"name":"abstract var progress: Float","description":"com.github.panpf.sketch.painter.ProgressPainter.progress","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-progress-painter/progress.html","searchKeys":["progress","abstract var progress: Float","com.github.panpf.sketch.painter.ProgressPainter.progress"]},{"name":"class MaskProgressPainter(maskColor: Color = Color(PROGRESS_INDICATOR_MASK_COLOR), val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : AbsProgressPainter, SketchPainter","description":"com.github.panpf.sketch.painter.MaskProgressPainter","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-mask-progress-painter/index.html","searchKeys":["MaskProgressPainter","class MaskProgressPainter(maskColor: Color = Color(PROGRESS_INDICATOR_MASK_COLOR), val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : AbsProgressPainter, SketchPainter","com.github.panpf.sketch.painter.MaskProgressPainter"]},{"name":"class RingProgressPainter(density: Density, size: Dp = PROGRESS_INDICATOR_RING_SIZE.dp, ringWidth: Dp = size * PROGRESS_INDICATOR_RING_WIDTH_PERCENT, ringColor: Color = Color(PROGRESS_INDICATOR_RING_COLOR), backgroundColor: Color = ringColor.copy(alpha = PROGRESS_INDICATOR_BACKGROUND_ALPHA_PERCENT), val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : AbsProgressPainter, SketchPainter","description":"com.github.panpf.sketch.painter.RingProgressPainter","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-ring-progress-painter/index.html","searchKeys":["RingProgressPainter","class RingProgressPainter(density: Density, size: Dp = PROGRESS_INDICATOR_RING_SIZE.dp, ringWidth: Dp = size * PROGRESS_INDICATOR_RING_WIDTH_PERCENT, ringColor: Color = Color(PROGRESS_INDICATOR_RING_COLOR), backgroundColor: Color = ringColor.copy(alpha = PROGRESS_INDICATOR_BACKGROUND_ALPHA_PERCENT), val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : AbsProgressPainter, SketchPainter","com.github.panpf.sketch.painter.RingProgressPainter"]},{"name":"class SectorProgressPainter(density: Density, size: Dp = PROGRESS_INDICATOR_SECTOR_SIZE.dp, backgroundColor: Color = Color(PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR), strokeColor: Color = Color(PROGRESS_INDICATOR_SECTOR_STROKE_COLOR), progressColor: Color = Color(PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR), strokeWidth: Dp = size * PROGRESS_INDICATOR_SECTOR_STROKE_WIDTH_PERCENT, val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : AbsProgressPainter, SketchPainter","description":"com.github.panpf.sketch.painter.SectorProgressPainter","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-sector-progress-painter/index.html","searchKeys":["SectorProgressPainter","class SectorProgressPainter(density: Density, size: Dp = PROGRESS_INDICATOR_SECTOR_SIZE.dp, backgroundColor: Color = Color(PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR), strokeColor: Color = Color(PROGRESS_INDICATOR_SECTOR_STROKE_COLOR), progressColor: Color = Color(PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR), strokeWidth: Dp = size * PROGRESS_INDICATOR_SECTOR_STROKE_WIDTH_PERCENT, val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : AbsProgressPainter, SketchPainter","com.github.panpf.sketch.painter.SectorProgressPainter"]},{"name":"constructor()","description":"com.github.panpf.sketch.painter.ProgressPainter.ProgressPainter","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-progress-painter/-progress-painter.html","searchKeys":["ProgressPainter","constructor()","com.github.panpf.sketch.painter.ProgressPainter.ProgressPainter"]},{"name":"constructor(density: Density, size: Dp = PROGRESS_INDICATOR_RING_SIZE.dp, ringWidth: Dp = size * PROGRESS_INDICATOR_RING_WIDTH_PERCENT, ringColor: Color = Color(PROGRESS_INDICATOR_RING_COLOR), backgroundColor: Color = ringColor.copy(alpha = PROGRESS_INDICATOR_BACKGROUND_ALPHA_PERCENT), hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","description":"com.github.panpf.sketch.painter.RingProgressPainter.RingProgressPainter","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-ring-progress-painter/-ring-progress-painter.html","searchKeys":["RingProgressPainter","constructor(density: Density, size: Dp = PROGRESS_INDICATOR_RING_SIZE.dp, ringWidth: Dp = size * PROGRESS_INDICATOR_RING_WIDTH_PERCENT, ringColor: Color = Color(PROGRESS_INDICATOR_RING_COLOR), backgroundColor: Color = ringColor.copy(alpha = PROGRESS_INDICATOR_BACKGROUND_ALPHA_PERCENT), hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","com.github.panpf.sketch.painter.RingProgressPainter.RingProgressPainter"]},{"name":"constructor(density: Density, size: Dp = PROGRESS_INDICATOR_SECTOR_SIZE.dp, backgroundColor: Color = Color(PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR), strokeColor: Color = Color(PROGRESS_INDICATOR_SECTOR_STROKE_COLOR), progressColor: Color = Color(PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR), strokeWidth: Dp = size * PROGRESS_INDICATOR_SECTOR_STROKE_WIDTH_PERCENT, hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","description":"com.github.panpf.sketch.painter.SectorProgressPainter.SectorProgressPainter","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-sector-progress-painter/-sector-progress-painter.html","searchKeys":["SectorProgressPainter","constructor(density: Density, size: Dp = PROGRESS_INDICATOR_SECTOR_SIZE.dp, backgroundColor: Color = Color(PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR), strokeColor: Color = Color(PROGRESS_INDICATOR_SECTOR_STROKE_COLOR), progressColor: Color = Color(PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR), strokeWidth: Dp = size * PROGRESS_INDICATOR_SECTOR_STROKE_WIDTH_PERCENT, hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","com.github.panpf.sketch.painter.SectorProgressPainter.SectorProgressPainter"]},{"name":"constructor(hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","description":"com.github.panpf.sketch.painter.internal.AbsProgressPainter.AbsProgressPainter","location":"sketch-extensions-compose/com.github.panpf.sketch.painter.internal/-abs-progress-painter/-abs-progress-painter.html","searchKeys":["AbsProgressPainter","constructor(hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","com.github.panpf.sketch.painter.internal.AbsProgressPainter.AbsProgressPainter"]},{"name":"constructor(maskColor: Color = Color(PROGRESS_INDICATOR_MASK_COLOR), hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","description":"com.github.panpf.sketch.painter.MaskProgressPainter.MaskProgressPainter","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-mask-progress-painter/-mask-progress-painter.html","searchKeys":["MaskProgressPainter","constructor(maskColor: Color = Color(PROGRESS_INDICATOR_MASK_COLOR), hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","com.github.panpf.sketch.painter.MaskProgressPainter.MaskProgressPainter"]},{"name":"fun ConditionStateImage.Builder.saveCellularTrafficError(color: Color): ConditionStateImage.Builder","description":"com.github.panpf.sketch.state.saveCellularTrafficError","location":"sketch-extensions-compose/com.github.panpf.sketch.state/save-cellular-traffic-error.html","searchKeys":["saveCellularTrafficError","fun ConditionStateImage.Builder.saveCellularTrafficError(color: Color): ConditionStateImage.Builder","com.github.panpf.sketch.state.saveCellularTrafficError"]},{"name":"fun Modifier.dataFromLogo(state: AsyncImageState, size: Dp = DATA_FROM_DEFAULT_SIZE.dp): Modifier","description":"com.github.panpf.sketch.ability.dataFromLogo","location":"sketch-extensions-compose/com.github.panpf.sketch.ability/data-from-logo.html","searchKeys":["dataFromLogo","fun Modifier.dataFromLogo(state: AsyncImageState, size: Dp = DATA_FROM_DEFAULT_SIZE.dp): Modifier","com.github.panpf.sketch.ability.dataFromLogo"]},{"name":"fun Modifier.mimeTypeLogo(state: AsyncImageState, mimeTypeIconMap: Map<String, Painter>, margin: Dp = 0.dp): Modifier","description":"com.github.panpf.sketch.ability.mimeTypeLogo","location":"sketch-extensions-compose/com.github.panpf.sketch.ability/mime-type-logo.html","searchKeys":["mimeTypeLogo","fun Modifier.mimeTypeLogo(state: AsyncImageState, mimeTypeIconMap: Map<String, Painter>, margin: Dp = 0.dp): Modifier","com.github.panpf.sketch.ability.mimeTypeLogo"]},{"name":"fun Modifier.progressIndicator(state: AsyncImageState, progressPainter: ProgressPainter): Modifier","description":"com.github.panpf.sketch.ability.progressIndicator","location":"sketch-extensions-compose/com.github.panpf.sketch.ability/progress-indicator.html","searchKeys":["progressIndicator","fun Modifier.progressIndicator(state: AsyncImageState, progressPainter: ProgressPainter): Modifier","com.github.panpf.sketch.ability.progressIndicator"]},{"name":"fun bindPauseLoadWhenScrolling(scrollableState: ScrollableState)","description":"com.github.panpf.sketch.ability.bindPauseLoadWhenScrolling","location":"sketch-extensions-compose/com.github.panpf.sketch.ability/bind-pause-load-when-scrolling.html","searchKeys":["bindPauseLoadWhenScrolling","fun bindPauseLoadWhenScrolling(scrollableState: ScrollableState)","com.github.panpf.sketch.ability.bindPauseLoadWhenScrolling"]},{"name":"fun rememberMaskProgressPainter(maskColor: Color = Color(PROGRESS_INDICATOR_MASK_COLOR), hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION): MaskProgressPainter","description":"com.github.panpf.sketch.painter.rememberMaskProgressPainter","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/remember-mask-progress-painter.html","searchKeys":["rememberMaskProgressPainter","fun rememberMaskProgressPainter(maskColor: Color = Color(PROGRESS_INDICATOR_MASK_COLOR), hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION): MaskProgressPainter","com.github.panpf.sketch.painter.rememberMaskProgressPainter"]},{"name":"fun rememberRingProgressPainter(size: Dp = PROGRESS_INDICATOR_RING_SIZE.dp, ringWidth: Dp = size * PROGRESS_INDICATOR_RING_WIDTH_PERCENT, ringColor: Color = Color(PROGRESS_INDICATOR_RING_COLOR), backgroundColor: Color = ringColor.copy(alpha = PROGRESS_INDICATOR_BACKGROUND_ALPHA_PERCENT), hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION): RingProgressPainter","description":"com.github.panpf.sketch.painter.rememberRingProgressPainter","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/remember-ring-progress-painter.html","searchKeys":["rememberRingProgressPainter","fun rememberRingProgressPainter(size: Dp = PROGRESS_INDICATOR_RING_SIZE.dp, ringWidth: Dp = size * PROGRESS_INDICATOR_RING_WIDTH_PERCENT, ringColor: Color = Color(PROGRESS_INDICATOR_RING_COLOR), backgroundColor: Color = ringColor.copy(alpha = PROGRESS_INDICATOR_BACKGROUND_ALPHA_PERCENT), hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION): RingProgressPainter","com.github.panpf.sketch.painter.rememberRingProgressPainter"]},{"name":"fun rememberSectorProgressPainter(size: Dp = PROGRESS_INDICATOR_SECTOR_SIZE.dp, backgroundColor: Color = Color(PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR), strokeColor: Color = Color(PROGRESS_INDICATOR_SECTOR_STROKE_COLOR), progressColor: Color = Color(PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR), strokeWidth: Dp = size * PROGRESS_INDICATOR_SECTOR_STROKE_WIDTH_PERCENT, hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION): SectorProgressPainter","description":"com.github.panpf.sketch.painter.rememberSectorProgressPainter","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/remember-sector-progress-painter.html","searchKeys":["rememberSectorProgressPainter","fun rememberSectorProgressPainter(size: Dp = PROGRESS_INDICATOR_SECTOR_SIZE.dp, backgroundColor: Color = Color(PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR), strokeColor: Color = Color(PROGRESS_INDICATOR_SECTOR_STROKE_COLOR), progressColor: Color = Color(PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR), strokeWidth: Dp = size * PROGRESS_INDICATOR_SECTOR_STROKE_WIDTH_PERCENT, hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION): SectorProgressPainter","com.github.panpf.sketch.painter.rememberSectorProgressPainter"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.MaskProgressPainter.equals","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-mask-progress-painter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.MaskProgressPainter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.RingProgressPainter.equals","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-ring-progress-painter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.RingProgressPainter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.SectorProgressPainter.equals","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-sector-progress-painter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.SectorProgressPainter.equals"]},{"name":"open override fun DrawScope.drawProgress(drawProgress: Float)","description":"com.github.panpf.sketch.painter.MaskProgressPainter.drawProgress","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-mask-progress-painter/draw-progress.html","searchKeys":["drawProgress","open override fun DrawScope.drawProgress(drawProgress: Float)","com.github.panpf.sketch.painter.MaskProgressPainter.drawProgress"]},{"name":"open override fun DrawScope.drawProgress(drawProgress: Float)","description":"com.github.panpf.sketch.painter.RingProgressPainter.drawProgress","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-ring-progress-painter/draw-progress.html","searchKeys":["drawProgress","open override fun DrawScope.drawProgress(drawProgress: Float)","com.github.panpf.sketch.painter.RingProgressPainter.drawProgress"]},{"name":"open override fun DrawScope.drawProgress(drawProgress: Float)","description":"com.github.panpf.sketch.painter.SectorProgressPainter.drawProgress","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-sector-progress-painter/draw-progress.html","searchKeys":["drawProgress","open override fun DrawScope.drawProgress(drawProgress: Float)","com.github.panpf.sketch.painter.SectorProgressPainter.drawProgress"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.MaskProgressPainter.hashCode","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-mask-progress-painter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.painter.MaskProgressPainter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.RingProgressPainter.hashCode","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-ring-progress-painter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.painter.RingProgressPainter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.SectorProgressPainter.hashCode","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-sector-progress-painter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.painter.SectorProgressPainter.hashCode"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.painter.MaskProgressPainter.toString","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-mask-progress-painter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.painter.MaskProgressPainter.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.painter.RingProgressPainter.toString","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-ring-progress-painter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.painter.RingProgressPainter.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.painter.SectorProgressPainter.toString","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-sector-progress-painter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.painter.SectorProgressPainter.toString"]},{"name":"open override val intrinsicSize: Size","description":"com.github.panpf.sketch.painter.MaskProgressPainter.intrinsicSize","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-mask-progress-painter/intrinsic-size.html","searchKeys":["intrinsicSize","open override val intrinsicSize: Size","com.github.panpf.sketch.painter.MaskProgressPainter.intrinsicSize"]},{"name":"open override val intrinsicSize: Size","description":"com.github.panpf.sketch.painter.RingProgressPainter.intrinsicSize","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-ring-progress-painter/intrinsic-size.html","searchKeys":["intrinsicSize","open override val intrinsicSize: Size","com.github.panpf.sketch.painter.RingProgressPainter.intrinsicSize"]},{"name":"open override val intrinsicSize: Size","description":"com.github.panpf.sketch.painter.SectorProgressPainter.intrinsicSize","location":"sketch-extensions-compose/com.github.panpf.sketch.painter/-sector-progress-painter/intrinsic-size.html","searchKeys":["intrinsicSize","open override val intrinsicSize: Size","com.github.panpf.sketch.painter.SectorProgressPainter.intrinsicSize"]},{"name":"override var progress: Float","description":"com.github.panpf.sketch.painter.internal.AbsProgressPainter.progress","location":"sketch-extensions-compose/com.github.panpf.sketch.painter.internal/-abs-progress-painter/progress.html","searchKeys":["progress","override var progress: Float","com.github.panpf.sketch.painter.internal.AbsProgressPainter.progress"]},{"name":"val hiddenWhenCompleted: Boolean","description":"com.github.panpf.sketch.painter.internal.AbsProgressPainter.hiddenWhenCompleted","location":"sketch-extensions-compose/com.github.panpf.sketch.painter.internal/-abs-progress-painter/hidden-when-completed.html","searchKeys":["hiddenWhenCompleted","val hiddenWhenCompleted: Boolean","com.github.panpf.sketch.painter.internal.AbsProgressPainter.hiddenWhenCompleted"]},{"name":"val hiddenWhenIndeterminate: Boolean","description":"com.github.panpf.sketch.painter.internal.AbsProgressPainter.hiddenWhenIndeterminate","location":"sketch-extensions-compose/com.github.panpf.sketch.painter.internal/-abs-progress-painter/hidden-when-indeterminate.html","searchKeys":["hiddenWhenIndeterminate","val hiddenWhenIndeterminate: Boolean","com.github.panpf.sketch.painter.internal.AbsProgressPainter.hiddenWhenIndeterminate"]},{"name":"val stepAnimationDuration: Int","description":"com.github.panpf.sketch.painter.internal.AbsProgressPainter.stepAnimationDuration","location":"sketch-extensions-compose/com.github.panpf.sketch.painter.internal/-abs-progress-painter/step-animation-duration.html","searchKeys":["stepAnimationDuration","val stepAnimationDuration: Int","com.github.panpf.sketch.painter.internal.AbsProgressPainter.stepAnimationDuration"]},{"name":"abstract class AbsProgressDrawable(val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : ProgressDrawable","description":"com.github.panpf.sketch.drawable.internal.AbsProgressDrawable","location":"sketch-extensions-core/com.github.panpf.sketch.drawable.internal/-abs-progress-drawable/index.html","searchKeys":["AbsProgressDrawable","abstract class AbsProgressDrawable(val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : ProgressDrawable","com.github.panpf.sketch.drawable.internal.AbsProgressDrawable"]},{"name":"abstract class ProgressDrawable : Drawable","description":"com.github.panpf.sketch.drawable.ProgressDrawable","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-progress-drawable/index.html","searchKeys":["ProgressDrawable","abstract class ProgressDrawable : Drawable","com.github.panpf.sketch.drawable.ProgressDrawable"]},{"name":"abstract fun drawProgress(canvas: Canvas, drawProgress: Float)","description":"com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.drawProgress","location":"sketch-extensions-core/com.github.panpf.sketch.drawable.internal/-abs-progress-drawable/draw-progress.html","searchKeys":["drawProgress","abstract fun drawProgress(canvas: Canvas, drawProgress: Float)","com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.drawProgress"]},{"name":"abstract override fun mutate(): ProgressDrawable","description":"com.github.panpf.sketch.drawable.ProgressDrawable.mutate","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-progress-drawable/mutate.html","searchKeys":["mutate","abstract override fun mutate(): ProgressDrawable","com.github.panpf.sketch.drawable.ProgressDrawable.mutate"]},{"name":"abstract var progress: Float","description":"com.github.panpf.sketch.drawable.ProgressDrawable.progress","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-progress-drawable/progress.html","searchKeys":["progress","abstract var progress: Float","com.github.panpf.sketch.drawable.ProgressDrawable.progress"]},{"name":"class MaskProgressDrawable(maskColor: Int = PROGRESS_INDICATOR_MASK_COLOR, val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : AbsProgressDrawable, SketchDrawable","description":"com.github.panpf.sketch.drawable.MaskProgressDrawable","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-mask-progress-drawable/index.html","searchKeys":["MaskProgressDrawable","class MaskProgressDrawable(maskColor: Int = PROGRESS_INDICATOR_MASK_COLOR, val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : AbsProgressDrawable, SketchDrawable","com.github.panpf.sketch.drawable.MaskProgressDrawable"]},{"name":"class PauseLoadWhenScrollingDecodeInterceptor(val sortWeight: Int = 0) : DecodeInterceptor","description":"com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor","location":"sketch-extensions-core/com.github.panpf.sketch.request/-pause-load-when-scrolling-decode-interceptor/index.html","searchKeys":["PauseLoadWhenScrollingDecodeInterceptor","class PauseLoadWhenScrollingDecodeInterceptor(val sortWeight: Int = 0) : DecodeInterceptor","com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor"]},{"name":"class RingProgressDrawable(size: Int = PROGRESS_INDICATOR_RING_SIZE.dp2Px(), ringWidth: Float = size * PROGRESS_INDICATOR_RING_WIDTH_PERCENT, ringColor: Int = PROGRESS_INDICATOR_RING_COLOR, backgroundColor: Int = ColorUtils.setAlphaComponent(\n        ringColor,\n        (PROGRESS_INDICATOR_BACKGROUND_ALPHA_PERCENT * 255).roundToInt()\n    ), val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : AbsProgressDrawable, SketchDrawable","description":"com.github.panpf.sketch.drawable.RingProgressDrawable","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-ring-progress-drawable/index.html","searchKeys":["RingProgressDrawable","class RingProgressDrawable(size: Int = PROGRESS_INDICATOR_RING_SIZE.dp2Px(), ringWidth: Float = size * PROGRESS_INDICATOR_RING_WIDTH_PERCENT, ringColor: Int = PROGRESS_INDICATOR_RING_COLOR, backgroundColor: Int = ColorUtils.setAlphaComponent(\n        ringColor,\n        (PROGRESS_INDICATOR_BACKGROUND_ALPHA_PERCENT * 255).roundToInt()\n    ), val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : AbsProgressDrawable, SketchDrawable","com.github.panpf.sketch.drawable.RingProgressDrawable"]},{"name":"class SaveCellularTrafficRequestInterceptor(val sortWeight: Int = 0, isCellularNetworkConnected: (Sketch) -> Boolean? = null) : RequestInterceptor","description":"com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor","location":"sketch-extensions-core/com.github.panpf.sketch.request/-save-cellular-traffic-request-interceptor/index.html","searchKeys":["SaveCellularTrafficRequestInterceptor","class SaveCellularTrafficRequestInterceptor(val sortWeight: Int = 0, isCellularNetworkConnected: (Sketch) -> Boolean? = null) : RequestInterceptor","com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor"]},{"name":"class SectorProgressDrawable(size: Int = PROGRESS_INDICATOR_SECTOR_SIZE.dp2Px(), backgroundColor: Int = PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR, strokeColor: Int = PROGRESS_INDICATOR_SECTOR_STROKE_COLOR, progressColor: Int = PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR, strokeWidth: Float = size * PROGRESS_INDICATOR_SECTOR_STROKE_WIDTH_PERCENT, val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : AbsProgressDrawable, SketchDrawable","description":"com.github.panpf.sketch.drawable.SectorProgressDrawable","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-sector-progress-drawable/index.html","searchKeys":["SectorProgressDrawable","class SectorProgressDrawable(size: Int = PROGRESS_INDICATOR_SECTOR_SIZE.dp2Px(), backgroundColor: Int = PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR, strokeColor: Int = PROGRESS_INDICATOR_SECTOR_STROKE_COLOR, progressColor: Int = PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR, strokeWidth: Float = size * PROGRESS_INDICATOR_SECTOR_STROKE_WIDTH_PERCENT, val hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, val hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, val stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION) : AbsProgressDrawable, SketchDrawable","com.github.panpf.sketch.drawable.SectorProgressDrawable"]},{"name":"const val DATA_FROM_DEFAULT_SIZE: Float = 20.0f","description":"com.github.panpf.sketch.ability.DATA_FROM_DEFAULT_SIZE","location":"sketch-extensions-core/com.github.panpf.sketch.ability/-d-a-t-a_-f-r-o-m_-d-e-f-a-u-l-t_-s-i-z-e.html","searchKeys":["DATA_FROM_DEFAULT_SIZE","const val DATA_FROM_DEFAULT_SIZE: Float = 20.0f","com.github.panpf.sketch.ability.DATA_FROM_DEFAULT_SIZE"]},{"name":"const val PROGRESS_INDICATOR_BACKGROUND_ALPHA_PERCENT: Float = 0.25f","description":"com.github.panpf.sketch.ability.PROGRESS_INDICATOR_BACKGROUND_ALPHA_PERCENT","location":"sketch-extensions-core/com.github.panpf.sketch.ability/-p-r-o-g-r-e-s-s_-i-n-d-i-c-a-t-o-r_-b-a-c-k-g-r-o-u-n-d_-a-l-p-h-a_-p-e-r-c-e-n-t.html","searchKeys":["PROGRESS_INDICATOR_BACKGROUND_ALPHA_PERCENT","const val PROGRESS_INDICATOR_BACKGROUND_ALPHA_PERCENT: Float = 0.25f","com.github.panpf.sketch.ability.PROGRESS_INDICATOR_BACKGROUND_ALPHA_PERCENT"]},{"name":"const val PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED: Boolean = true","description":"com.github.panpf.sketch.ability.PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED","location":"sketch-extensions-core/com.github.panpf.sketch.ability/-p-r-o-g-r-e-s-s_-i-n-d-i-c-a-t-o-r_-h-i-d-d-e-n_-w-h-e-n_-c-o-m-p-l-e-t-e-d.html","searchKeys":["PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED","const val PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED: Boolean = true","com.github.panpf.sketch.ability.PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED"]},{"name":"const val PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE: Boolean = false","description":"com.github.panpf.sketch.ability.PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE","location":"sketch-extensions-core/com.github.panpf.sketch.ability/-p-r-o-g-r-e-s-s_-i-n-d-i-c-a-t-o-r_-h-i-d-d-e-n_-w-h-e-n_-i-n-d-e-t-e-r-m-i-n-a-t-e.html","searchKeys":["PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE","const val PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE: Boolean = false","com.github.panpf.sketch.ability.PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE"]},{"name":"const val PROGRESS_INDICATOR_MASK_COLOR: Int = 570425344","description":"com.github.panpf.sketch.ability.PROGRESS_INDICATOR_MASK_COLOR","location":"sketch-extensions-core/com.github.panpf.sketch.ability/-p-r-o-g-r-e-s-s_-i-n-d-i-c-a-t-o-r_-m-a-s-k_-c-o-l-o-r.html","searchKeys":["PROGRESS_INDICATOR_MASK_COLOR","const val PROGRESS_INDICATOR_MASK_COLOR: Int = 570425344","com.github.panpf.sketch.ability.PROGRESS_INDICATOR_MASK_COLOR"]},{"name":"const val PROGRESS_INDICATOR_RING_COLOR: Int","description":"com.github.panpf.sketch.ability.PROGRESS_INDICATOR_RING_COLOR","location":"sketch-extensions-core/com.github.panpf.sketch.ability/-p-r-o-g-r-e-s-s_-i-n-d-i-c-a-t-o-r_-r-i-n-g_-c-o-l-o-r.html","searchKeys":["PROGRESS_INDICATOR_RING_COLOR","const val PROGRESS_INDICATOR_RING_COLOR: Int","com.github.panpf.sketch.ability.PROGRESS_INDICATOR_RING_COLOR"]},{"name":"const val PROGRESS_INDICATOR_RING_SIZE: Float = 50.0f","description":"com.github.panpf.sketch.ability.PROGRESS_INDICATOR_RING_SIZE","location":"sketch-extensions-core/com.github.panpf.sketch.ability/-p-r-o-g-r-e-s-s_-i-n-d-i-c-a-t-o-r_-r-i-n-g_-s-i-z-e.html","searchKeys":["PROGRESS_INDICATOR_RING_SIZE","const val PROGRESS_INDICATOR_RING_SIZE: Float = 50.0f","com.github.panpf.sketch.ability.PROGRESS_INDICATOR_RING_SIZE"]},{"name":"const val PROGRESS_INDICATOR_RING_WIDTH_PERCENT: Float = 0.1f","description":"com.github.panpf.sketch.ability.PROGRESS_INDICATOR_RING_WIDTH_PERCENT","location":"sketch-extensions-core/com.github.panpf.sketch.ability/-p-r-o-g-r-e-s-s_-i-n-d-i-c-a-t-o-r_-r-i-n-g_-w-i-d-t-h_-p-e-r-c-e-n-t.html","searchKeys":["PROGRESS_INDICATOR_RING_WIDTH_PERCENT","const val PROGRESS_INDICATOR_RING_WIDTH_PERCENT: Float = 0.1f","com.github.panpf.sketch.ability.PROGRESS_INDICATOR_RING_WIDTH_PERCENT"]},{"name":"const val PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR: Int = 1140850688","description":"com.github.panpf.sketch.ability.PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR","location":"sketch-extensions-core/com.github.panpf.sketch.ability/-p-r-o-g-r-e-s-s_-i-n-d-i-c-a-t-o-r_-s-e-c-t-o-r_-b-a-c-k-g-r-o-u-n-d_-c-o-l-o-r.html","searchKeys":["PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR","const val PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR: Int = 1140850688","com.github.panpf.sketch.ability.PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR"]},{"name":"const val PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR: Int","description":"com.github.panpf.sketch.ability.PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR","location":"sketch-extensions-core/com.github.panpf.sketch.ability/-p-r-o-g-r-e-s-s_-i-n-d-i-c-a-t-o-r_-s-e-c-t-o-r_-p-r-o-g-r-e-s-s_-c-o-l-o-r.html","searchKeys":["PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR","const val PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR: Int","com.github.panpf.sketch.ability.PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR"]},{"name":"const val PROGRESS_INDICATOR_SECTOR_SIZE: Float = 50.0f","description":"com.github.panpf.sketch.ability.PROGRESS_INDICATOR_SECTOR_SIZE","location":"sketch-extensions-core/com.github.panpf.sketch.ability/-p-r-o-g-r-e-s-s_-i-n-d-i-c-a-t-o-r_-s-e-c-t-o-r_-s-i-z-e.html","searchKeys":["PROGRESS_INDICATOR_SECTOR_SIZE","const val PROGRESS_INDICATOR_SECTOR_SIZE: Float = 50.0f","com.github.panpf.sketch.ability.PROGRESS_INDICATOR_SECTOR_SIZE"]},{"name":"const val PROGRESS_INDICATOR_SECTOR_STROKE_COLOR: Int","description":"com.github.panpf.sketch.ability.PROGRESS_INDICATOR_SECTOR_STROKE_COLOR","location":"sketch-extensions-core/com.github.panpf.sketch.ability/-p-r-o-g-r-e-s-s_-i-n-d-i-c-a-t-o-r_-s-e-c-t-o-r_-s-t-r-o-k-e_-c-o-l-o-r.html","searchKeys":["PROGRESS_INDICATOR_SECTOR_STROKE_COLOR","const val PROGRESS_INDICATOR_SECTOR_STROKE_COLOR: Int","com.github.panpf.sketch.ability.PROGRESS_INDICATOR_SECTOR_STROKE_COLOR"]},{"name":"const val PROGRESS_INDICATOR_SECTOR_STROKE_WIDTH_PERCENT: Float = 0.02f","description":"com.github.panpf.sketch.ability.PROGRESS_INDICATOR_SECTOR_STROKE_WIDTH_PERCENT","location":"sketch-extensions-core/com.github.panpf.sketch.ability/-p-r-o-g-r-e-s-s_-i-n-d-i-c-a-t-o-r_-s-e-c-t-o-r_-s-t-r-o-k-e_-w-i-d-t-h_-p-e-r-c-e-n-t.html","searchKeys":["PROGRESS_INDICATOR_SECTOR_STROKE_WIDTH_PERCENT","const val PROGRESS_INDICATOR_SECTOR_STROKE_WIDTH_PERCENT: Float = 0.02f","com.github.panpf.sketch.ability.PROGRESS_INDICATOR_SECTOR_STROKE_WIDTH_PERCENT"]},{"name":"const val PROGRESS_INDICATOR_STEP_ANIMATION_DURATION: Int = 150","description":"com.github.panpf.sketch.ability.PROGRESS_INDICATOR_STEP_ANIMATION_DURATION","location":"sketch-extensions-core/com.github.panpf.sketch.ability/-p-r-o-g-r-e-s-s_-i-n-d-i-c-a-t-o-r_-s-t-e-p_-a-n-i-m-a-t-i-o-n_-d-u-r-a-t-i-o-n.html","searchKeys":["PROGRESS_INDICATOR_STEP_ANIMATION_DURATION","const val PROGRESS_INDICATOR_STEP_ANIMATION_DURATION: Int = 150","com.github.panpf.sketch.ability.PROGRESS_INDICATOR_STEP_ANIMATION_DURATION"]},{"name":"const val SAVE_CELLULAR_TRAFFIC_KEY: String","description":"com.github.panpf.sketch.request.SAVE_CELLULAR_TRAFFIC_KEY","location":"sketch-extensions-core/com.github.panpf.sketch.request/-s-a-v-e_-c-e-l-l-u-l-a-r_-t-r-a-f-f-i-c_-k-e-y.html","searchKeys":["SAVE_CELLULAR_TRAFFIC_KEY","const val SAVE_CELLULAR_TRAFFIC_KEY: String","com.github.panpf.sketch.request.SAVE_CELLULAR_TRAFFIC_KEY"]},{"name":"constructor()","description":"com.github.panpf.sketch.drawable.ProgressDrawable.ProgressDrawable","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-progress-drawable/-progress-drawable.html","searchKeys":["ProgressDrawable","constructor()","com.github.panpf.sketch.drawable.ProgressDrawable.ProgressDrawable"]},{"name":"constructor(hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","description":"com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.AbsProgressDrawable","location":"sketch-extensions-core/com.github.panpf.sketch.drawable.internal/-abs-progress-drawable/-abs-progress-drawable.html","searchKeys":["AbsProgressDrawable","constructor(hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.AbsProgressDrawable"]},{"name":"constructor(maskColor: Int = PROGRESS_INDICATOR_MASK_COLOR, hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","description":"com.github.panpf.sketch.drawable.MaskProgressDrawable.MaskProgressDrawable","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-mask-progress-drawable/-mask-progress-drawable.html","searchKeys":["MaskProgressDrawable","constructor(maskColor: Int = PROGRESS_INDICATOR_MASK_COLOR, hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","com.github.panpf.sketch.drawable.MaskProgressDrawable.MaskProgressDrawable"]},{"name":"constructor(size: Int = PROGRESS_INDICATOR_RING_SIZE.dp2Px(), ringWidth: Float = size * PROGRESS_INDICATOR_RING_WIDTH_PERCENT, ringColor: Int = PROGRESS_INDICATOR_RING_COLOR, backgroundColor: Int = ColorUtils.setAlphaComponent(\n        ringColor,\n        (PROGRESS_INDICATOR_BACKGROUND_ALPHA_PERCENT * 255).roundToInt()\n    ), hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","description":"com.github.panpf.sketch.drawable.RingProgressDrawable.RingProgressDrawable","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-ring-progress-drawable/-ring-progress-drawable.html","searchKeys":["RingProgressDrawable","constructor(size: Int = PROGRESS_INDICATOR_RING_SIZE.dp2Px(), ringWidth: Float = size * PROGRESS_INDICATOR_RING_WIDTH_PERCENT, ringColor: Int = PROGRESS_INDICATOR_RING_COLOR, backgroundColor: Int = ColorUtils.setAlphaComponent(\n        ringColor,\n        (PROGRESS_INDICATOR_BACKGROUND_ALPHA_PERCENT * 255).roundToInt()\n    ), hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","com.github.panpf.sketch.drawable.RingProgressDrawable.RingProgressDrawable"]},{"name":"constructor(size: Int = PROGRESS_INDICATOR_SECTOR_SIZE.dp2Px(), backgroundColor: Int = PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR, strokeColor: Int = PROGRESS_INDICATOR_SECTOR_STROKE_COLOR, progressColor: Int = PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR, strokeWidth: Float = size * PROGRESS_INDICATOR_SECTOR_STROKE_WIDTH_PERCENT, hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","description":"com.github.panpf.sketch.drawable.SectorProgressDrawable.SectorProgressDrawable","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-sector-progress-drawable/-sector-progress-drawable.html","searchKeys":["SectorProgressDrawable","constructor(size: Int = PROGRESS_INDICATOR_SECTOR_SIZE.dp2Px(), backgroundColor: Int = PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR, strokeColor: Int = PROGRESS_INDICATOR_SECTOR_STROKE_COLOR, progressColor: Int = PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR, strokeWidth: Float = size * PROGRESS_INDICATOR_SECTOR_STROKE_WIDTH_PERCENT, hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","com.github.panpf.sketch.drawable.SectorProgressDrawable.SectorProgressDrawable"]},{"name":"constructor(sortWeight: Int = 0)","description":"com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.PauseLoadWhenScrollingDecodeInterceptor","location":"sketch-extensions-core/com.github.panpf.sketch.request/-pause-load-when-scrolling-decode-interceptor/-pause-load-when-scrolling-decode-interceptor.html","searchKeys":["PauseLoadWhenScrollingDecodeInterceptor","constructor(sortWeight: Int = 0)","com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.PauseLoadWhenScrollingDecodeInterceptor"]},{"name":"constructor(sortWeight: Int = 0, isCellularNetworkConnected: (Sketch) -> Boolean? = null)","description":"com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.SaveCellularTrafficRequestInterceptor","location":"sketch-extensions-core/com.github.panpf.sketch.request/-save-cellular-traffic-request-interceptor/-save-cellular-traffic-request-interceptor.html","searchKeys":["SaveCellularTrafficRequestInterceptor","constructor(sortWeight: Int = 0, isCellularNetworkConnected: (Sketch) -> Boolean? = null)","com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.SaveCellularTrafficRequestInterceptor"]},{"name":"data object SaveCellularTrafficCondition : ConditionStateImage.Condition","description":"com.github.panpf.sketch.state.SaveCellularTrafficCondition","location":"sketch-extensions-core/com.github.panpf.sketch.state/-save-cellular-traffic-condition/index.html","searchKeys":["SaveCellularTrafficCondition","data object SaveCellularTrafficCondition : ConditionStateImage.Condition","com.github.panpf.sketch.state.SaveCellularTrafficCondition"]},{"name":"fun ComponentRegistry.Builder.supportPauseLoadWhenScrolling(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.request.supportPauseLoadWhenScrolling","location":"sketch-extensions-core/com.github.panpf.sketch.request/support-pause-load-when-scrolling.html","searchKeys":["supportPauseLoadWhenScrolling","fun ComponentRegistry.Builder.supportPauseLoadWhenScrolling(): ComponentRegistry.Builder","com.github.panpf.sketch.request.supportPauseLoadWhenScrolling"]},{"name":"fun ComponentRegistry.Builder.supportSaveCellularTraffic(): ComponentRegistry.Builder","description":"com.github.panpf.sketch.request.supportSaveCellularTraffic","location":"sketch-extensions-core/com.github.panpf.sketch.request/support-save-cellular-traffic.html","searchKeys":["supportSaveCellularTraffic","fun ComponentRegistry.Builder.supportSaveCellularTraffic(): ComponentRegistry.Builder","com.github.panpf.sketch.request.supportSaveCellularTraffic"]},{"name":"fun ConditionStateImage.Builder.saveCellularTrafficError(color: IntColorFetcher): ConditionStateImage.Builder","description":"com.github.panpf.sketch.state.saveCellularTrafficError","location":"sketch-extensions-core/com.github.panpf.sketch.state/save-cellular-traffic-error.html","searchKeys":["saveCellularTrafficError","fun ConditionStateImage.Builder.saveCellularTrafficError(color: IntColorFetcher): ConditionStateImage.Builder","com.github.panpf.sketch.state.saveCellularTrafficError"]},{"name":"fun ConditionStateImage.Builder.saveCellularTrafficError(color: ResColorFetcher): ConditionStateImage.Builder","description":"com.github.panpf.sketch.state.saveCellularTrafficError","location":"sketch-extensions-core/com.github.panpf.sketch.state/save-cellular-traffic-error.html","searchKeys":["saveCellularTrafficError","fun ConditionStateImage.Builder.saveCellularTrafficError(color: ResColorFetcher): ConditionStateImage.Builder","com.github.panpf.sketch.state.saveCellularTrafficError"]},{"name":"fun ConditionStateImage.Builder.saveCellularTrafficError(drawable: EquitableDrawable): ConditionStateImage.Builder","description":"com.github.panpf.sketch.state.saveCellularTrafficError","location":"sketch-extensions-core/com.github.panpf.sketch.state/save-cellular-traffic-error.html","searchKeys":["saveCellularTrafficError","fun ConditionStateImage.Builder.saveCellularTrafficError(drawable: EquitableDrawable): ConditionStateImage.Builder","com.github.panpf.sketch.state.saveCellularTrafficError"]},{"name":"fun ConditionStateImage.Builder.saveCellularTrafficError(resId: Int): ConditionStateImage.Builder","description":"com.github.panpf.sketch.state.saveCellularTrafficError","location":"sketch-extensions-core/com.github.panpf.sketch.state/save-cellular-traffic-error.html","searchKeys":["saveCellularTrafficError","fun ConditionStateImage.Builder.saveCellularTrafficError(resId: Int): ConditionStateImage.Builder","com.github.panpf.sketch.state.saveCellularTrafficError"]},{"name":"fun ConditionStateImage.Builder.saveCellularTrafficError(stateImage: StateImage): ConditionStateImage.Builder","description":"com.github.panpf.sketch.state.saveCellularTrafficError","location":"sketch-extensions-core/com.github.panpf.sketch.state/save-cellular-traffic-error.html","searchKeys":["saveCellularTrafficError","fun ConditionStateImage.Builder.saveCellularTrafficError(stateImage: StateImage): ConditionStateImage.Builder","com.github.panpf.sketch.state.saveCellularTrafficError"]},{"name":"fun ImageOptions.Builder.ignorePauseLoadWhenScrolling(ignore: Boolean? = true): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ignorePauseLoadWhenScrolling","location":"sketch-extensions-core/com.github.panpf.sketch.request/ignore-pause-load-when-scrolling.html","searchKeys":["ignorePauseLoadWhenScrolling","fun ImageOptions.Builder.ignorePauseLoadWhenScrolling(ignore: Boolean? = true): ImageOptions.Builder","com.github.panpf.sketch.request.ignorePauseLoadWhenScrolling"]},{"name":"fun ImageOptions.Builder.ignoreSaveCellularTraffic(ignore: Boolean? = true): ImageOptions.Builder","description":"com.github.panpf.sketch.request.ignoreSaveCellularTraffic","location":"sketch-extensions-core/com.github.panpf.sketch.request/ignore-save-cellular-traffic.html","searchKeys":["ignoreSaveCellularTraffic","fun ImageOptions.Builder.ignoreSaveCellularTraffic(ignore: Boolean? = true): ImageOptions.Builder","com.github.panpf.sketch.request.ignoreSaveCellularTraffic"]},{"name":"fun ImageOptions.Builder.pauseLoadWhenScrolling(enabled: Boolean? = true): ImageOptions.Builder","description":"com.github.panpf.sketch.request.pauseLoadWhenScrolling","location":"sketch-extensions-core/com.github.panpf.sketch.request/pause-load-when-scrolling.html","searchKeys":["pauseLoadWhenScrolling","fun ImageOptions.Builder.pauseLoadWhenScrolling(enabled: Boolean? = true): ImageOptions.Builder","com.github.panpf.sketch.request.pauseLoadWhenScrolling"]},{"name":"fun ImageOptions.Builder.saveCellularTraffic(enabled: Boolean? = true): ImageOptions.Builder","description":"com.github.panpf.sketch.request.saveCellularTraffic","location":"sketch-extensions-core/com.github.panpf.sketch.request/save-cellular-traffic.html","searchKeys":["saveCellularTraffic","fun ImageOptions.Builder.saveCellularTraffic(enabled: Boolean? = true): ImageOptions.Builder","com.github.panpf.sketch.request.saveCellularTraffic"]},{"name":"fun ImageRequest.Builder.ignorePauseLoadWhenScrolling(ignore: Boolean? = true): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ignorePauseLoadWhenScrolling","location":"sketch-extensions-core/com.github.panpf.sketch.request/ignore-pause-load-when-scrolling.html","searchKeys":["ignorePauseLoadWhenScrolling","fun ImageRequest.Builder.ignorePauseLoadWhenScrolling(ignore: Boolean? = true): ImageRequest.Builder","com.github.panpf.sketch.request.ignorePauseLoadWhenScrolling"]},{"name":"fun ImageRequest.Builder.ignoreSaveCellularTraffic(ignore: Boolean? = true): ImageRequest.Builder","description":"com.github.panpf.sketch.request.ignoreSaveCellularTraffic","location":"sketch-extensions-core/com.github.panpf.sketch.request/ignore-save-cellular-traffic.html","searchKeys":["ignoreSaveCellularTraffic","fun ImageRequest.Builder.ignoreSaveCellularTraffic(ignore: Boolean? = true): ImageRequest.Builder","com.github.panpf.sketch.request.ignoreSaveCellularTraffic"]},{"name":"fun ImageRequest.Builder.pauseLoadWhenScrolling(enabled: Boolean? = true): ImageRequest.Builder","description":"com.github.panpf.sketch.request.pauseLoadWhenScrolling","location":"sketch-extensions-core/com.github.panpf.sketch.request/pause-load-when-scrolling.html","searchKeys":["pauseLoadWhenScrolling","fun ImageRequest.Builder.pauseLoadWhenScrolling(enabled: Boolean? = true): ImageRequest.Builder","com.github.panpf.sketch.request.pauseLoadWhenScrolling"]},{"name":"fun ImageRequest.Builder.saveCellularTraffic(enabled: Boolean? = true): ImageRequest.Builder","description":"com.github.panpf.sketch.request.saveCellularTraffic","location":"sketch-extensions-core/com.github.panpf.sketch.request/save-cellular-traffic.html","searchKeys":["saveCellularTraffic","fun ImageRequest.Builder.saveCellularTraffic(enabled: Boolean? = true): ImageRequest.Builder","com.github.panpf.sketch.request.saveCellularTraffic"]},{"name":"fun dataFromColor(dataFrom: DataFrom): Int","description":"com.github.panpf.sketch.ability.dataFromColor","location":"sketch-extensions-core/com.github.panpf.sketch.ability/data-from-color.html","searchKeys":["dataFromColor","fun dataFromColor(dataFrom: DataFrom): Int","com.github.panpf.sketch.ability.dataFromColor"]},{"name":"fun getMimeTypeFromImageResult(result: ImageResult?, uri: String? = null): String?","description":"com.github.panpf.sketch.ability.getMimeTypeFromImageResult","location":"sketch-extensions-core/com.github.panpf.sketch.ability/get-mime-type-from-image-result.html","searchKeys":["getMimeTypeFromImageResult","fun getMimeTypeFromImageResult(result: ImageResult?, uri: String? = null): String?","com.github.panpf.sketch.ability.getMimeTypeFromImageResult"]},{"name":"fun isCausedBySaveCellularTraffic(request: ImageRequest, throwable: Throwable?): Boolean","description":"com.github.panpf.sketch.request.isCausedBySaveCellularTraffic","location":"sketch-extensions-core/com.github.panpf.sketch.request/is-caused-by-save-cellular-traffic.html","searchKeys":["isCausedBySaveCellularTraffic","fun isCausedBySaveCellularTraffic(request: ImageRequest, throwable: Throwable?): Boolean","com.github.panpf.sketch.request.isCausedBySaveCellularTraffic"]},{"name":"object Companion","description":"com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.Companion","location":"sketch-extensions-core/com.github.panpf.sketch.request/-pause-load-when-scrolling-decode-interceptor/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.Companion","location":"sketch-extensions-core/com.github.panpf.sketch.request/-save-cellular-traffic-request-interceptor/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.MaskProgressDrawable.equals","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-mask-progress-drawable/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.MaskProgressDrawable.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.RingProgressDrawable.equals","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-ring-progress-drawable/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.RingProgressDrawable.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.SectorProgressDrawable.equals","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-sector-progress-drawable/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.SectorProgressDrawable.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.equals","location":"sketch-extensions-core/com.github.panpf.sketch.request/-pause-load-when-scrolling-decode-interceptor/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.equals","location":"sketch-extensions-core/com.github.panpf.sketch.request/-save-cellular-traffic-request-interceptor/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.equals"]},{"name":"open override fun accept(request: ImageRequest, throwable: Throwable?): Boolean","description":"com.github.panpf.sketch.state.SaveCellularTrafficCondition.accept","location":"sketch-extensions-core/com.github.panpf.sketch.state/-save-cellular-traffic-condition/accept.html","searchKeys":["accept","open override fun accept(request: ImageRequest, throwable: Throwable?): Boolean","com.github.panpf.sketch.state.SaveCellularTrafficCondition.accept"]},{"name":"open override fun draw(canvas: Canvas)","description":"com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.draw","location":"sketch-extensions-core/com.github.panpf.sketch.drawable.internal/-abs-progress-drawable/draw.html","searchKeys":["draw","open override fun draw(canvas: Canvas)","com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.draw"]},{"name":"open override fun drawProgress(canvas: Canvas, drawProgress: Float)","description":"com.github.panpf.sketch.drawable.MaskProgressDrawable.drawProgress","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-mask-progress-drawable/draw-progress.html","searchKeys":["drawProgress","open override fun drawProgress(canvas: Canvas, drawProgress: Float)","com.github.panpf.sketch.drawable.MaskProgressDrawable.drawProgress"]},{"name":"open override fun drawProgress(canvas: Canvas, drawProgress: Float)","description":"com.github.panpf.sketch.drawable.RingProgressDrawable.drawProgress","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-ring-progress-drawable/draw-progress.html","searchKeys":["drawProgress","open override fun drawProgress(canvas: Canvas, drawProgress: Float)","com.github.panpf.sketch.drawable.RingProgressDrawable.drawProgress"]},{"name":"open override fun drawProgress(canvas: Canvas, drawProgress: Float)","description":"com.github.panpf.sketch.drawable.SectorProgressDrawable.drawProgress","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-sector-progress-drawable/draw-progress.html","searchKeys":["drawProgress","open override fun drawProgress(canvas: Canvas, drawProgress: Float)","com.github.panpf.sketch.drawable.SectorProgressDrawable.drawProgress"]},{"name":"open override fun getIntrinsicHeight(): Int","description":"com.github.panpf.sketch.drawable.MaskProgressDrawable.getIntrinsicHeight","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-mask-progress-drawable/get-intrinsic-height.html","searchKeys":["getIntrinsicHeight","open override fun getIntrinsicHeight(): Int","com.github.panpf.sketch.drawable.MaskProgressDrawable.getIntrinsicHeight"]},{"name":"open override fun getIntrinsicHeight(): Int","description":"com.github.panpf.sketch.drawable.RingProgressDrawable.getIntrinsicHeight","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-ring-progress-drawable/get-intrinsic-height.html","searchKeys":["getIntrinsicHeight","open override fun getIntrinsicHeight(): Int","com.github.panpf.sketch.drawable.RingProgressDrawable.getIntrinsicHeight"]},{"name":"open override fun getIntrinsicHeight(): Int","description":"com.github.panpf.sketch.drawable.SectorProgressDrawable.getIntrinsicHeight","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-sector-progress-drawable/get-intrinsic-height.html","searchKeys":["getIntrinsicHeight","open override fun getIntrinsicHeight(): Int","com.github.panpf.sketch.drawable.SectorProgressDrawable.getIntrinsicHeight"]},{"name":"open override fun getIntrinsicWidth(): Int","description":"com.github.panpf.sketch.drawable.MaskProgressDrawable.getIntrinsicWidth","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-mask-progress-drawable/get-intrinsic-width.html","searchKeys":["getIntrinsicWidth","open override fun getIntrinsicWidth(): Int","com.github.panpf.sketch.drawable.MaskProgressDrawable.getIntrinsicWidth"]},{"name":"open override fun getIntrinsicWidth(): Int","description":"com.github.panpf.sketch.drawable.RingProgressDrawable.getIntrinsicWidth","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-ring-progress-drawable/get-intrinsic-width.html","searchKeys":["getIntrinsicWidth","open override fun getIntrinsicWidth(): Int","com.github.panpf.sketch.drawable.RingProgressDrawable.getIntrinsicWidth"]},{"name":"open override fun getIntrinsicWidth(): Int","description":"com.github.panpf.sketch.drawable.SectorProgressDrawable.getIntrinsicWidth","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-sector-progress-drawable/get-intrinsic-width.html","searchKeys":["getIntrinsicWidth","open override fun getIntrinsicWidth(): Int","com.github.panpf.sketch.drawable.SectorProgressDrawable.getIntrinsicWidth"]},{"name":"open override fun getOpacity(): Int","description":"com.github.panpf.sketch.drawable.MaskProgressDrawable.getOpacity","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-mask-progress-drawable/get-opacity.html","searchKeys":["getOpacity","open override fun getOpacity(): Int","com.github.panpf.sketch.drawable.MaskProgressDrawable.getOpacity"]},{"name":"open override fun getOpacity(): Int","description":"com.github.panpf.sketch.drawable.RingProgressDrawable.getOpacity","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-ring-progress-drawable/get-opacity.html","searchKeys":["getOpacity","open override fun getOpacity(): Int","com.github.panpf.sketch.drawable.RingProgressDrawable.getOpacity"]},{"name":"open override fun getOpacity(): Int","description":"com.github.panpf.sketch.drawable.SectorProgressDrawable.getOpacity","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-sector-progress-drawable/get-opacity.html","searchKeys":["getOpacity","open override fun getOpacity(): Int","com.github.panpf.sketch.drawable.SectorProgressDrawable.getOpacity"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.MaskProgressDrawable.hashCode","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-mask-progress-drawable/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.MaskProgressDrawable.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.RingProgressDrawable.hashCode","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-ring-progress-drawable/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.RingProgressDrawable.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.SectorProgressDrawable.hashCode","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-sector-progress-drawable/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.SectorProgressDrawable.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.hashCode","location":"sketch-extensions-core/com.github.panpf.sketch.request/-pause-load-when-scrolling-decode-interceptor/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.hashCode","location":"sketch-extensions-core/com.github.panpf.sketch.request/-save-cellular-traffic-request-interceptor/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.hashCode"]},{"name":"open override fun mutate(): ProgressDrawable","description":"com.github.panpf.sketch.drawable.MaskProgressDrawable.mutate","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-mask-progress-drawable/mutate.html","searchKeys":["mutate","open override fun mutate(): ProgressDrawable","com.github.panpf.sketch.drawable.MaskProgressDrawable.mutate"]},{"name":"open override fun mutate(): ProgressDrawable","description":"com.github.panpf.sketch.drawable.RingProgressDrawable.mutate","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-ring-progress-drawable/mutate.html","searchKeys":["mutate","open override fun mutate(): ProgressDrawable","com.github.panpf.sketch.drawable.RingProgressDrawable.mutate"]},{"name":"open override fun mutate(): ProgressDrawable","description":"com.github.panpf.sketch.drawable.SectorProgressDrawable.mutate","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-sector-progress-drawable/mutate.html","searchKeys":["mutate","open override fun mutate(): ProgressDrawable","com.github.panpf.sketch.drawable.SectorProgressDrawable.mutate"]},{"name":"open override fun setAlpha(alpha: Int)","description":"com.github.panpf.sketch.drawable.MaskProgressDrawable.setAlpha","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-mask-progress-drawable/set-alpha.html","searchKeys":["setAlpha","open override fun setAlpha(alpha: Int)","com.github.panpf.sketch.drawable.MaskProgressDrawable.setAlpha"]},{"name":"open override fun setAlpha(alpha: Int)","description":"com.github.panpf.sketch.drawable.RingProgressDrawable.setAlpha","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-ring-progress-drawable/set-alpha.html","searchKeys":["setAlpha","open override fun setAlpha(alpha: Int)","com.github.panpf.sketch.drawable.RingProgressDrawable.setAlpha"]},{"name":"open override fun setAlpha(alpha: Int)","description":"com.github.panpf.sketch.drawable.SectorProgressDrawable.setAlpha","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-sector-progress-drawable/set-alpha.html","searchKeys":["setAlpha","open override fun setAlpha(alpha: Int)","com.github.panpf.sketch.drawable.SectorProgressDrawable.setAlpha"]},{"name":"open override fun setColorFilter(colorFilter: ColorFilter?)","description":"com.github.panpf.sketch.drawable.MaskProgressDrawable.setColorFilter","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-mask-progress-drawable/set-color-filter.html","searchKeys":["setColorFilter","open override fun setColorFilter(colorFilter: ColorFilter?)","com.github.panpf.sketch.drawable.MaskProgressDrawable.setColorFilter"]},{"name":"open override fun setColorFilter(colorFilter: ColorFilter?)","description":"com.github.panpf.sketch.drawable.RingProgressDrawable.setColorFilter","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-ring-progress-drawable/set-color-filter.html","searchKeys":["setColorFilter","open override fun setColorFilter(colorFilter: ColorFilter?)","com.github.panpf.sketch.drawable.RingProgressDrawable.setColorFilter"]},{"name":"open override fun setColorFilter(colorFilter: ColorFilter?)","description":"com.github.panpf.sketch.drawable.SectorProgressDrawable.setColorFilter","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-sector-progress-drawable/set-color-filter.html","searchKeys":["setColorFilter","open override fun setColorFilter(colorFilter: ColorFilter?)","com.github.panpf.sketch.drawable.SectorProgressDrawable.setColorFilter"]},{"name":"open override fun setVisible(visible: Boolean, restart: Boolean): Boolean","description":"com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.setVisible","location":"sketch-extensions-core/com.github.panpf.sketch.drawable.internal/-abs-progress-drawable/set-visible.html","searchKeys":["setVisible","open override fun setVisible(visible: Boolean, restart: Boolean): Boolean","com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.setVisible"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.MaskProgressDrawable.toString","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-mask-progress-drawable/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.MaskProgressDrawable.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.RingProgressDrawable.toString","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-ring-progress-drawable/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.RingProgressDrawable.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.SectorProgressDrawable.toString","location":"sketch-extensions-core/com.github.panpf.sketch.drawable/-sector-progress-drawable/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.SectorProgressDrawable.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.toString","location":"sketch-extensions-core/com.github.panpf.sketch.request/-pause-load-when-scrolling-decode-interceptor/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.toString","location":"sketch-extensions-core/com.github.panpf.sketch.request/-save-cellular-traffic-request-interceptor/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.state.SaveCellularTrafficCondition.toString","location":"sketch-extensions-core/com.github.panpf.sketch.state/-save-cellular-traffic-condition/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.state.SaveCellularTrafficCondition.toString"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.state.SaveCellularTrafficCondition.key","location":"sketch-extensions-core/com.github.panpf.sketch.state/-save-cellular-traffic-condition/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.state.SaveCellularTrafficCondition.key"]},{"name":"open override val key: String? = null","description":"com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.key","location":"sketch-extensions-core/com.github.panpf.sketch.request/-pause-load-when-scrolling-decode-interceptor/key.html","searchKeys":["key","open override val key: String? = null","com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.key"]},{"name":"open override val key: String? = null","description":"com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.key","location":"sketch-extensions-core/com.github.panpf.sketch.request/-save-cellular-traffic-request-interceptor/key.html","searchKeys":["key","open override val key: String? = null","com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.key"]},{"name":"open override val sortWeight: Int = 0","description":"com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.sortWeight","location":"sketch-extensions-core/com.github.panpf.sketch.request/-pause-load-when-scrolling-decode-interceptor/sort-weight.html","searchKeys":["sortWeight","open override val sortWeight: Int = 0","com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.sortWeight"]},{"name":"open override val sortWeight: Int = 0","description":"com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.sortWeight","location":"sketch-extensions-core/com.github.panpf.sketch.request/-save-cellular-traffic-request-interceptor/sort-weight.html","searchKeys":["sortWeight","open override val sortWeight: Int = 0","com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.sortWeight"]},{"name":"open suspend override fun intercept(chain: DecodeInterceptor.Chain): Result<DecodeResult>","description":"com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.intercept","location":"sketch-extensions-core/com.github.panpf.sketch.request/-pause-load-when-scrolling-decode-interceptor/intercept.html","searchKeys":["intercept","open suspend override fun intercept(chain: DecodeInterceptor.Chain): Result<DecodeResult>","com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.intercept"]},{"name":"open suspend override fun intercept(chain: RequestInterceptor.Chain): Result<ImageData>","description":"com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.intercept","location":"sketch-extensions-core/com.github.panpf.sketch.request/-save-cellular-traffic-request-interceptor/intercept.html","searchKeys":["intercept","open suspend override fun intercept(chain: RequestInterceptor.Chain): Result<ImageData>","com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.intercept"]},{"name":"override var progress: Float","description":"com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.progress","location":"sketch-extensions-core/com.github.panpf.sketch.drawable.internal/-abs-progress-drawable/progress.html","searchKeys":["progress","override var progress: Float","com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.progress"]},{"name":"val ImageOptions.isDepthFromSaveCellularTraffic: Boolean","description":"com.github.panpf.sketch.request.isDepthFromSaveCellularTraffic","location":"sketch-extensions-core/com.github.panpf.sketch.request/is-depth-from-save-cellular-traffic.html","searchKeys":["isDepthFromSaveCellularTraffic","val ImageOptions.isDepthFromSaveCellularTraffic: Boolean","com.github.panpf.sketch.request.isDepthFromSaveCellularTraffic"]},{"name":"val ImageOptions.isIgnoredPauseLoadWhenScrolling: Boolean","description":"com.github.panpf.sketch.request.isIgnoredPauseLoadWhenScrolling","location":"sketch-extensions-core/com.github.panpf.sketch.request/is-ignored-pause-load-when-scrolling.html","searchKeys":["isIgnoredPauseLoadWhenScrolling","val ImageOptions.isIgnoredPauseLoadWhenScrolling: Boolean","com.github.panpf.sketch.request.isIgnoredPauseLoadWhenScrolling"]},{"name":"val ImageOptions.isIgnoredSaveCellularTraffic: Boolean","description":"com.github.panpf.sketch.request.isIgnoredSaveCellularTraffic","location":"sketch-extensions-core/com.github.panpf.sketch.request/is-ignored-save-cellular-traffic.html","searchKeys":["isIgnoredSaveCellularTraffic","val ImageOptions.isIgnoredSaveCellularTraffic: Boolean","com.github.panpf.sketch.request.isIgnoredSaveCellularTraffic"]},{"name":"val ImageOptions.isPauseLoadWhenScrolling: Boolean","description":"com.github.panpf.sketch.request.isPauseLoadWhenScrolling","location":"sketch-extensions-core/com.github.panpf.sketch.request/is-pause-load-when-scrolling.html","searchKeys":["isPauseLoadWhenScrolling","val ImageOptions.isPauseLoadWhenScrolling: Boolean","com.github.panpf.sketch.request.isPauseLoadWhenScrolling"]},{"name":"val ImageOptions.isSaveCellularTraffic: Boolean","description":"com.github.panpf.sketch.request.isSaveCellularTraffic","location":"sketch-extensions-core/com.github.panpf.sketch.request/is-save-cellular-traffic.html","searchKeys":["isSaveCellularTraffic","val ImageOptions.isSaveCellularTraffic: Boolean","com.github.panpf.sketch.request.isSaveCellularTraffic"]},{"name":"val ImageRequest.isDepthFromSaveCellularTraffic: Boolean","description":"com.github.panpf.sketch.request.isDepthFromSaveCellularTraffic","location":"sketch-extensions-core/com.github.panpf.sketch.request/is-depth-from-save-cellular-traffic.html","searchKeys":["isDepthFromSaveCellularTraffic","val ImageRequest.isDepthFromSaveCellularTraffic: Boolean","com.github.panpf.sketch.request.isDepthFromSaveCellularTraffic"]},{"name":"val ImageRequest.isIgnoredPauseLoadWhenScrolling: Boolean","description":"com.github.panpf.sketch.request.isIgnoredPauseLoadWhenScrolling","location":"sketch-extensions-core/com.github.panpf.sketch.request/is-ignored-pause-load-when-scrolling.html","searchKeys":["isIgnoredPauseLoadWhenScrolling","val ImageRequest.isIgnoredPauseLoadWhenScrolling: Boolean","com.github.panpf.sketch.request.isIgnoredPauseLoadWhenScrolling"]},{"name":"val ImageRequest.isIgnoredSaveCellularTraffic: Boolean","description":"com.github.panpf.sketch.request.isIgnoredSaveCellularTraffic","location":"sketch-extensions-core/com.github.panpf.sketch.request/is-ignored-save-cellular-traffic.html","searchKeys":["isIgnoredSaveCellularTraffic","val ImageRequest.isIgnoredSaveCellularTraffic: Boolean","com.github.panpf.sketch.request.isIgnoredSaveCellularTraffic"]},{"name":"val ImageRequest.isPauseLoadWhenScrolling: Boolean","description":"com.github.panpf.sketch.request.isPauseLoadWhenScrolling","location":"sketch-extensions-core/com.github.panpf.sketch.request/is-pause-load-when-scrolling.html","searchKeys":["isPauseLoadWhenScrolling","val ImageRequest.isPauseLoadWhenScrolling: Boolean","com.github.panpf.sketch.request.isPauseLoadWhenScrolling"]},{"name":"val ImageRequest.isSaveCellularTraffic: Boolean","description":"com.github.panpf.sketch.request.isSaveCellularTraffic","location":"sketch-extensions-core/com.github.panpf.sketch.request/is-save-cellular-traffic.html","searchKeys":["isSaveCellularTraffic","val ImageRequest.isSaveCellularTraffic: Boolean","com.github.panpf.sketch.request.isSaveCellularTraffic"]},{"name":"val hiddenWhenCompleted: Boolean","description":"com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.hiddenWhenCompleted","location":"sketch-extensions-core/com.github.panpf.sketch.drawable.internal/-abs-progress-drawable/hidden-when-completed.html","searchKeys":["hiddenWhenCompleted","val hiddenWhenCompleted: Boolean","com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.hiddenWhenCompleted"]},{"name":"val hiddenWhenIndeterminate: Boolean","description":"com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.hiddenWhenIndeterminate","location":"sketch-extensions-core/com.github.panpf.sketch.drawable.internal/-abs-progress-drawable/hidden-when-indeterminate.html","searchKeys":["hiddenWhenIndeterminate","val hiddenWhenIndeterminate: Boolean","com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.hiddenWhenIndeterminate"]},{"name":"val stepAnimationDuration: Int","description":"com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.stepAnimationDuration","location":"sketch-extensions-core/com.github.panpf.sketch.drawable.internal/-abs-progress-drawable/step-animation-duration.html","searchKeys":["stepAnimationDuration","val stepAnimationDuration: Int","com.github.panpf.sketch.drawable.internal.AbsProgressDrawable.stepAnimationDuration"]},{"name":"var enabled: Boolean","description":"com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.enabled","location":"sketch-extensions-core/com.github.panpf.sketch.request/-pause-load-when-scrolling-decode-interceptor/enabled.html","searchKeys":["enabled","var enabled: Boolean","com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.enabled"]},{"name":"var enabled: Boolean","description":"com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.enabled","location":"sketch-extensions-core/com.github.panpf.sketch.request/-save-cellular-traffic-request-interceptor/enabled.html","searchKeys":["enabled","var enabled: Boolean","com.github.panpf.sketch.request.SaveCellularTrafficRequestInterceptor.enabled"]},{"name":"var scrolling: Boolean","description":"com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.Companion.scrolling","location":"sketch-extensions-core/com.github.panpf.sketch.request/-pause-load-when-scrolling-decode-interceptor/-companion/scrolling.html","searchKeys":["scrolling","var scrolling: Boolean","com.github.panpf.sketch.request.PauseLoadWhenScrollingDecodeInterceptor.Companion.scrolling"]},{"name":"class ClickIgnoreSaveCellularTrafficAbility : ViewAbility, ClickObserver, RequestListenerObserver","description":"com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-click-ignore-save-cellular-traffic-ability/index.html","searchKeys":["ClickIgnoreSaveCellularTrafficAbility","class ClickIgnoreSaveCellularTrafficAbility : ViewAbility, ClickObserver, RequestListenerObserver","com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility"]},{"name":"class DataFromLogoAbility(sizeDp: Float = DATA_FROM_DEFAULT_SIZE) : ViewAbility, AttachObserver, DrawObserver, LayoutObserver, DrawableObserver","description":"com.github.panpf.sketch.ability.DataFromLogoAbility","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-data-from-logo-ability/index.html","searchKeys":["DataFromLogoAbility","class DataFromLogoAbility(sizeDp: Float = DATA_FROM_DEFAULT_SIZE) : ViewAbility, AttachObserver, DrawObserver, LayoutObserver, DrawableObserver","com.github.panpf.sketch.ability.DataFromLogoAbility"]},{"name":"class MimeTypeLogoAbility(mimeTypeIconMap: Map<String, DrawableFetcher>, margin: Int = 0) : ViewAbility, AttachObserver, DrawObserver, LayoutObserver, DrawableObserver","description":"com.github.panpf.sketch.ability.MimeTypeLogoAbility","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-mime-type-logo-ability/index.html","searchKeys":["MimeTypeLogoAbility","class MimeTypeLogoAbility(mimeTypeIconMap: Map<String, DrawableFetcher>, margin: Int = 0) : ViewAbility, AttachObserver, DrawObserver, LayoutObserver, DrawableObserver","com.github.panpf.sketch.ability.MimeTypeLogoAbility"]},{"name":"class PauseLoadWhenScrollingMixedScrollListener(var absListScrollListenerWrapper: AbsListView.OnScrollListener? = null) : RecyclerView.OnScrollListener, AbsListView.OnScrollListener","description":"com.github.panpf.sketch.util.PauseLoadWhenScrollingMixedScrollListener","location":"sketch-extensions-view/com.github.panpf.sketch.util/-pause-load-when-scrolling-mixed-scroll-listener/index.html","searchKeys":["PauseLoadWhenScrollingMixedScrollListener","class PauseLoadWhenScrollingMixedScrollListener(var absListScrollListenerWrapper: AbsListView.OnScrollListener? = null) : RecyclerView.OnScrollListener, AbsListView.OnScrollListener","com.github.panpf.sketch.util.PauseLoadWhenScrollingMixedScrollListener"]},{"name":"class ProgressIndicatorAbility(val progressDrawable: ProgressDrawable) : ViewAbility, LayoutObserver, RequestListenerObserver, RequestProgressListenerObserver, DrawObserver, VisibilityChangedObserver, AttachObserver, Drawable.Callback","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/index.html","searchKeys":["ProgressIndicatorAbility","class ProgressIndicatorAbility(val progressDrawable: ProgressDrawable) : ViewAbility, LayoutObserver, RequestListenerObserver, RequestProgressListenerObserver, DrawObserver, VisibilityChangedObserver, AttachObserver, Drawable.Callback","com.github.panpf.sketch.ability.ProgressIndicatorAbility"]},{"name":"constructor()","description":"com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility.ClickIgnoreSaveCellularTrafficAbility","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-click-ignore-save-cellular-traffic-ability/-click-ignore-save-cellular-traffic-ability.html","searchKeys":["ClickIgnoreSaveCellularTrafficAbility","constructor()","com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility.ClickIgnoreSaveCellularTrafficAbility"]},{"name":"constructor(absListScrollListenerWrapper: AbsListView.OnScrollListener? = null)","description":"com.github.panpf.sketch.util.PauseLoadWhenScrollingMixedScrollListener.PauseLoadWhenScrollingMixedScrollListener","location":"sketch-extensions-view/com.github.panpf.sketch.util/-pause-load-when-scrolling-mixed-scroll-listener/-pause-load-when-scrolling-mixed-scroll-listener.html","searchKeys":["PauseLoadWhenScrollingMixedScrollListener","constructor(absListScrollListenerWrapper: AbsListView.OnScrollListener? = null)","com.github.panpf.sketch.util.PauseLoadWhenScrollingMixedScrollListener.PauseLoadWhenScrollingMixedScrollListener"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"com.github.panpf.sketch.SketchImageView.SketchImageView","location":"sketch-extensions-view/com.github.panpf.sketch/-sketch-image-view/-sketch-image-view.html","searchKeys":["SketchImageView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","com.github.panpf.sketch.SketchImageView.SketchImageView"]},{"name":"constructor(mimeTypeIconMap: Map<String, DrawableFetcher>, margin: Int = 0)","description":"com.github.panpf.sketch.ability.MimeTypeLogoAbility.MimeTypeLogoAbility","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-mime-type-logo-ability/-mime-type-logo-ability.html","searchKeys":["MimeTypeLogoAbility","constructor(mimeTypeIconMap: Map<String, DrawableFetcher>, margin: Int = 0)","com.github.panpf.sketch.ability.MimeTypeLogoAbility.MimeTypeLogoAbility"]},{"name":"constructor(progressDrawable: ProgressDrawable)","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.ProgressIndicatorAbility","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/-progress-indicator-ability.html","searchKeys":["ProgressIndicatorAbility","constructor(progressDrawable: ProgressDrawable)","com.github.panpf.sketch.ability.ProgressIndicatorAbility.ProgressIndicatorAbility"]},{"name":"constructor(sizeDp: Float = DATA_FROM_DEFAULT_SIZE)","description":"com.github.panpf.sketch.ability.DataFromLogoAbility.DataFromLogoAbility","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-data-from-logo-ability/-data-from-logo-ability.html","searchKeys":["DataFromLogoAbility","constructor(sizeDp: Float = DATA_FROM_DEFAULT_SIZE)","com.github.panpf.sketch.ability.DataFromLogoAbility.DataFromLogoAbility"]},{"name":"fun ViewAbilityContainer.removeDataFromLogo()","description":"com.github.panpf.sketch.ability.removeDataFromLogo","location":"sketch-extensions-view/com.github.panpf.sketch.ability/remove-data-from-logo.html","searchKeys":["removeDataFromLogo","fun ViewAbilityContainer.removeDataFromLogo()","com.github.panpf.sketch.ability.removeDataFromLogo"]},{"name":"fun ViewAbilityContainer.removeMimeTypeLogo()","description":"com.github.panpf.sketch.ability.removeMimeTypeLogo","location":"sketch-extensions-view/com.github.panpf.sketch.ability/remove-mime-type-logo.html","searchKeys":["removeMimeTypeLogo","fun ViewAbilityContainer.removeMimeTypeLogo()","com.github.panpf.sketch.ability.removeMimeTypeLogo"]},{"name":"fun ViewAbilityContainer.removeProgressIndicator()","description":"com.github.panpf.sketch.ability.removeProgressIndicator","location":"sketch-extensions-view/com.github.panpf.sketch.ability/remove-progress-indicator.html","searchKeys":["removeProgressIndicator","fun ViewAbilityContainer.removeProgressIndicator()","com.github.panpf.sketch.ability.removeProgressIndicator"]},{"name":"fun ViewAbilityContainer.setClickIgnoreSaveCellularTrafficEnabled(enable: Boolean = true)","description":"com.github.panpf.sketch.ability.setClickIgnoreSaveCellularTrafficEnabled","location":"sketch-extensions-view/com.github.panpf.sketch.ability/set-click-ignore-save-cellular-traffic-enabled.html","searchKeys":["setClickIgnoreSaveCellularTrafficEnabled","fun ViewAbilityContainer.setClickIgnoreSaveCellularTrafficEnabled(enable: Boolean = true)","com.github.panpf.sketch.ability.setClickIgnoreSaveCellularTrafficEnabled"]},{"name":"fun ViewAbilityContainer.showDataFromLogo(sizeDp: Float = DATA_FROM_DEFAULT_SIZE)","description":"com.github.panpf.sketch.ability.showDataFromLogo","location":"sketch-extensions-view/com.github.panpf.sketch.ability/show-data-from-logo.html","searchKeys":["showDataFromLogo","fun ViewAbilityContainer.showDataFromLogo(sizeDp: Float = DATA_FROM_DEFAULT_SIZE)","com.github.panpf.sketch.ability.showDataFromLogo"]},{"name":"fun ViewAbilityContainer.showMaskProgressIndicator(maskColor: Int = PROGRESS_INDICATOR_MASK_COLOR, hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","description":"com.github.panpf.sketch.ability.showMaskProgressIndicator","location":"sketch-extensions-view/com.github.panpf.sketch.ability/show-mask-progress-indicator.html","searchKeys":["showMaskProgressIndicator","fun ViewAbilityContainer.showMaskProgressIndicator(maskColor: Int = PROGRESS_INDICATOR_MASK_COLOR, hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","com.github.panpf.sketch.ability.showMaskProgressIndicator"]},{"name":"fun ViewAbilityContainer.showMimeTypeLogoWithDrawable(mimeTypeIconMap: Map<String, Drawable>, margin: Int = 0)","description":"com.github.panpf.sketch.ability.showMimeTypeLogoWithDrawable","location":"sketch-extensions-view/com.github.panpf.sketch.ability/show-mime-type-logo-with-drawable.html","searchKeys":["showMimeTypeLogoWithDrawable","fun ViewAbilityContainer.showMimeTypeLogoWithDrawable(mimeTypeIconMap: Map<String, Drawable>, margin: Int = 0)","com.github.panpf.sketch.ability.showMimeTypeLogoWithDrawable"]},{"name":"fun ViewAbilityContainer.showMimeTypeLogoWithRes(mimeTypeIconMap: Map<String, Int>, margin: Int = 0)","description":"com.github.panpf.sketch.ability.showMimeTypeLogoWithRes","location":"sketch-extensions-view/com.github.panpf.sketch.ability/show-mime-type-logo-with-res.html","searchKeys":["showMimeTypeLogoWithRes","fun ViewAbilityContainer.showMimeTypeLogoWithRes(mimeTypeIconMap: Map<String, Int>, margin: Int = 0)","com.github.panpf.sketch.ability.showMimeTypeLogoWithRes"]},{"name":"fun ViewAbilityContainer.showProgressIndicator(progressDrawable: ProgressDrawable)","description":"com.github.panpf.sketch.ability.showProgressIndicator","location":"sketch-extensions-view/com.github.panpf.sketch.ability/show-progress-indicator.html","searchKeys":["showProgressIndicator","fun ViewAbilityContainer.showProgressIndicator(progressDrawable: ProgressDrawable)","com.github.panpf.sketch.ability.showProgressIndicator"]},{"name":"fun ViewAbilityContainer.showRingProgressIndicator(size: Int = PROGRESS_INDICATOR_RING_SIZE.dp2Px(), ringWidth: Float = size * PROGRESS_INDICATOR_RING_WIDTH_PERCENT, ringColor: Int = PROGRESS_INDICATOR_RING_COLOR, hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","description":"com.github.panpf.sketch.ability.showRingProgressIndicator","location":"sketch-extensions-view/com.github.panpf.sketch.ability/show-ring-progress-indicator.html","searchKeys":["showRingProgressIndicator","fun ViewAbilityContainer.showRingProgressIndicator(size: Int = PROGRESS_INDICATOR_RING_SIZE.dp2Px(), ringWidth: Float = size * PROGRESS_INDICATOR_RING_WIDTH_PERCENT, ringColor: Int = PROGRESS_INDICATOR_RING_COLOR, hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","com.github.panpf.sketch.ability.showRingProgressIndicator"]},{"name":"fun ViewAbilityContainer.showSectorProgressIndicator(size: Int = PROGRESS_INDICATOR_SECTOR_SIZE.dp2Px(), color: Int = PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR, backgroundColor: Int = PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR, hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","description":"com.github.panpf.sketch.ability.showSectorProgressIndicator","location":"sketch-extensions-view/com.github.panpf.sketch.ability/show-sector-progress-indicator.html","searchKeys":["showSectorProgressIndicator","fun ViewAbilityContainer.showSectorProgressIndicator(size: Int = PROGRESS_INDICATOR_SECTOR_SIZE.dp2Px(), color: Int = PROGRESS_INDICATOR_SECTOR_PROGRESS_COLOR, backgroundColor: Int = PROGRESS_INDICATOR_SECTOR_BACKGROUND_COLOR, hiddenWhenIndeterminate: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_INDETERMINATE, hiddenWhenCompleted: Boolean = PROGRESS_INDICATOR_HIDDEN_WHEN_COMPLETED, stepAnimationDuration: Int = PROGRESS_INDICATOR_STEP_ANIMATION_DURATION)","com.github.panpf.sketch.ability.showSectorProgressIndicator"]},{"name":"fun addListener(listener: Listener)","description":"com.github.panpf.sketch.SketchImageView.addListener","location":"sketch-extensions-view/com.github.panpf.sketch/-sketch-image-view/add-listener.html","searchKeys":["addListener","fun addListener(listener: Listener)","com.github.panpf.sketch.SketchImageView.addListener"]},{"name":"fun addProgressListener(listener: ProgressListener)","description":"com.github.panpf.sketch.SketchImageView.addProgressListener","location":"sketch-extensions-view/com.github.panpf.sketch/-sketch-image-view/add-progress-listener.html","searchKeys":["addProgressListener","fun addProgressListener(listener: ProgressListener)","com.github.panpf.sketch.SketchImageView.addProgressListener"]},{"name":"fun parseSketchImageViewXmlAttributes(context: Context, attrs: AttributeSet? = null): ImageOptions?","description":"com.github.panpf.sketch.internal.parseSketchImageViewXmlAttributes","location":"sketch-extensions-view/com.github.panpf.sketch.internal/parse-sketch-image-view-xml-attributes.html","searchKeys":["parseSketchImageViewXmlAttributes","fun parseSketchImageViewXmlAttributes(context: Context, attrs: AttributeSet? = null): ImageOptions?","com.github.panpf.sketch.internal.parseSketchImageViewXmlAttributes"]},{"name":"fun removeListener(listener: Listener)","description":"com.github.panpf.sketch.SketchImageView.removeListener","location":"sketch-extensions-view/com.github.panpf.sketch/-sketch-image-view/remove-listener.html","searchKeys":["removeListener","fun removeListener(listener: Listener)","com.github.panpf.sketch.SketchImageView.removeListener"]},{"name":"fun removeProgressListener(listener: ProgressListener)","description":"com.github.panpf.sketch.SketchImageView.removeProgressListener","location":"sketch-extensions-view/com.github.panpf.sketch/-sketch-image-view/remove-progress-listener.html","searchKeys":["removeProgressListener","fun removeProgressListener(listener: ProgressListener)","com.github.panpf.sketch.SketchImageView.removeProgressListener"]},{"name":"open class SketchImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : AbsAbilityImageView, ImageOptionsProvider","description":"com.github.panpf.sketch.SketchImageView","location":"sketch-extensions-view/com.github.panpf.sketch/-sketch-image-view/index.html","searchKeys":["SketchImageView","open class SketchImageView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : AbsAbilityImageView, ImageOptionsProvider","com.github.panpf.sketch.SketchImageView"]},{"name":"open override fun getListener(): Listener?","description":"com.github.panpf.sketch.SketchImageView.getListener","location":"sketch-extensions-view/com.github.panpf.sketch/-sketch-image-view/get-listener.html","searchKeys":["getListener","open override fun getListener(): Listener?","com.github.panpf.sketch.SketchImageView.getListener"]},{"name":"open override fun getProgressListener(): ProgressListener?","description":"com.github.panpf.sketch.SketchImageView.getProgressListener","location":"sketch-extensions-view/com.github.panpf.sketch/-sketch-image-view/get-progress-listener.html","searchKeys":["getProgressListener","open override fun getProgressListener(): ProgressListener?","com.github.panpf.sketch.SketchImageView.getProgressListener"]},{"name":"open override fun invalidateDrawable(who: Drawable)","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.invalidateDrawable","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/invalidate-drawable.html","searchKeys":["invalidateDrawable","open override fun invalidateDrawable(who: Drawable)","com.github.panpf.sketch.ability.ProgressIndicatorAbility.invalidateDrawable"]},{"name":"open override fun onAttachedToWindow()","description":"com.github.panpf.sketch.ability.DataFromLogoAbility.onAttachedToWindow","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-data-from-logo-ability/on-attached-to-window.html","searchKeys":["onAttachedToWindow","open override fun onAttachedToWindow()","com.github.panpf.sketch.ability.DataFromLogoAbility.onAttachedToWindow"]},{"name":"open override fun onAttachedToWindow()","description":"com.github.panpf.sketch.ability.MimeTypeLogoAbility.onAttachedToWindow","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-mime-type-logo-ability/on-attached-to-window.html","searchKeys":["onAttachedToWindow","open override fun onAttachedToWindow()","com.github.panpf.sketch.ability.MimeTypeLogoAbility.onAttachedToWindow"]},{"name":"open override fun onAttachedToWindow()","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.onAttachedToWindow","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/on-attached-to-window.html","searchKeys":["onAttachedToWindow","open override fun onAttachedToWindow()","com.github.panpf.sketch.ability.ProgressIndicatorAbility.onAttachedToWindow"]},{"name":"open override fun onClick(v: View): Boolean","description":"com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility.onClick","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-click-ignore-save-cellular-traffic-ability/on-click.html","searchKeys":["onClick","open override fun onClick(v: View): Boolean","com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility.onClick"]},{"name":"open override fun onDetachedFromWindow()","description":"com.github.panpf.sketch.ability.DataFromLogoAbility.onDetachedFromWindow","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-data-from-logo-ability/on-detached-from-window.html","searchKeys":["onDetachedFromWindow","open override fun onDetachedFromWindow()","com.github.panpf.sketch.ability.DataFromLogoAbility.onDetachedFromWindow"]},{"name":"open override fun onDetachedFromWindow()","description":"com.github.panpf.sketch.ability.MimeTypeLogoAbility.onDetachedFromWindow","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-mime-type-logo-ability/on-detached-from-window.html","searchKeys":["onDetachedFromWindow","open override fun onDetachedFromWindow()","com.github.panpf.sketch.ability.MimeTypeLogoAbility.onDetachedFromWindow"]},{"name":"open override fun onDetachedFromWindow()","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.onDetachedFromWindow","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/on-detached-from-window.html","searchKeys":["onDetachedFromWindow","open override fun onDetachedFromWindow()","com.github.panpf.sketch.ability.ProgressIndicatorAbility.onDetachedFromWindow"]},{"name":"open override fun onDraw(canvas: Canvas)","description":"com.github.panpf.sketch.ability.DataFromLogoAbility.onDraw","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-data-from-logo-ability/on-draw.html","searchKeys":["onDraw","open override fun onDraw(canvas: Canvas)","com.github.panpf.sketch.ability.DataFromLogoAbility.onDraw"]},{"name":"open override fun onDraw(canvas: Canvas)","description":"com.github.panpf.sketch.ability.MimeTypeLogoAbility.onDraw","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-mime-type-logo-ability/on-draw.html","searchKeys":["onDraw","open override fun onDraw(canvas: Canvas)","com.github.panpf.sketch.ability.MimeTypeLogoAbility.onDraw"]},{"name":"open override fun onDraw(canvas: Canvas)","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.onDraw","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/on-draw.html","searchKeys":["onDraw","open override fun onDraw(canvas: Canvas)","com.github.panpf.sketch.ability.ProgressIndicatorAbility.onDraw"]},{"name":"open override fun onDrawBefore(canvas: Canvas)","description":"com.github.panpf.sketch.ability.DataFromLogoAbility.onDrawBefore","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-data-from-logo-ability/on-draw-before.html","searchKeys":["onDrawBefore","open override fun onDrawBefore(canvas: Canvas)","com.github.panpf.sketch.ability.DataFromLogoAbility.onDrawBefore"]},{"name":"open override fun onDrawBefore(canvas: Canvas)","description":"com.github.panpf.sketch.ability.MimeTypeLogoAbility.onDrawBefore","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-mime-type-logo-ability/on-draw-before.html","searchKeys":["onDrawBefore","open override fun onDrawBefore(canvas: Canvas)","com.github.panpf.sketch.ability.MimeTypeLogoAbility.onDrawBefore"]},{"name":"open override fun onDrawBefore(canvas: Canvas)","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.onDrawBefore","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/on-draw-before.html","searchKeys":["onDrawBefore","open override fun onDrawBefore(canvas: Canvas)","com.github.panpf.sketch.ability.ProgressIndicatorAbility.onDrawBefore"]},{"name":"open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","description":"com.github.panpf.sketch.ability.DataFromLogoAbility.onDrawableChanged","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-data-from-logo-ability/on-drawable-changed.html","searchKeys":["onDrawableChanged","open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","com.github.panpf.sketch.ability.DataFromLogoAbility.onDrawableChanged"]},{"name":"open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","description":"com.github.panpf.sketch.ability.MimeTypeLogoAbility.onDrawableChanged","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-mime-type-logo-ability/on-drawable-changed.html","searchKeys":["onDrawableChanged","open override fun onDrawableChanged(oldDrawable: Drawable?, newDrawable: Drawable?)","com.github.panpf.sketch.ability.MimeTypeLogoAbility.onDrawableChanged"]},{"name":"open override fun onLayout(changed: Boolean, left: Int, top: Int, right: Int, bottom: Int)","description":"com.github.panpf.sketch.ability.DataFromLogoAbility.onLayout","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-data-from-logo-ability/on-layout.html","searchKeys":["onLayout","open override fun onLayout(changed: Boolean, left: Int, top: Int, right: Int, bottom: Int)","com.github.panpf.sketch.ability.DataFromLogoAbility.onLayout"]},{"name":"open override fun onLayout(changed: Boolean, left: Int, top: Int, right: Int, bottom: Int)","description":"com.github.panpf.sketch.ability.MimeTypeLogoAbility.onLayout","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-mime-type-logo-ability/on-layout.html","searchKeys":["onLayout","open override fun onLayout(changed: Boolean, left: Int, top: Int, right: Int, bottom: Int)","com.github.panpf.sketch.ability.MimeTypeLogoAbility.onLayout"]},{"name":"open override fun onLayout(changed: Boolean, left: Int, top: Int, right: Int, bottom: Int)","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.onLayout","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/on-layout.html","searchKeys":["onLayout","open override fun onLayout(changed: Boolean, left: Int, top: Int, right: Int, bottom: Int)","com.github.panpf.sketch.ability.ProgressIndicatorAbility.onLayout"]},{"name":"open override fun onRequestError(request: ImageRequest, error: ImageResult.Error)","description":"com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility.onRequestError","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-click-ignore-save-cellular-traffic-ability/on-request-error.html","searchKeys":["onRequestError","open override fun onRequestError(request: ImageRequest, error: ImageResult.Error)","com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility.onRequestError"]},{"name":"open override fun onRequestError(request: ImageRequest, error: ImageResult.Error)","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.onRequestError","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/on-request-error.html","searchKeys":["onRequestError","open override fun onRequestError(request: ImageRequest, error: ImageResult.Error)","com.github.panpf.sketch.ability.ProgressIndicatorAbility.onRequestError"]},{"name":"open override fun onRequestStart(request: ImageRequest)","description":"com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility.onRequestStart","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-click-ignore-save-cellular-traffic-ability/on-request-start.html","searchKeys":["onRequestStart","open override fun onRequestStart(request: ImageRequest)","com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility.onRequestStart"]},{"name":"open override fun onRequestStart(request: ImageRequest)","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.onRequestStart","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/on-request-start.html","searchKeys":["onRequestStart","open override fun onRequestStart(request: ImageRequest)","com.github.panpf.sketch.ability.ProgressIndicatorAbility.onRequestStart"]},{"name":"open override fun onRequestSuccess(request: ImageRequest, result: ImageResult.Success)","description":"com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility.onRequestSuccess","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-click-ignore-save-cellular-traffic-ability/on-request-success.html","searchKeys":["onRequestSuccess","open override fun onRequestSuccess(request: ImageRequest, result: ImageResult.Success)","com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility.onRequestSuccess"]},{"name":"open override fun onRequestSuccess(request: ImageRequest, result: ImageResult.Success)","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.onRequestSuccess","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/on-request-success.html","searchKeys":["onRequestSuccess","open override fun onRequestSuccess(request: ImageRequest, result: ImageResult.Success)","com.github.panpf.sketch.ability.ProgressIndicatorAbility.onRequestSuccess"]},{"name":"open override fun onScroll(view: AbsListView, firstVisibleItem: Int, visibleItemCount: Int, totalItemCount: Int)","description":"com.github.panpf.sketch.util.PauseLoadWhenScrollingMixedScrollListener.onScroll","location":"sketch-extensions-view/com.github.panpf.sketch.util/-pause-load-when-scrolling-mixed-scroll-listener/on-scroll.html","searchKeys":["onScroll","open override fun onScroll(view: AbsListView, firstVisibleItem: Int, visibleItemCount: Int, totalItemCount: Int)","com.github.panpf.sketch.util.PauseLoadWhenScrollingMixedScrollListener.onScroll"]},{"name":"open override fun onScrollStateChanged(recyclerView: RecyclerView, newState: Int)","description":"com.github.panpf.sketch.util.PauseLoadWhenScrollingMixedScrollListener.onScrollStateChanged","location":"sketch-extensions-view/com.github.panpf.sketch.util/-pause-load-when-scrolling-mixed-scroll-listener/on-scroll-state-changed.html","searchKeys":["onScrollStateChanged","open override fun onScrollStateChanged(recyclerView: RecyclerView, newState: Int)","com.github.panpf.sketch.util.PauseLoadWhenScrollingMixedScrollListener.onScrollStateChanged"]},{"name":"open override fun onScrollStateChanged(view: AbsListView, scrollState: Int)","description":"com.github.panpf.sketch.util.PauseLoadWhenScrollingMixedScrollListener.onScrollStateChanged","location":"sketch-extensions-view/com.github.panpf.sketch.util/-pause-load-when-scrolling-mixed-scroll-listener/on-scroll-state-changed.html","searchKeys":["onScrollStateChanged","open override fun onScrollStateChanged(view: AbsListView, scrollState: Int)","com.github.panpf.sketch.util.PauseLoadWhenScrollingMixedScrollListener.onScrollStateChanged"]},{"name":"open override fun onUpdateRequestProgress(request: ImageRequest, progress: Progress)","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.onUpdateRequestProgress","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/on-update-request-progress.html","searchKeys":["onUpdateRequestProgress","open override fun onUpdateRequestProgress(request: ImageRequest, progress: Progress)","com.github.panpf.sketch.ability.ProgressIndicatorAbility.onUpdateRequestProgress"]},{"name":"open override fun onVisibilityChanged(changedView: View, visibility: Int)","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.onVisibilityChanged","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/on-visibility-changed.html","searchKeys":["onVisibilityChanged","open override fun onVisibilityChanged(changedView: View, visibility: Int)","com.github.panpf.sketch.ability.ProgressIndicatorAbility.onVisibilityChanged"]},{"name":"open override fun scheduleDrawable(who: Drawable, what: Runnable, when: Long)","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.scheduleDrawable","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/schedule-drawable.html","searchKeys":["scheduleDrawable","open override fun scheduleDrawable(who: Drawable, what: Runnable, when: Long)","com.github.panpf.sketch.ability.ProgressIndicatorAbility.scheduleDrawable"]},{"name":"open override fun unscheduleDrawable(who: Drawable, what: Runnable)","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.unscheduleDrawable","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/unschedule-drawable.html","searchKeys":["unscheduleDrawable","open override fun unscheduleDrawable(who: Drawable, what: Runnable)","com.github.panpf.sketch.ability.ProgressIndicatorAbility.unscheduleDrawable"]},{"name":"open override val canIntercept: Boolean","description":"com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility.canIntercept","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-click-ignore-save-cellular-traffic-ability/can-intercept.html","searchKeys":["canIntercept","open override val canIntercept: Boolean","com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility.canIntercept"]},{"name":"open override val requestState: RequestState","description":"com.github.panpf.sketch.SketchImageView.requestState","location":"sketch-extensions-view/com.github.panpf.sketch/-sketch-image-view/request-state.html","searchKeys":["requestState","open override val requestState: RequestState","com.github.panpf.sketch.SketchImageView.requestState"]},{"name":"open override var host: Host?","description":"com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility.host","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-click-ignore-save-cellular-traffic-ability/host.html","searchKeys":["host","open override var host: Host?","com.github.panpf.sketch.ability.ClickIgnoreSaveCellularTrafficAbility.host"]},{"name":"open override var host: Host?","description":"com.github.panpf.sketch.ability.DataFromLogoAbility.host","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-data-from-logo-ability/host.html","searchKeys":["host","open override var host: Host?","com.github.panpf.sketch.ability.DataFromLogoAbility.host"]},{"name":"open override var host: Host?","description":"com.github.panpf.sketch.ability.MimeTypeLogoAbility.host","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-mime-type-logo-ability/host.html","searchKeys":["host","open override var host: Host?","com.github.panpf.sketch.ability.MimeTypeLogoAbility.host"]},{"name":"open override var host: Host?","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.host","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/host.html","searchKeys":["host","open override var host: Host?","com.github.panpf.sketch.ability.ProgressIndicatorAbility.host"]},{"name":"open override var imageOptions: ImageOptions?","description":"com.github.panpf.sketch.SketchImageView.imageOptions","location":"sketch-extensions-view/com.github.panpf.sketch/-sketch-image-view/image-options.html","searchKeys":["imageOptions","open override var imageOptions: ImageOptions?","com.github.panpf.sketch.SketchImageView.imageOptions"]},{"name":"val ViewAbilityContainer.isClickIgnoreSaveCellularTrafficEnabled: Boolean","description":"com.github.panpf.sketch.ability.isClickIgnoreSaveCellularTrafficEnabled","location":"sketch-extensions-view/com.github.panpf.sketch.ability/is-click-ignore-save-cellular-traffic-enabled.html","searchKeys":["isClickIgnoreSaveCellularTrafficEnabled","val ViewAbilityContainer.isClickIgnoreSaveCellularTrafficEnabled: Boolean","com.github.panpf.sketch.ability.isClickIgnoreSaveCellularTrafficEnabled"]},{"name":"val ViewAbilityContainer.isShowDataFromLogo: Boolean","description":"com.github.panpf.sketch.ability.isShowDataFromLogo","location":"sketch-extensions-view/com.github.panpf.sketch.ability/is-show-data-from-logo.html","searchKeys":["isShowDataFromLogo","val ViewAbilityContainer.isShowDataFromLogo: Boolean","com.github.panpf.sketch.ability.isShowDataFromLogo"]},{"name":"val ViewAbilityContainer.isShowMimeTypeLogo: Boolean","description":"com.github.panpf.sketch.ability.isShowMimeTypeLogo","location":"sketch-extensions-view/com.github.panpf.sketch.ability/is-show-mime-type-logo.html","searchKeys":["isShowMimeTypeLogo","val ViewAbilityContainer.isShowMimeTypeLogo: Boolean","com.github.panpf.sketch.ability.isShowMimeTypeLogo"]},{"name":"val ViewAbilityContainer.isShowProgressIndicator: Boolean","description":"com.github.panpf.sketch.ability.isShowProgressIndicator","location":"sketch-extensions-view/com.github.panpf.sketch.ability/is-show-progress-indicator.html","searchKeys":["isShowProgressIndicator","val ViewAbilityContainer.isShowProgressIndicator: Boolean","com.github.panpf.sketch.ability.isShowProgressIndicator"]},{"name":"val progressDrawable: ProgressDrawable","description":"com.github.panpf.sketch.ability.ProgressIndicatorAbility.progressDrawable","location":"sketch-extensions-view/com.github.panpf.sketch.ability/-progress-indicator-ability/progress-drawable.html","searchKeys":["progressDrawable","val progressDrawable: ProgressDrawable","com.github.panpf.sketch.ability.ProgressIndicatorAbility.progressDrawable"]},{"name":"var absListScrollListenerWrapper: AbsListView.OnScrollListener?","description":"com.github.panpf.sketch.util.PauseLoadWhenScrollingMixedScrollListener.absListScrollListenerWrapper","location":"sketch-extensions-view/com.github.panpf.sketch.util/-pause-load-when-scrolling-mixed-scroll-listener/abs-list-scroll-listener-wrapper.html","searchKeys":["absListScrollListenerWrapper","var absListScrollListenerWrapper: AbsListView.OnScrollListener?","com.github.panpf.sketch.util.PauseLoadWhenScrollingMixedScrollListener.absListScrollListenerWrapper"]},{"name":"abstract class GenericViewTarget<T : View>(view: T) : ViewTarget<T> , TransitionViewTarget, LifecycleEventObserver, AttachObserver","description":"com.github.panpf.sketch.target.GenericViewTarget","location":"sketch-view-core/com.github.panpf.sketch.target/-generic-view-target/index.html","searchKeys":["GenericViewTarget","abstract class GenericViewTarget<T : View>(view: T) : ViewTarget<T> , TransitionViewTarget, LifecycleEventObserver, AttachObserver","com.github.panpf.sketch.target.GenericViewTarget"]},{"name":"abstract val displayMetrics: DisplayMetrics","description":"com.github.panpf.sketch.resize.internal.ViewSizeResolver.displayMetrics","location":"sketch-view-core/com.github.panpf.sketch.resize.internal/-view-size-resolver/display-metrics.html","searchKeys":["displayMetrics","abstract val displayMetrics: DisplayMetrics","com.github.panpf.sketch.resize.internal.ViewSizeResolver.displayMetrics"]},{"name":"abstract val drawable: Drawable?","description":"com.github.panpf.sketch.target.TransitionViewTarget.drawable","location":"sketch-view-core/com.github.panpf.sketch.target/-transition-view-target/drawable.html","searchKeys":["drawable","abstract val drawable: Drawable?","com.github.panpf.sketch.target.TransitionViewTarget.drawable"]},{"name":"abstract val drawable: Drawable?","description":"com.github.panpf.sketch.target.ViewTarget.drawable","location":"sketch-view-core/com.github.panpf.sketch.target/-view-target/drawable.html","searchKeys":["drawable","abstract val drawable: Drawable?","com.github.panpf.sketch.target.ViewTarget.drawable"]},{"name":"abstract val scaleType: ImageView.ScaleType","description":"com.github.panpf.sketch.target.ViewTarget.scaleType","location":"sketch-view-core/com.github.panpf.sketch.target/-view-target/scale-type.html","searchKeys":["scaleType","abstract val scaleType: ImageView.ScaleType","com.github.panpf.sketch.target.ViewTarget.scaleType"]},{"name":"abstract val subtractPadding: Boolean","description":"com.github.panpf.sketch.resize.internal.ViewSizeResolver.subtractPadding","location":"sketch-view-core/com.github.panpf.sketch.resize.internal/-view-size-resolver/subtract-padding.html","searchKeys":["subtractPadding","abstract val subtractPadding: Boolean","com.github.panpf.sketch.resize.internal.ViewSizeResolver.subtractPadding"]},{"name":"abstract val view: T?","description":"com.github.panpf.sketch.resize.internal.ViewSizeResolver.view","location":"sketch-view-core/com.github.panpf.sketch.resize.internal/-view-size-resolver/view.html","searchKeys":["view","abstract val view: T?","com.github.panpf.sketch.resize.internal.ViewSizeResolver.view"]},{"name":"abstract val view: T?","description":"com.github.panpf.sketch.target.ViewTarget.view","location":"sketch-view-core/com.github.panpf.sketch.target/-view-target/view.html","searchKeys":["view","abstract val view: T?","com.github.panpf.sketch.target.ViewTarget.view"]},{"name":"class CrossfadeDrawable constructor(val start: Drawable?, val end: Drawable?, val scaleType: ImageView.ScaleType = ScaleType.FIT_CENTER, val durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, val fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, val preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE) : Drawable, Animatable2Compat, Drawable.Callback, SketchDrawable, TransitionDrawable","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/index.html","searchKeys":["CrossfadeDrawable","class CrossfadeDrawable constructor(val start: Drawable?, val end: Drawable?, val scaleType: ImageView.ScaleType = ScaleType.FIT_CENTER, val durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, val fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, val preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE) : Drawable, Animatable2Compat, Drawable.Callback, SketchDrawable, TransitionDrawable","com.github.panpf.sketch.drawable.CrossfadeDrawable"]},{"name":"class Factory constructor(val durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, val fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, val preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, val alwaysUse: Boolean = CrossfadeTransition.DEFAULT_ALWAYS_USE) : Transition.Factory","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/-factory/index.html","searchKeys":["Factory","class Factory constructor(val durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, val fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, val preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, val alwaysUse: Boolean = CrossfadeTransition.DEFAULT_ALWAYS_USE) : Transition.Factory","com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory"]},{"name":"class RemoteViewsDelegate(sketch: Sketch, initialRequest: ImageRequest, target: RemoteViewsTarget, job: Job) : BaseRequestDelegate","description":"com.github.panpf.sketch.request.internal.RemoteViewsDelegate","location":"sketch-view-core/com.github.panpf.sketch.request.internal/-remote-views-delegate/index.html","searchKeys":["RemoteViewsDelegate","class RemoteViewsDelegate(sketch: Sketch, initialRequest: ImageRequest, target: RemoteViewsTarget, job: Job) : BaseRequestDelegate","com.github.panpf.sketch.request.internal.RemoteViewsDelegate"]},{"name":"class RemoteViewsTarget(remoteViews: RemoteViews, imageViewId: Int, onUpdated: () -> Unit) : Target","description":"com.github.panpf.sketch.target.RemoteViewsTarget","location":"sketch-view-core/com.github.panpf.sketch.target/-remote-views-target/index.html","searchKeys":["RemoteViewsTarget","class RemoteViewsTarget(remoteViews: RemoteViews, imageViewId: Int, onUpdated: () -> Unit) : Target","com.github.panpf.sketch.target.RemoteViewsTarget"]},{"name":"class SketchUtils","description":"com.github.panpf.sketch.util.SketchUtils","location":"sketch-view-core/com.github.panpf.sketch.util/-sketch-utils/index.html","searchKeys":["SketchUtils","class SketchUtils","com.github.panpf.sketch.util.SketchUtils"]},{"name":"class ViewCrossfadeTransition constructor(sketch: Sketch, request: ImageRequest, target: ViewTarget<*>, result: ImageResult, val scaleType: ImageView.ScaleType = ScaleType.FIT_CENTER, val durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, val fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, val preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE) : Transition","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/index.html","searchKeys":["ViewCrossfadeTransition","class ViewCrossfadeTransition constructor(sketch: Sketch, request: ImageRequest, target: ViewTarget<*>, result: ImageResult, val scaleType: ImageView.ScaleType = ScaleType.FIT_CENTER, val durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, val fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, val preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE) : Transition","com.github.panpf.sketch.transition.ViewCrossfadeTransition"]},{"name":"class ViewLifecycleResolver(val viewReference: WeakReference<View>) : LifecycleResolver","description":"com.github.panpf.sketch.request.ViewLifecycleResolver","location":"sketch-view-core/com.github.panpf.sketch.request/-view-lifecycle-resolver/index.html","searchKeys":["ViewLifecycleResolver","class ViewLifecycleResolver(val viewReference: WeakReference<View>) : LifecycleResolver","com.github.panpf.sketch.request.ViewLifecycleResolver"]},{"name":"class ViewRequestDelegate(sketch: Sketch, initialRequest: ImageRequest, viewTarget: ViewTarget<*>, job: Job) : BaseRequestDelegate","description":"com.github.panpf.sketch.request.internal.ViewRequestDelegate","location":"sketch-view-core/com.github.panpf.sketch.request.internal/-view-request-delegate/index.html","searchKeys":["ViewRequestDelegate","class ViewRequestDelegate(sketch: Sketch, initialRequest: ImageRequest, viewTarget: ViewTarget<*>, job: Job) : BaseRequestDelegate","com.github.panpf.sketch.request.internal.ViewRequestDelegate"]},{"name":"class ViewRequestManager(view: View) : BaseRequestManager, View.OnAttachStateChangeListener","description":"com.github.panpf.sketch.request.internal.ViewRequestManager","location":"sketch-view-core/com.github.panpf.sketch.request.internal/-view-request-manager/index.html","searchKeys":["ViewRequestManager","class ViewRequestManager(view: View) : BaseRequestManager, View.OnAttachStateChangeListener","com.github.panpf.sketch.request.internal.ViewRequestManager"]},{"name":"constructor(drawable: Drawable, size: Size, scale: Scale)","description":"com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.ResizeAnimatableDrawable","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-animatable-drawable/-resize-animatable-drawable.html","searchKeys":["ResizeAnimatableDrawable","constructor(drawable: Drawable, size: Size, scale: Scale)","com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.ResizeAnimatableDrawable"]},{"name":"constructor(drawable: Drawable, size: Size, scale: Scale)","description":"com.github.panpf.sketch.drawable.ResizeDrawable.ResizeDrawable","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-drawable/-resize-drawable.html","searchKeys":["ResizeDrawable","constructor(drawable: Drawable, size: Size, scale: Scale)","com.github.panpf.sketch.drawable.ResizeDrawable.ResizeDrawable"]},{"name":"constructor(drawable: Drawable, size: Size, scaleType: ImageView.ScaleType = ScaleType.CENTER_CROP)","description":"com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.ResizeAnimatableDrawable","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-animatable-drawable/-resize-animatable-drawable.html","searchKeys":["ResizeAnimatableDrawable","constructor(drawable: Drawable, size: Size, scaleType: ImageView.ScaleType = ScaleType.CENTER_CROP)","com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.ResizeAnimatableDrawable"]},{"name":"constructor(drawable: Drawable, size: Size, scaleType: ImageView.ScaleType = ScaleType.CENTER_CROP)","description":"com.github.panpf.sketch.drawable.ResizeDrawable.ResizeDrawable","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-drawable/-resize-drawable.html","searchKeys":["ResizeDrawable","constructor(drawable: Drawable, size: Size, scaleType: ImageView.ScaleType = ScaleType.CENTER_CROP)","com.github.panpf.sketch.drawable.ResizeDrawable.ResizeDrawable"]},{"name":"constructor(durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, alwaysUse: Boolean = CrossfadeTransition.DEFAULT_ALWAYS_USE)","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.Factory","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/-factory/-factory.html","searchKeys":["Factory","constructor(durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, alwaysUse: Boolean = CrossfadeTransition.DEFAULT_ALWAYS_USE)","com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.Factory"]},{"name":"constructor(remoteViews: RemoteViews, imageViewId: Int, onUpdated: () -> Unit)","description":"com.github.panpf.sketch.target.RemoteViewsTarget.RemoteViewsTarget","location":"sketch-view-core/com.github.panpf.sketch.target/-remote-views-target/-remote-views-target.html","searchKeys":["RemoteViewsTarget","constructor(remoteViews: RemoteViews, imageViewId: Int, onUpdated: () -> Unit)","com.github.panpf.sketch.target.RemoteViewsTarget.RemoteViewsTarget"]},{"name":"constructor(sketch: Sketch, initialRequest: ImageRequest, target: RemoteViewsTarget, job: Job)","description":"com.github.panpf.sketch.request.internal.RemoteViewsDelegate.RemoteViewsDelegate","location":"sketch-view-core/com.github.panpf.sketch.request.internal/-remote-views-delegate/-remote-views-delegate.html","searchKeys":["RemoteViewsDelegate","constructor(sketch: Sketch, initialRequest: ImageRequest, target: RemoteViewsTarget, job: Job)","com.github.panpf.sketch.request.internal.RemoteViewsDelegate.RemoteViewsDelegate"]},{"name":"constructor(sketch: Sketch, initialRequest: ImageRequest, viewTarget: ViewTarget<*>, job: Job)","description":"com.github.panpf.sketch.request.internal.ViewRequestDelegate.ViewRequestDelegate","location":"sketch-view-core/com.github.panpf.sketch.request.internal/-view-request-delegate/-view-request-delegate.html","searchKeys":["ViewRequestDelegate","constructor(sketch: Sketch, initialRequest: ImageRequest, viewTarget: ViewTarget<*>, job: Job)","com.github.panpf.sketch.request.internal.ViewRequestDelegate.ViewRequestDelegate"]},{"name":"constructor(sketch: Sketch, request: ImageRequest, target: ViewTarget<*>, result: ImageResult, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, fitScale: Boolean)","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.ViewCrossfadeTransition","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/-view-crossfade-transition.html","searchKeys":["ViewCrossfadeTransition","constructor(sketch: Sketch, request: ImageRequest, target: ViewTarget<*>, result: ImageResult, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, fitScale: Boolean)","com.github.panpf.sketch.transition.ViewCrossfadeTransition.ViewCrossfadeTransition"]},{"name":"constructor(sketch: Sketch, request: ImageRequest, target: ViewTarget<*>, result: ImageResult, scaleType: ImageView.ScaleType = ScaleType.FIT_CENTER, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE)","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.ViewCrossfadeTransition","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/-view-crossfade-transition.html","searchKeys":["ViewCrossfadeTransition","constructor(sketch: Sketch, request: ImageRequest, target: ViewTarget<*>, result: ImageResult, scaleType: ImageView.ScaleType = ScaleType.FIT_CENTER, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE)","com.github.panpf.sketch.transition.ViewCrossfadeTransition.ViewCrossfadeTransition"]},{"name":"constructor(start: Drawable?, end: Drawable?, fitScale: Boolean, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE)","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.CrossfadeDrawable","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/-crossfade-drawable.html","searchKeys":["CrossfadeDrawable","constructor(start: Drawable?, end: Drawable?, fitScale: Boolean, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE)","com.github.panpf.sketch.drawable.CrossfadeDrawable.CrossfadeDrawable"]},{"name":"constructor(start: Drawable?, end: Drawable?, scaleType: ImageView.ScaleType = ScaleType.FIT_CENTER, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE)","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.CrossfadeDrawable","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/-crossfade-drawable.html","searchKeys":["CrossfadeDrawable","constructor(start: Drawable?, end: Drawable?, scaleType: ImageView.ScaleType = ScaleType.FIT_CENTER, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE)","com.github.panpf.sketch.drawable.CrossfadeDrawable.CrossfadeDrawable"]},{"name":"constructor(view: ImageView)","description":"com.github.panpf.sketch.target.ImageViewTarget.ImageViewTarget","location":"sketch-view-core/com.github.panpf.sketch.target/-image-view-target/-image-view-target.html","searchKeys":["ImageViewTarget","constructor(view: ImageView)","com.github.panpf.sketch.target.ImageViewTarget.ImageViewTarget"]},{"name":"constructor(view: T)","description":"com.github.panpf.sketch.target.GenericViewTarget.GenericViewTarget","location":"sketch-view-core/com.github.panpf.sketch.target/-generic-view-target/-generic-view-target.html","searchKeys":["GenericViewTarget","constructor(view: T)","com.github.panpf.sketch.target.GenericViewTarget.GenericViewTarget"]},{"name":"constructor(view: View)","description":"com.github.panpf.sketch.request.ViewLifecycleResolver.ViewLifecycleResolver","location":"sketch-view-core/com.github.panpf.sketch.request/-view-lifecycle-resolver/-view-lifecycle-resolver.html","searchKeys":["ViewLifecycleResolver","constructor(view: View)","com.github.panpf.sketch.request.ViewLifecycleResolver.ViewLifecycleResolver"]},{"name":"constructor(view: View)","description":"com.github.panpf.sketch.request.internal.ViewRequestManager.ViewRequestManager","location":"sketch-view-core/com.github.panpf.sketch.request.internal/-view-request-manager/-view-request-manager.html","searchKeys":["ViewRequestManager","constructor(view: View)","com.github.panpf.sketch.request.internal.ViewRequestManager.ViewRequestManager"]},{"name":"constructor(viewReference: WeakReference<View>)","description":"com.github.panpf.sketch.request.ViewLifecycleResolver.ViewLifecycleResolver","location":"sketch-view-core/com.github.panpf.sketch.request/-view-lifecycle-resolver/-view-lifecycle-resolver.html","searchKeys":["ViewLifecycleResolver","constructor(viewReference: WeakReference<View>)","com.github.panpf.sketch.request.ViewLifecycleResolver.ViewLifecycleResolver"]},{"name":"data object ViewResizeOnDrawHelper : ResizeOnDrawHelper","description":"com.github.panpf.sketch.resize.ViewResizeOnDrawHelper","location":"sketch-view-core/com.github.panpf.sketch.resize/-view-resize-on-draw-helper/index.html","searchKeys":["ViewResizeOnDrawHelper","data object ViewResizeOnDrawHelper : ResizeOnDrawHelper","com.github.panpf.sketch.resize.ViewResizeOnDrawHelper"]},{"name":"fun <T : View> ViewSizeResolver(view: T, subtractPadding: Boolean = true): ViewSizeResolver<T>","description":"com.github.panpf.sketch.resize.internal.ViewSizeResolver","location":"sketch-view-core/com.github.panpf.sketch.resize.internal/-view-size-resolver.html","searchKeys":["ViewSizeResolver","fun <T : View> ViewSizeResolver(view: T, subtractPadding: Boolean = true): ViewSizeResolver<T>","com.github.panpf.sketch.resize.internal.ViewSizeResolver"]},{"name":"fun Animatable.startWithLifecycle(lifecycle: Lifecycle)","description":"com.github.panpf.sketch.drawable.startWithLifecycle","location":"sketch-view-core/com.github.panpf.sketch.drawable/start-with-lifecycle.html","searchKeys":["startWithLifecycle","fun Animatable.startWithLifecycle(lifecycle: Lifecycle)","com.github.panpf.sketch.drawable.startWithLifecycle"]},{"name":"fun Drawable.findDeepestDrawable(): Drawable","description":"com.github.panpf.sketch.util.findDeepestDrawable","location":"sketch-view-core/com.github.panpf.sketch.util/find-deepest-drawable.html","searchKeys":["findDeepestDrawable","fun Drawable.findDeepestDrawable(): Drawable","com.github.panpf.sketch.util.findDeepestDrawable"]},{"name":"fun Drawable.findLeafDrawable(): Drawable","description":"com.github.panpf.sketch.util.findLeafDrawable","location":"sketch-view-core/com.github.panpf.sketch.util/find-leaf-drawable.html","searchKeys":["findLeafDrawable","fun Drawable.findLeafDrawable(): Drawable","com.github.panpf.sketch.util.findLeafDrawable"]},{"name":"fun Drawable.resize(size: Size, scale: Scale): ResizeDrawable","description":"com.github.panpf.sketch.drawable.resize","location":"sketch-view-core/com.github.panpf.sketch.drawable/resize.html","searchKeys":["resize","fun Drawable.resize(size: Size, scale: Scale): ResizeDrawable","com.github.panpf.sketch.drawable.resize"]},{"name":"fun Drawable.resize(size: Size, scaleType: ImageView.ScaleType = ScaleType.CENTER_CROP): ResizeDrawable","description":"com.github.panpf.sketch.drawable.resize","location":"sketch-view-core/com.github.panpf.sketch.drawable/resize.html","searchKeys":["resize","fun Drawable.resize(size: Size, scaleType: ImageView.ScaleType = ScaleType.CENTER_CROP): ResizeDrawable","com.github.panpf.sketch.drawable.resize"]},{"name":"fun ImageOptions.Builder.sizeWithView(view: View, subtractPadding: Boolean = true): ImageOptions.Builder","description":"com.github.panpf.sketch.request.sizeWithView","location":"sketch-view-core/com.github.panpf.sketch.request/size-with-view.html","searchKeys":["sizeWithView","fun ImageOptions.Builder.sizeWithView(view: View, subtractPadding: Boolean = true): ImageOptions.Builder","com.github.panpf.sketch.request.sizeWithView"]},{"name":"fun ImageRequest(imageView: ImageView, uri: String?, block: ImageRequest.Builder.() -> Unit? = null): ImageRequest","description":"com.github.panpf.sketch.request.ImageRequest","location":"sketch-view-core/com.github.panpf.sketch.request/-image-request.html","searchKeys":["ImageRequest","fun ImageRequest(imageView: ImageView, uri: String?, block: ImageRequest.Builder.() -> Unit? = null): ImageRequest","com.github.panpf.sketch.request.ImageRequest"]},{"name":"fun ImageRequest.Builder.sizeWithView(view: View, subtractPadding: Boolean = true): ImageRequest.Builder","description":"com.github.panpf.sketch.request.sizeWithView","location":"sketch-view-core/com.github.panpf.sketch.request/size-with-view.html","searchKeys":["sizeWithView","fun ImageRequest.Builder.sizeWithView(view: View, subtractPadding: Boolean = true): ImageRequest.Builder","com.github.panpf.sketch.request.sizeWithView"]},{"name":"fun ImageRequest.Builder.target(imageView: ImageView): ImageRequest.Builder","description":"com.github.panpf.sketch.request.target","location":"sketch-view-core/com.github.panpf.sketch.request/target.html","searchKeys":["target","fun ImageRequest.Builder.target(imageView: ImageView): ImageRequest.Builder","com.github.panpf.sketch.request.target"]},{"name":"fun ImageView.ScaleType.toScale(): Scale","description":"com.github.panpf.sketch.util.toScale","location":"sketch-view-core/com.github.panpf.sketch.util/to-scale.html","searchKeys":["toScale","fun ImageView.ScaleType.toScale(): Scale","com.github.panpf.sketch.util.toScale"]},{"name":"fun ImageView.disposeLoad()","description":"com.github.panpf.sketch.disposeLoad","location":"sketch-view-core/com.github.panpf.sketch/dispose-load.html","searchKeys":["disposeLoad","fun ImageView.disposeLoad()","com.github.panpf.sketch.disposeLoad"]},{"name":"fun Scale.toScaleType(): ImageView.ScaleType","description":"com.github.panpf.sketch.util.toScaleType","location":"sketch-view-core/com.github.panpf.sketch.util/to-scale-type.html","searchKeys":["toScaleType","fun Scale.toScaleType(): ImageView.ScaleType","com.github.panpf.sketch.util.toScaleType"]},{"name":"fun calculateBoundsWithScaleAndAlignment(srcSize: Size, dstSize: Size, scaleFactor: PointF, alignment: Int): Rect","description":"com.github.panpf.sketch.util.calculateBoundsWithScaleAndAlignment","location":"sketch-view-core/com.github.panpf.sketch.util/calculate-bounds-with-scale-and-alignment.html","searchKeys":["calculateBoundsWithScaleAndAlignment","fun calculateBoundsWithScaleAndAlignment(srcSize: Size, dstSize: Size, scaleFactor: PointF, alignment: Int): Rect","com.github.panpf.sketch.util.calculateBoundsWithScaleAndAlignment"]},{"name":"fun dispose(view: View): Unit?","description":"com.github.panpf.sketch.util.SketchUtils.Companion.dispose","location":"sketch-view-core/com.github.panpf.sketch.util/-sketch-utils/-companion/dispose.html","searchKeys":["dispose","fun dispose(view: View): Unit?","com.github.panpf.sketch.util.SketchUtils.Companion.dispose"]},{"name":"fun getRequest(view: View): ImageRequest?","description":"com.github.panpf.sketch.util.SketchUtils.Companion.getRequest","location":"sketch-view-core/com.github.panpf.sketch.util/-sketch-utils/-companion/get-request.html","searchKeys":["getRequest","fun getRequest(view: View): ImageRequest?","com.github.panpf.sketch.util.SketchUtils.Companion.getRequest"]},{"name":"fun getResult(view: View): ImageResult?","description":"com.github.panpf.sketch.util.SketchUtils.Companion.getResult","location":"sketch-view-core/com.github.panpf.sketch.util/-sketch-utils/-companion/get-result.html","searchKeys":["getResult","fun getResult(view: View): ImageResult?","com.github.panpf.sketch.util.SketchUtils.Companion.getResult"]},{"name":"fun getSketch(view: View): Sketch?","description":"com.github.panpf.sketch.util.SketchUtils.Companion.getSketch","location":"sketch-view-core/com.github.panpf.sketch.util/-sketch-utils/-companion/get-sketch.html","searchKeys":["getSketch","fun getSketch(view: View): Sketch?","com.github.panpf.sketch.util.SketchUtils.Companion.getSketch"]},{"name":"fun restart(view: View): Unit?","description":"com.github.panpf.sketch.util.SketchUtils.Companion.restart","location":"sketch-view-core/com.github.panpf.sketch.util/-sketch-utils/-companion/restart.html","searchKeys":["restart","fun restart(view: View): Unit?","com.github.panpf.sketch.util.SketchUtils.Companion.restart"]},{"name":"interface TransitionDrawable","description":"com.github.panpf.sketch.transition.TransitionDrawable","location":"sketch-view-core/com.github.panpf.sketch.transition/-transition-drawable/index.html","searchKeys":["TransitionDrawable","interface TransitionDrawable","com.github.panpf.sketch.transition.TransitionDrawable"]},{"name":"interface TransitionViewTarget : TransitionTarget","description":"com.github.panpf.sketch.target.TransitionViewTarget","location":"sketch-view-core/com.github.panpf.sketch.target/-transition-view-target/index.html","searchKeys":["TransitionViewTarget","interface TransitionViewTarget : TransitionTarget","com.github.panpf.sketch.target.TransitionViewTarget"]},{"name":"interface ViewSizeResolver<T : View> : SizeResolver","description":"com.github.panpf.sketch.resize.internal.ViewSizeResolver","location":"sketch-view-core/com.github.panpf.sketch.resize.internal/-view-size-resolver/index.html","searchKeys":["ViewSizeResolver","interface ViewSizeResolver<T : View> : SizeResolver","com.github.panpf.sketch.resize.internal.ViewSizeResolver"]},{"name":"interface ViewTarget<T : View> : Target","description":"com.github.panpf.sketch.target.ViewTarget","location":"sketch-view-core/com.github.panpf.sketch.target/-view-target/index.html","searchKeys":["ViewTarget","interface ViewTarget<T : View> : Target","com.github.panpf.sketch.target.ViewTarget"]},{"name":"object Companion","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.Companion","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.drawable.CrossfadeDrawable.Companion"]},{"name":"object Companion","description":"com.github.panpf.sketch.util.SketchUtils.Companion","location":"sketch-view-core/com.github.panpf.sketch.util/-sketch-utils/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.util.SketchUtils.Companion"]},{"name":"open class ImageViewTarget(view: ImageView) : GenericViewTarget<ImageView> ","description":"com.github.panpf.sketch.target.ImageViewTarget","location":"sketch-view-core/com.github.panpf.sketch.target/-image-view-target/index.html","searchKeys":["ImageViewTarget","open class ImageViewTarget(view: ImageView) : GenericViewTarget<ImageView> ","com.github.panpf.sketch.target.ImageViewTarget"]},{"name":"open class ResizeAnimatableDrawable(drawable: Drawable, val size: Size, val scaleType: ImageView.ScaleType = ScaleType.CENTER_CROP) : ResizeDrawable, Animatable2Compat, SketchDrawable","description":"com.github.panpf.sketch.drawable.ResizeAnimatableDrawable","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-animatable-drawable/index.html","searchKeys":["ResizeAnimatableDrawable","open class ResizeAnimatableDrawable(drawable: Drawable, val size: Size, val scaleType: ImageView.ScaleType = ScaleType.CENTER_CROP) : ResizeDrawable, Animatable2Compat, SketchDrawable","com.github.panpf.sketch.drawable.ResizeAnimatableDrawable"]},{"name":"open class ResizeDrawable(drawable: Drawable, val size: Size, val scaleType: ImageView.ScaleType = ScaleType.CENTER_CROP) : DrawableWrapperCompat, SketchDrawable","description":"com.github.panpf.sketch.drawable.ResizeDrawable","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-drawable/index.html","searchKeys":["ResizeDrawable","open class ResizeDrawable(drawable: Drawable, val size: Size, val scaleType: ImageView.ScaleType = ScaleType.CENTER_CROP) : DrawableWrapperCompat, SketchDrawable","com.github.panpf.sketch.drawable.ResizeDrawable"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.equals","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.CrossfadeDrawable.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.equals","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-animatable-drawable/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.ResizeDrawable.equals","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-drawable/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.ResizeDrawable.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.request.ViewLifecycleResolver.equals","location":"sketch-view-core/com.github.panpf.sketch.request/-view-lifecycle-resolver/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.request.ViewLifecycleResolver.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.target.ImageViewTarget.equals","location":"sketch-view-core/com.github.panpf.sketch.target/-image-view-target/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.target.ImageViewTarget.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.target.RemoteViewsTarget.equals","location":"sketch-view-core/com.github.panpf.sketch.target/-remote-views-target/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.target.RemoteViewsTarget.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.equals","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.equals"]},{"name":"open override fun assertActive()","description":"com.github.panpf.sketch.request.internal.RemoteViewsDelegate.assertActive","location":"sketch-view-core/com.github.panpf.sketch.request.internal/-remote-views-delegate/assert-active.html","searchKeys":["assertActive","open override fun assertActive()","com.github.panpf.sketch.request.internal.RemoteViewsDelegate.assertActive"]},{"name":"open override fun assertActive()","description":"com.github.panpf.sketch.request.internal.ViewRequestDelegate.assertActive","location":"sketch-view-core/com.github.panpf.sketch.request.internal/-view-request-delegate/assert-active.html","searchKeys":["assertActive","open override fun assertActive()","com.github.panpf.sketch.request.internal.ViewRequestDelegate.assertActive"]},{"name":"open override fun clearAnimationCallbacks()","description":"com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.clearAnimationCallbacks","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-animatable-drawable/clear-animation-callbacks.html","searchKeys":["clearAnimationCallbacks","open override fun clearAnimationCallbacks()","com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.clearAnimationCallbacks"]},{"name":"open override fun clearAnimationCallbacks(): <Error class: unknown class>","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.clearAnimationCallbacks","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/clear-animation-callbacks.html","searchKeys":["clearAnimationCallbacks","open override fun clearAnimationCallbacks(): <Error class: unknown class>","com.github.panpf.sketch.drawable.CrossfadeDrawable.clearAnimationCallbacks"]},{"name":"open override fun convertTransition(factory: Transition.Factory): Transition.Factory?","description":"com.github.panpf.sketch.target.ViewTarget.convertTransition","location":"sketch-view-core/com.github.panpf.sketch.target/-view-target/convert-transition.html","searchKeys":["convertTransition","open override fun convertTransition(factory: Transition.Factory): Transition.Factory?","com.github.panpf.sketch.target.ViewTarget.convertTransition"]},{"name":"open override fun create(sketch: Sketch, request: ImageRequest, target: Target, result: ImageResult): Transition?","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.create","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/-factory/create.html","searchKeys":["create","open override fun create(sketch: Sketch, request: ImageRequest, target: Target, result: ImageResult): Transition?","com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.create"]},{"name":"open override fun draw(canvas: Canvas)","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.draw","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/draw.html","searchKeys":["draw","open override fun draw(canvas: Canvas)","com.github.panpf.sketch.drawable.CrossfadeDrawable.draw"]},{"name":"open override fun finish()","description":"com.github.panpf.sketch.request.internal.RemoteViewsDelegate.finish","location":"sketch-view-core/com.github.panpf.sketch.request.internal/-remote-views-delegate/finish.html","searchKeys":["finish","open override fun finish()","com.github.panpf.sketch.request.internal.RemoteViewsDelegate.finish"]},{"name":"open override fun finish()","description":"com.github.panpf.sketch.request.internal.ViewRequestDelegate.finish","location":"sketch-view-core/com.github.panpf.sketch.request.internal/-view-request-delegate/finish.html","searchKeys":["finish","open override fun finish()","com.github.panpf.sketch.request.internal.ViewRequestDelegate.finish"]},{"name":"open override fun getAlpha(): Int","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.getAlpha","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/get-alpha.html","searchKeys":["getAlpha","open override fun getAlpha(): Int","com.github.panpf.sketch.drawable.CrossfadeDrawable.getAlpha"]},{"name":"open override fun getColorFilter(): ColorFilter?","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.getColorFilter","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/get-color-filter.html","searchKeys":["getColorFilter","open override fun getColorFilter(): ColorFilter?","com.github.panpf.sketch.drawable.CrossfadeDrawable.getColorFilter"]},{"name":"open override fun getImageOptions(): ImageOptions?","description":"com.github.panpf.sketch.target.RemoteViewsTarget.getImageOptions","location":"sketch-view-core/com.github.panpf.sketch.target/-remote-views-target/get-image-options.html","searchKeys":["getImageOptions","open override fun getImageOptions(): ImageOptions?","com.github.panpf.sketch.target.RemoteViewsTarget.getImageOptions"]},{"name":"open override fun getImageOptions(): ImageOptions?","description":"com.github.panpf.sketch.target.ViewTarget.getImageOptions","location":"sketch-view-core/com.github.panpf.sketch.target/-view-target/get-image-options.html","searchKeys":["getImageOptions","open override fun getImageOptions(): ImageOptions?","com.github.panpf.sketch.target.ViewTarget.getImageOptions"]},{"name":"open override fun getIntrinsicHeight(): Int","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.getIntrinsicHeight","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/get-intrinsic-height.html","searchKeys":["getIntrinsicHeight","open override fun getIntrinsicHeight(): Int","com.github.panpf.sketch.drawable.CrossfadeDrawable.getIntrinsicHeight"]},{"name":"open override fun getIntrinsicHeight(): Int","description":"com.github.panpf.sketch.drawable.ResizeDrawable.getIntrinsicHeight","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-drawable/get-intrinsic-height.html","searchKeys":["getIntrinsicHeight","open override fun getIntrinsicHeight(): Int","com.github.panpf.sketch.drawable.ResizeDrawable.getIntrinsicHeight"]},{"name":"open override fun getIntrinsicWidth(): Int","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.getIntrinsicWidth","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/get-intrinsic-width.html","searchKeys":["getIntrinsicWidth","open override fun getIntrinsicWidth(): Int","com.github.panpf.sketch.drawable.CrossfadeDrawable.getIntrinsicWidth"]},{"name":"open override fun getIntrinsicWidth(): Int","description":"com.github.panpf.sketch.drawable.ResizeDrawable.getIntrinsicWidth","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-drawable/get-intrinsic-width.html","searchKeys":["getIntrinsicWidth","open override fun getIntrinsicWidth(): Int","com.github.panpf.sketch.drawable.ResizeDrawable.getIntrinsicWidth"]},{"name":"open override fun getLifecycleResolver(): LifecycleResolver?","description":"com.github.panpf.sketch.target.RemoteViewsTarget.getLifecycleResolver","location":"sketch-view-core/com.github.panpf.sketch.target/-remote-views-target/get-lifecycle-resolver.html","searchKeys":["getLifecycleResolver","open override fun getLifecycleResolver(): LifecycleResolver?","com.github.panpf.sketch.target.RemoteViewsTarget.getLifecycleResolver"]},{"name":"open override fun getLifecycleResolver(): LifecycleResolver?","description":"com.github.panpf.sketch.target.ViewTarget.getLifecycleResolver","location":"sketch-view-core/com.github.panpf.sketch.target/-view-target/get-lifecycle-resolver.html","searchKeys":["getLifecycleResolver","open override fun getLifecycleResolver(): LifecycleResolver?","com.github.panpf.sketch.target.ViewTarget.getLifecycleResolver"]},{"name":"open override fun getListener(): Listener?","description":"com.github.panpf.sketch.target.RemoteViewsTarget.getListener","location":"sketch-view-core/com.github.panpf.sketch.target/-remote-views-target/get-listener.html","searchKeys":["getListener","open override fun getListener(): Listener?","com.github.panpf.sketch.target.RemoteViewsTarget.getListener"]},{"name":"open override fun getListener(): Listener?","description":"com.github.panpf.sketch.target.ViewTarget.getListener","location":"sketch-view-core/com.github.panpf.sketch.target/-view-target/get-listener.html","searchKeys":["getListener","open override fun getListener(): Listener?","com.github.panpf.sketch.target.ViewTarget.getListener"]},{"name":"open override fun getOpacity(): Int","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.getOpacity","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/get-opacity.html","searchKeys":["getOpacity","open override fun getOpacity(): Int","com.github.panpf.sketch.drawable.CrossfadeDrawable.getOpacity"]},{"name":"open override fun getProgressListener(): ProgressListener?","description":"com.github.panpf.sketch.target.RemoteViewsTarget.getProgressListener","location":"sketch-view-core/com.github.panpf.sketch.target/-remote-views-target/get-progress-listener.html","searchKeys":["getProgressListener","open override fun getProgressListener(): ProgressListener?","com.github.panpf.sketch.target.RemoteViewsTarget.getProgressListener"]},{"name":"open override fun getProgressListener(): ProgressListener?","description":"com.github.panpf.sketch.target.ViewTarget.getProgressListener","location":"sketch-view-core/com.github.panpf.sketch.target/-view-target/get-progress-listener.html","searchKeys":["getProgressListener","open override fun getProgressListener(): ProgressListener?","com.github.panpf.sketch.target.ViewTarget.getProgressListener"]},{"name":"open override fun getRequestManager(): RequestManager","description":"com.github.panpf.sketch.target.GenericViewTarget.getRequestManager","location":"sketch-view-core/com.github.panpf.sketch.target/-generic-view-target/get-request-manager.html","searchKeys":["getRequestManager","open override fun getRequestManager(): RequestManager","com.github.panpf.sketch.target.GenericViewTarget.getRequestManager"]},{"name":"open override fun getRequestManager(): RequestManager","description":"com.github.panpf.sketch.target.RemoteViewsTarget.getRequestManager","location":"sketch-view-core/com.github.panpf.sketch.target/-remote-views-target/get-request-manager.html","searchKeys":["getRequestManager","open override fun getRequestManager(): RequestManager","com.github.panpf.sketch.target.RemoteViewsTarget.getRequestManager"]},{"name":"open override fun getResizeOnDrawHelper(): ResizeOnDrawHelper?","description":"com.github.panpf.sketch.target.ViewTarget.getResizeOnDrawHelper","location":"sketch-view-core/com.github.panpf.sketch.target/-view-target/get-resize-on-draw-helper.html","searchKeys":["getResizeOnDrawHelper","open override fun getResizeOnDrawHelper(): ResizeOnDrawHelper?","com.github.panpf.sketch.target.ViewTarget.getResizeOnDrawHelper"]},{"name":"open override fun getScaleDecider(): ScaleDecider?","description":"com.github.panpf.sketch.target.RemoteViewsTarget.getScaleDecider","location":"sketch-view-core/com.github.panpf.sketch.target/-remote-views-target/get-scale-decider.html","searchKeys":["getScaleDecider","open override fun getScaleDecider(): ScaleDecider?","com.github.panpf.sketch.target.RemoteViewsTarget.getScaleDecider"]},{"name":"open override fun getScaleDecider(): ScaleDecider?","description":"com.github.panpf.sketch.target.ViewTarget.getScaleDecider","location":"sketch-view-core/com.github.panpf.sketch.target/-view-target/get-scale-decider.html","searchKeys":["getScaleDecider","open override fun getScaleDecider(): ScaleDecider?","com.github.panpf.sketch.target.ViewTarget.getScaleDecider"]},{"name":"open override fun getSizeResolver(): SizeResolver?","description":"com.github.panpf.sketch.target.ViewTarget.getSizeResolver","location":"sketch-view-core/com.github.panpf.sketch.target/-view-target/get-size-resolver.html","searchKeys":["getSizeResolver","open override fun getSizeResolver(): SizeResolver?","com.github.panpf.sketch.target.ViewTarget.getSizeResolver"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.hashCode","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.CrossfadeDrawable.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.hashCode","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-animatable-drawable/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.ResizeDrawable.hashCode","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-drawable/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.ResizeDrawable.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.request.ViewLifecycleResolver.hashCode","location":"sketch-view-core/com.github.panpf.sketch.request/-view-lifecycle-resolver/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.request.ViewLifecycleResolver.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.target.ImageViewTarget.hashCode","location":"sketch-view-core/com.github.panpf.sketch.target/-image-view-target/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.target.ImageViewTarget.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.target.RemoteViewsTarget.hashCode","location":"sketch-view-core/com.github.panpf.sketch.target/-remote-views-target/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.target.RemoteViewsTarget.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.hashCode","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.hashCode"]},{"name":"open override fun invalidateDrawable(who: Drawable)","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.invalidateDrawable","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/invalidate-drawable.html","searchKeys":["invalidateDrawable","open override fun invalidateDrawable(who: Drawable)","com.github.panpf.sketch.drawable.CrossfadeDrawable.invalidateDrawable"]},{"name":"open override fun isAttached(): Boolean","description":"com.github.panpf.sketch.request.internal.ViewRequestManager.isAttached","location":"sketch-view-core/com.github.panpf.sketch.request.internal/-view-request-manager/is-attached.html","searchKeys":["isAttached","open override fun isAttached(): Boolean","com.github.panpf.sketch.request.internal.ViewRequestManager.isAttached"]},{"name":"open override fun isRunning(): Boolean","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.isRunning","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","com.github.panpf.sketch.drawable.CrossfadeDrawable.isRunning"]},{"name":"open override fun isRunning(): Boolean","description":"com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.isRunning","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-animatable-drawable/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.isRunning"]},{"name":"open override fun mutate(): CrossfadeDrawable","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.mutate","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/mutate.html","searchKeys":["mutate","open override fun mutate(): CrossfadeDrawable","com.github.panpf.sketch.drawable.CrossfadeDrawable.mutate"]},{"name":"open override fun mutate(): ResizeAnimatableDrawable","description":"com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.mutate","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-animatable-drawable/mutate.html","searchKeys":["mutate","open override fun mutate(): ResizeAnimatableDrawable","com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.mutate"]},{"name":"open override fun mutate(): ResizeDrawable","description":"com.github.panpf.sketch.drawable.ResizeDrawable.mutate","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-drawable/mutate.html","searchKeys":["mutate","open override fun mutate(): ResizeDrawable","com.github.panpf.sketch.drawable.ResizeDrawable.mutate"]},{"name":"open override fun newRequestDelegate(sketch: Sketch, initialRequest: ImageRequest, job: Job): RequestDelegate","description":"com.github.panpf.sketch.target.RemoteViewsTarget.newRequestDelegate","location":"sketch-view-core/com.github.panpf.sketch.target/-remote-views-target/new-request-delegate.html","searchKeys":["newRequestDelegate","open override fun newRequestDelegate(sketch: Sketch, initialRequest: ImageRequest, job: Job): RequestDelegate","com.github.panpf.sketch.target.RemoteViewsTarget.newRequestDelegate"]},{"name":"open override fun newRequestDelegate(sketch: Sketch, initialRequest: ImageRequest, job: Job): RequestDelegate","description":"com.github.panpf.sketch.target.ViewTarget.newRequestDelegate","location":"sketch-view-core/com.github.panpf.sketch.target/-view-target/new-request-delegate.html","searchKeys":["newRequestDelegate","open override fun newRequestDelegate(sketch: Sketch, initialRequest: ImageRequest, job: Job): RequestDelegate","com.github.panpf.sketch.target.ViewTarget.newRequestDelegate"]},{"name":"open override fun onAttachedChanged(attached: Boolean)","description":"com.github.panpf.sketch.target.GenericViewTarget.onAttachedChanged","location":"sketch-view-core/com.github.panpf.sketch.target/-generic-view-target/on-attached-changed.html","searchKeys":["onAttachedChanged","open override fun onAttachedChanged(attached: Boolean)","com.github.panpf.sketch.target.GenericViewTarget.onAttachedChanged"]},{"name":"open override fun onError(sketch: Sketch, request: ImageRequest, error: ImageResult.Error, image: Image?)","description":"com.github.panpf.sketch.target.GenericViewTarget.onError","location":"sketch-view-core/com.github.panpf.sketch.target/-generic-view-target/on-error.html","searchKeys":["onError","open override fun onError(sketch: Sketch, request: ImageRequest, error: ImageResult.Error, image: Image?)","com.github.panpf.sketch.target.GenericViewTarget.onError"]},{"name":"open override fun onError(sketch: Sketch, request: ImageRequest, error: ImageResult.Error, image: Image?)","description":"com.github.panpf.sketch.target.RemoteViewsTarget.onError","location":"sketch-view-core/com.github.panpf.sketch.target/-remote-views-target/on-error.html","searchKeys":["onError","open override fun onError(sketch: Sketch, request: ImageRequest, error: ImageResult.Error, image: Image?)","com.github.panpf.sketch.target.RemoteViewsTarget.onError"]},{"name":"open override fun onStart(sketch: Sketch, request: ImageRequest, placeholder: Image?)","description":"com.github.panpf.sketch.target.GenericViewTarget.onStart","location":"sketch-view-core/com.github.panpf.sketch.target/-generic-view-target/on-start.html","searchKeys":["onStart","open override fun onStart(sketch: Sketch, request: ImageRequest, placeholder: Image?)","com.github.panpf.sketch.target.GenericViewTarget.onStart"]},{"name":"open override fun onStart(sketch: Sketch, request: ImageRequest, placeholder: Image?)","description":"com.github.panpf.sketch.target.RemoteViewsTarget.onStart","location":"sketch-view-core/com.github.panpf.sketch.target/-remote-views-target/on-start.html","searchKeys":["onStart","open override fun onStart(sketch: Sketch, request: ImageRequest, placeholder: Image?)","com.github.panpf.sketch.target.RemoteViewsTarget.onStart"]},{"name":"open override fun onStateChanged(source: LifecycleOwner, event: Lifecycle.Event)","description":"com.github.panpf.sketch.target.GenericViewTarget.onStateChanged","location":"sketch-view-core/com.github.panpf.sketch.target/-generic-view-target/on-state-changed.html","searchKeys":["onStateChanged","open override fun onStateChanged(source: LifecycleOwner, event: Lifecycle.Event)","com.github.panpf.sketch.target.GenericViewTarget.onStateChanged"]},{"name":"open override fun onSuccess(sketch: Sketch, request: ImageRequest, result: ImageResult.Success, image: Image)","description":"com.github.panpf.sketch.target.GenericViewTarget.onSuccess","location":"sketch-view-core/com.github.panpf.sketch.target/-generic-view-target/on-success.html","searchKeys":["onSuccess","open override fun onSuccess(sketch: Sketch, request: ImageRequest, result: ImageResult.Success, image: Image)","com.github.panpf.sketch.target.GenericViewTarget.onSuccess"]},{"name":"open override fun onSuccess(sketch: Sketch, request: ImageRequest, result: ImageResult.Success, image: Image)","description":"com.github.panpf.sketch.target.RemoteViewsTarget.onSuccess","location":"sketch-view-core/com.github.panpf.sketch.target/-remote-views-target/on-success.html","searchKeys":["onSuccess","open override fun onSuccess(sketch: Sketch, request: ImageRequest, result: ImageResult.Success, image: Image)","com.github.panpf.sketch.target.RemoteViewsTarget.onSuccess"]},{"name":"open override fun onViewAttachedToWindow(v: View)","description":"com.github.panpf.sketch.request.internal.ViewRequestManager.onViewAttachedToWindow","location":"sketch-view-core/com.github.panpf.sketch.request.internal/-view-request-manager/on-view-attached-to-window.html","searchKeys":["onViewAttachedToWindow","open override fun onViewAttachedToWindow(v: View)","com.github.panpf.sketch.request.internal.ViewRequestManager.onViewAttachedToWindow"]},{"name":"open override fun onViewDetachedFromWindow(v: View)","description":"com.github.panpf.sketch.request.internal.ViewRequestManager.onViewDetachedFromWindow","location":"sketch-view-core/com.github.panpf.sketch.request.internal/-view-request-manager/on-view-detached-from-window.html","searchKeys":["onViewDetachedFromWindow","open override fun onViewDetachedFromWindow(v: View)","com.github.panpf.sketch.request.internal.ViewRequestManager.onViewDetachedFromWindow"]},{"name":"open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.registerAnimationCallback","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/register-animation-callback.html","searchKeys":["registerAnimationCallback","open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","com.github.panpf.sketch.drawable.CrossfadeDrawable.registerAnimationCallback"]},{"name":"open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","description":"com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.registerAnimationCallback","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-animatable-drawable/register-animation-callback.html","searchKeys":["registerAnimationCallback","open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.registerAnimationCallback"]},{"name":"open override fun resize(request: ImageRequest, size: Size, image: Image): Image","description":"com.github.panpf.sketch.resize.ViewResizeOnDrawHelper.resize","location":"sketch-view-core/com.github.panpf.sketch.resize/-view-resize-on-draw-helper/resize.html","searchKeys":["resize","open override fun resize(request: ImageRequest, size: Size, image: Image): Image","com.github.panpf.sketch.resize.ViewResizeOnDrawHelper.resize"]},{"name":"open override fun scheduleDrawable(who: Drawable, what: Runnable, when: Long)","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.scheduleDrawable","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/schedule-drawable.html","searchKeys":["scheduleDrawable","open override fun scheduleDrawable(who: Drawable, what: Runnable, when: Long)","com.github.panpf.sketch.drawable.CrossfadeDrawable.scheduleDrawable"]},{"name":"open override fun setAlpha(alpha: Int)","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.setAlpha","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/set-alpha.html","searchKeys":["setAlpha","open override fun setAlpha(alpha: Int)","com.github.panpf.sketch.drawable.CrossfadeDrawable.setAlpha"]},{"name":"open override fun setBounds(left: Int, top: Int, right: Int, bottom: Int)","description":"com.github.panpf.sketch.drawable.ResizeDrawable.setBounds","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-drawable/set-bounds.html","searchKeys":["setBounds","open override fun setBounds(left: Int, top: Int, right: Int, bottom: Int)","com.github.panpf.sketch.drawable.ResizeDrawable.setBounds"]},{"name":"open override fun setColorFilter(colorFilter: ColorFilter?)","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.setColorFilter","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/set-color-filter.html","searchKeys":["setColorFilter","open override fun setColorFilter(colorFilter: ColorFilter?)","com.github.panpf.sketch.drawable.CrossfadeDrawable.setColorFilter"]},{"name":"open override fun setDrawable(drawable: Drawable?)","description":"com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.setDrawable","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-animatable-drawable/set-drawable.html","searchKeys":["setDrawable","open override fun setDrawable(drawable: Drawable?)","com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.setDrawable"]},{"name":"open override fun setTint(tintColor: Int)","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.setTint","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/set-tint.html","searchKeys":["setTint","open override fun setTint(tintColor: Int)","com.github.panpf.sketch.drawable.CrossfadeDrawable.setTint"]},{"name":"open override fun setTintBlendMode(blendMode: BlendMode?)","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.setTintBlendMode","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/set-tint-blend-mode.html","searchKeys":["setTintBlendMode","open override fun setTintBlendMode(blendMode: BlendMode?)","com.github.panpf.sketch.drawable.CrossfadeDrawable.setTintBlendMode"]},{"name":"open override fun setTintList(tint: ColorStateList?)","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.setTintList","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/set-tint-list.html","searchKeys":["setTintList","open override fun setTintList(tint: ColorStateList?)","com.github.panpf.sketch.drawable.CrossfadeDrawable.setTintList"]},{"name":"open override fun setTintMode(tintMode: PorterDuff.Mode?)","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.setTintMode","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/set-tint-mode.html","searchKeys":["setTintMode","open override fun setTintMode(tintMode: PorterDuff.Mode?)","com.github.panpf.sketch.drawable.CrossfadeDrawable.setTintMode"]},{"name":"open override fun start()","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.start","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/start.html","searchKeys":["start","open override fun start()","com.github.panpf.sketch.drawable.CrossfadeDrawable.start"]},{"name":"open override fun start()","description":"com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.start","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-animatable-drawable/start.html","searchKeys":["start","open override fun start()","com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.start"]},{"name":"open override fun stop()","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.stop","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/stop.html","searchKeys":["stop","open override fun stop()","com.github.panpf.sketch.drawable.CrossfadeDrawable.stop"]},{"name":"open override fun stop()","description":"com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.stop","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-animatable-drawable/stop.html","searchKeys":["stop","open override fun stop()","com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.stop"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.toString","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.CrossfadeDrawable.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.toString","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-animatable-drawable/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.ResizeDrawable.toString","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-drawable/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.ResizeDrawable.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.request.ViewLifecycleResolver.toString","location":"sketch-view-core/com.github.panpf.sketch.request/-view-lifecycle-resolver/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.request.ViewLifecycleResolver.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.resize.ViewResizeOnDrawHelper.toString","location":"sketch-view-core/com.github.panpf.sketch.resize/-view-resize-on-draw-helper/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.resize.ViewResizeOnDrawHelper.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.target.ImageViewTarget.toString","location":"sketch-view-core/com.github.panpf.sketch.target/-image-view-target/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.target.ImageViewTarget.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.target.RemoteViewsTarget.toString","location":"sketch-view-core/com.github.panpf.sketch.target/-remote-views-target/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.target.RemoteViewsTarget.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.toString","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.toString"]},{"name":"open override fun transition()","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.transition","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/transition.html","searchKeys":["transition","open override fun transition()","com.github.panpf.sketch.transition.ViewCrossfadeTransition.transition"]},{"name":"open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.unregisterAnimationCallback","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/unregister-animation-callback.html","searchKeys":["unregisterAnimationCallback","open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","com.github.panpf.sketch.drawable.CrossfadeDrawable.unregisterAnimationCallback"]},{"name":"open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","description":"com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.unregisterAnimationCallback","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-animatable-drawable/unregister-animation-callback.html","searchKeys":["unregisterAnimationCallback","open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","com.github.panpf.sketch.drawable.ResizeAnimatableDrawable.unregisterAnimationCallback"]},{"name":"open override fun unscheduleDrawable(who: Drawable, what: Runnable)","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.unscheduleDrawable","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/unschedule-drawable.html","searchKeys":["unscheduleDrawable","open override fun unscheduleDrawable(who: Drawable, what: Runnable)","com.github.panpf.sketch.drawable.CrossfadeDrawable.unscheduleDrawable"]},{"name":"open override val currentImage: Image?","description":"com.github.panpf.sketch.target.ViewTarget.currentImage","location":"sketch-view-core/com.github.panpf.sketch.target/-view-target/current-image.html","searchKeys":["currentImage","open override val currentImage: Image?","com.github.panpf.sketch.target.ViewTarget.currentImage"]},{"name":"open override val drawable: Drawable?","description":"com.github.panpf.sketch.target.ImageViewTarget.drawable","location":"sketch-view-core/com.github.panpf.sketch.target/-image-view-target/drawable.html","searchKeys":["drawable","open override val drawable: Drawable?","com.github.panpf.sketch.target.ImageViewTarget.drawable"]},{"name":"open override val fitScale: Boolean","description":"com.github.panpf.sketch.target.GenericViewTarget.fitScale","location":"sketch-view-core/com.github.panpf.sketch.target/-generic-view-target/fit-scale.html","searchKeys":["fitScale","open override val fitScale: Boolean","com.github.panpf.sketch.target.GenericViewTarget.fitScale"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.resize.ViewResizeOnDrawHelper.key","location":"sketch-view-core/com.github.panpf.sketch.resize/-view-resize-on-draw-helper/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.resize.ViewResizeOnDrawHelper.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.key","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.key"]},{"name":"open override val scaleType: ImageView.ScaleType","description":"com.github.panpf.sketch.target.ImageViewTarget.scaleType","location":"sketch-view-core/com.github.panpf.sketch.target/-image-view-target/scale-type.html","searchKeys":["scaleType","open override val scaleType: ImageView.ScaleType","com.github.panpf.sketch.target.ImageViewTarget.scaleType"]},{"name":"open override val view: ImageView?","description":"com.github.panpf.sketch.target.ImageViewTarget.view","location":"sketch-view-core/com.github.panpf.sketch.target/-image-view-target/view.html","searchKeys":["view","open override val view: ImageView?","com.github.panpf.sketch.target.ImageViewTarget.view"]},{"name":"open suspend override fun lifecycle(): Lifecycle","description":"com.github.panpf.sketch.request.ViewLifecycleResolver.lifecycle","location":"sketch-view-core/com.github.panpf.sketch.request/-view-lifecycle-resolver/lifecycle.html","searchKeys":["lifecycle","open suspend override fun lifecycle(): Lifecycle","com.github.panpf.sketch.request.ViewLifecycleResolver.lifecycle"]},{"name":"open suspend override fun size(): Size","description":"com.github.panpf.sketch.resize.internal.ViewSizeResolver.size","location":"sketch-view-core/com.github.panpf.sketch.resize.internal/-view-size-resolver/size.html","searchKeys":["size","open suspend override fun size(): Size","com.github.panpf.sketch.resize.internal.ViewSizeResolver.size"]},{"name":"val ImageView.ScaleType.fitScale: Boolean","description":"com.github.panpf.sketch.util.fitScale","location":"sketch-view-core/com.github.panpf.sketch.util/fit-scale.html","searchKeys":["fitScale","val ImageView.ScaleType.fitScale: Boolean","com.github.panpf.sketch.util.fitScale"]},{"name":"val ImageView.imageResult: ImageResult?","description":"com.github.panpf.sketch.imageResult","location":"sketch-view-core/com.github.panpf.sketch/image-result.html","searchKeys":["imageResult","val ImageView.imageResult: ImageResult?","com.github.panpf.sketch.imageResult"]},{"name":"val alwaysUse: Boolean","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.alwaysUse","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/-factory/always-use.html","searchKeys":["alwaysUse","val alwaysUse: Boolean","com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.alwaysUse"]},{"name":"val durationMillis: Int","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.durationMillis","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/duration-millis.html","searchKeys":["durationMillis","val durationMillis: Int","com.github.panpf.sketch.drawable.CrossfadeDrawable.durationMillis"]},{"name":"val durationMillis: Int","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.durationMillis","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/-factory/duration-millis.html","searchKeys":["durationMillis","val durationMillis: Int","com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.durationMillis"]},{"name":"val durationMillis: Int","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.durationMillis","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/duration-millis.html","searchKeys":["durationMillis","val durationMillis: Int","com.github.panpf.sketch.transition.ViewCrossfadeTransition.durationMillis"]},{"name":"val end: Drawable?","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.end","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/end.html","searchKeys":["end","val end: Drawable?","com.github.panpf.sketch.drawable.CrossfadeDrawable.end"]},{"name":"val fadeStart: Boolean","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.fadeStart","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/fade-start.html","searchKeys":["fadeStart","val fadeStart: Boolean","com.github.panpf.sketch.drawable.CrossfadeDrawable.fadeStart"]},{"name":"val fadeStart: Boolean","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.fadeStart","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/-factory/fade-start.html","searchKeys":["fadeStart","val fadeStart: Boolean","com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.fadeStart"]},{"name":"val fadeStart: Boolean","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.fadeStart","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/fade-start.html","searchKeys":["fadeStart","val fadeStart: Boolean","com.github.panpf.sketch.transition.ViewCrossfadeTransition.fadeStart"]},{"name":"val fitScale: Boolean","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.fitScale","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/fit-scale.html","searchKeys":["fitScale","val fitScale: Boolean","com.github.panpf.sketch.drawable.CrossfadeDrawable.fitScale"]},{"name":"val fitScale: Boolean","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.fitScale","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/fit-scale.html","searchKeys":["fitScale","val fitScale: Boolean","com.github.panpf.sketch.transition.ViewCrossfadeTransition.fitScale"]},{"name":"val preferExactIntrinsicSize: Boolean","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.preferExactIntrinsicSize","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/prefer-exact-intrinsic-size.html","searchKeys":["preferExactIntrinsicSize","val preferExactIntrinsicSize: Boolean","com.github.panpf.sketch.drawable.CrossfadeDrawable.preferExactIntrinsicSize"]},{"name":"val preferExactIntrinsicSize: Boolean","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.preferExactIntrinsicSize","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/-factory/prefer-exact-intrinsic-size.html","searchKeys":["preferExactIntrinsicSize","val preferExactIntrinsicSize: Boolean","com.github.panpf.sketch.transition.ViewCrossfadeTransition.Factory.preferExactIntrinsicSize"]},{"name":"val preferExactIntrinsicSize: Boolean","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.preferExactIntrinsicSize","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/prefer-exact-intrinsic-size.html","searchKeys":["preferExactIntrinsicSize","val preferExactIntrinsicSize: Boolean","com.github.panpf.sketch.transition.ViewCrossfadeTransition.preferExactIntrinsicSize"]},{"name":"val scale: Scale","description":"com.github.panpf.sketch.drawable.ResizeDrawable.scale","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-drawable/scale.html","searchKeys":["scale","val scale: Scale","com.github.panpf.sketch.drawable.ResizeDrawable.scale"]},{"name":"val scaleType: ImageView.ScaleType","description":"com.github.panpf.sketch.drawable.CrossfadeDrawable.scaleType","location":"sketch-view-core/com.github.panpf.sketch.drawable/-crossfade-drawable/scale-type.html","searchKeys":["scaleType","val scaleType: ImageView.ScaleType","com.github.panpf.sketch.drawable.CrossfadeDrawable.scaleType"]},{"name":"val scaleType: ImageView.ScaleType","description":"com.github.panpf.sketch.drawable.ResizeDrawable.scaleType","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-drawable/scale-type.html","searchKeys":["scaleType","val scaleType: ImageView.ScaleType","com.github.panpf.sketch.drawable.ResizeDrawable.scaleType"]},{"name":"val scaleType: ImageView.ScaleType","description":"com.github.panpf.sketch.transition.ViewCrossfadeTransition.scaleType","location":"sketch-view-core/com.github.panpf.sketch.transition/-view-crossfade-transition/scale-type.html","searchKeys":["scaleType","val scaleType: ImageView.ScaleType","com.github.panpf.sketch.transition.ViewCrossfadeTransition.scaleType"]},{"name":"val size: Size","description":"com.github.panpf.sketch.drawable.ResizeDrawable.size","location":"sketch-view-core/com.github.panpf.sketch.drawable/-resize-drawable/size.html","searchKeys":["size","val size: Size","com.github.panpf.sketch.drawable.ResizeDrawable.size"]},{"name":"val viewReference: WeakReference<View>","description":"com.github.panpf.sketch.request.ViewLifecycleResolver.viewReference","location":"sketch-view-core/com.github.panpf.sketch.request/-view-lifecycle-resolver/view-reference.html","searchKeys":["viewReference","val viewReference: WeakReference<View>","com.github.panpf.sketch.request.ViewLifecycleResolver.viewReference"]},{"name":"OPAQUE","description":"com.github.panpf.sketch.transform.PixelOpacity.OPAQUE","location":"sketch-animated-core/com.github.panpf.sketch.transform/-pixel-opacity/-o-p-a-q-u-e/index.html","searchKeys":["OPAQUE","OPAQUE","com.github.panpf.sketch.transform.PixelOpacity.OPAQUE"]},{"name":"TRANSLUCENT","description":"com.github.panpf.sketch.transform.PixelOpacity.TRANSLUCENT","location":"sketch-animated-core/com.github.panpf.sketch.transform/-pixel-opacity/-t-r-a-n-s-l-u-c-e-n-t/index.html","searchKeys":["TRANSLUCENT","TRANSLUCENT","com.github.panpf.sketch.transform.PixelOpacity.TRANSLUCENT"]},{"name":"UNCHANGED","description":"com.github.panpf.sketch.transform.PixelOpacity.UNCHANGED","location":"sketch-animated-core/com.github.panpf.sketch.transform/-pixel-opacity/-u-n-c-h-a-n-g-e-d/index.html","searchKeys":["UNCHANGED","UNCHANGED","com.github.panpf.sketch.transform.PixelOpacity.UNCHANGED"]},{"name":"abstract fun transform(canvas: Any, bounds: Rect): PixelOpacity","description":"com.github.panpf.sketch.transform.AnimatedTransformation.transform","location":"sketch-animated-core/com.github.panpf.sketch.transform/-animated-transformation/transform.html","searchKeys":["transform","abstract fun transform(canvas: Any, bounds: Rect): PixelOpacity","com.github.panpf.sketch.transform.AnimatedTransformation.transform"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.transform.AnimatedTransformation.equals","location":"sketch-animated-core/com.github.panpf.sketch.transform/-animated-transformation/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.transform.AnimatedTransformation.equals"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.transform.AnimatedTransformation.hashCode","location":"sketch-animated-core/com.github.panpf.sketch.transform/-animated-transformation/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.transform.AnimatedTransformation.hashCode"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.transform.AnimatedTransformation.toString","location":"sketch-animated-core/com.github.panpf.sketch.transform/-animated-transformation/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.transform.AnimatedTransformation.toString"]},{"name":"class ScaledAnimatableDrawable constructor(val drawable: Drawable, val fitScale: Boolean = true) : Drawable, Animatable2Compat, Drawable.Callback, SketchDrawable","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/index.html","searchKeys":["ScaledAnimatableDrawable","class ScaledAnimatableDrawable constructor(val drawable: Drawable, val fitScale: Boolean = true) : Drawable, Animatable2Compat, Drawable.Callback, SketchDrawable","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable"]},{"name":"const val ANIMATED_CACHE_DECODE_TIMEOUT_FRAME_KEY: String","description":"com.github.panpf.sketch.request.ANIMATED_CACHE_DECODE_TIMEOUT_FRAME_KEY","location":"sketch-animated-core/com.github.panpf.sketch.request/-a-n-i-m-a-t-e-d_-c-a-c-h-e_-d-e-c-o-d-e_-t-i-m-e-o-u-t_-f-r-a-m-e_-k-e-y.html","searchKeys":["ANIMATED_CACHE_DECODE_TIMEOUT_FRAME_KEY","const val ANIMATED_CACHE_DECODE_TIMEOUT_FRAME_KEY: String","com.github.panpf.sketch.request.ANIMATED_CACHE_DECODE_TIMEOUT_FRAME_KEY"]},{"name":"const val ANIMATED_TRANSFORMATION_KEY: String","description":"com.github.panpf.sketch.request.ANIMATED_TRANSFORMATION_KEY","location":"sketch-animated-core/com.github.panpf.sketch.request/-a-n-i-m-a-t-e-d_-t-r-a-n-s-f-o-r-m-a-t-i-o-n_-k-e-y.html","searchKeys":["ANIMATED_TRANSFORMATION_KEY","const val ANIMATED_TRANSFORMATION_KEY: String","com.github.panpf.sketch.request.ANIMATED_TRANSFORMATION_KEY"]},{"name":"const val ANIMATION_END_CALLBACK_KEY: String","description":"com.github.panpf.sketch.request.ANIMATION_END_CALLBACK_KEY","location":"sketch-animated-core/com.github.panpf.sketch.request/-a-n-i-m-a-t-i-o-n_-e-n-d_-c-a-l-l-b-a-c-k_-k-e-y.html","searchKeys":["ANIMATION_END_CALLBACK_KEY","const val ANIMATION_END_CALLBACK_KEY: String","com.github.panpf.sketch.request.ANIMATION_END_CALLBACK_KEY"]},{"name":"const val ANIMATION_REPEAT_COUNT_KEY: String","description":"com.github.panpf.sketch.request.ANIMATION_REPEAT_COUNT_KEY","location":"sketch-animated-core/com.github.panpf.sketch.request/-a-n-i-m-a-t-i-o-n_-r-e-p-e-a-t_-c-o-u-n-t_-k-e-y.html","searchKeys":["ANIMATION_REPEAT_COUNT_KEY","const val ANIMATION_REPEAT_COUNT_KEY: String","com.github.panpf.sketch.request.ANIMATION_REPEAT_COUNT_KEY"]},{"name":"const val ANIMATION_REPEAT_INFINITE: Int","description":"com.github.panpf.sketch.request.ANIMATION_REPEAT_INFINITE","location":"sketch-animated-core/com.github.panpf.sketch.request/-a-n-i-m-a-t-i-o-n_-r-e-p-e-a-t_-i-n-f-i-n-i-t-e.html","searchKeys":["ANIMATION_REPEAT_INFINITE","const val ANIMATION_REPEAT_INFINITE: Int","com.github.panpf.sketch.request.ANIMATION_REPEAT_INFINITE"]},{"name":"const val ANIMATION_START_CALLBACK_KEY: String","description":"com.github.panpf.sketch.request.ANIMATION_START_CALLBACK_KEY","location":"sketch-animated-core/com.github.panpf.sketch.request/-a-n-i-m-a-t-i-o-n_-s-t-a-r-t_-c-a-l-l-b-a-c-k_-k-e-y.html","searchKeys":["ANIMATION_START_CALLBACK_KEY","const val ANIMATION_START_CALLBACK_KEY: String","com.github.panpf.sketch.request.ANIMATION_START_CALLBACK_KEY"]},{"name":"const val DISALLOW_ANIMATED_IMAGE_KEY: String","description":"com.github.panpf.sketch.request.DISALLOW_ANIMATED_IMAGE_KEY","location":"sketch-animated-core/com.github.panpf.sketch.request/-d-i-s-a-l-l-o-w_-a-n-i-m-a-t-e-d_-i-m-a-g-e_-k-e-y.html","searchKeys":["DISALLOW_ANIMATED_IMAGE_KEY","const val DISALLOW_ANIMATED_IMAGE_KEY: String","com.github.panpf.sketch.request.DISALLOW_ANIMATED_IMAGE_KEY"]},{"name":"constructor(codec: Codec, colorInfo: ColorInfo = codec.colorInfo, repeatCount: Int = codec.repetitionCount, cacheDecodeTimeoutFrame: Boolean = false)","description":"com.github.panpf.sketch.SkiaAnimatedImage.SkiaAnimatedImage","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/-skia-animated-image.html","searchKeys":["SkiaAnimatedImage","constructor(codec: Codec, colorInfo: ColorInfo = codec.colorInfo, repeatCount: Int = codec.repetitionCount, cacheDecodeTimeoutFrame: Boolean = false)","com.github.panpf.sketch.SkiaAnimatedImage.SkiaAnimatedImage"]},{"name":"constructor(drawable: Drawable, fitScale: Boolean = true)","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.ScaledAnimatableDrawable","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/-scaled-animatable-drawable.html","searchKeys":["ScaledAnimatableDrawable","constructor(drawable: Drawable, fitScale: Boolean = true)","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.ScaledAnimatableDrawable"]},{"name":"constructor(requestContext: RequestContext, dataSource: DataSource)","description":"com.github.panpf.sketch.decode.internal.ImageDecoderAnimatedDecoder.ImageDecoderAnimatedDecoder","location":"sketch-animated-core/com.github.panpf.sketch.decode.internal/-image-decoder-animated-decoder/-image-decoder-animated-decoder.html","searchKeys":["ImageDecoderAnimatedDecoder","constructor(requestContext: RequestContext, dataSource: DataSource)","com.github.panpf.sketch.decode.internal.ImageDecoderAnimatedDecoder.ImageDecoderAnimatedDecoder"]},{"name":"constructor(requestContext: RequestContext, dataSource: DataSource)","description":"com.github.panpf.sketch.decode.internal.SkiaAnimatedDecoder.SkiaAnimatedDecoder","location":"sketch-animated-core/com.github.panpf.sketch.decode.internal/-skia-animated-decoder/-skia-animated-decoder.html","searchKeys":["SkiaAnimatedDecoder","constructor(requestContext: RequestContext, dataSource: DataSource)","com.github.panpf.sketch.decode.internal.SkiaAnimatedDecoder.SkiaAnimatedDecoder"]},{"name":"data class SkiaAnimatedImage(val codec: Codec, val colorInfo: ColorInfo = codec.colorInfo, val repeatCount: Int = codec.repetitionCount, val cacheDecodeTimeoutFrame: Boolean = false) : AnimatedImage","description":"com.github.panpf.sketch.SkiaAnimatedImage","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/index.html","searchKeys":["SkiaAnimatedImage","data class SkiaAnimatedImage(val codec: Codec, val colorInfo: ColorInfo = codec.colorInfo, val repeatCount: Int = codec.repetitionCount, val cacheDecodeTimeoutFrame: Boolean = false) : AnimatedImage","com.github.panpf.sketch.SkiaAnimatedImage"]},{"name":"enum PixelOpacity : Enum<PixelOpacity> ","description":"com.github.panpf.sketch.transform.PixelOpacity","location":"sketch-animated-core/com.github.panpf.sketch.transform/-pixel-opacity/index.html","searchKeys":["PixelOpacity","enum PixelOpacity : Enum<PixelOpacity> ","com.github.panpf.sketch.transform.PixelOpacity"]},{"name":"fun ByteArray.isAnimatedHeif(): Boolean","description":"com.github.panpf.sketch.decode.internal.isAnimatedHeif","location":"sketch-animated-core/com.github.panpf.sketch.decode.internal/is-animated-heif.html","searchKeys":["isAnimatedHeif","fun ByteArray.isAnimatedHeif(): Boolean","com.github.panpf.sketch.decode.internal.isAnimatedHeif"]},{"name":"fun ByteArray.isAnimatedWebP(): Boolean","description":"com.github.panpf.sketch.decode.internal.isAnimatedWebP","location":"sketch-animated-core/com.github.panpf.sketch.decode.internal/is-animated-web-p.html","searchKeys":["isAnimatedWebP","fun ByteArray.isAnimatedWebP(): Boolean","com.github.panpf.sketch.decode.internal.isAnimatedWebP"]},{"name":"fun ByteArray.isGif(): Boolean","description":"com.github.panpf.sketch.decode.internal.isGif","location":"sketch-animated-core/com.github.panpf.sketch.decode.internal/is-gif.html","searchKeys":["isGif","fun ByteArray.isGif(): Boolean","com.github.panpf.sketch.decode.internal.isGif"]},{"name":"fun ByteArray.isHeif(): Boolean","description":"com.github.panpf.sketch.decode.internal.isHeif","location":"sketch-animated-core/com.github.panpf.sketch.decode.internal/is-heif.html","searchKeys":["isHeif","fun ByteArray.isHeif(): Boolean","com.github.panpf.sketch.decode.internal.isHeif"]},{"name":"fun ByteArray.isWebP(): Boolean","description":"com.github.panpf.sketch.decode.internal.isWebP","location":"sketch-animated-core/com.github.panpf.sketch.decode.internal/is-web-p.html","searchKeys":["isWebP","fun ByteArray.isWebP(): Boolean","com.github.panpf.sketch.decode.internal.isWebP"]},{"name":"fun Codec.toLogString(): String","description":"com.github.panpf.sketch.util.toLogString","location":"sketch-animated-core/com.github.panpf.sketch.util/to-log-string.html","searchKeys":["toLogString","fun Codec.toLogString(): String","com.github.panpf.sketch.util.toLogString"]},{"name":"fun ImageOptions.Builder.animatedTransformation(animatedTransformation: AnimatedTransformation?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.animatedTransformation","location":"sketch-animated-core/com.github.panpf.sketch.request/animated-transformation.html","searchKeys":["animatedTransformation","fun ImageOptions.Builder.animatedTransformation(animatedTransformation: AnimatedTransformation?): ImageOptions.Builder","com.github.panpf.sketch.request.animatedTransformation"]},{"name":"fun ImageOptions.Builder.cacheDecodeTimeoutFrame(cache: Boolean? = true): ImageOptions.Builder","description":"com.github.panpf.sketch.request.cacheDecodeTimeoutFrame","location":"sketch-animated-core/com.github.panpf.sketch.request/cache-decode-timeout-frame.html","searchKeys":["cacheDecodeTimeoutFrame","fun ImageOptions.Builder.cacheDecodeTimeoutFrame(cache: Boolean? = true): ImageOptions.Builder","com.github.panpf.sketch.request.cacheDecodeTimeoutFrame"]},{"name":"fun ImageOptions.Builder.disallowAnimatedImage(disabled: Boolean? = true): ImageOptions.Builder","description":"com.github.panpf.sketch.request.disallowAnimatedImage","location":"sketch-animated-core/com.github.panpf.sketch.request/disallow-animated-image.html","searchKeys":["disallowAnimatedImage","fun ImageOptions.Builder.disallowAnimatedImage(disabled: Boolean? = true): ImageOptions.Builder","com.github.panpf.sketch.request.disallowAnimatedImage"]},{"name":"fun ImageOptions.Builder.onAnimationEnd(callback: () -> Unit?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.onAnimationEnd","location":"sketch-animated-core/com.github.panpf.sketch.request/on-animation-end.html","searchKeys":["onAnimationEnd","fun ImageOptions.Builder.onAnimationEnd(callback: () -> Unit?): ImageOptions.Builder","com.github.panpf.sketch.request.onAnimationEnd"]},{"name":"fun ImageOptions.Builder.onAnimationStart(callback: () -> Unit?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.onAnimationStart","location":"sketch-animated-core/com.github.panpf.sketch.request/on-animation-start.html","searchKeys":["onAnimationStart","fun ImageOptions.Builder.onAnimationStart(callback: () -> Unit?): ImageOptions.Builder","com.github.panpf.sketch.request.onAnimationStart"]},{"name":"fun ImageOptions.Builder.repeatCount(repeatCount: Int?): ImageOptions.Builder","description":"com.github.panpf.sketch.request.repeatCount","location":"sketch-animated-core/com.github.panpf.sketch.request/repeat-count.html","searchKeys":["repeatCount","fun ImageOptions.Builder.repeatCount(repeatCount: Int?): ImageOptions.Builder","com.github.panpf.sketch.request.repeatCount"]},{"name":"fun ImageRequest.Builder.animatedTransformation(animatedTransformation: AnimatedTransformation?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.animatedTransformation","location":"sketch-animated-core/com.github.panpf.sketch.request/animated-transformation.html","searchKeys":["animatedTransformation","fun ImageRequest.Builder.animatedTransformation(animatedTransformation: AnimatedTransformation?): ImageRequest.Builder","com.github.panpf.sketch.request.animatedTransformation"]},{"name":"fun ImageRequest.Builder.cacheDecodeTimeoutFrame(cache: Boolean? = true): ImageRequest.Builder","description":"com.github.panpf.sketch.request.cacheDecodeTimeoutFrame","location":"sketch-animated-core/com.github.panpf.sketch.request/cache-decode-timeout-frame.html","searchKeys":["cacheDecodeTimeoutFrame","fun ImageRequest.Builder.cacheDecodeTimeoutFrame(cache: Boolean? = true): ImageRequest.Builder","com.github.panpf.sketch.request.cacheDecodeTimeoutFrame"]},{"name":"fun ImageRequest.Builder.disallowAnimatedImage(disabled: Boolean? = true): ImageRequest.Builder","description":"com.github.panpf.sketch.request.disallowAnimatedImage","location":"sketch-animated-core/com.github.panpf.sketch.request/disallow-animated-image.html","searchKeys":["disallowAnimatedImage","fun ImageRequest.Builder.disallowAnimatedImage(disabled: Boolean? = true): ImageRequest.Builder","com.github.panpf.sketch.request.disallowAnimatedImage"]},{"name":"fun ImageRequest.Builder.onAnimationEnd(callback: () -> Unit?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.onAnimationEnd","location":"sketch-animated-core/com.github.panpf.sketch.request/on-animation-end.html","searchKeys":["onAnimationEnd","fun ImageRequest.Builder.onAnimationEnd(callback: () -> Unit?): ImageRequest.Builder","com.github.panpf.sketch.request.onAnimationEnd"]},{"name":"fun ImageRequest.Builder.onAnimationStart(callback: () -> Unit?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.onAnimationStart","location":"sketch-animated-core/com.github.panpf.sketch.request/on-animation-start.html","searchKeys":["onAnimationStart","fun ImageRequest.Builder.onAnimationStart(callback: () -> Unit?): ImageRequest.Builder","com.github.panpf.sketch.request.onAnimationStart"]},{"name":"fun ImageRequest.Builder.repeatCount(repeatCount: Int?): ImageRequest.Builder","description":"com.github.panpf.sketch.request.repeatCount","location":"sketch-animated-core/com.github.panpf.sketch.request/repeat-count.html","searchKeys":["repeatCount","fun ImageRequest.Builder.repeatCount(repeatCount: Int?): ImageRequest.Builder","com.github.panpf.sketch.request.repeatCount"]},{"name":"fun animatable2CompatCallbackOf(onStart: () -> Unit?, onEnd: () -> Unit?): Animatable2Compat.AnimationCallback","description":"com.github.panpf.sketch.util.animatable2CompatCallbackOf","location":"sketch-animated-core/com.github.panpf.sketch.util/animatable2-compat-callback-of.html","searchKeys":["animatable2CompatCallbackOf","fun animatable2CompatCallbackOf(onStart: () -> Unit?, onEnd: () -> Unit?): Animatable2Compat.AnimationCallback","com.github.panpf.sketch.util.animatable2CompatCallbackOf"]},{"name":"fun valueOf(value: String): PixelOpacity","description":"com.github.panpf.sketch.transform.PixelOpacity.valueOf","location":"sketch-animated-core/com.github.panpf.sketch.transform/-pixel-opacity/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PixelOpacity","com.github.panpf.sketch.transform.PixelOpacity.valueOf"]},{"name":"fun values(): Array<PixelOpacity>","description":"com.github.panpf.sketch.transform.PixelOpacity.values","location":"sketch-animated-core/com.github.panpf.sketch.transform/-pixel-opacity/values.html","searchKeys":["values","fun values(): Array<PixelOpacity>","com.github.panpf.sketch.transform.PixelOpacity.values"]},{"name":"interface AnimatedTransformation : Key","description":"com.github.panpf.sketch.transform.AnimatedTransformation","location":"sketch-animated-core/com.github.panpf.sketch.transform/-animated-transformation/index.html","searchKeys":["AnimatedTransformation","interface AnimatedTransformation : Key","com.github.panpf.sketch.transform.AnimatedTransformation"]},{"name":"open class ImageDecoderAnimatedDecoder(requestContext: RequestContext, dataSource: DataSource) : Decoder","description":"com.github.panpf.sketch.decode.internal.ImageDecoderAnimatedDecoder","location":"sketch-animated-core/com.github.panpf.sketch.decode.internal/-image-decoder-animated-decoder/index.html","searchKeys":["ImageDecoderAnimatedDecoder","open class ImageDecoderAnimatedDecoder(requestContext: RequestContext, dataSource: DataSource) : Decoder","com.github.panpf.sketch.decode.internal.ImageDecoderAnimatedDecoder"]},{"name":"open class SkiaAnimatedDecoder(requestContext: RequestContext, dataSource: DataSource) : Decoder","description":"com.github.panpf.sketch.decode.internal.SkiaAnimatedDecoder","location":"sketch-animated-core/com.github.panpf.sketch.decode.internal/-skia-animated-decoder/index.html","searchKeys":["SkiaAnimatedDecoder","open class SkiaAnimatedDecoder(requestContext: RequestContext, dataSource: DataSource) : Decoder","com.github.panpf.sketch.decode.internal.SkiaAnimatedDecoder"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.equals","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.equals"]},{"name":"open override fun checkValid(): Boolean","description":"com.github.panpf.sketch.SkiaAnimatedImage.checkValid","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/check-valid.html","searchKeys":["checkValid","open override fun checkValid(): Boolean","com.github.panpf.sketch.SkiaAnimatedImage.checkValid"]},{"name":"open override fun clearAnimationCallbacks()","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.clearAnimationCallbacks","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/clear-animation-callbacks.html","searchKeys":["clearAnimationCallbacks","open override fun clearAnimationCallbacks()","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.clearAnimationCallbacks"]},{"name":"open override fun createFrameBitmap(width: Int, height: Int): Bitmap","description":"com.github.panpf.sketch.SkiaAnimatedImage.createFrameBitmap","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/create-frame-bitmap.html","searchKeys":["createFrameBitmap","open override fun createFrameBitmap(width: Int, height: Int): Bitmap","com.github.panpf.sketch.SkiaAnimatedImage.createFrameBitmap"]},{"name":"open override fun decode(): DecodeResult","description":"com.github.panpf.sketch.decode.internal.ImageDecoderAnimatedDecoder.decode","location":"sketch-animated-core/com.github.panpf.sketch.decode.internal/-image-decoder-animated-decoder/decode.html","searchKeys":["decode","open override fun decode(): DecodeResult","com.github.panpf.sketch.decode.internal.ImageDecoderAnimatedDecoder.decode"]},{"name":"open override fun decode(): DecodeResult","description":"com.github.panpf.sketch.decode.internal.SkiaAnimatedDecoder.decode","location":"sketch-animated-core/com.github.panpf.sketch.decode.internal/-skia-animated-decoder/decode.html","searchKeys":["decode","open override fun decode(): DecodeResult","com.github.panpf.sketch.decode.internal.SkiaAnimatedDecoder.decode"]},{"name":"open override fun draw(canvas: Canvas)","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.draw","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/draw.html","searchKeys":["draw","open override fun draw(canvas: Canvas)","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.draw"]},{"name":"open override fun getAlpha(): Int","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.getAlpha","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/get-alpha.html","searchKeys":["getAlpha","open override fun getAlpha(): Int","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.getAlpha"]},{"name":"open override fun getColorFilter(): ColorFilter?","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.getColorFilter","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/get-color-filter.html","searchKeys":["getColorFilter","open override fun getColorFilter(): ColorFilter?","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.getColorFilter"]},{"name":"open override fun getIntrinsicHeight(): Int","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.getIntrinsicHeight","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/get-intrinsic-height.html","searchKeys":["getIntrinsicHeight","open override fun getIntrinsicHeight(): Int","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.getIntrinsicHeight"]},{"name":"open override fun getIntrinsicWidth(): Int","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.getIntrinsicWidth","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/get-intrinsic-width.html","searchKeys":["getIntrinsicWidth","open override fun getIntrinsicWidth(): Int","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.getIntrinsicWidth"]},{"name":"open override fun getOpacity(): Int","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.getOpacity","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/get-opacity.html","searchKeys":["getOpacity","open override fun getOpacity(): Int","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.getOpacity"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.hashCode","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.hashCode"]},{"name":"open override fun invalidateDrawable(who: Drawable)","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.invalidateDrawable","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/invalidate-drawable.html","searchKeys":["invalidateDrawable","open override fun invalidateDrawable(who: Drawable)","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.invalidateDrawable"]},{"name":"open override fun isRunning(): Boolean","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.isRunning","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.isRunning"]},{"name":"open override fun mutate(): ScaledAnimatableDrawable","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.mutate","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/mutate.html","searchKeys":["mutate","open override fun mutate(): ScaledAnimatableDrawable","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.mutate"]},{"name":"open override fun readFrame(bitmap: Bitmap, frameIndex: Int)","description":"com.github.panpf.sketch.SkiaAnimatedImage.readFrame","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/read-frame.html","searchKeys":["readFrame","open override fun readFrame(bitmap: Bitmap, frameIndex: Int)","com.github.panpf.sketch.SkiaAnimatedImage.readFrame"]},{"name":"open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.registerAnimationCallback","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/register-animation-callback.html","searchKeys":["registerAnimationCallback","open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.registerAnimationCallback"]},{"name":"open override fun scheduleDrawable(who: Drawable, what: Runnable, when: Long)","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.scheduleDrawable","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/schedule-drawable.html","searchKeys":["scheduleDrawable","open override fun scheduleDrawable(who: Drawable, what: Runnable, when: Long)","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.scheduleDrawable"]},{"name":"open override fun setAlpha(alpha: Int)","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.setAlpha","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/set-alpha.html","searchKeys":["setAlpha","open override fun setAlpha(alpha: Int)","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.setAlpha"]},{"name":"open override fun setColorFilter(colorFilter: ColorFilter?)","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.setColorFilter","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/set-color-filter.html","searchKeys":["setColorFilter","open override fun setColorFilter(colorFilter: ColorFilter?)","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.setColorFilter"]},{"name":"open override fun setTint(tintColor: Int)","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.setTint","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/set-tint.html","searchKeys":["setTint","open override fun setTint(tintColor: Int)","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.setTint"]},{"name":"open override fun setTintBlendMode(blendMode: BlendMode?)","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.setTintBlendMode","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/set-tint-blend-mode.html","searchKeys":["setTintBlendMode","open override fun setTintBlendMode(blendMode: BlendMode?)","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.setTintBlendMode"]},{"name":"open override fun setTintList(tint: ColorStateList?)","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.setTintList","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/set-tint-list.html","searchKeys":["setTintList","open override fun setTintList(tint: ColorStateList?)","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.setTintList"]},{"name":"open override fun setTintMode(tintMode: PorterDuff.Mode?)","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.setTintMode","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/set-tint-mode.html","searchKeys":["setTintMode","open override fun setTintMode(tintMode: PorterDuff.Mode?)","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.setTintMode"]},{"name":"open override fun start()","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.start","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/start.html","searchKeys":["start","open override fun start()","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.start"]},{"name":"open override fun stop()","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.stop","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/stop.html","searchKeys":["stop","open override fun stop()","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.stop"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.SkiaAnimatedImage.toString","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.SkiaAnimatedImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.toString","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.toString"]},{"name":"open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.unregisterAnimationCallback","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/unregister-animation-callback.html","searchKeys":["unregisterAnimationCallback","open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.unregisterAnimationCallback"]},{"name":"open override fun unscheduleDrawable(who: Drawable, what: Runnable)","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.unscheduleDrawable","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/unschedule-drawable.html","searchKeys":["unscheduleDrawable","open override fun unscheduleDrawable(who: Drawable, what: Runnable)","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.unscheduleDrawable"]},{"name":"open override val byteCount: Long","description":"com.github.panpf.sketch.SkiaAnimatedImage.byteCount","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/byte-count.html","searchKeys":["byteCount","open override val byteCount: Long","com.github.panpf.sketch.SkiaAnimatedImage.byteCount"]},{"name":"open override val cacheDecodeTimeoutFrame: Boolean = false","description":"com.github.panpf.sketch.SkiaAnimatedImage.cacheDecodeTimeoutFrame","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/cache-decode-timeout-frame.html","searchKeys":["cacheDecodeTimeoutFrame","open override val cacheDecodeTimeoutFrame: Boolean = false","com.github.panpf.sketch.SkiaAnimatedImage.cacheDecodeTimeoutFrame"]},{"name":"open override val frameCount: Int","description":"com.github.panpf.sketch.SkiaAnimatedImage.frameCount","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/frame-count.html","searchKeys":["frameCount","open override val frameCount: Int","com.github.panpf.sketch.SkiaAnimatedImage.frameCount"]},{"name":"open override val frameDurations: Array<Int>","description":"com.github.panpf.sketch.SkiaAnimatedImage.frameDurations","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/frame-durations.html","searchKeys":["frameDurations","open override val frameDurations: Array<Int>","com.github.panpf.sketch.SkiaAnimatedImage.frameDurations"]},{"name":"open override val height: Int","description":"com.github.panpf.sketch.SkiaAnimatedImage.height","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/height.html","searchKeys":["height","open override val height: Int","com.github.panpf.sketch.SkiaAnimatedImage.height"]},{"name":"open override val imageInfo: ImageInfo","description":"com.github.panpf.sketch.decode.internal.ImageDecoderAnimatedDecoder.imageInfo","location":"sketch-animated-core/com.github.panpf.sketch.decode.internal/-image-decoder-animated-decoder/image-info.html","searchKeys":["imageInfo","open override val imageInfo: ImageInfo","com.github.panpf.sketch.decode.internal.ImageDecoderAnimatedDecoder.imageInfo"]},{"name":"open override val imageInfo: ImageInfo","description":"com.github.panpf.sketch.decode.internal.SkiaAnimatedDecoder.imageInfo","location":"sketch-animated-core/com.github.panpf.sketch.decode.internal/-skia-animated-decoder/image-info.html","searchKeys":["imageInfo","open override val imageInfo: ImageInfo","com.github.panpf.sketch.decode.internal.SkiaAnimatedDecoder.imageInfo"]},{"name":"open override val repeatCount: Int","description":"com.github.panpf.sketch.SkiaAnimatedImage.repeatCount","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/repeat-count.html","searchKeys":["repeatCount","open override val repeatCount: Int","com.github.panpf.sketch.SkiaAnimatedImage.repeatCount"]},{"name":"open override val shareable: Boolean = false","description":"com.github.panpf.sketch.SkiaAnimatedImage.shareable","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/shareable.html","searchKeys":["shareable","open override val shareable: Boolean = false","com.github.panpf.sketch.SkiaAnimatedImage.shareable"]},{"name":"open override val width: Int","description":"com.github.panpf.sketch.SkiaAnimatedImage.width","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/width.html","searchKeys":["width","open override val width: Int","com.github.panpf.sketch.SkiaAnimatedImage.width"]},{"name":"open override var animatedTransformation: (Any, Rect) -> Unit?","description":"com.github.panpf.sketch.SkiaAnimatedImage.animatedTransformation","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/animated-transformation.html","searchKeys":["animatedTransformation","open override var animatedTransformation: (Any, Rect) -> Unit?","com.github.panpf.sketch.SkiaAnimatedImage.animatedTransformation"]},{"name":"open override var animationEndCallback: () -> Unit?","description":"com.github.panpf.sketch.SkiaAnimatedImage.animationEndCallback","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/animation-end-callback.html","searchKeys":["animationEndCallback","open override var animationEndCallback: () -> Unit?","com.github.panpf.sketch.SkiaAnimatedImage.animationEndCallback"]},{"name":"open override var animationStartCallback: () -> Unit?","description":"com.github.panpf.sketch.SkiaAnimatedImage.animationStartCallback","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/animation-start-callback.html","searchKeys":["animationStartCallback","open override var animationStartCallback: () -> Unit?","com.github.panpf.sketch.SkiaAnimatedImage.animationStartCallback"]},{"name":"val ImageOptions.animatedTransformation: AnimatedTransformation?","description":"com.github.panpf.sketch.request.animatedTransformation","location":"sketch-animated-core/com.github.panpf.sketch.request/animated-transformation.html","searchKeys":["animatedTransformation","val ImageOptions.animatedTransformation: AnimatedTransformation?","com.github.panpf.sketch.request.animatedTransformation"]},{"name":"val ImageOptions.animationEndCallback: () -> Unit?","description":"com.github.panpf.sketch.request.animationEndCallback","location":"sketch-animated-core/com.github.panpf.sketch.request/animation-end-callback.html","searchKeys":["animationEndCallback","val ImageOptions.animationEndCallback: () -> Unit?","com.github.panpf.sketch.request.animationEndCallback"]},{"name":"val ImageOptions.animationStartCallback: () -> Unit?","description":"com.github.panpf.sketch.request.animationStartCallback","location":"sketch-animated-core/com.github.panpf.sketch.request/animation-start-callback.html","searchKeys":["animationStartCallback","val ImageOptions.animationStartCallback: () -> Unit?","com.github.panpf.sketch.request.animationStartCallback"]},{"name":"val ImageOptions.cacheDecodeTimeoutFrame: Boolean?","description":"com.github.panpf.sketch.request.cacheDecodeTimeoutFrame","location":"sketch-animated-core/com.github.panpf.sketch.request/cache-decode-timeout-frame.html","searchKeys":["cacheDecodeTimeoutFrame","val ImageOptions.cacheDecodeTimeoutFrame: Boolean?","com.github.panpf.sketch.request.cacheDecodeTimeoutFrame"]},{"name":"val ImageOptions.disallowAnimatedImage: Boolean?","description":"com.github.panpf.sketch.request.disallowAnimatedImage","location":"sketch-animated-core/com.github.panpf.sketch.request/disallow-animated-image.html","searchKeys":["disallowAnimatedImage","val ImageOptions.disallowAnimatedImage: Boolean?","com.github.panpf.sketch.request.disallowAnimatedImage"]},{"name":"val ImageOptions.repeatCount: Int?","description":"com.github.panpf.sketch.request.repeatCount","location":"sketch-animated-core/com.github.panpf.sketch.request/repeat-count.html","searchKeys":["repeatCount","val ImageOptions.repeatCount: Int?","com.github.panpf.sketch.request.repeatCount"]},{"name":"val ImageRequest.animatedTransformation: AnimatedTransformation?","description":"com.github.panpf.sketch.request.animatedTransformation","location":"sketch-animated-core/com.github.panpf.sketch.request/animated-transformation.html","searchKeys":["animatedTransformation","val ImageRequest.animatedTransformation: AnimatedTransformation?","com.github.panpf.sketch.request.animatedTransformation"]},{"name":"val ImageRequest.animationEndCallback: () -> Unit?","description":"com.github.panpf.sketch.request.animationEndCallback","location":"sketch-animated-core/com.github.panpf.sketch.request/animation-end-callback.html","searchKeys":["animationEndCallback","val ImageRequest.animationEndCallback: () -> Unit?","com.github.panpf.sketch.request.animationEndCallback"]},{"name":"val ImageRequest.animationStartCallback: () -> Unit?","description":"com.github.panpf.sketch.request.animationStartCallback","location":"sketch-animated-core/com.github.panpf.sketch.request/animation-start-callback.html","searchKeys":["animationStartCallback","val ImageRequest.animationStartCallback: () -> Unit?","com.github.panpf.sketch.request.animationStartCallback"]},{"name":"val ImageRequest.cacheDecodeTimeoutFrame: Boolean?","description":"com.github.panpf.sketch.request.cacheDecodeTimeoutFrame","location":"sketch-animated-core/com.github.panpf.sketch.request/cache-decode-timeout-frame.html","searchKeys":["cacheDecodeTimeoutFrame","val ImageRequest.cacheDecodeTimeoutFrame: Boolean?","com.github.panpf.sketch.request.cacheDecodeTimeoutFrame"]},{"name":"val ImageRequest.disallowAnimatedImage: Boolean?","description":"com.github.panpf.sketch.request.disallowAnimatedImage","location":"sketch-animated-core/com.github.panpf.sketch.request/disallow-animated-image.html","searchKeys":["disallowAnimatedImage","val ImageRequest.disallowAnimatedImage: Boolean?","com.github.panpf.sketch.request.disallowAnimatedImage"]},{"name":"val ImageRequest.repeatCount: Int?","description":"com.github.panpf.sketch.request.repeatCount","location":"sketch-animated-core/com.github.panpf.sketch.request/repeat-count.html","searchKeys":["repeatCount","val ImageRequest.repeatCount: Int?","com.github.panpf.sketch.request.repeatCount"]},{"name":"val codec: Codec","description":"com.github.panpf.sketch.SkiaAnimatedImage.codec","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/codec.html","searchKeys":["codec","val codec: Codec","com.github.panpf.sketch.SkiaAnimatedImage.codec"]},{"name":"val colorInfo: ColorInfo","description":"com.github.panpf.sketch.SkiaAnimatedImage.colorInfo","location":"sketch-animated-core/com.github.panpf.sketch/-skia-animated-image/color-info.html","searchKeys":["colorInfo","val colorInfo: ColorInfo","com.github.panpf.sketch.SkiaAnimatedImage.colorInfo"]},{"name":"val drawable: Drawable","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.drawable","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/drawable.html","searchKeys":["drawable","val drawable: Drawable","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.drawable"]},{"name":"val entries: EnumEntries<PixelOpacity>","description":"com.github.panpf.sketch.transform.PixelOpacity.entries","location":"sketch-animated-core/com.github.panpf.sketch.transform/-pixel-opacity/entries.html","searchKeys":["entries","val entries: EnumEntries<PixelOpacity>","com.github.panpf.sketch.transform.PixelOpacity.entries"]},{"name":"val fitScale: Boolean = true","description":"com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.fitScale","location":"sketch-animated-core/com.github.panpf.sketch.drawable/-scaled-animatable-drawable/fit-scale.html","searchKeys":["fitScale","val fitScale: Boolean = true","com.github.panpf.sketch.drawable.ScaledAnimatableDrawable.fitScale"]},{"name":"abstract class GenericComposeTarget : ComposeTarget, TransitionComposeTarget, LifecycleEventObserver, AttachObserver","description":"com.github.panpf.sketch.target.GenericComposeTarget","location":"sketch-compose-core/com.github.panpf.sketch.target/-generic-compose-target/index.html","searchKeys":["GenericComposeTarget","abstract class GenericComposeTarget : ComposeTarget, TransitionComposeTarget, LifecycleEventObserver, AttachObserver","com.github.panpf.sketch.target.GenericComposeTarget"]},{"name":"abstract fun isRunning(): Boolean","description":"com.github.panpf.sketch.painter.AnimatablePainter.isRunning","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animatable-painter/is-running.html","searchKeys":["isRunning","abstract fun isRunning(): Boolean","com.github.panpf.sketch.painter.AnimatablePainter.isRunning"]},{"name":"abstract fun start()","description":"com.github.panpf.sketch.painter.AnimatablePainter.start","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animatable-painter/start.html","searchKeys":["start","abstract fun start()","com.github.panpf.sketch.painter.AnimatablePainter.start"]},{"name":"abstract fun stop()","description":"com.github.panpf.sketch.painter.AnimatablePainter.stop","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animatable-painter/stop.html","searchKeys":["stop","abstract fun stop()","com.github.panpf.sketch.painter.AnimatablePainter.stop"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.SketchPainter.equals","location":"sketch-compose-core/com.github.panpf.sketch.painter/-sketch-painter/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.SketchPainter.equals"]},{"name":"abstract override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.SketchPainter.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.painter/-sketch-painter/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","com.github.panpf.sketch.painter.SketchPainter.hashCode"]},{"name":"abstract override fun toString(): String","description":"com.github.panpf.sketch.painter.SketchPainter.toString","location":"sketch-compose-core/com.github.panpf.sketch.painter/-sketch-painter/to-string.html","searchKeys":["toString","abstract override fun toString(): String","com.github.panpf.sketch.painter.SketchPainter.toString"]},{"name":"abstract val alignment: Alignment","description":"com.github.panpf.sketch.SubcomposeAsyncImageScope.alignment","location":"sketch-compose-core/com.github.panpf.sketch/-subcompose-async-image-scope/alignment.html","searchKeys":["alignment","abstract val alignment: Alignment","com.github.panpf.sketch.SubcomposeAsyncImageScope.alignment"]},{"name":"abstract val alignment: Alignment","description":"com.github.panpf.sketch.target.ComposeTarget.alignment","location":"sketch-compose-core/com.github.panpf.sketch.target/-compose-target/alignment.html","searchKeys":["alignment","abstract val alignment: Alignment","com.github.panpf.sketch.target.ComposeTarget.alignment"]},{"name":"abstract val alpha: Float","description":"com.github.panpf.sketch.SubcomposeAsyncImageScope.alpha","location":"sketch-compose-core/com.github.panpf.sketch/-subcompose-async-image-scope/alpha.html","searchKeys":["alpha","abstract val alpha: Float","com.github.panpf.sketch.SubcomposeAsyncImageScope.alpha"]},{"name":"abstract val colorFilter: ColorFilter?","description":"com.github.panpf.sketch.SubcomposeAsyncImageScope.colorFilter","location":"sketch-compose-core/com.github.panpf.sketch/-subcompose-async-image-scope/color-filter.html","searchKeys":["colorFilter","abstract val colorFilter: ColorFilter?","com.github.panpf.sketch.SubcomposeAsyncImageScope.colorFilter"]},{"name":"abstract val contentDescription: String?","description":"com.github.panpf.sketch.SubcomposeAsyncImageScope.contentDescription","location":"sketch-compose-core/com.github.panpf.sketch/-subcompose-async-image-scope/content-description.html","searchKeys":["contentDescription","abstract val contentDescription: String?","com.github.panpf.sketch.SubcomposeAsyncImageScope.contentDescription"]},{"name":"abstract val contentScale: ContentScale","description":"com.github.panpf.sketch.SubcomposeAsyncImageScope.contentScale","location":"sketch-compose-core/com.github.panpf.sketch/-subcompose-async-image-scope/content-scale.html","searchKeys":["contentScale","abstract val contentScale: ContentScale","com.github.panpf.sketch.SubcomposeAsyncImageScope.contentScale"]},{"name":"abstract val contentScale: ContentScale","description":"com.github.panpf.sketch.target.ComposeTarget.contentScale","location":"sketch-compose-core/com.github.panpf.sketch.target/-compose-target/content-scale.html","searchKeys":["contentScale","abstract val contentScale: ContentScale","com.github.panpf.sketch.target.ComposeTarget.contentScale"]},{"name":"abstract val painter: AsyncImagePainter","description":"com.github.panpf.sketch.SubcomposeAsyncImageScope.painter","location":"sketch-compose-core/com.github.panpf.sketch/-subcompose-async-image-scope/painter.html","searchKeys":["painter","abstract val painter: AsyncImagePainter","com.github.panpf.sketch.SubcomposeAsyncImageScope.painter"]},{"name":"abstract val painter: Painter?","description":"com.github.panpf.sketch.PainterState.painter","location":"sketch-compose-core/com.github.panpf.sketch/-painter-state/painter.html","searchKeys":["painter","abstract val painter: Painter?","com.github.panpf.sketch.PainterState.painter"]},{"name":"abstract val painter: Painter?","description":"com.github.panpf.sketch.target.ComposeTarget.painter","location":"sketch-compose-core/com.github.panpf.sketch.target/-compose-target/painter.html","searchKeys":["painter","abstract val painter: Painter?","com.github.panpf.sketch.target.ComposeTarget.painter"]},{"name":"abstract val painter: Painter?","description":"com.github.panpf.sketch.transition.TransitionComposeTarget.painter","location":"sketch-compose-core/com.github.panpf.sketch.transition/-transition-compose-target/painter.html","searchKeys":["painter","abstract val painter: Painter?","com.github.panpf.sketch.transition.TransitionComposeTarget.painter"]},{"name":"abstract val state: AsyncImageState","description":"com.github.panpf.sketch.SubcomposeAsyncImageScope.state","location":"sketch-compose-core/com.github.panpf.sketch/-subcompose-async-image-scope/state.html","searchKeys":["state","abstract val state: AsyncImageState","com.github.panpf.sketch.SubcomposeAsyncImageScope.state"]},{"name":"class AnimatedImagePainter(animatedImage: AnimatedImage, srcOffset: IntOffset = IntOffset.Companion.Zero, srcSize: IntSize = IntSize(animatedImage.width, animatedImage.height), filterQuality: FilterQuality = DrawScope.Companion.DefaultFilterQuality) : Painter, AnimatablePainter, RememberObserver","description":"com.github.panpf.sketch.painter.AnimatedImagePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animated-image-painter/index.html","searchKeys":["AnimatedImagePainter","class AnimatedImagePainter(animatedImage: AnimatedImage, srcOffset: IntOffset = IntOffset.Companion.Zero, srcSize: IntSize = IntSize(animatedImage.width, animatedImage.height), filterQuality: FilterQuality = DrawScope.Companion.DefaultFilterQuality) : Painter, AnimatablePainter, RememberObserver","com.github.panpf.sketch.painter.AnimatedImagePainter"]},{"name":"class AsyncImageListener(val asyncImageTarget: AsyncImageTarget) : Listener, ProgressListener","description":"com.github.panpf.sketch.target.internal.AsyncImageListener","location":"sketch-compose-core/com.github.panpf.sketch.target.internal/-async-image-listener/index.html","searchKeys":["AsyncImageListener","class AsyncImageListener(val asyncImageTarget: AsyncImageTarget) : Listener, ProgressListener","com.github.panpf.sketch.target.internal.AsyncImageListener"]},{"name":"class AsyncImagePainter : Painter, SketchPainter","description":"com.github.panpf.sketch.AsyncImagePainter","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-painter/index.html","searchKeys":["AsyncImagePainter","class AsyncImagePainter : Painter, SketchPainter","com.github.panpf.sketch.AsyncImagePainter"]},{"name":"class AsyncImageSizeResolver : SizeResolver","description":"com.github.panpf.sketch.resize.AsyncImageSizeResolver","location":"sketch-compose-core/com.github.panpf.sketch.resize/-async-image-size-resolver/index.html","searchKeys":["AsyncImageSizeResolver","class AsyncImageSizeResolver : SizeResolver","com.github.panpf.sketch.resize.AsyncImageSizeResolver"]},{"name":"class AsyncImageState : RememberObserver","description":"com.github.panpf.sketch.AsyncImageState","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/index.html","searchKeys":["AsyncImageState","class AsyncImageState : RememberObserver","com.github.panpf.sketch.AsyncImageState"]},{"name":"class AsyncImageTarget(imageState: AsyncImageState) : GenericComposeTarget","description":"com.github.panpf.sketch.target.AsyncImageTarget","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/index.html","searchKeys":["AsyncImageTarget","class AsyncImageTarget(imageState: AsyncImageState) : GenericComposeTarget","com.github.panpf.sketch.target.AsyncImageTarget"]},{"name":"class ComposeCrossfadeTransition(sketch: Sketch, request: ImageRequest, target: ComposeTarget, result: ImageResult, val contentScale: ContentScale = ContentScale.Fit, val alignment: Alignment = Alignment.Center, val durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, val fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, val preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE) : Transition","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/index.html","searchKeys":["ComposeCrossfadeTransition","class ComposeCrossfadeTransition(sketch: Sketch, request: ImageRequest, target: ComposeTarget, result: ImageResult, val contentScale: ContentScale = ContentScale.Fit, val alignment: Alignment = Alignment.Center, val durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, val fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, val preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE) : Transition","com.github.panpf.sketch.transition.ComposeCrossfadeTransition"]},{"name":"class ComposeRequestDelegate(sketch: Sketch, initialRequest: ImageRequest, target: ComposeTarget, job: Job) : BaseRequestDelegate","description":"com.github.panpf.sketch.request.internal.ComposeRequestDelegate","location":"sketch-compose-core/com.github.panpf.sketch.request.internal/-compose-request-delegate/index.html","searchKeys":["ComposeRequestDelegate","class ComposeRequestDelegate(sketch: Sketch, initialRequest: ImageRequest, target: ComposeTarget, job: Job) : BaseRequestDelegate","com.github.panpf.sketch.request.internal.ComposeRequestDelegate"]},{"name":"class ComposeRequestManager : BaseRequestManager","description":"com.github.panpf.sketch.request.internal.ComposeRequestManager","location":"sketch-compose-core/com.github.panpf.sketch.request.internal/-compose-request-manager/index.html","searchKeys":["ComposeRequestManager","class ComposeRequestManager : BaseRequestManager","com.github.panpf.sketch.request.internal.ComposeRequestManager"]},{"name":"class CrossfadePainter(val start: Painter?, val end: Painter?, val contentScale: ContentScale = ContentScale.Fit, val alignment: Alignment = Alignment.Center, val durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, val fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, val preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE) : Painter, RememberObserver, AnimatablePainter, SketchPainter, TransitionPainter","description":"com.github.panpf.sketch.painter.CrossfadePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/index.html","searchKeys":["CrossfadePainter","class CrossfadePainter(val start: Painter?, val end: Painter?, val contentScale: ContentScale = ContentScale.Fit, val alignment: Alignment = Alignment.Center, val durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, val fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, val preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE) : Painter, RememberObserver, AnimatablePainter, SketchPainter, TransitionPainter","com.github.panpf.sketch.painter.CrossfadePainter"]},{"name":"class DrawableAnimatablePainter(val drawable: Drawable) : DrawablePainter","description":"com.github.panpf.sketch.painter.DrawableAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-animatable-painter/index.html","searchKeys":["DrawableAnimatablePainter","class DrawableAnimatablePainter(val drawable: Drawable) : DrawablePainter","com.github.panpf.sketch.painter.DrawableAnimatablePainter"]},{"name":"class EquitableAnimatablePainter(val painter: Painter, val equalityKey: Any) : EquitablePainter, AnimatablePainter, Key","description":"com.github.panpf.sketch.painter.EquitableAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-animatable-painter/index.html","searchKeys":["EquitableAnimatablePainter","class EquitableAnimatablePainter(val painter: Painter, val equalityKey: Any) : EquitablePainter, AnimatablePainter, Key","com.github.panpf.sketch.painter.EquitableAnimatablePainter"]},{"name":"class Factory constructor(val durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, val fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, val preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, val alwaysUse: Boolean = CrossfadeTransition.DEFAULT_ALWAYS_USE) : Transition.Factory","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/-factory/index.html","searchKeys":["Factory","class Factory constructor(val durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, val fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, val preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, val alwaysUse: Boolean = CrossfadeTransition.DEFAULT_ALWAYS_USE) : Transition.Factory","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory"]},{"name":"class IconAnimatablePainter(val icon: EquitablePainter, val background: EquitablePainter? = null, val iconSize: Size? = null, val iconTint: Color? = null) : IconPainter, AnimatablePainter","description":"com.github.panpf.sketch.painter.IconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-animatable-painter/index.html","searchKeys":["IconAnimatablePainter","class IconAnimatablePainter(val icon: EquitablePainter, val background: EquitablePainter? = null, val iconSize: Size? = null, val iconTint: Color? = null) : IconPainter, AnimatablePainter","com.github.panpf.sketch.painter.IconAnimatablePainter"]},{"name":"class ImageBitmapPainter(val bitmap: ImageBitmap, val filterQuality: FilterQuality = DrawScope.DefaultFilterQuality) : Painter, SketchPainter","description":"com.github.panpf.sketch.painter.ImageBitmapPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-image-bitmap-painter/index.html","searchKeys":["ImageBitmapPainter","class ImageBitmapPainter(val bitmap: ImageBitmap, val filterQuality: FilterQuality = DrawScope.DefaultFilterQuality) : Painter, SketchPainter","com.github.panpf.sketch.painter.ImageBitmapPainter"]},{"name":"class RememberedCounter","description":"com.github.panpf.sketch.util.RememberedCounter","location":"sketch-compose-core/com.github.panpf.sketch.util/-remembered-counter/index.html","searchKeys":["RememberedCounter","class RememberedCounter","com.github.panpf.sketch.util.RememberedCounter"]},{"name":"class ResizeAnimatablePainter(val painter: Painter, val size: Size, val contentScale: ContentScale = ContentScale.Crop, val alignment: Alignment = Alignment.Center) : ResizePainter, AnimatablePainter","description":"com.github.panpf.sketch.painter.ResizeAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-animatable-painter/index.html","searchKeys":["ResizeAnimatablePainter","class ResizeAnimatablePainter(val painter: Painter, val size: Size, val contentScale: ContentScale = ContentScale.Crop, val alignment: Alignment = Alignment.Center) : ResizePainter, AnimatablePainter","com.github.panpf.sketch.painter.ResizeAnimatablePainter"]},{"name":"constructor()","description":"com.github.panpf.sketch.request.internal.ComposeRequestManager.ComposeRequestManager","location":"sketch-compose-core/com.github.panpf.sketch.request.internal/-compose-request-manager/-compose-request-manager.html","searchKeys":["ComposeRequestManager","constructor()","com.github.panpf.sketch.request.internal.ComposeRequestManager.ComposeRequestManager"]},{"name":"constructor()","description":"com.github.panpf.sketch.resize.AsyncImageSizeResolver.AsyncImageSizeResolver","location":"sketch-compose-core/com.github.panpf.sketch.resize/-async-image-size-resolver/-async-image-size-resolver.html","searchKeys":["AsyncImageSizeResolver","constructor()","com.github.panpf.sketch.resize.AsyncImageSizeResolver.AsyncImageSizeResolver"]},{"name":"constructor()","description":"com.github.panpf.sketch.target.GenericComposeTarget.GenericComposeTarget","location":"sketch-compose-core/com.github.panpf.sketch.target/-generic-compose-target/-generic-compose-target.html","searchKeys":["GenericComposeTarget","constructor()","com.github.panpf.sketch.target.GenericComposeTarget.GenericComposeTarget"]},{"name":"constructor()","description":"com.github.panpf.sketch.util.RememberedCounter.RememberedCounter","location":"sketch-compose-core/com.github.panpf.sketch.util/-remembered-counter/-remembered-counter.html","searchKeys":["RememberedCounter","constructor()","com.github.panpf.sketch.util.RememberedCounter.RememberedCounter"]},{"name":"constructor(animatedImage: AnimatedImage, srcOffset: IntOffset = IntOffset.Companion.Zero, srcSize: IntSize = IntSize(animatedImage.width, animatedImage.height), filterQuality: FilterQuality = DrawScope.Companion.DefaultFilterQuality)","description":"com.github.panpf.sketch.painter.AnimatedImagePainter.AnimatedImagePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animated-image-painter/-animated-image-painter.html","searchKeys":["AnimatedImagePainter","constructor(animatedImage: AnimatedImage, srcOffset: IntOffset = IntOffset.Companion.Zero, srcSize: IntSize = IntSize(animatedImage.width, animatedImage.height), filterQuality: FilterQuality = DrawScope.Companion.DefaultFilterQuality)","com.github.panpf.sketch.painter.AnimatedImagePainter.AnimatedImagePainter"]},{"name":"constructor(asyncImageTarget: AsyncImageTarget)","description":"com.github.panpf.sketch.target.internal.AsyncImageListener.AsyncImageListener","location":"sketch-compose-core/com.github.panpf.sketch.target.internal/-async-image-listener/-async-image-listener.html","searchKeys":["AsyncImageListener","constructor(asyncImageTarget: AsyncImageTarget)","com.github.panpf.sketch.target.internal.AsyncImageListener.AsyncImageListener"]},{"name":"constructor(bitmap: ImageBitmap, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality)","description":"com.github.panpf.sketch.painter.ImageBitmapPainter.ImageBitmapPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-image-bitmap-painter/-image-bitmap-painter.html","searchKeys":["ImageBitmapPainter","constructor(bitmap: ImageBitmap, filterQuality: FilterQuality = DrawScope.DefaultFilterQuality)","com.github.panpf.sketch.painter.ImageBitmapPainter.ImageBitmapPainter"]},{"name":"constructor(color: Color)","description":"com.github.panpf.sketch.state.ColorPainterStateImage.ColorPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-color-painter-state-image/-color-painter-state-image.html","searchKeys":["ColorPainterStateImage","constructor(color: Color)","com.github.panpf.sketch.state.ColorPainterStateImage.ColorPainterStateImage"]},{"name":"constructor(drawable: Drawable)","description":"com.github.panpf.sketch.painter.DrawableAnimatablePainter.DrawableAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-animatable-painter/-drawable-animatable-painter.html","searchKeys":["DrawableAnimatablePainter","constructor(drawable: Drawable)","com.github.panpf.sketch.painter.DrawableAnimatablePainter.DrawableAnimatablePainter"]},{"name":"constructor(drawable: Drawable)","description":"com.github.panpf.sketch.painter.DrawablePainter.DrawablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-painter/-drawable-painter.html","searchKeys":["DrawablePainter","constructor(drawable: Drawable)","com.github.panpf.sketch.painter.DrawablePainter.DrawablePainter"]},{"name":"constructor(durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, alwaysUse: Boolean = CrossfadeTransition.DEFAULT_ALWAYS_USE)","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.Factory","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/-factory/-factory.html","searchKeys":["Factory","constructor(durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, alwaysUse: Boolean = CrossfadeTransition.DEFAULT_ALWAYS_USE)","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.Factory"]},{"name":"constructor(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null)","description":"com.github.panpf.sketch.painter.IconAnimatablePainter.IconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-animatable-painter/-icon-animatable-painter.html","searchKeys":["IconAnimatablePainter","constructor(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null)","com.github.panpf.sketch.painter.IconAnimatablePainter.IconAnimatablePainter"]},{"name":"constructor(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null)","description":"com.github.panpf.sketch.painter.IconPainter.IconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-painter/-icon-painter.html","searchKeys":["IconPainter","constructor(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null)","com.github.panpf.sketch.painter.IconPainter.IconPainter"]},{"name":"constructor(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null)","description":"com.github.panpf.sketch.state.IconAnimatablePainterStateImage.IconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-animatable-painter-state-image/-icon-animatable-painter-state-image.html","searchKeys":["IconAnimatablePainterStateImage","constructor(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null)","com.github.panpf.sketch.state.IconAnimatablePainterStateImage.IconAnimatablePainterStateImage"]},{"name":"constructor(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null)","description":"com.github.panpf.sketch.state.IconPainterStateImage.IconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-painter-state-image/-icon-painter-state-image.html","searchKeys":["IconPainterStateImage","constructor(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null)","com.github.panpf.sketch.state.IconPainterStateImage.IconPainterStateImage"]},{"name":"constructor(imageState: AsyncImageState)","description":"com.github.panpf.sketch.target.AsyncImageTarget.AsyncImageTarget","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/-async-image-target.html","searchKeys":["AsyncImageTarget","constructor(imageState: AsyncImageState)","com.github.panpf.sketch.target.AsyncImageTarget.AsyncImageTarget"]},{"name":"constructor(painter: EquitablePainter)","description":"com.github.panpf.sketch.state.PainterStateImage.PainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-painter-state-image/-painter-state-image.html","searchKeys":["PainterStateImage","constructor(painter: EquitablePainter)","com.github.panpf.sketch.state.PainterStateImage.PainterStateImage"]},{"name":"constructor(painter: Painter)","description":"com.github.panpf.sketch.painter.PainterWrapper.PainterWrapper","location":"sketch-compose-core/com.github.panpf.sketch.painter/-painter-wrapper/-painter-wrapper.html","searchKeys":["PainterWrapper","constructor(painter: Painter)","com.github.panpf.sketch.painter.PainterWrapper.PainterWrapper"]},{"name":"constructor(painter: Painter, equalityKey: Any)","description":"com.github.panpf.sketch.painter.EquitableAnimatablePainter.EquitableAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-animatable-painter/-equitable-animatable-painter.html","searchKeys":["EquitableAnimatablePainter","constructor(painter: Painter, equalityKey: Any)","com.github.panpf.sketch.painter.EquitableAnimatablePainter.EquitableAnimatablePainter"]},{"name":"constructor(painter: Painter, equalityKey: Any)","description":"com.github.panpf.sketch.painter.EquitablePainter.EquitablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-painter/-equitable-painter.html","searchKeys":["EquitablePainter","constructor(painter: Painter, equalityKey: Any)","com.github.panpf.sketch.painter.EquitablePainter.EquitablePainter"]},{"name":"constructor(painter: Painter, shareable: Boolean = painter !is AnimatablePainter)","description":"com.github.panpf.sketch.PainterImage.PainterImage","location":"sketch-compose-core/com.github.panpf.sketch/-painter-image/-painter-image.html","searchKeys":["PainterImage","constructor(painter: Painter, shareable: Boolean = painter !is AnimatablePainter)","com.github.panpf.sketch.PainterImage.PainterImage"]},{"name":"constructor(painter: Painter, size: Size, contentScale: ContentScale = ContentScale.Crop, alignment: Alignment = Alignment.Center)","description":"com.github.panpf.sketch.painter.ResizeAnimatablePainter.ResizeAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-animatable-painter/-resize-animatable-painter.html","searchKeys":["ResizeAnimatablePainter","constructor(painter: Painter, size: Size, contentScale: ContentScale = ContentScale.Crop, alignment: Alignment = Alignment.Center)","com.github.panpf.sketch.painter.ResizeAnimatablePainter.ResizeAnimatablePainter"]},{"name":"constructor(painter: Painter, size: Size, contentScale: ContentScale = ContentScale.Crop, alignment: Alignment = Alignment.Center)","description":"com.github.panpf.sketch.painter.ResizePainter.ResizePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-painter/-resize-painter.html","searchKeys":["ResizePainter","constructor(painter: Painter, size: Size, contentScale: ContentScale = ContentScale.Crop, alignment: Alignment = Alignment.Center)","com.github.panpf.sketch.painter.ResizePainter.ResizePainter"]},{"name":"constructor(painter: Painter, size: Size, scale: Scale)","description":"com.github.panpf.sketch.painter.ResizeAnimatablePainter.ResizeAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-animatable-painter/-resize-animatable-painter.html","searchKeys":["ResizeAnimatablePainter","constructor(painter: Painter, size: Size, scale: Scale)","com.github.panpf.sketch.painter.ResizeAnimatablePainter.ResizeAnimatablePainter"]},{"name":"constructor(painter: Painter, size: Size, scale: Scale)","description":"com.github.panpf.sketch.painter.ResizePainter.ResizePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-painter/-resize-painter.html","searchKeys":["ResizePainter","constructor(painter: Painter, size: Size, scale: Scale)","com.github.panpf.sketch.painter.ResizePainter.ResizePainter"]},{"name":"constructor(painter: Painter?)","description":"com.github.panpf.sketch.PainterState.Loading.Loading","location":"sketch-compose-core/com.github.panpf.sketch/-painter-state/-loading/-loading.html","searchKeys":["Loading","constructor(painter: Painter?)","com.github.panpf.sketch.PainterState.Loading.Loading"]},{"name":"constructor(result: ImageResult.Error, painter: Painter?)","description":"com.github.panpf.sketch.PainterState.Error.Error","location":"sketch-compose-core/com.github.panpf.sketch/-painter-state/-error/-error.html","searchKeys":["Error","constructor(result: ImageResult.Error, painter: Painter?)","com.github.panpf.sketch.PainterState.Error.Error"]},{"name":"constructor(result: ImageResult.Success, painter: Painter)","description":"com.github.panpf.sketch.PainterState.Success.Success","location":"sketch-compose-core/com.github.panpf.sketch/-painter-state/-success/-success.html","searchKeys":["Success","constructor(result: ImageResult.Success, painter: Painter)","com.github.panpf.sketch.PainterState.Success.Success"]},{"name":"constructor(sketch: Sketch, initialRequest: ImageRequest, target: ComposeTarget, job: Job)","description":"com.github.panpf.sketch.request.internal.ComposeRequestDelegate.ComposeRequestDelegate","location":"sketch-compose-core/com.github.panpf.sketch.request.internal/-compose-request-delegate/-compose-request-delegate.html","searchKeys":["ComposeRequestDelegate","constructor(sketch: Sketch, initialRequest: ImageRequest, target: ComposeTarget, job: Job)","com.github.panpf.sketch.request.internal.ComposeRequestDelegate.ComposeRequestDelegate"]},{"name":"constructor(sketch: Sketch, request: ImageRequest, target: ComposeTarget, result: ImageResult, contentScale: ContentScale = ContentScale.Fit, alignment: Alignment = Alignment.Center, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE)","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.ComposeCrossfadeTransition","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/-compose-crossfade-transition.html","searchKeys":["ComposeCrossfadeTransition","constructor(sketch: Sketch, request: ImageRequest, target: ComposeTarget, result: ImageResult, contentScale: ContentScale = ContentScale.Fit, alignment: Alignment = Alignment.Center, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE)","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.ComposeCrossfadeTransition"]},{"name":"constructor(sketch: Sketch, request: ImageRequest, target: ComposeTarget, result: ImageResult, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, fitScale: Boolean)","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.ComposeCrossfadeTransition","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/-compose-crossfade-transition.html","searchKeys":["ComposeCrossfadeTransition","constructor(sketch: Sketch, request: ImageRequest, target: ComposeTarget, result: ImageResult, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE, fitScale: Boolean)","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.ComposeCrossfadeTransition"]},{"name":"constructor(start: Painter?, end: Painter?, contentScale: ContentScale = ContentScale.Fit, alignment: Alignment = Alignment.Center, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE)","description":"com.github.panpf.sketch.painter.CrossfadePainter.CrossfadePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/-crossfade-painter.html","searchKeys":["CrossfadePainter","constructor(start: Painter?, end: Painter?, contentScale: ContentScale = ContentScale.Fit, alignment: Alignment = Alignment.Center, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE)","com.github.panpf.sketch.painter.CrossfadePainter.CrossfadePainter"]},{"name":"constructor(start: Painter?, end: Painter?, fitScale: Boolean, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE)","description":"com.github.panpf.sketch.painter.CrossfadePainter.CrossfadePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/-crossfade-painter.html","searchKeys":["CrossfadePainter","constructor(start: Painter?, end: Painter?, fitScale: Boolean, durationMillis: Int = CrossfadeTransition.DEFAULT_DURATION_MILLIS, fadeStart: Boolean = CrossfadeTransition.DEFAULT_FADE_START, preferExactIntrinsicSize: Boolean = CrossfadeTransition.DEFAULT_PREFER_EXACT_INTRINSIC_SIZE)","com.github.panpf.sketch.painter.CrossfadePainter.CrossfadePainter"]},{"name":"data class ColorPainterStateImage(val color: Color) : StateImage","description":"com.github.panpf.sketch.state.ColorPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-color-painter-state-image/index.html","searchKeys":["ColorPainterStateImage","data class ColorPainterStateImage(val color: Color) : StateImage","com.github.panpf.sketch.state.ColorPainterStateImage"]},{"name":"data class Error(val result: ImageResult.Error, val painter: Painter?) : PainterState","description":"com.github.panpf.sketch.PainterState.Error","location":"sketch-compose-core/com.github.panpf.sketch/-painter-state/-error/index.html","searchKeys":["Error","data class Error(val result: ImageResult.Error, val painter: Painter?) : PainterState","com.github.panpf.sketch.PainterState.Error"]},{"name":"data class IconAnimatablePainterStateImage(val icon: EquitablePainter, val background: EquitablePainter? = null, val iconSize: Size? = null, val iconTint: Color? = null) : StateImage","description":"com.github.panpf.sketch.state.IconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-animatable-painter-state-image/index.html","searchKeys":["IconAnimatablePainterStateImage","data class IconAnimatablePainterStateImage(val icon: EquitablePainter, val background: EquitablePainter? = null, val iconSize: Size? = null, val iconTint: Color? = null) : StateImage","com.github.panpf.sketch.state.IconAnimatablePainterStateImage"]},{"name":"data class IconPainterStateImage(val icon: EquitablePainter, val background: EquitablePainter? = null, val iconSize: Size? = null, val iconTint: Color? = null) : StateImage","description":"com.github.panpf.sketch.state.IconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-painter-state-image/index.html","searchKeys":["IconPainterStateImage","data class IconPainterStateImage(val icon: EquitablePainter, val background: EquitablePainter? = null, val iconSize: Size? = null, val iconTint: Color? = null) : StateImage","com.github.panpf.sketch.state.IconPainterStateImage"]},{"name":"data class Loading(val painter: Painter?) : PainterState","description":"com.github.panpf.sketch.PainterState.Loading","location":"sketch-compose-core/com.github.panpf.sketch/-painter-state/-loading/index.html","searchKeys":["Loading","data class Loading(val painter: Painter?) : PainterState","com.github.panpf.sketch.PainterState.Loading"]},{"name":"data class PainterImage(val painter: Painter, val shareable: Boolean = painter !is AnimatablePainter) : Image","description":"com.github.panpf.sketch.PainterImage","location":"sketch-compose-core/com.github.panpf.sketch/-painter-image/index.html","searchKeys":["PainterImage","data class PainterImage(val painter: Painter, val shareable: Boolean = painter !is AnimatablePainter) : Image","com.github.panpf.sketch.PainterImage"]},{"name":"data class PainterStateImage(val painter: EquitablePainter) : StateImage","description":"com.github.panpf.sketch.state.PainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-painter-state-image/index.html","searchKeys":["PainterStateImage","data class PainterStateImage(val painter: EquitablePainter) : StateImage","com.github.panpf.sketch.state.PainterStateImage"]},{"name":"data class Success(val result: ImageResult.Success, val painter: Painter) : PainterState","description":"com.github.panpf.sketch.PainterState.Success","location":"sketch-compose-core/com.github.panpf.sketch/-painter-state/-success/index.html","searchKeys":["Success","data class Success(val result: ImageResult.Success, val painter: Painter) : PainterState","com.github.panpf.sketch.PainterState.Success"]},{"name":"data object ComposeResizeOnDrawHelper : ResizeOnDrawHelper","description":"com.github.panpf.sketch.resize.ComposeResizeOnDrawHelper","location":"sketch-compose-core/com.github.panpf.sketch.resize/-compose-resize-on-draw-helper/index.html","searchKeys":["ComposeResizeOnDrawHelper","data object ComposeResizeOnDrawHelper : ResizeOnDrawHelper","com.github.panpf.sketch.resize.ComposeResizeOnDrawHelper"]},{"name":"expect fun Bitmap.asComposeImageBitmap(): ImageBitmap","description":"com.github.panpf.sketch.util.asComposeImageBitmap","location":"sketch-compose-core/com.github.panpf.sketch.util/as-compose-image-bitmap.html","searchKeys":["asComposeImageBitmap","expect fun Bitmap.asComposeImageBitmap(): ImageBitmap","com.github.panpf.sketch.util.asComposeImageBitmap"]},{"name":"expect fun Image.asPainterOrNull(filterQuality: FilterQuality = DrawScope.DefaultFilterQuality): Painter?","description":"com.github.panpf.sketch.asPainterOrNull","location":"sketch-compose-core/com.github.panpf.sketch/as-painter-or-null.html","searchKeys":["asPainterOrNull","expect fun Image.asPainterOrNull(filterQuality: FilterQuality = DrawScope.DefaultFilterQuality): Painter?","com.github.panpf.sketch.asPainterOrNull"]},{"name":"expect fun ImageOptions.Builder.sizeWithWindow(): ImageOptions.Builder","description":"com.github.panpf.sketch.request.sizeWithWindow","location":"sketch-compose-core/com.github.panpf.sketch.request/size-with-window.html","searchKeys":["sizeWithWindow","expect fun ImageOptions.Builder.sizeWithWindow(): ImageOptions.Builder","com.github.panpf.sketch.request.sizeWithWindow"]},{"name":"expect fun ImageRequest.Builder.sizeWithWindow(): ImageRequest.Builder","description":"com.github.panpf.sketch.request.sizeWithWindow","location":"sketch-compose-core/com.github.panpf.sketch.request/size-with-window.html","searchKeys":["sizeWithWindow","expect fun ImageRequest.Builder.sizeWithWindow(): ImageRequest.Builder","com.github.panpf.sketch.request.sizeWithWindow"]},{"name":"expect fun windowContainerSize(): IntSize","description":"com.github.panpf.sketch.util.windowContainerSize","location":"sketch-compose-core/com.github.panpf.sketch.util/window-container-size.html","searchKeys":["windowContainerSize","expect fun windowContainerSize(): IntSize","com.github.panpf.sketch.util.windowContainerSize"]},{"name":"expect val LocalPlatformContext: ProvidableCompositionLocal<PlatformContext>","description":"com.github.panpf.sketch.LocalPlatformContext","location":"sketch-compose-core/com.github.panpf.sketch/-local-platform-context.html","searchKeys":["LocalPlatformContext","expect val LocalPlatformContext: ProvidableCompositionLocal<PlatformContext>","com.github.panpf.sketch.LocalPlatformContext"]},{"name":"fun AnimatablePainter.startWithLifecycle()","description":"com.github.panpf.sketch.painter.startWithLifecycle","location":"sketch-compose-core/com.github.panpf.sketch.painter/start-with-lifecycle.html","searchKeys":["startWithLifecycle","fun AnimatablePainter.startWithLifecycle()","com.github.panpf.sketch.painter.startWithLifecycle"]},{"name":"fun AsyncImage(request: ImageRequest, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","description":"com.github.panpf.sketch.AsyncImage","location":"sketch-compose-core/com.github.panpf.sketch/-async-image.html","searchKeys":["AsyncImage","fun AsyncImage(request: ImageRequest, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","com.github.panpf.sketch.AsyncImage"]},{"name":"fun AsyncImage(request: ImageRequest, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true, keepContentNoneStartOnDraw: Boolean = false)","description":"com.github.panpf.sketch.AsyncImage","location":"sketch-compose-core/com.github.panpf.sketch/-async-image.html","searchKeys":["AsyncImage","fun AsyncImage(request: ImageRequest, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true, keepContentNoneStartOnDraw: Boolean = false)","com.github.panpf.sketch.AsyncImage"]},{"name":"fun AsyncImage(uri: String?, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","description":"com.github.panpf.sketch.AsyncImage","location":"sketch-compose-core/com.github.panpf.sketch/-async-image.html","searchKeys":["AsyncImage","fun AsyncImage(uri: String?, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","com.github.panpf.sketch.AsyncImage"]},{"name":"fun AsyncImage(uri: String?, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true, keepContentNoneStartOnDraw: Boolean = false)","description":"com.github.panpf.sketch.AsyncImage","location":"sketch-compose-core/com.github.panpf.sketch/-async-image.html","searchKeys":["AsyncImage","fun AsyncImage(uri: String?, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true, keepContentNoneStartOnDraw: Boolean = false)","com.github.panpf.sketch.AsyncImage"]},{"name":"fun AsyncImageContent(modifier: Modifier, painter: Painter, contentDescription: String?, alignment: Alignment, contentScale: ContentScale, alpha: Float, colorFilter: ColorFilter?, clipToBounds: Boolean = true)","description":"com.github.panpf.sketch.internal.AsyncImageContent","location":"sketch-compose-core/com.github.panpf.sketch.internal/-async-image-content.html","searchKeys":["AsyncImageContent","fun AsyncImageContent(modifier: Modifier, painter: Painter, contentDescription: String?, alignment: Alignment, contentScale: ContentScale, alpha: Float, colorFilter: ColorFilter?, clipToBounds: Boolean = true)","com.github.panpf.sketch.internal.AsyncImageContent"]},{"name":"fun BrushPainter.asEquitable(): EquitablePainter","description":"com.github.panpf.sketch.painter.asEquitable","location":"sketch-compose-core/com.github.panpf.sketch.painter/as-equitable.html","searchKeys":["asEquitable","fun BrushPainter.asEquitable(): EquitablePainter","com.github.panpf.sketch.painter.asEquitable"]},{"name":"fun ColorPainter.asEquitable(): EquitablePainter","description":"com.github.panpf.sketch.painter.asEquitable","location":"sketch-compose-core/com.github.panpf.sketch.painter/as-equitable.html","searchKeys":["asEquitable","fun ColorPainter.asEquitable(): EquitablePainter","com.github.panpf.sketch.painter.asEquitable"]},{"name":"fun ComposableImageRequest(context: PlatformContext, uri: String?): ImageRequest","description":"com.github.panpf.sketch.request.ComposableImageRequest","location":"sketch-compose-core/com.github.panpf.sketch.request/-composable-image-request.html","searchKeys":["ComposableImageRequest","fun ComposableImageRequest(context: PlatformContext, uri: String?): ImageRequest","com.github.panpf.sketch.request.ComposableImageRequest"]},{"name":"fun ComposableImageRequest(uri: String?): ImageRequest","description":"com.github.panpf.sketch.request.ComposableImageRequest","location":"sketch-compose-core/com.github.panpf.sketch.request/-composable-image-request.html","searchKeys":["ComposableImageRequest","fun ComposableImageRequest(uri: String?): ImageRequest","com.github.panpf.sketch.request.ComposableImageRequest"]},{"name":"fun ConditionStateImage.Builder.addState(condition: ConditionStateImage.Condition, color: Color): ConditionStateImage.Builder","description":"com.github.panpf.sketch.state.addState","location":"sketch-compose-core/com.github.panpf.sketch.state/add-state.html","searchKeys":["addState","fun ConditionStateImage.Builder.addState(condition: ConditionStateImage.Condition, color: Color): ConditionStateImage.Builder","com.github.panpf.sketch.state.addState"]},{"name":"fun ContentScale.toScale(): Scale","description":"com.github.panpf.sketch.util.toScale","location":"sketch-compose-core/com.github.panpf.sketch.util/to-scale.html","searchKeys":["toScale","fun ContentScale.toScale(): Scale","com.github.panpf.sketch.util.toScale"]},{"name":"fun CurrentStateImage(defaultColor: Color): CurrentStateImage","description":"com.github.panpf.sketch.state.CurrentStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-current-state-image.html","searchKeys":["CurrentStateImage","fun CurrentStateImage(defaultColor: Color): CurrentStateImage","com.github.panpf.sketch.state.CurrentStateImage"]},{"name":"fun CurrentStateImage(defaultPainter: EquitablePainter): CurrentStateImage","description":"com.github.panpf.sketch.state.CurrentStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-current-state-image.html","searchKeys":["CurrentStateImage","fun CurrentStateImage(defaultPainter: EquitablePainter): CurrentStateImage","com.github.panpf.sketch.state.CurrentStateImage"]},{"name":"fun Drawable.asEquitablePainter(equalityKey: Any): <Error class: unknown class>","description":"com.github.panpf.sketch.state.asEquitablePainter","location":"sketch-compose-core/com.github.panpf.sketch.state/as-equitable-painter.html","searchKeys":["asEquitablePainter","fun Drawable.asEquitablePainter(equalityKey: Any): <Error class: unknown class>","com.github.panpf.sketch.state.asEquitablePainter"]},{"name":"fun Drawable?.asPainter(): Painter","description":"com.github.panpf.sketch.painter.asPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/as-painter.html","searchKeys":["asPainter","fun Drawable?.asPainter(): Painter","com.github.panpf.sketch.painter.asPainter"]},{"name":"fun EquitableDrawable.asEquitablePainter(): <Error class: unknown class>","description":"com.github.panpf.sketch.state.asEquitablePainter","location":"sketch-compose-core/com.github.panpf.sketch.state/as-equitable-painter.html","searchKeys":["asEquitablePainter","fun EquitableDrawable.asEquitablePainter(): <Error class: unknown class>","com.github.panpf.sketch.state.asEquitablePainter"]},{"name":"fun Image.asPainter(filterQuality: FilterQuality = DrawScope.DefaultFilterQuality): Painter","description":"com.github.panpf.sketch.asPainter","location":"sketch-compose-core/com.github.panpf.sketch/as-painter.html","searchKeys":["asPainter","fun Image.asPainter(filterQuality: FilterQuality = DrawScope.DefaultFilterQuality): Painter","com.github.panpf.sketch.asPainter"]},{"name":"fun ImageBitmap.asPainter(filterQuality: FilterQuality = DrawScope.DefaultFilterQuality): Painter","description":"com.github.panpf.sketch.painter.asPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/as-painter.html","searchKeys":["asPainter","fun ImageBitmap.asPainter(filterQuality: FilterQuality = DrawScope.DefaultFilterQuality): Painter","com.github.panpf.sketch.painter.asPainter"]},{"name":"fun ImageBitmap.toLogString(): String","description":"com.github.panpf.sketch.util.toLogString","location":"sketch-compose-core/com.github.panpf.sketch.util/to-log-string.html","searchKeys":["toLogString","fun ImageBitmap.toLogString(): String","com.github.panpf.sketch.util.toLogString"]},{"name":"fun ImageOptions.Builder.error(color: Color): ImageOptions.Builder","description":"com.github.panpf.sketch.request.error","location":"sketch-compose-core/com.github.panpf.sketch.request/error.html","searchKeys":["error","fun ImageOptions.Builder.error(color: Color): ImageOptions.Builder","com.github.panpf.sketch.request.error"]},{"name":"fun ImageOptions.Builder.fallback(color: Color): ImageOptions.Builder","description":"com.github.panpf.sketch.request.fallback","location":"sketch-compose-core/com.github.panpf.sketch.request/fallback.html","searchKeys":["fallback","fun ImageOptions.Builder.fallback(color: Color): ImageOptions.Builder","com.github.panpf.sketch.request.fallback"]},{"name":"fun ImageOptions.Builder.placeholder(color: Color): ImageOptions.Builder","description":"com.github.panpf.sketch.request.placeholder","location":"sketch-compose-core/com.github.panpf.sketch.request/placeholder.html","searchKeys":["placeholder","fun ImageOptions.Builder.placeholder(color: Color): ImageOptions.Builder","com.github.panpf.sketch.request.placeholder"]},{"name":"fun ImageOptions.Builder.resize(size: IntSize, precision: Precision? = null, scale: Scale? = null): ImageOptions.Builder","description":"com.github.panpf.sketch.request.resize","location":"sketch-compose-core/com.github.panpf.sketch.request/resize.html","searchKeys":["resize","fun ImageOptions.Builder.resize(size: IntSize, precision: Precision? = null, scale: Scale? = null): ImageOptions.Builder","com.github.panpf.sketch.request.resize"]},{"name":"fun ImageOptions.Builder.size(size: IntSize): ImageOptions.Builder","description":"com.github.panpf.sketch.request.size","location":"sketch-compose-core/com.github.panpf.sketch.request/size.html","searchKeys":["size","fun ImageOptions.Builder.size(size: IntSize): ImageOptions.Builder","com.github.panpf.sketch.request.size"]},{"name":"fun ImageRequest.Builder.error(color: Color): ImageRequest.Builder","description":"com.github.panpf.sketch.request.error","location":"sketch-compose-core/com.github.panpf.sketch.request/error.html","searchKeys":["error","fun ImageRequest.Builder.error(color: Color): ImageRequest.Builder","com.github.panpf.sketch.request.error"]},{"name":"fun ImageRequest.Builder.fallback(color: Color): ImageRequest.Builder","description":"com.github.panpf.sketch.request.fallback","location":"sketch-compose-core/com.github.panpf.sketch.request/fallback.html","searchKeys":["fallback","fun ImageRequest.Builder.fallback(color: Color): ImageRequest.Builder","com.github.panpf.sketch.request.fallback"]},{"name":"fun ImageRequest.Builder.placeholder(color: Color): ImageRequest.Builder","description":"com.github.panpf.sketch.request.placeholder","location":"sketch-compose-core/com.github.panpf.sketch.request/placeholder.html","searchKeys":["placeholder","fun ImageRequest.Builder.placeholder(color: Color): ImageRequest.Builder","com.github.panpf.sketch.request.placeholder"]},{"name":"fun ImageRequest.Builder.resize(size: IntSize, precision: Precision? = null, scale: Scale? = null): ImageRequest.Builder","description":"com.github.panpf.sketch.request.resize","location":"sketch-compose-core/com.github.panpf.sketch.request/resize.html","searchKeys":["resize","fun ImageRequest.Builder.resize(size: IntSize, precision: Precision? = null, scale: Scale? = null): ImageRequest.Builder","com.github.panpf.sketch.request.resize"]},{"name":"fun ImageRequest.Builder.size(size: IntSize): ImageRequest.Builder","description":"com.github.panpf.sketch.request.size","location":"sketch-compose-core/com.github.panpf.sketch.request/size.html","searchKeys":["size","fun ImageRequest.Builder.size(size: IntSize): ImageRequest.Builder","com.github.panpf.sketch.request.size"]},{"name":"fun IntSize.toSketchSize(): Size","description":"com.github.panpf.sketch.util.toSketchSize","location":"sketch-compose-core/com.github.panpf.sketch.util/to-sketch-size.html","searchKeys":["toSketchSize","fun IntSize.toSketchSize(): Size","com.github.panpf.sketch.util.toSketchSize"]},{"name":"fun Painter.asEquitable(equalityKey: Any): EquitablePainter","description":"com.github.panpf.sketch.painter.asEquitable","location":"sketch-compose-core/com.github.panpf.sketch.painter/as-equitable.html","searchKeys":["asEquitable","fun Painter.asEquitable(equalityKey: Any): EquitablePainter","com.github.panpf.sketch.painter.asEquitable"]},{"name":"fun Painter.asImage(shareable: Boolean = this !is AnimatablePainter): PainterImage","description":"com.github.panpf.sketch.asImage","location":"sketch-compose-core/com.github.panpf.sketch/as-image.html","searchKeys":["asImage","fun Painter.asImage(shareable: Boolean = this !is AnimatablePainter): PainterImage","com.github.panpf.sketch.asImage"]},{"name":"fun Painter.findDeepestPainter(): Painter","description":"com.github.panpf.sketch.util.findDeepestPainter","location":"sketch-compose-core/com.github.panpf.sketch.util/find-deepest-painter.html","searchKeys":["findDeepestPainter","fun Painter.findDeepestPainter(): Painter","com.github.panpf.sketch.util.findDeepestPainter"]},{"name":"fun Painter.findLeafPainter(): Painter","description":"com.github.panpf.sketch.util.findLeafPainter","location":"sketch-compose-core/com.github.panpf.sketch.util/find-leaf-painter.html","searchKeys":["findLeafPainter","fun Painter.findLeafPainter(): Painter","com.github.panpf.sketch.util.findLeafPainter"]},{"name":"fun Painter.key(equalityKey: Any? = null): String","description":"com.github.panpf.sketch.painter.key","location":"sketch-compose-core/com.github.panpf.sketch.painter/key.html","searchKeys":["key","fun Painter.key(equalityKey: Any? = null): String","com.github.panpf.sketch.painter.key"]},{"name":"fun Painter.resize(size: Size, contentScale: ContentScale = ContentScale.Crop, alignment: Alignment = Alignment.Center): ResizePainter","description":"com.github.panpf.sketch.painter.resize","location":"sketch-compose-core/com.github.panpf.sketch.painter/resize.html","searchKeys":["resize","fun Painter.resize(size: Size, contentScale: ContentScale = ContentScale.Crop, alignment: Alignment = Alignment.Center): ResizePainter","com.github.panpf.sketch.painter.resize"]},{"name":"fun Painter.resize(size: Size, scale: Scale): ResizePainter","description":"com.github.panpf.sketch.painter.resize","location":"sketch-compose-core/com.github.panpf.sketch.painter/resize.html","searchKeys":["resize","fun Painter.resize(size: Size, scale: Scale): ResizePainter","com.github.panpf.sketch.painter.resize"]},{"name":"fun Painter.toLogString(): String","description":"com.github.panpf.sketch.painter.toLogString","location":"sketch-compose-core/com.github.panpf.sketch.painter/to-log-string.html","searchKeys":["toLogString","fun Painter.toLogString(): String","com.github.panpf.sketch.painter.toLogString"]},{"name":"fun Size.toIntSize(): IntSize","description":"com.github.panpf.sketch.util.toIntSize","location":"sketch-compose-core/com.github.panpf.sketch.util/to-int-size.html","searchKeys":["toIntSize","fun Size.toIntSize(): IntSize","com.github.panpf.sketch.util.toIntSize"]},{"name":"fun Size.toLogString(): String","description":"com.github.panpf.sketch.util.toLogString","location":"sketch-compose-core/com.github.panpf.sketch.util/to-log-string.html","searchKeys":["toLogString","fun Size.toLogString(): String","com.github.panpf.sketch.util.toLogString"]},{"name":"fun Size.toSize(): Size","description":"com.github.panpf.sketch.util.toSize","location":"sketch-compose-core/com.github.panpf.sketch.util/to-size.html","searchKeys":["toSize","fun Size.toSize(): Size","com.github.panpf.sketch.util.toSize"]},{"name":"fun SubcomposeAsyncImage(request: ImageRequest, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","description":"com.github.panpf.sketch.SubcomposeAsyncImage","location":"sketch-compose-core/com.github.panpf.sketch/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(request: ImageRequest, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","com.github.panpf.sketch.SubcomposeAsyncImage"]},{"name":"fun SubcomposeAsyncImage(request: ImageRequest, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), loading: SubcomposeAsyncImageScope.(PainterState.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(PainterState.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","description":"com.github.panpf.sketch.SubcomposeAsyncImage","location":"sketch-compose-core/com.github.panpf.sketch/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(request: ImageRequest, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), loading: SubcomposeAsyncImageScope.(PainterState.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(PainterState.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","com.github.panpf.sketch.SubcomposeAsyncImage"]},{"name":"fun SubcomposeAsyncImage(uri: String?, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","description":"com.github.panpf.sketch.SubcomposeAsyncImage","location":"sketch-compose-core/com.github.panpf.sketch/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(uri: String?, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","com.github.panpf.sketch.SubcomposeAsyncImage"]},{"name":"fun SubcomposeAsyncImage(uri: String?, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), loading: SubcomposeAsyncImageScope.(PainterState.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(PainterState.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","description":"com.github.panpf.sketch.SubcomposeAsyncImage","location":"sketch-compose-core/com.github.panpf.sketch/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(uri: String?, sketch: Sketch, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), loading: SubcomposeAsyncImageScope.(PainterState.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(PainterState.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","com.github.panpf.sketch.SubcomposeAsyncImage"]},{"name":"fun SubcomposeAsyncImageScope.SubcomposeAsyncImageContent(modifier: Modifier = Modifier, painter: Painter = this.painter, contentDescription: String? = this.contentDescription, alignment: Alignment = this.alignment, contentScale: ContentScale = this.contentScale, alpha: Float = this.alpha, colorFilter: ColorFilter? = this.colorFilter, clipToBounds: Boolean = true)","description":"com.github.panpf.sketch.SubcomposeAsyncImageContent","location":"sketch-compose-core/com.github.panpf.sketch/-subcompose-async-image-content.html","searchKeys":["SubcomposeAsyncImageContent","fun SubcomposeAsyncImageScope.SubcomposeAsyncImageContent(modifier: Modifier = Modifier, painter: Painter = this.painter, contentDescription: String? = this.contentDescription, alignment: Alignment = this.alignment, contentScale: ContentScale = this.contentScale, alpha: Float = this.alpha, colorFilter: ColorFilter? = this.colorFilter, clipToBounds: Boolean = true)","com.github.panpf.sketch.SubcomposeAsyncImageContent"]},{"name":"fun forget(): Boolean","description":"com.github.panpf.sketch.util.RememberedCounter.forget","location":"sketch-compose-core/com.github.panpf.sketch.util/-remembered-counter/forget.html","searchKeys":["forget","fun forget(): Boolean","com.github.panpf.sketch.util.RememberedCounter.forget"]},{"name":"fun fromScale(scale: Scale): Pair<ContentScale, Alignment>","description":"com.github.panpf.sketch.util.fromScale","location":"sketch-compose-core/com.github.panpf.sketch.util/from-scale.html","searchKeys":["fromScale","fun fromScale(scale: Scale): Pair<ContentScale, Alignment>","com.github.panpf.sketch.util.fromScale"]},{"name":"fun onForgotten()","description":"com.github.panpf.sketch.request.internal.ComposeRequestManager.onForgotten","location":"sketch-compose-core/com.github.panpf.sketch.request.internal/-compose-request-manager/on-forgotten.html","searchKeys":["onForgotten","fun onForgotten()","com.github.panpf.sketch.request.internal.ComposeRequestManager.onForgotten"]},{"name":"fun onForgotten()","description":"com.github.panpf.sketch.target.AsyncImageTarget.onForgotten","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/on-forgotten.html","searchKeys":["onForgotten","fun onForgotten()","com.github.panpf.sketch.target.AsyncImageTarget.onForgotten"]},{"name":"fun onRemembered()","description":"com.github.panpf.sketch.request.internal.ComposeRequestManager.onRemembered","location":"sketch-compose-core/com.github.panpf.sketch.request.internal/-compose-request-manager/on-remembered.html","searchKeys":["onRemembered","fun onRemembered()","com.github.panpf.sketch.request.internal.ComposeRequestManager.onRemembered"]},{"name":"fun onRemembered()","description":"com.github.panpf.sketch.target.AsyncImageTarget.onRemembered","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/on-remembered.html","searchKeys":["onRemembered","fun onRemembered()","com.github.panpf.sketch.target.AsyncImageTarget.onRemembered"]},{"name":"fun remember(): Boolean","description":"com.github.panpf.sketch.util.RememberedCounter.remember","location":"sketch-compose-core/com.github.panpf.sketch.util/-remembered-counter/remember.html","searchKeys":["remember","fun remember(): Boolean","com.github.panpf.sketch.util.RememberedCounter.remember"]},{"name":"fun rememberAsyncImagePainter(request: ImageRequest, sketch: Sketch, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"com.github.panpf.sketch.rememberAsyncImagePainter","location":"sketch-compose-core/com.github.panpf.sketch/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(request: ImageRequest, sketch: Sketch, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","com.github.panpf.sketch.rememberAsyncImagePainter"]},{"name":"fun rememberAsyncImagePainter(request: ImageRequest, sketch: Sketch, state: AsyncImageState = rememberAsyncImageState(), contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"com.github.panpf.sketch.rememberAsyncImagePainter","location":"sketch-compose-core/com.github.panpf.sketch/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(request: ImageRequest, sketch: Sketch, state: AsyncImageState = rememberAsyncImageState(), contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","com.github.panpf.sketch.rememberAsyncImagePainter"]},{"name":"fun rememberAsyncImagePainter(uri: String?, sketch: Sketch, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"com.github.panpf.sketch.rememberAsyncImagePainter","location":"sketch-compose-core/com.github.panpf.sketch/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(uri: String?, sketch: Sketch, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","com.github.panpf.sketch.rememberAsyncImagePainter"]},{"name":"fun rememberAsyncImagePainter(uri: String?, sketch: Sketch, state: AsyncImageState = rememberAsyncImageState(), contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"com.github.panpf.sketch.rememberAsyncImagePainter","location":"sketch-compose-core/com.github.panpf.sketch/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(uri: String?, sketch: Sketch, state: AsyncImageState = rememberAsyncImageState(), contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","com.github.panpf.sketch.rememberAsyncImagePainter"]},{"name":"fun rememberAsyncImageState(options: ImageOptions? = null): AsyncImageState","description":"com.github.panpf.sketch.rememberAsyncImageState","location":"sketch-compose-core/com.github.panpf.sketch/remember-async-image-state.html","searchKeys":["rememberAsyncImageState","fun rememberAsyncImageState(options: ImageOptions? = null): AsyncImageState","com.github.panpf.sketch.rememberAsyncImageState"]},{"name":"fun rememberAsyncImageState(optionsLazy: () -> ImageOptions): AsyncImageState","description":"com.github.panpf.sketch.rememberAsyncImageState","location":"sketch-compose-core/com.github.panpf.sketch/remember-async-image-state.html","searchKeys":["rememberAsyncImageState","fun rememberAsyncImageState(optionsLazy: () -> ImageOptions): AsyncImageState","com.github.panpf.sketch.rememberAsyncImageState"]},{"name":"fun rememberColorDrawableStateImage(color: ColorFetcher): ColorDrawableStateImage","description":"com.github.panpf.sketch.state.rememberColorDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-color-drawable-state-image.html","searchKeys":["rememberColorDrawableStateImage","fun rememberColorDrawableStateImage(color: ColorFetcher): ColorDrawableStateImage","com.github.panpf.sketch.state.rememberColorDrawableStateImage"]},{"name":"fun rememberColorDrawableStateImage(color: IntColorFetcher): ColorDrawableStateImage","description":"com.github.panpf.sketch.state.rememberColorDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-color-drawable-state-image.html","searchKeys":["rememberColorDrawableStateImage","fun rememberColorDrawableStateImage(color: IntColorFetcher): ColorDrawableStateImage","com.github.panpf.sketch.state.rememberColorDrawableStateImage"]},{"name":"fun rememberColorDrawableStateImage(color: ResColorFetcher): ColorDrawableStateImage","description":"com.github.panpf.sketch.state.rememberColorDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-color-drawable-state-image.html","searchKeys":["rememberColorDrawableStateImage","fun rememberColorDrawableStateImage(color: ResColorFetcher): ColorDrawableStateImage","com.github.panpf.sketch.state.rememberColorDrawableStateImage"]},{"name":"fun rememberColorDrawableStateImageWithInt(color: Int): ColorDrawableStateImage","description":"com.github.panpf.sketch.state.rememberColorDrawableStateImageWithInt","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-color-drawable-state-image-with-int.html","searchKeys":["rememberColorDrawableStateImageWithInt","fun rememberColorDrawableStateImageWithInt(color: Int): ColorDrawableStateImage","com.github.panpf.sketch.state.rememberColorDrawableStateImageWithInt"]},{"name":"fun rememberColorDrawableStateImageWithRes(resId: Int): ColorDrawableStateImage","description":"com.github.panpf.sketch.state.rememberColorDrawableStateImageWithRes","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-color-drawable-state-image-with-res.html","searchKeys":["rememberColorDrawableStateImageWithRes","fun rememberColorDrawableStateImageWithRes(resId: Int): ColorDrawableStateImage","com.github.panpf.sketch.state.rememberColorDrawableStateImageWithRes"]},{"name":"fun rememberColorPainterStateImage(color: Color): ColorPainterStateImage","description":"com.github.panpf.sketch.state.rememberColorPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-color-painter-state-image.html","searchKeys":["rememberColorPainterStateImage","fun rememberColorPainterStateImage(color: Color): ColorPainterStateImage","com.github.panpf.sketch.state.rememberColorPainterStateImage"]},{"name":"fun rememberColorPainterStateImageWithInt(color: Int): ColorPainterStateImage","description":"com.github.panpf.sketch.state.rememberColorPainterStateImageWithInt","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-color-painter-state-image-with-int.html","searchKeys":["rememberColorPainterStateImageWithInt","fun rememberColorPainterStateImageWithInt(color: Int): ColorPainterStateImage","com.github.panpf.sketch.state.rememberColorPainterStateImageWithInt"]},{"name":"fun rememberColorPainterStateImageWithLong(color: Long): ColorPainterStateImage","description":"com.github.panpf.sketch.state.rememberColorPainterStateImageWithLong","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-color-painter-state-image-with-long.html","searchKeys":["rememberColorPainterStateImageWithLong","fun rememberColorPainterStateImageWithLong(color: Long): ColorPainterStateImage","com.github.panpf.sketch.state.rememberColorPainterStateImageWithLong"]},{"name":"fun rememberColorPainterStateImageWithRes(resId: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberColorPainterStateImageWithRes","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-color-painter-state-image-with-res.html","searchKeys":["rememberColorPainterStateImageWithRes","fun rememberColorPainterStateImageWithRes(resId: Int): <Error class: unknown class>","com.github.panpf.sketch.state.rememberColorPainterStateImageWithRes"]},{"name":"fun rememberCurrentStateImage(defaultDrawable: EquitableDrawable): CurrentStateImage","description":"com.github.panpf.sketch.state.rememberCurrentStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-current-state-image.html","searchKeys":["rememberCurrentStateImage","fun rememberCurrentStateImage(defaultDrawable: EquitableDrawable): CurrentStateImage","com.github.panpf.sketch.state.rememberCurrentStateImage"]},{"name":"fun rememberCurrentStateImage(defaultImage: StateImage? = null): CurrentStateImage","description":"com.github.panpf.sketch.state.rememberCurrentStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-current-state-image.html","searchKeys":["rememberCurrentStateImage","fun rememberCurrentStateImage(defaultImage: StateImage? = null): CurrentStateImage","com.github.panpf.sketch.state.rememberCurrentStateImage"]},{"name":"fun rememberCurrentStateImage(defaultResId: Int): CurrentStateImage","description":"com.github.panpf.sketch.state.rememberCurrentStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-current-state-image.html","searchKeys":["rememberCurrentStateImage","fun rememberCurrentStateImage(defaultResId: Int): CurrentStateImage","com.github.panpf.sketch.state.rememberCurrentStateImage"]},{"name":"fun rememberDrawablePainter(drawable: EquitableDrawable): Painter","description":"com.github.panpf.sketch.painter.rememberDrawablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-drawable-painter.html","searchKeys":["rememberDrawablePainter","fun rememberDrawablePainter(drawable: EquitableDrawable): Painter","com.github.panpf.sketch.painter.rememberDrawablePainter"]},{"name":"fun rememberDrawableStateImage(drawable: EquitableDrawable): DrawableStateImage","description":"com.github.panpf.sketch.state.rememberDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-drawable-state-image.html","searchKeys":["rememberDrawableStateImage","fun rememberDrawableStateImage(drawable: EquitableDrawable): DrawableStateImage","com.github.panpf.sketch.state.rememberDrawableStateImage"]},{"name":"fun rememberDrawableStateImage(resId: Int): DrawableStateImage","description":"com.github.panpf.sketch.state.rememberDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-drawable-state-image.html","searchKeys":["rememberDrawableStateImage","fun rememberDrawableStateImage(resId: Int): DrawableStateImage","com.github.panpf.sketch.state.rememberDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, iconSize: Size? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, iconSize: Size? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int, background: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int, background: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int, background: Int? = null, iconSize: Size? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int, background: Int? = null, iconSize: Size? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int, iconSize: Size? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int, iconSize: Size? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int, iconSize: Size? = null, iconTint: Int? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatableDrawableStateImage(icon: Int, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-drawable-state-image.html","searchKeys":["rememberIconAnimatableDrawableStateImage","fun rememberIconAnimatableDrawableStateImage(icon: Int, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconAnimatableDrawableStateImage","com.github.panpf.sketch.state.rememberIconAnimatableDrawableStateImage"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: EquitableDrawable? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: EquitableDrawable? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitableDrawable, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitableDrawable, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitablePainter): IconAnimatablePainter","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitablePainter): IconAnimatablePainter","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitablePainter, background: Color? = null): IconAnimatablePainter","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitablePainter, background: Color? = null): IconAnimatablePainter","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null): IconAnimatablePainter","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null): IconAnimatablePainter","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainter","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainter","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitablePainter, background: EquitablePainter? = null): IconAnimatablePainter","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitablePainter, background: EquitablePainter? = null): IconAnimatablePainter","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null): IconAnimatablePainter","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null): IconAnimatablePainter","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainter","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainter","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitablePainter, iconSize: Size? = null): IconAnimatablePainter","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitablePainter, iconSize: Size? = null): IconAnimatablePainter","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: EquitablePainter, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainter","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: EquitablePainter, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainter","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: <Error class: unknown class>? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: <Error class: unknown class>? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: EquitableDrawable? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: EquitableDrawable? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainter(icon: Int, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconAnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-animatable-painter.html","searchKeys":["rememberIconAnimatablePainter","fun rememberIconAnimatablePainter(icon: Int, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconAnimatablePainter"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter): IconAnimatablePainterStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter): IconAnimatablePainterStateImage","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: Color? = null): IconAnimatablePainterStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: Color? = null): IconAnimatablePainterStateImage","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null): IconAnimatablePainterStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null): IconAnimatablePainterStateImage","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainterStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainterStateImage","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: EquitablePainter? = null): IconAnimatablePainterStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: EquitablePainter? = null): IconAnimatablePainterStateImage","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null): IconAnimatablePainterStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null): IconAnimatablePainterStateImage","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainterStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainterStateImage","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, iconSize: Size? = null): IconAnimatablePainterStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, iconSize: Size? = null): IconAnimatablePainterStateImage","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainterStateImage","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: EquitablePainter, iconSize: Size? = null, iconTint: Color? = null): IconAnimatablePainterStateImage","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: <Error class: unknown class>? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: <Error class: unknown class>? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: EquitableDrawable? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: EquitableDrawable? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconAnimatablePainterStateImage(icon: Int, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-animatable-painter-state-image.html","searchKeys":["rememberIconAnimatablePainterStateImage","fun rememberIconAnimatablePainterStateImage(icon: Int, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconAnimatablePainterStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable, iconSize: Size? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable, iconSize: Size? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int, background: EquitableDrawable? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int, background: EquitableDrawable? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int, background: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int, background: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int, background: Int? = null, iconSize: Size? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int, background: Int? = null, iconSize: Size? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int, background: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int, background: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int, iconSize: Size? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int, iconSize: Size? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int, iconSize: Size? = null, iconTint: Int? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconDrawableStateImage(icon: Int, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","description":"com.github.panpf.sketch.state.rememberIconDrawableStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-drawable-state-image.html","searchKeys":["rememberIconDrawableStateImage","fun rememberIconDrawableStateImage(icon: Int, iconSize: Size? = null, iconTint: IntColorFetcher? = null): IconDrawableStateImage","com.github.panpf.sketch.state.rememberIconDrawableStateImage"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: EquitableDrawable? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: EquitableDrawable? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitableDrawable, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitableDrawable, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitablePainter): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitablePainter): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitablePainter, background: Color? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitablePainter, background: Color? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitablePainter, background: EquitablePainter? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitablePainter, background: EquitablePainter? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitablePainter, iconSize: Size? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitablePainter, iconSize: Size? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: EquitablePainter, iconSize: Size? = null, iconTint: Color? = null): IconPainter","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: EquitablePainter, iconSize: Size? = null, iconTint: Color? = null): IconPainter","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: <Error class: unknown class>? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: <Error class: unknown class>? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: EquitableDrawable? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: EquitableDrawable? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainter(icon: Int, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.painter.rememberIconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-icon-painter.html","searchKeys":["rememberIconPainter","fun rememberIconPainter(icon: Int, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.painter.rememberIconPainter"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: <Error class: unknown class>, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitableDrawable, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitablePainter): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitablePainter): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitablePainter, background: Color? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitablePainter, background: Color? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitablePainter, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitablePainter, background: EquitablePainter? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitablePainter, background: EquitablePainter? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitablePainter, background: EquitablePainter? = null, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitablePainter, iconSize: Size? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitablePainter, iconSize: Size? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: EquitablePainter, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: EquitablePainter, iconSize: Size? = null, iconTint: Color? = null): IconPainterStateImage","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: <Error class: unknown class>? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: <Error class: unknown class>? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: <Error class: unknown class>? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: Color? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: EquitableDrawable? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: EquitableDrawable? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: EquitableDrawable? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: Int? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, background: IntColorFetcher? = null, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, iconSize: Size? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, iconSize: Size? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, iconSize: Size? = null, iconTint: Color? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, iconSize: Size? = null, iconTint: Int? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberIconPainterStateImage(icon: Int, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","description":"com.github.panpf.sketch.state.rememberIconPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-icon-painter-state-image.html","searchKeys":["rememberIconPainterStateImage","fun rememberIconPainterStateImage(icon: Int, iconSize: Size? = null, iconTint: IntColorFetcher? = null): <Error class: unknown class>","com.github.panpf.sketch.state.rememberIconPainterStateImage"]},{"name":"fun rememberPainterStateImage(painter: EquitablePainter): PainterStateImage","description":"com.github.panpf.sketch.state.rememberPainterStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/remember-painter-state-image.html","searchKeys":["rememberPainterStateImage","fun rememberPainterStateImage(painter: EquitablePainter): PainterStateImage","com.github.panpf.sketch.state.rememberPainterStateImage"]},{"name":"fun rememberResizePainter(painter: Painter, size: Size, contentScale: ContentScale = ContentScale.Crop, alignment: Alignment = Alignment.Center): ResizePainter","description":"com.github.panpf.sketch.painter.rememberResizePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-resize-painter.html","searchKeys":["rememberResizePainter","fun rememberResizePainter(painter: Painter, size: Size, contentScale: ContentScale = ContentScale.Crop, alignment: Alignment = Alignment.Center): ResizePainter","com.github.panpf.sketch.painter.rememberResizePainter"]},{"name":"fun rememberResizePainter(painter: Painter, size: Size, scale: Scale): ResizePainter","description":"com.github.panpf.sketch.painter.rememberResizePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/remember-resize-painter.html","searchKeys":["rememberResizePainter","fun rememberResizePainter(painter: Painter, size: Size, scale: Scale): ResizePainter","com.github.panpf.sketch.painter.rememberResizePainter"]},{"name":"fun requestOf(context: PlatformContext, uri: String?): ImageRequest","description":"com.github.panpf.sketch.internal.requestOf","location":"sketch-compose-core/com.github.panpf.sketch.internal/request-of.html","searchKeys":["requestOf","fun requestOf(context: PlatformContext, uri: String?): ImageRequest","com.github.panpf.sketch.internal.requestOf"]},{"name":"fun requestOf(uri: String?): ImageRequest","description":"com.github.panpf.sketch.internal.requestOf","location":"sketch-compose-core/com.github.panpf.sketch.internal/request-of.html","searchKeys":["requestOf","fun requestOf(uri: String?): ImageRequest","com.github.panpf.sketch.internal.requestOf"]},{"name":"fun restart()","description":"com.github.panpf.sketch.AsyncImageState.restart","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/restart.html","searchKeys":["restart","fun restart()","com.github.panpf.sketch.AsyncImageState.restart"]},{"name":"fun setPreviewImage(sketch: Sketch, request: ImageRequest, image: Image?)","description":"com.github.panpf.sketch.target.AsyncImageTarget.setPreviewImage","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/set-preview-image.html","searchKeys":["setPreviewImage","fun setPreviewImage(sketch: Sketch, request: ImageRequest, image: Image?)","com.github.panpf.sketch.target.AsyncImageTarget.setPreviewImage"]},{"name":"fun setSize(size: IntSize)","description":"com.github.panpf.sketch.AsyncImageState.setSize","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/set-size.html","searchKeys":["setSize","fun setSize(size: IntSize)","com.github.panpf.sketch.AsyncImageState.setSize"]},{"name":"fun setSizeWithLeast(size: IntSize)","description":"com.github.panpf.sketch.AsyncImageState.setSizeWithLeast","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/set-size-with-least.html","searchKeys":["setSizeWithLeast","fun setSizeWithLeast(size: IntSize)","com.github.panpf.sketch.AsyncImageState.setSizeWithLeast"]},{"name":"fun setWindowContainerSizeWithLeast(size: IntSize)","description":"com.github.panpf.sketch.AsyncImageState.setWindowContainerSizeWithLeast","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/set-window-container-size-with-least.html","searchKeys":["setWindowContainerSizeWithLeast","fun setWindowContainerSizeWithLeast(size: IntSize)","com.github.panpf.sketch.AsyncImageState.setWindowContainerSizeWithLeast"]},{"name":"fun toScale(contentScale: ContentScale, alignment: Alignment): Scale","description":"com.github.panpf.sketch.util.toScale","location":"sketch-compose-core/com.github.panpf.sketch.util/to-scale.html","searchKeys":["toScale","fun toScale(contentScale: ContentScale, alignment: Alignment): Scale","com.github.panpf.sketch.util.toScale"]},{"name":"inline fun ComposableConditionStateImage(defaultImage: Color, crossinline conditionBlock: ConditionStateImage.Builder.() -> Unit): ConditionStateImage","description":"com.github.panpf.sketch.state.ComposableConditionStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-composable-condition-state-image.html","searchKeys":["ComposableConditionStateImage","inline fun ComposableConditionStateImage(defaultImage: Color, crossinline conditionBlock: ConditionStateImage.Builder.() -> Unit): ConditionStateImage","com.github.panpf.sketch.state.ComposableConditionStateImage"]},{"name":"inline fun ComposableConditionStateImage(defaultImage: StateImage? = null, crossinline conditionBlock: ConditionStateImage.Builder.() -> Unit): ConditionStateImage","description":"com.github.panpf.sketch.state.ComposableConditionStateImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-composable-condition-state-image.html","searchKeys":["ComposableConditionStateImage","inline fun ComposableConditionStateImage(defaultImage: StateImage? = null, crossinline conditionBlock: ConditionStateImage.Builder.() -> Unit): ConditionStateImage","com.github.panpf.sketch.state.ComposableConditionStateImage"]},{"name":"inline fun ComposableImageOptions(crossinline block: ImageOptions.Builder.() -> Unit): ImageOptions","description":"com.github.panpf.sketch.request.ComposableImageOptions","location":"sketch-compose-core/com.github.panpf.sketch.request/-composable-image-options.html","searchKeys":["ComposableImageOptions","inline fun ComposableImageOptions(crossinline block: ImageOptions.Builder.() -> Unit): ImageOptions","com.github.panpf.sketch.request.ComposableImageOptions"]},{"name":"inline fun ComposableImageRequest(context: PlatformContext, uri: String?, crossinline block: ImageRequest.Builder.() -> Unit): ImageRequest","description":"com.github.panpf.sketch.request.ComposableImageRequest","location":"sketch-compose-core/com.github.panpf.sketch.request/-composable-image-request.html","searchKeys":["ComposableImageRequest","inline fun ComposableImageRequest(context: PlatformContext, uri: String?, crossinline block: ImageRequest.Builder.() -> Unit): ImageRequest","com.github.panpf.sketch.request.ComposableImageRequest"]},{"name":"inline fun ComposableImageRequest(uri: String?, crossinline block: ImageRequest.Builder.() -> Unit): ImageRequest","description":"com.github.panpf.sketch.request.ComposableImageRequest","location":"sketch-compose-core/com.github.panpf.sketch.request/-composable-image-request.html","searchKeys":["ComposableImageRequest","inline fun ComposableImageRequest(uri: String?, crossinline block: ImageRequest.Builder.() -> Unit): ImageRequest","com.github.panpf.sketch.request.ComposableImageRequest"]},{"name":"interface AnimatablePainter","description":"com.github.panpf.sketch.painter.AnimatablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animatable-painter/index.html","searchKeys":["AnimatablePainter","interface AnimatablePainter","com.github.panpf.sketch.painter.AnimatablePainter"]},{"name":"interface ComposeTarget : Target","description":"com.github.panpf.sketch.target.ComposeTarget","location":"sketch-compose-core/com.github.panpf.sketch.target/-compose-target/index.html","searchKeys":["ComposeTarget","interface ComposeTarget : Target","com.github.panpf.sketch.target.ComposeTarget"]},{"name":"interface SketchPainter","description":"com.github.panpf.sketch.painter.SketchPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-sketch-painter/index.html","searchKeys":["SketchPainter","interface SketchPainter","com.github.panpf.sketch.painter.SketchPainter"]},{"name":"interface SubcomposeAsyncImageScope : BoxScope","description":"com.github.panpf.sketch.SubcomposeAsyncImageScope","location":"sketch-compose-core/com.github.panpf.sketch/-subcompose-async-image-scope/index.html","searchKeys":["SubcomposeAsyncImageScope","interface SubcomposeAsyncImageScope : BoxScope","com.github.panpf.sketch.SubcomposeAsyncImageScope"]},{"name":"interface TransitionComposeTarget : TransitionTarget","description":"com.github.panpf.sketch.transition.TransitionComposeTarget","location":"sketch-compose-core/com.github.panpf.sketch.transition/-transition-compose-target/index.html","searchKeys":["TransitionComposeTarget","interface TransitionComposeTarget : TransitionTarget","com.github.panpf.sketch.transition.TransitionComposeTarget"]},{"name":"interface TransitionPainter","description":"com.github.panpf.sketch.transition.TransitionPainter","location":"sketch-compose-core/com.github.panpf.sketch.transition/-transition-painter/index.html","searchKeys":["TransitionPainter","interface TransitionPainter","com.github.panpf.sketch.transition.TransitionPainter"]},{"name":"object Companion","description":"com.github.panpf.sketch.painter.CrossfadePainter.Companion","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/-companion/index.html","searchKeys":["Companion","object Companion","com.github.panpf.sketch.painter.CrossfadePainter.Companion"]},{"name":"open class DrawablePainter(val drawable: Drawable) : Painter, RememberObserver","description":"com.github.panpf.sketch.painter.DrawablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-painter/index.html","searchKeys":["DrawablePainter","open class DrawablePainter(val drawable: Drawable) : Painter, RememberObserver","com.github.panpf.sketch.painter.DrawablePainter"]},{"name":"open class EquitablePainter(val painter: Painter, val equalityKey: Any) : PainterWrapper, SketchPainter, Key","description":"com.github.panpf.sketch.painter.EquitablePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-painter/index.html","searchKeys":["EquitablePainter","open class EquitablePainter(val painter: Painter, val equalityKey: Any) : PainterWrapper, SketchPainter, Key","com.github.panpf.sketch.painter.EquitablePainter"]},{"name":"open class IconPainter(val icon: EquitablePainter, val background: EquitablePainter? = null, val iconSize: Size? = null, val iconTint: Color? = null) : Painter, RememberObserver, SketchPainter, Key","description":"com.github.panpf.sketch.painter.IconPainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-painter/index.html","searchKeys":["IconPainter","open class IconPainter(val icon: EquitablePainter, val background: EquitablePainter? = null, val iconSize: Size? = null, val iconTint: Color? = null) : Painter, RememberObserver, SketchPainter, Key","com.github.panpf.sketch.painter.IconPainter"]},{"name":"open class PainterWrapper(val painter: Painter) : Painter","description":"com.github.panpf.sketch.painter.PainterWrapper","location":"sketch-compose-core/com.github.panpf.sketch.painter/-painter-wrapper/index.html","searchKeys":["PainterWrapper","open class PainterWrapper(val painter: Painter) : Painter","com.github.panpf.sketch.painter.PainterWrapper"]},{"name":"open class ResizePainter(val painter: Painter, val size: Size, val contentScale: ContentScale = ContentScale.Crop, val alignment: Alignment = Alignment.Center) : Painter, RememberObserver, SketchPainter","description":"com.github.panpf.sketch.painter.ResizePainter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-painter/index.html","searchKeys":["ResizePainter","open class ResizePainter(val painter: Painter, val size: Size, val contentScale: ContentScale = ContentScale.Crop, val alignment: Alignment = Alignment.Center) : Painter, RememberObserver, SketchPainter","com.github.panpf.sketch.painter.ResizePainter"]},{"name":"open fun isRunning(): Boolean","description":"com.github.panpf.sketch.painter.DrawableAnimatablePainter.isRunning","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-animatable-painter/is-running.html","searchKeys":["isRunning","open fun isRunning(): Boolean","com.github.panpf.sketch.painter.DrawableAnimatablePainter.isRunning"]},{"name":"open fun start()","description":"com.github.panpf.sketch.painter.DrawableAnimatablePainter.start","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-animatable-painter/start.html","searchKeys":["start","open fun start()","com.github.panpf.sketch.painter.DrawableAnimatablePainter.start"]},{"name":"open fun stop()","description":"com.github.panpf.sketch.painter.DrawableAnimatablePainter.stop","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-animatable-painter/stop.html","searchKeys":["stop","open fun stop()","com.github.panpf.sketch.painter.DrawableAnimatablePainter.stop"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.AsyncImagePainter.equals","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-painter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.AsyncImagePainter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.AnimatedImagePainter.equals","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animated-image-painter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.AnimatedImagePainter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.CrossfadePainter.equals","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.CrossfadePainter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.DrawableAnimatablePainter.equals","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-animatable-painter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.DrawableAnimatablePainter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.DrawablePainter.equals","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-painter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.DrawablePainter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.EquitableAnimatablePainter.equals","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-animatable-painter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.EquitableAnimatablePainter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.EquitablePainter.equals","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-painter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.EquitablePainter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.IconAnimatablePainter.equals","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-animatable-painter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.IconAnimatablePainter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.IconPainter.equals","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-painter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.IconPainter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.ImageBitmapPainter.equals","location":"sketch-compose-core/com.github.panpf.sketch.painter/-image-bitmap-painter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.ImageBitmapPainter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.PainterWrapper.equals","location":"sketch-compose-core/com.github.panpf.sketch.painter/-painter-wrapper/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.PainterWrapper.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.ResizeAnimatablePainter.equals","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-animatable-painter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.ResizeAnimatablePainter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.painter.ResizePainter.equals","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-painter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.painter.ResizePainter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.resize.AsyncImageSizeResolver.equals","location":"sketch-compose-core/com.github.panpf.sketch.resize/-async-image-size-resolver/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.resize.AsyncImageSizeResolver.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.state.IconAnimatablePainterStateImage.equals","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-animatable-painter-state-image/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.state.IconAnimatablePainterStateImage.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.state.IconPainterStateImage.equals","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-painter-state-image/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.state.IconPainterStateImage.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.target.AsyncImageTarget.equals","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.target.AsyncImageTarget.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.equals","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.equals"]},{"name":"open override fun assertActive()","description":"com.github.panpf.sketch.request.internal.ComposeRequestDelegate.assertActive","location":"sketch-compose-core/com.github.panpf.sketch.request.internal/-compose-request-delegate/assert-active.html","searchKeys":["assertActive","open override fun assertActive()","com.github.panpf.sketch.request.internal.ComposeRequestDelegate.assertActive"]},{"name":"open override fun checkValid(): Boolean","description":"com.github.panpf.sketch.PainterImage.checkValid","location":"sketch-compose-core/com.github.panpf.sketch/-painter-image/check-valid.html","searchKeys":["checkValid","open override fun checkValid(): Boolean","com.github.panpf.sketch.PainterImage.checkValid"]},{"name":"open override fun convertTransition(factory: Transition.Factory): Transition.Factory?","description":"com.github.panpf.sketch.target.ComposeTarget.convertTransition","location":"sketch-compose-core/com.github.panpf.sketch.target/-compose-target/convert-transition.html","searchKeys":["convertTransition","open override fun convertTransition(factory: Transition.Factory): Transition.Factory?","com.github.panpf.sketch.target.ComposeTarget.convertTransition"]},{"name":"open override fun create(sketch: Sketch, request: ImageRequest, target: Target, result: ImageResult): Transition?","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.create","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/-factory/create.html","searchKeys":["create","open override fun create(sketch: Sketch, request: ImageRequest, target: Target, result: ImageResult): Transition?","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.create"]},{"name":"open override fun finish()","description":"com.github.panpf.sketch.request.internal.ComposeRequestDelegate.finish","location":"sketch-compose-core/com.github.panpf.sketch.request.internal/-compose-request-delegate/finish.html","searchKeys":["finish","open override fun finish()","com.github.panpf.sketch.request.internal.ComposeRequestDelegate.finish"]},{"name":"open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image","description":"com.github.panpf.sketch.state.ColorPainterStateImage.getImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-color-painter-state-image/get-image.html","searchKeys":["getImage","open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image","com.github.panpf.sketch.state.ColorPainterStateImage.getImage"]},{"name":"open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image","description":"com.github.panpf.sketch.state.IconAnimatablePainterStateImage.getImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-animatable-painter-state-image/get-image.html","searchKeys":["getImage","open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image","com.github.panpf.sketch.state.IconAnimatablePainterStateImage.getImage"]},{"name":"open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image","description":"com.github.panpf.sketch.state.IconPainterStateImage.getImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-painter-state-image/get-image.html","searchKeys":["getImage","open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image","com.github.panpf.sketch.state.IconPainterStateImage.getImage"]},{"name":"open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image","description":"com.github.panpf.sketch.state.PainterStateImage.getImage","location":"sketch-compose-core/com.github.panpf.sketch.state/-painter-state-image/get-image.html","searchKeys":["getImage","open override fun getImage(sketch: Sketch, request: ImageRequest, throwable: Throwable?): Image","com.github.panpf.sketch.state.PainterStateImage.getImage"]},{"name":"open override fun getImageOptions(): ImageOptions?","description":"com.github.panpf.sketch.target.AsyncImageTarget.getImageOptions","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/get-image-options.html","searchKeys":["getImageOptions","open override fun getImageOptions(): ImageOptions?","com.github.panpf.sketch.target.AsyncImageTarget.getImageOptions"]},{"name":"open override fun getLifecycleResolver(): LifecycleResolver","description":"com.github.panpf.sketch.target.AsyncImageTarget.getLifecycleResolver","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/get-lifecycle-resolver.html","searchKeys":["getLifecycleResolver","open override fun getLifecycleResolver(): LifecycleResolver","com.github.panpf.sketch.target.AsyncImageTarget.getLifecycleResolver"]},{"name":"open override fun getListener(): AsyncImageListener","description":"com.github.panpf.sketch.target.AsyncImageTarget.getListener","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/get-listener.html","searchKeys":["getListener","open override fun getListener(): AsyncImageListener","com.github.panpf.sketch.target.AsyncImageTarget.getListener"]},{"name":"open override fun getProgressListener(): AsyncImageListener","description":"com.github.panpf.sketch.target.AsyncImageTarget.getProgressListener","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/get-progress-listener.html","searchKeys":["getProgressListener","open override fun getProgressListener(): AsyncImageListener","com.github.panpf.sketch.target.AsyncImageTarget.getProgressListener"]},{"name":"open override fun getRequestManager(): ComposeRequestManager","description":"com.github.panpf.sketch.target.AsyncImageTarget.getRequestManager","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/get-request-manager.html","searchKeys":["getRequestManager","open override fun getRequestManager(): ComposeRequestManager","com.github.panpf.sketch.target.AsyncImageTarget.getRequestManager"]},{"name":"open override fun getResizeOnDrawHelper(): ResizeOnDrawHelper?","description":"com.github.panpf.sketch.target.ComposeTarget.getResizeOnDrawHelper","location":"sketch-compose-core/com.github.panpf.sketch.target/-compose-target/get-resize-on-draw-helper.html","searchKeys":["getResizeOnDrawHelper","open override fun getResizeOnDrawHelper(): ResizeOnDrawHelper?","com.github.panpf.sketch.target.ComposeTarget.getResizeOnDrawHelper"]},{"name":"open override fun getScaleDecider(): ScaleDecider?","description":"com.github.panpf.sketch.target.ComposeTarget.getScaleDecider","location":"sketch-compose-core/com.github.panpf.sketch.target/-compose-target/get-scale-decider.html","searchKeys":["getScaleDecider","open override fun getScaleDecider(): ScaleDecider?","com.github.panpf.sketch.target.ComposeTarget.getScaleDecider"]},{"name":"open override fun getSizeResolver(): AsyncImageSizeResolver?","description":"com.github.panpf.sketch.target.AsyncImageTarget.getSizeResolver","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/get-size-resolver.html","searchKeys":["getSizeResolver","open override fun getSizeResolver(): AsyncImageSizeResolver?","com.github.panpf.sketch.target.AsyncImageTarget.getSizeResolver"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.AsyncImagePainter.hashCode","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-painter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.AsyncImagePainter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.AnimatedImagePainter.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animated-image-painter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.painter.AnimatedImagePainter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.CrossfadePainter.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.painter.CrossfadePainter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.DrawableAnimatablePainter.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-animatable-painter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.painter.DrawableAnimatablePainter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.DrawablePainter.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-painter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.painter.DrawablePainter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.EquitableAnimatablePainter.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-animatable-painter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.painter.EquitableAnimatablePainter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.EquitablePainter.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-painter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.painter.EquitablePainter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.IconAnimatablePainter.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-animatable-painter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.painter.IconAnimatablePainter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.IconPainter.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-painter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.painter.IconPainter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.ImageBitmapPainter.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.painter/-image-bitmap-painter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.painter.ImageBitmapPainter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.PainterWrapper.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.painter/-painter-wrapper/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.painter.PainterWrapper.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.ResizeAnimatablePainter.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-animatable-painter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.painter.ResizeAnimatablePainter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.painter.ResizePainter.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-painter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.painter.ResizePainter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.resize.AsyncImageSizeResolver.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.resize/-async-image-size-resolver/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.resize.AsyncImageSizeResolver.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.state.IconAnimatablePainterStateImage.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-animatable-painter-state-image/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.state.IconAnimatablePainterStateImage.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.state.IconPainterStateImage.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-painter-state-image/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.state.IconPainterStateImage.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.target.AsyncImageTarget.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.target.AsyncImageTarget.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.hashCode","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.hashCode"]},{"name":"open override fun isAttached(): Boolean","description":"com.github.panpf.sketch.request.internal.ComposeRequestManager.isAttached","location":"sketch-compose-core/com.github.panpf.sketch.request.internal/-compose-request-manager/is-attached.html","searchKeys":["isAttached","open override fun isAttached(): Boolean","com.github.panpf.sketch.request.internal.ComposeRequestManager.isAttached"]},{"name":"open override fun isRunning(): Boolean","description":"com.github.panpf.sketch.painter.AnimatedImagePainter.isRunning","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animated-image-painter/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","com.github.panpf.sketch.painter.AnimatedImagePainter.isRunning"]},{"name":"open override fun isRunning(): Boolean","description":"com.github.panpf.sketch.painter.CrossfadePainter.isRunning","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","com.github.panpf.sketch.painter.CrossfadePainter.isRunning"]},{"name":"open override fun isRunning(): Boolean","description":"com.github.panpf.sketch.painter.EquitableAnimatablePainter.isRunning","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-animatable-painter/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","com.github.panpf.sketch.painter.EquitableAnimatablePainter.isRunning"]},{"name":"open override fun isRunning(): Boolean","description":"com.github.panpf.sketch.painter.IconAnimatablePainter.isRunning","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-animatable-painter/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","com.github.panpf.sketch.painter.IconAnimatablePainter.isRunning"]},{"name":"open override fun isRunning(): Boolean","description":"com.github.panpf.sketch.painter.ResizeAnimatablePainter.isRunning","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-animatable-painter/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","com.github.panpf.sketch.painter.ResizeAnimatablePainter.isRunning"]},{"name":"open override fun newRequestDelegate(sketch: Sketch, initialRequest: ImageRequest, job: Job): RequestDelegate","description":"com.github.panpf.sketch.target.ComposeTarget.newRequestDelegate","location":"sketch-compose-core/com.github.panpf.sketch.target/-compose-target/new-request-delegate.html","searchKeys":["newRequestDelegate","open override fun newRequestDelegate(sketch: Sketch, initialRequest: ImageRequest, job: Job): RequestDelegate","com.github.panpf.sketch.target.ComposeTarget.newRequestDelegate"]},{"name":"open override fun onAbandoned()","description":"com.github.panpf.sketch.AsyncImageState.onAbandoned","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/on-abandoned.html","searchKeys":["onAbandoned","open override fun onAbandoned()","com.github.panpf.sketch.AsyncImageState.onAbandoned"]},{"name":"open override fun onAbandoned()","description":"com.github.panpf.sketch.painter.AnimatedImagePainter.onAbandoned","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animated-image-painter/on-abandoned.html","searchKeys":["onAbandoned","open override fun onAbandoned()","com.github.panpf.sketch.painter.AnimatedImagePainter.onAbandoned"]},{"name":"open override fun onAbandoned()","description":"com.github.panpf.sketch.painter.CrossfadePainter.onAbandoned","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/on-abandoned.html","searchKeys":["onAbandoned","open override fun onAbandoned()","com.github.panpf.sketch.painter.CrossfadePainter.onAbandoned"]},{"name":"open override fun onAbandoned()","description":"com.github.panpf.sketch.painter.DrawablePainter.onAbandoned","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-painter/on-abandoned.html","searchKeys":["onAbandoned","open override fun onAbandoned()","com.github.panpf.sketch.painter.DrawablePainter.onAbandoned"]},{"name":"open override fun onAbandoned()","description":"com.github.panpf.sketch.painter.IconPainter.onAbandoned","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-painter/on-abandoned.html","searchKeys":["onAbandoned","open override fun onAbandoned()","com.github.panpf.sketch.painter.IconPainter.onAbandoned"]},{"name":"open override fun onAbandoned()","description":"com.github.panpf.sketch.painter.ResizePainter.onAbandoned","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-painter/on-abandoned.html","searchKeys":["onAbandoned","open override fun onAbandoned()","com.github.panpf.sketch.painter.ResizePainter.onAbandoned"]},{"name":"open override fun onAttachedChanged(attached: Boolean)","description":"com.github.panpf.sketch.target.GenericComposeTarget.onAttachedChanged","location":"sketch-compose-core/com.github.panpf.sketch.target/-generic-compose-target/on-attached-changed.html","searchKeys":["onAttachedChanged","open override fun onAttachedChanged(attached: Boolean)","com.github.panpf.sketch.target.GenericComposeTarget.onAttachedChanged"]},{"name":"open override fun onCancel(request: ImageRequest)","description":"com.github.panpf.sketch.target.internal.AsyncImageListener.onCancel","location":"sketch-compose-core/com.github.panpf.sketch.target.internal/-async-image-listener/on-cancel.html","searchKeys":["onCancel","open override fun onCancel(request: ImageRequest)","com.github.panpf.sketch.target.internal.AsyncImageListener.onCancel"]},{"name":"open override fun onError(request: ImageRequest, error: ImageResult.Error)","description":"com.github.panpf.sketch.target.internal.AsyncImageListener.onError","location":"sketch-compose-core/com.github.panpf.sketch.target.internal/-async-image-listener/on-error.html","searchKeys":["onError","open override fun onError(request: ImageRequest, error: ImageResult.Error)","com.github.panpf.sketch.target.internal.AsyncImageListener.onError"]},{"name":"open override fun onError(sketch: Sketch, request: ImageRequest, error: ImageResult.Error, image: Image?)","description":"com.github.panpf.sketch.target.AsyncImageTarget.onError","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/on-error.html","searchKeys":["onError","open override fun onError(sketch: Sketch, request: ImageRequest, error: ImageResult.Error, image: Image?)","com.github.panpf.sketch.target.AsyncImageTarget.onError"]},{"name":"open override fun onError(sketch: Sketch, request: ImageRequest, error: ImageResult.Error, image: Image?)","description":"com.github.panpf.sketch.target.GenericComposeTarget.onError","location":"sketch-compose-core/com.github.panpf.sketch.target/-generic-compose-target/on-error.html","searchKeys":["onError","open override fun onError(sketch: Sketch, request: ImageRequest, error: ImageResult.Error, image: Image?)","com.github.panpf.sketch.target.GenericComposeTarget.onError"]},{"name":"open override fun onForgotten()","description":"com.github.panpf.sketch.AsyncImageState.onForgotten","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/on-forgotten.html","searchKeys":["onForgotten","open override fun onForgotten()","com.github.panpf.sketch.AsyncImageState.onForgotten"]},{"name":"open override fun onForgotten()","description":"com.github.panpf.sketch.painter.AnimatedImagePainter.onForgotten","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animated-image-painter/on-forgotten.html","searchKeys":["onForgotten","open override fun onForgotten()","com.github.panpf.sketch.painter.AnimatedImagePainter.onForgotten"]},{"name":"open override fun onForgotten()","description":"com.github.panpf.sketch.painter.CrossfadePainter.onForgotten","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/on-forgotten.html","searchKeys":["onForgotten","open override fun onForgotten()","com.github.panpf.sketch.painter.CrossfadePainter.onForgotten"]},{"name":"open override fun onForgotten()","description":"com.github.panpf.sketch.painter.DrawablePainter.onForgotten","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-painter/on-forgotten.html","searchKeys":["onForgotten","open override fun onForgotten()","com.github.panpf.sketch.painter.DrawablePainter.onForgotten"]},{"name":"open override fun onForgotten()","description":"com.github.panpf.sketch.painter.IconPainter.onForgotten","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-painter/on-forgotten.html","searchKeys":["onForgotten","open override fun onForgotten()","com.github.panpf.sketch.painter.IconPainter.onForgotten"]},{"name":"open override fun onForgotten()","description":"com.github.panpf.sketch.painter.ResizePainter.onForgotten","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-painter/on-forgotten.html","searchKeys":["onForgotten","open override fun onForgotten()","com.github.panpf.sketch.painter.ResizePainter.onForgotten"]},{"name":"open override fun onRemembered()","description":"com.github.panpf.sketch.AsyncImageState.onRemembered","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/on-remembered.html","searchKeys":["onRemembered","open override fun onRemembered()","com.github.panpf.sketch.AsyncImageState.onRemembered"]},{"name":"open override fun onRemembered()","description":"com.github.panpf.sketch.painter.AnimatedImagePainter.onRemembered","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animated-image-painter/on-remembered.html","searchKeys":["onRemembered","open override fun onRemembered()","com.github.panpf.sketch.painter.AnimatedImagePainter.onRemembered"]},{"name":"open override fun onRemembered()","description":"com.github.panpf.sketch.painter.CrossfadePainter.onRemembered","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/on-remembered.html","searchKeys":["onRemembered","open override fun onRemembered()","com.github.panpf.sketch.painter.CrossfadePainter.onRemembered"]},{"name":"open override fun onRemembered()","description":"com.github.panpf.sketch.painter.DrawablePainter.onRemembered","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-painter/on-remembered.html","searchKeys":["onRemembered","open override fun onRemembered()","com.github.panpf.sketch.painter.DrawablePainter.onRemembered"]},{"name":"open override fun onRemembered()","description":"com.github.panpf.sketch.painter.IconPainter.onRemembered","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-painter/on-remembered.html","searchKeys":["onRemembered","open override fun onRemembered()","com.github.panpf.sketch.painter.IconPainter.onRemembered"]},{"name":"open override fun onRemembered()","description":"com.github.panpf.sketch.painter.ResizePainter.onRemembered","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-painter/on-remembered.html","searchKeys":["onRemembered","open override fun onRemembered()","com.github.panpf.sketch.painter.ResizePainter.onRemembered"]},{"name":"open override fun onStart(request: ImageRequest)","description":"com.github.panpf.sketch.target.internal.AsyncImageListener.onStart","location":"sketch-compose-core/com.github.panpf.sketch.target.internal/-async-image-listener/on-start.html","searchKeys":["onStart","open override fun onStart(request: ImageRequest)","com.github.panpf.sketch.target.internal.AsyncImageListener.onStart"]},{"name":"open override fun onStart(sketch: Sketch, request: ImageRequest, placeholder: Image?)","description":"com.github.panpf.sketch.target.AsyncImageTarget.onStart","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/on-start.html","searchKeys":["onStart","open override fun onStart(sketch: Sketch, request: ImageRequest, placeholder: Image?)","com.github.panpf.sketch.target.AsyncImageTarget.onStart"]},{"name":"open override fun onStart(sketch: Sketch, request: ImageRequest, placeholder: Image?)","description":"com.github.panpf.sketch.target.GenericComposeTarget.onStart","location":"sketch-compose-core/com.github.panpf.sketch.target/-generic-compose-target/on-start.html","searchKeys":["onStart","open override fun onStart(sketch: Sketch, request: ImageRequest, placeholder: Image?)","com.github.panpf.sketch.target.GenericComposeTarget.onStart"]},{"name":"open override fun onStateChanged(source: LifecycleOwner, event: Lifecycle.Event)","description":"com.github.panpf.sketch.target.GenericComposeTarget.onStateChanged","location":"sketch-compose-core/com.github.panpf.sketch.target/-generic-compose-target/on-state-changed.html","searchKeys":["onStateChanged","open override fun onStateChanged(source: LifecycleOwner, event: Lifecycle.Event)","com.github.panpf.sketch.target.GenericComposeTarget.onStateChanged"]},{"name":"open override fun onSuccess(request: ImageRequest, result: ImageResult.Success)","description":"com.github.panpf.sketch.target.internal.AsyncImageListener.onSuccess","location":"sketch-compose-core/com.github.panpf.sketch.target.internal/-async-image-listener/on-success.html","searchKeys":["onSuccess","open override fun onSuccess(request: ImageRequest, result: ImageResult.Success)","com.github.panpf.sketch.target.internal.AsyncImageListener.onSuccess"]},{"name":"open override fun onSuccess(sketch: Sketch, request: ImageRequest, result: ImageResult.Success, image: Image)","description":"com.github.panpf.sketch.target.AsyncImageTarget.onSuccess","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/on-success.html","searchKeys":["onSuccess","open override fun onSuccess(sketch: Sketch, request: ImageRequest, result: ImageResult.Success, image: Image)","com.github.panpf.sketch.target.AsyncImageTarget.onSuccess"]},{"name":"open override fun onSuccess(sketch: Sketch, request: ImageRequest, result: ImageResult.Success, image: Image)","description":"com.github.panpf.sketch.target.GenericComposeTarget.onSuccess","location":"sketch-compose-core/com.github.panpf.sketch.target/-generic-compose-target/on-success.html","searchKeys":["onSuccess","open override fun onSuccess(sketch: Sketch, request: ImageRequest, result: ImageResult.Success, image: Image)","com.github.panpf.sketch.target.GenericComposeTarget.onSuccess"]},{"name":"open override fun onUpdateProgress(request: ImageRequest, progress: Progress)","description":"com.github.panpf.sketch.target.internal.AsyncImageListener.onUpdateProgress","location":"sketch-compose-core/com.github.panpf.sketch.target.internal/-async-image-listener/on-update-progress.html","searchKeys":["onUpdateProgress","open override fun onUpdateProgress(request: ImageRequest, progress: Progress)","com.github.panpf.sketch.target.internal.AsyncImageListener.onUpdateProgress"]},{"name":"open override fun resize(request: ImageRequest, size: Size, image: Image): Image","description":"com.github.panpf.sketch.resize.ComposeResizeOnDrawHelper.resize","location":"sketch-compose-core/com.github.panpf.sketch.resize/-compose-resize-on-draw-helper/resize.html","searchKeys":["resize","open override fun resize(request: ImageRequest, size: Size, image: Image): Image","com.github.panpf.sketch.resize.ComposeResizeOnDrawHelper.resize"]},{"name":"open override fun start()","description":"com.github.panpf.sketch.painter.AnimatedImagePainter.start","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animated-image-painter/start.html","searchKeys":["start","open override fun start()","com.github.panpf.sketch.painter.AnimatedImagePainter.start"]},{"name":"open override fun start()","description":"com.github.panpf.sketch.painter.CrossfadePainter.start","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/start.html","searchKeys":["start","open override fun start()","com.github.panpf.sketch.painter.CrossfadePainter.start"]},{"name":"open override fun start()","description":"com.github.panpf.sketch.painter.EquitableAnimatablePainter.start","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-animatable-painter/start.html","searchKeys":["start","open override fun start()","com.github.panpf.sketch.painter.EquitableAnimatablePainter.start"]},{"name":"open override fun start()","description":"com.github.panpf.sketch.painter.IconAnimatablePainter.start","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-animatable-painter/start.html","searchKeys":["start","open override fun start()","com.github.panpf.sketch.painter.IconAnimatablePainter.start"]},{"name":"open override fun start()","description":"com.github.panpf.sketch.painter.ResizeAnimatablePainter.start","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-animatable-painter/start.html","searchKeys":["start","open override fun start()","com.github.panpf.sketch.painter.ResizeAnimatablePainter.start"]},{"name":"open override fun stop()","description":"com.github.panpf.sketch.painter.AnimatedImagePainter.stop","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animated-image-painter/stop.html","searchKeys":["stop","open override fun stop()","com.github.panpf.sketch.painter.AnimatedImagePainter.stop"]},{"name":"open override fun stop()","description":"com.github.panpf.sketch.painter.CrossfadePainter.stop","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/stop.html","searchKeys":["stop","open override fun stop()","com.github.panpf.sketch.painter.CrossfadePainter.stop"]},{"name":"open override fun stop()","description":"com.github.panpf.sketch.painter.EquitableAnimatablePainter.stop","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-animatable-painter/stop.html","searchKeys":["stop","open override fun stop()","com.github.panpf.sketch.painter.EquitableAnimatablePainter.stop"]},{"name":"open override fun stop()","description":"com.github.panpf.sketch.painter.IconAnimatablePainter.stop","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-animatable-painter/stop.html","searchKeys":["stop","open override fun stop()","com.github.panpf.sketch.painter.IconAnimatablePainter.stop"]},{"name":"open override fun stop()","description":"com.github.panpf.sketch.painter.ResizeAnimatablePainter.stop","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-animatable-painter/stop.html","searchKeys":["stop","open override fun stop()","com.github.panpf.sketch.painter.ResizeAnimatablePainter.stop"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.AsyncImagePainter.toString","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-painter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.AsyncImagePainter.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.AsyncImageState.toString","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.AsyncImageState.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.PainterImage.toString","location":"sketch-compose-core/com.github.panpf.sketch/-painter-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.PainterImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.painter.AnimatedImagePainter.toString","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animated-image-painter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.painter.AnimatedImagePainter.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.painter.CrossfadePainter.toString","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.painter.CrossfadePainter.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.painter.DrawableAnimatablePainter.toString","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-animatable-painter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.painter.DrawableAnimatablePainter.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.painter.DrawablePainter.toString","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-painter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.painter.DrawablePainter.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.painter.EquitableAnimatablePainter.toString","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-animatable-painter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.painter.EquitableAnimatablePainter.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.painter.EquitablePainter.toString","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-painter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.painter.EquitablePainter.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.painter.IconAnimatablePainter.toString","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-animatable-painter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.painter.IconAnimatablePainter.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.painter.IconPainter.toString","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-painter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.painter.IconPainter.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.painter.ImageBitmapPainter.toString","location":"sketch-compose-core/com.github.panpf.sketch.painter/-image-bitmap-painter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.painter.ImageBitmapPainter.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.painter.PainterWrapper.toString","location":"sketch-compose-core/com.github.panpf.sketch.painter/-painter-wrapper/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.painter.PainterWrapper.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.painter.ResizeAnimatablePainter.toString","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-animatable-painter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.painter.ResizeAnimatablePainter.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.painter.ResizePainter.toString","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-painter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.painter.ResizePainter.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.resize.AsyncImageSizeResolver.toString","location":"sketch-compose-core/com.github.panpf.sketch.resize/-async-image-size-resolver/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.resize.AsyncImageSizeResolver.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.resize.ComposeResizeOnDrawHelper.toString","location":"sketch-compose-core/com.github.panpf.sketch.resize/-compose-resize-on-draw-helper/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.resize.ComposeResizeOnDrawHelper.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.state.ColorPainterStateImage.toString","location":"sketch-compose-core/com.github.panpf.sketch.state/-color-painter-state-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.state.ColorPainterStateImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.state.IconAnimatablePainterStateImage.toString","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-animatable-painter-state-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.state.IconAnimatablePainterStateImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.state.IconPainterStateImage.toString","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-painter-state-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.state.IconPainterStateImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.state.PainterStateImage.toString","location":"sketch-compose-core/com.github.panpf.sketch.state/-painter-state-image/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.state.PainterStateImage.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.target.AsyncImageTarget.toString","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.target.AsyncImageTarget.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.target.internal.AsyncImageListener.toString","location":"sketch-compose-core/com.github.panpf.sketch.target.internal/-async-image-listener/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.target.internal.AsyncImageListener.toString"]},{"name":"open override fun toString(): String","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.toString","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.toString"]},{"name":"open override fun transition()","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.transition","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/transition.html","searchKeys":["transition","open override fun transition()","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.transition"]},{"name":"open override val alignment: Alignment","description":"com.github.panpf.sketch.target.AsyncImageTarget.alignment","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/alignment.html","searchKeys":["alignment","open override val alignment: Alignment","com.github.panpf.sketch.target.AsyncImageTarget.alignment"]},{"name":"open override val byteCount: Long","description":"com.github.panpf.sketch.PainterImage.byteCount","location":"sketch-compose-core/com.github.panpf.sketch/-painter-image/byte-count.html","searchKeys":["byteCount","open override val byteCount: Long","com.github.panpf.sketch.PainterImage.byteCount"]},{"name":"open override val contentScale: ContentScale","description":"com.github.panpf.sketch.target.AsyncImageTarget.contentScale","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/content-scale.html","searchKeys":["contentScale","open override val contentScale: ContentScale","com.github.panpf.sketch.target.AsyncImageTarget.contentScale"]},{"name":"open override val currentImage: Image?","description":"com.github.panpf.sketch.target.ComposeTarget.currentImage","location":"sketch-compose-core/com.github.panpf.sketch.target/-compose-target/current-image.html","searchKeys":["currentImage","open override val currentImage: Image?","com.github.panpf.sketch.target.ComposeTarget.currentImage"]},{"name":"open override val filterQuality: FilterQuality","description":"com.github.panpf.sketch.target.AsyncImageTarget.filterQuality","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/filter-quality.html","searchKeys":["filterQuality","open override val filterQuality: FilterQuality","com.github.panpf.sketch.target.AsyncImageTarget.filterQuality"]},{"name":"open override val fitScale: Boolean","description":"com.github.panpf.sketch.target.GenericComposeTarget.fitScale","location":"sketch-compose-core/com.github.panpf.sketch.target/-generic-compose-target/fit-scale.html","searchKeys":["fitScale","open override val fitScale: Boolean","com.github.panpf.sketch.target.GenericComposeTarget.fitScale"]},{"name":"open override val height: Int","description":"com.github.panpf.sketch.PainterImage.height","location":"sketch-compose-core/com.github.panpf.sketch/-painter-image/height.html","searchKeys":["height","open override val height: Int","com.github.panpf.sketch.PainterImage.height"]},{"name":"open override val intrinsicSize: Size","description":"com.github.panpf.sketch.AsyncImagePainter.intrinsicSize","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-painter/intrinsic-size.html","searchKeys":["intrinsicSize","open override val intrinsicSize: Size","com.github.panpf.sketch.AsyncImagePainter.intrinsicSize"]},{"name":"open override val intrinsicSize: Size","description":"com.github.panpf.sketch.painter.AnimatedImagePainter.intrinsicSize","location":"sketch-compose-core/com.github.panpf.sketch.painter/-animated-image-painter/intrinsic-size.html","searchKeys":["intrinsicSize","open override val intrinsicSize: Size","com.github.panpf.sketch.painter.AnimatedImagePainter.intrinsicSize"]},{"name":"open override val intrinsicSize: Size","description":"com.github.panpf.sketch.painter.CrossfadePainter.intrinsicSize","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/intrinsic-size.html","searchKeys":["intrinsicSize","open override val intrinsicSize: Size","com.github.panpf.sketch.painter.CrossfadePainter.intrinsicSize"]},{"name":"open override val intrinsicSize: Size","description":"com.github.panpf.sketch.painter.DrawablePainter.intrinsicSize","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-painter/intrinsic-size.html","searchKeys":["intrinsicSize","open override val intrinsicSize: Size","com.github.panpf.sketch.painter.DrawablePainter.intrinsicSize"]},{"name":"open override val intrinsicSize: Size","description":"com.github.panpf.sketch.painter.IconPainter.intrinsicSize","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-painter/intrinsic-size.html","searchKeys":["intrinsicSize","open override val intrinsicSize: Size","com.github.panpf.sketch.painter.IconPainter.intrinsicSize"]},{"name":"open override val intrinsicSize: Size","description":"com.github.panpf.sketch.painter.ImageBitmapPainter.intrinsicSize","location":"sketch-compose-core/com.github.panpf.sketch.painter/-image-bitmap-painter/intrinsic-size.html","searchKeys":["intrinsicSize","open override val intrinsicSize: Size","com.github.panpf.sketch.painter.ImageBitmapPainter.intrinsicSize"]},{"name":"open override val intrinsicSize: Size","description":"com.github.panpf.sketch.painter.PainterWrapper.intrinsicSize","location":"sketch-compose-core/com.github.panpf.sketch.painter/-painter-wrapper/intrinsic-size.html","searchKeys":["intrinsicSize","open override val intrinsicSize: Size","com.github.panpf.sketch.painter.PainterWrapper.intrinsicSize"]},{"name":"open override val intrinsicSize: Size","description":"com.github.panpf.sketch.painter.ResizePainter.intrinsicSize","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-painter/intrinsic-size.html","searchKeys":["intrinsicSize","open override val intrinsicSize: Size","com.github.panpf.sketch.painter.ResizePainter.intrinsicSize"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.painter.EquitableAnimatablePainter.key","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-animatable-painter/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.painter.EquitableAnimatablePainter.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.painter.EquitablePainter.key","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-painter/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.painter.EquitablePainter.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.painter.IconAnimatablePainter.key","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-animatable-painter/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.painter.IconAnimatablePainter.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.painter.IconPainter.key","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-painter/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.painter.IconPainter.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.resize.AsyncImageSizeResolver.key","location":"sketch-compose-core/com.github.panpf.sketch.resize/-async-image-size-resolver/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.resize.AsyncImageSizeResolver.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.resize.ComposeResizeOnDrawHelper.key","location":"sketch-compose-core/com.github.panpf.sketch.resize/-compose-resize-on-draw-helper/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.resize.ComposeResizeOnDrawHelper.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.state.ColorPainterStateImage.key","location":"sketch-compose-core/com.github.panpf.sketch.state/-color-painter-state-image/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.state.ColorPainterStateImage.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.state.IconAnimatablePainterStateImage.key","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-animatable-painter-state-image/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.state.IconAnimatablePainterStateImage.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.state.IconPainterStateImage.key","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-painter-state-image/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.state.IconPainterStateImage.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.state.PainterStateImage.key","location":"sketch-compose-core/com.github.panpf.sketch.state/-painter-state-image/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.state.PainterStateImage.key"]},{"name":"open override val key: String","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.key","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/-factory/key.html","searchKeys":["key","open override val key: String","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.key"]},{"name":"open override val painter: Painter","description":"com.github.panpf.sketch.PainterState.Success.painter","location":"sketch-compose-core/com.github.panpf.sketch/-painter-state/-success/painter.html","searchKeys":["painter","open override val painter: Painter","com.github.panpf.sketch.PainterState.Success.painter"]},{"name":"open override val painter: Painter?","description":"com.github.panpf.sketch.PainterState.Error.painter","location":"sketch-compose-core/com.github.panpf.sketch/-painter-state/-error/painter.html","searchKeys":["painter","open override val painter: Painter?","com.github.panpf.sketch.PainterState.Error.painter"]},{"name":"open override val painter: Painter?","description":"com.github.panpf.sketch.PainterState.Loading.painter","location":"sketch-compose-core/com.github.panpf.sketch/-painter-state/-loading/painter.html","searchKeys":["painter","open override val painter: Painter?","com.github.panpf.sketch.PainterState.Loading.painter"]},{"name":"open override val painter: Painter?","description":"com.github.panpf.sketch.target.AsyncImageTarget.painter","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/painter.html","searchKeys":["painter","open override val painter: Painter?","com.github.panpf.sketch.target.AsyncImageTarget.painter"]},{"name":"open override val shareable: Boolean","description":"com.github.panpf.sketch.PainterImage.shareable","location":"sketch-compose-core/com.github.panpf.sketch/-painter-image/shareable.html","searchKeys":["shareable","open override val shareable: Boolean","com.github.panpf.sketch.PainterImage.shareable"]},{"name":"open override val width: Int","description":"com.github.panpf.sketch.PainterImage.width","location":"sketch-compose-core/com.github.panpf.sketch/-painter-image/width.html","searchKeys":["width","open override val width: Int","com.github.panpf.sketch.PainterImage.width"]},{"name":"open suspend override fun size(): Size","description":"com.github.panpf.sketch.resize.AsyncImageSizeResolver.size","location":"sketch-compose-core/com.github.panpf.sketch.resize/-async-image-size-resolver/size.html","searchKeys":["size","open suspend override fun size(): Size","com.github.panpf.sketch.resize.AsyncImageSizeResolver.size"]},{"name":"open val filterQuality: FilterQuality","description":"com.github.panpf.sketch.target.GenericComposeTarget.filterQuality","location":"sketch-compose-core/com.github.panpf.sketch.target/-generic-compose-target/filter-quality.html","searchKeys":["filterQuality","open val filterQuality: FilterQuality","com.github.panpf.sketch.target.GenericComposeTarget.filterQuality"]},{"name":"sealed interface PainterState","description":"com.github.panpf.sketch.PainterState","location":"sketch-compose-core/com.github.panpf.sketch/-painter-state/index.html","searchKeys":["PainterState","sealed interface PainterState","com.github.panpf.sketch.PainterState"]},{"name":"val ContentScale.fitScale: Boolean","description":"com.github.panpf.sketch.util.fitScale","location":"sketch-compose-core/com.github.panpf.sketch.util/fit-scale.html","searchKeys":["fitScale","val ContentScale.fitScale: Boolean","com.github.panpf.sketch.util.fitScale"]},{"name":"val PainterState.name: String","description":"com.github.panpf.sketch.name","location":"sketch-compose-core/com.github.panpf.sketch/name.html","searchKeys":["name","val PainterState.name: String","com.github.panpf.sketch.name"]},{"name":"val alignment: Alignment","description":"com.github.panpf.sketch.painter.CrossfadePainter.alignment","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/alignment.html","searchKeys":["alignment","val alignment: Alignment","com.github.panpf.sketch.painter.CrossfadePainter.alignment"]},{"name":"val alignment: Alignment","description":"com.github.panpf.sketch.painter.ResizePainter.alignment","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-painter/alignment.html","searchKeys":["alignment","val alignment: Alignment","com.github.panpf.sketch.painter.ResizePainter.alignment"]},{"name":"val alignment: Alignment","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.alignment","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/alignment.html","searchKeys":["alignment","val alignment: Alignment","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.alignment"]},{"name":"val alwaysUse: Boolean","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.alwaysUse","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/-factory/always-use.html","searchKeys":["alwaysUse","val alwaysUse: Boolean","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.alwaysUse"]},{"name":"val asyncImageTarget: AsyncImageTarget","description":"com.github.panpf.sketch.target.internal.AsyncImageListener.asyncImageTarget","location":"sketch-compose-core/com.github.panpf.sketch.target.internal/-async-image-listener/async-image-target.html","searchKeys":["asyncImageTarget","val asyncImageTarget: AsyncImageTarget","com.github.panpf.sketch.target.internal.AsyncImageListener.asyncImageTarget"]},{"name":"val background: EquitablePainter? = null","description":"com.github.panpf.sketch.painter.IconPainter.background","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-painter/background.html","searchKeys":["background","val background: EquitablePainter? = null","com.github.panpf.sketch.painter.IconPainter.background"]},{"name":"val background: EquitablePainter? = null","description":"com.github.panpf.sketch.state.IconAnimatablePainterStateImage.background","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-animatable-painter-state-image/background.html","searchKeys":["background","val background: EquitablePainter? = null","com.github.panpf.sketch.state.IconAnimatablePainterStateImage.background"]},{"name":"val background: EquitablePainter? = null","description":"com.github.panpf.sketch.state.IconPainterStateImage.background","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-painter-state-image/background.html","searchKeys":["background","val background: EquitablePainter? = null","com.github.panpf.sketch.state.IconPainterStateImage.background"]},{"name":"val bitmap: ImageBitmap","description":"com.github.panpf.sketch.painter.ImageBitmapPainter.bitmap","location":"sketch-compose-core/com.github.panpf.sketch.painter/-image-bitmap-painter/bitmap.html","searchKeys":["bitmap","val bitmap: ImageBitmap","com.github.panpf.sketch.painter.ImageBitmapPainter.bitmap"]},{"name":"val color: Color","description":"com.github.panpf.sketch.state.ColorPainterStateImage.color","location":"sketch-compose-core/com.github.panpf.sketch.state/-color-painter-state-image/color.html","searchKeys":["color","val color: Color","com.github.panpf.sketch.state.ColorPainterStateImage.color"]},{"name":"val contentScale: ContentScale","description":"com.github.panpf.sketch.painter.CrossfadePainter.contentScale","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/content-scale.html","searchKeys":["contentScale","val contentScale: ContentScale","com.github.panpf.sketch.painter.CrossfadePainter.contentScale"]},{"name":"val contentScale: ContentScale","description":"com.github.panpf.sketch.painter.ResizePainter.contentScale","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-painter/content-scale.html","searchKeys":["contentScale","val contentScale: ContentScale","com.github.panpf.sketch.painter.ResizePainter.contentScale"]},{"name":"val contentScale: ContentScale","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.contentScale","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/content-scale.html","searchKeys":["contentScale","val contentScale: ContentScale","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.contentScale"]},{"name":"val context: PlatformContext","description":"com.github.panpf.sketch.AsyncImageState.context","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/context.html","searchKeys":["context","val context: PlatformContext","com.github.panpf.sketch.AsyncImageState.context"]},{"name":"val drawable: Drawable","description":"com.github.panpf.sketch.painter.DrawablePainter.drawable","location":"sketch-compose-core/com.github.panpf.sketch.painter/-drawable-painter/drawable.html","searchKeys":["drawable","val drawable: Drawable","com.github.panpf.sketch.painter.DrawablePainter.drawable"]},{"name":"val durationMillis: Int","description":"com.github.panpf.sketch.painter.CrossfadePainter.durationMillis","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/duration-millis.html","searchKeys":["durationMillis","val durationMillis: Int","com.github.panpf.sketch.painter.CrossfadePainter.durationMillis"]},{"name":"val durationMillis: Int","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.durationMillis","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/-factory/duration-millis.html","searchKeys":["durationMillis","val durationMillis: Int","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.durationMillis"]},{"name":"val durationMillis: Int","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.durationMillis","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/duration-millis.html","searchKeys":["durationMillis","val durationMillis: Int","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.durationMillis"]},{"name":"val end: Painter?","description":"com.github.panpf.sketch.painter.CrossfadePainter.end","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/end.html","searchKeys":["end","val end: Painter?","com.github.panpf.sketch.painter.CrossfadePainter.end"]},{"name":"val equalityKey: Any","description":"com.github.panpf.sketch.painter.EquitablePainter.equalityKey","location":"sketch-compose-core/com.github.panpf.sketch.painter/-equitable-painter/equality-key.html","searchKeys":["equalityKey","val equalityKey: Any","com.github.panpf.sketch.painter.EquitablePainter.equalityKey"]},{"name":"val fadeStart: Boolean","description":"com.github.panpf.sketch.painter.CrossfadePainter.fadeStart","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/fade-start.html","searchKeys":["fadeStart","val fadeStart: Boolean","com.github.panpf.sketch.painter.CrossfadePainter.fadeStart"]},{"name":"val fadeStart: Boolean","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.fadeStart","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/-factory/fade-start.html","searchKeys":["fadeStart","val fadeStart: Boolean","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.fadeStart"]},{"name":"val fadeStart: Boolean","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.fadeStart","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/fade-start.html","searchKeys":["fadeStart","val fadeStart: Boolean","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.fadeStart"]},{"name":"val filterQuality: FilterQuality","description":"com.github.panpf.sketch.painter.ImageBitmapPainter.filterQuality","location":"sketch-compose-core/com.github.panpf.sketch.painter/-image-bitmap-painter/filter-quality.html","searchKeys":["filterQuality","val filterQuality: FilterQuality","com.github.panpf.sketch.painter.ImageBitmapPainter.filterQuality"]},{"name":"val fitScale: Boolean","description":"com.github.panpf.sketch.painter.CrossfadePainter.fitScale","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/fit-scale.html","searchKeys":["fitScale","val fitScale: Boolean","com.github.panpf.sketch.painter.CrossfadePainter.fitScale"]},{"name":"val fitScale: Boolean","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.fitScale","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/fit-scale.html","searchKeys":["fitScale","val fitScale: Boolean","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.fitScale"]},{"name":"val icon: EquitablePainter","description":"com.github.panpf.sketch.painter.IconPainter.icon","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-painter/icon.html","searchKeys":["icon","val icon: EquitablePainter","com.github.panpf.sketch.painter.IconPainter.icon"]},{"name":"val icon: EquitablePainter","description":"com.github.panpf.sketch.state.IconAnimatablePainterStateImage.icon","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-animatable-painter-state-image/icon.html","searchKeys":["icon","val icon: EquitablePainter","com.github.panpf.sketch.state.IconAnimatablePainterStateImage.icon"]},{"name":"val icon: EquitablePainter","description":"com.github.panpf.sketch.state.IconPainterStateImage.icon","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-painter-state-image/icon.html","searchKeys":["icon","val icon: EquitablePainter","com.github.panpf.sketch.state.IconPainterStateImage.icon"]},{"name":"val iconSize: Size? = null","description":"com.github.panpf.sketch.painter.IconPainter.iconSize","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-painter/icon-size.html","searchKeys":["iconSize","val iconSize: Size? = null","com.github.panpf.sketch.painter.IconPainter.iconSize"]},{"name":"val iconSize: Size? = null","description":"com.github.panpf.sketch.state.IconAnimatablePainterStateImage.iconSize","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-animatable-painter-state-image/icon-size.html","searchKeys":["iconSize","val iconSize: Size? = null","com.github.panpf.sketch.state.IconAnimatablePainterStateImage.iconSize"]},{"name":"val iconSize: Size? = null","description":"com.github.panpf.sketch.state.IconPainterStateImage.iconSize","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-painter-state-image/icon-size.html","searchKeys":["iconSize","val iconSize: Size? = null","com.github.panpf.sketch.state.IconPainterStateImage.iconSize"]},{"name":"val iconTint: Color? = null","description":"com.github.panpf.sketch.painter.IconPainter.iconTint","location":"sketch-compose-core/com.github.panpf.sketch.painter/-icon-painter/icon-tint.html","searchKeys":["iconTint","val iconTint: Color? = null","com.github.panpf.sketch.painter.IconPainter.iconTint"]},{"name":"val iconTint: Color? = null","description":"com.github.panpf.sketch.state.IconAnimatablePainterStateImage.iconTint","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-animatable-painter-state-image/icon-tint.html","searchKeys":["iconTint","val iconTint: Color? = null","com.github.panpf.sketch.state.IconAnimatablePainterStateImage.iconTint"]},{"name":"val iconTint: Color? = null","description":"com.github.panpf.sketch.state.IconPainterStateImage.iconTint","location":"sketch-compose-core/com.github.panpf.sketch.state/-icon-painter-state-image/icon-tint.html","searchKeys":["iconTint","val iconTint: Color? = null","com.github.panpf.sketch.state.IconPainterStateImage.iconTint"]},{"name":"val imageOptions: ImageOptions?","description":"com.github.panpf.sketch.AsyncImageState.imageOptions","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/image-options.html","searchKeys":["imageOptions","val imageOptions: ImageOptions?","com.github.panpf.sketch.AsyncImageState.imageOptions"]},{"name":"val inspectionMode: Boolean","description":"com.github.panpf.sketch.AsyncImageState.inspectionMode","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/inspection-mode.html","searchKeys":["inspectionMode","val inspectionMode: Boolean","com.github.panpf.sketch.AsyncImageState.inspectionMode"]},{"name":"val isRemembered: Boolean","description":"com.github.panpf.sketch.util.RememberedCounter.isRemembered","location":"sketch-compose-core/com.github.panpf.sketch.util/-remembered-counter/is-remembered.html","searchKeys":["isRemembered","val isRemembered: Boolean","com.github.panpf.sketch.util.RememberedCounter.isRemembered"]},{"name":"val lifecycle: Lifecycle","description":"com.github.panpf.sketch.AsyncImageState.lifecycle","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/lifecycle.html","searchKeys":["lifecycle","val lifecycle: Lifecycle","com.github.panpf.sketch.AsyncImageState.lifecycle"]},{"name":"val painter: EquitablePainter","description":"com.github.panpf.sketch.state.PainterStateImage.painter","location":"sketch-compose-core/com.github.panpf.sketch.state/-painter-state-image/painter.html","searchKeys":["painter","val painter: EquitablePainter","com.github.panpf.sketch.state.PainterStateImage.painter"]},{"name":"val painter: Painter","description":"com.github.panpf.sketch.PainterImage.painter","location":"sketch-compose-core/com.github.panpf.sketch/-painter-image/painter.html","searchKeys":["painter","val painter: Painter","com.github.panpf.sketch.PainterImage.painter"]},{"name":"val painter: Painter","description":"com.github.panpf.sketch.painter.PainterWrapper.painter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-painter-wrapper/painter.html","searchKeys":["painter","val painter: Painter","com.github.panpf.sketch.painter.PainterWrapper.painter"]},{"name":"val painter: Painter","description":"com.github.panpf.sketch.painter.ResizePainter.painter","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-painter/painter.html","searchKeys":["painter","val painter: Painter","com.github.panpf.sketch.painter.ResizePainter.painter"]},{"name":"val preferExactIntrinsicSize: Boolean","description":"com.github.panpf.sketch.painter.CrossfadePainter.preferExactIntrinsicSize","location":"sketch-compose-core/com.github.panpf.sketch.painter/-crossfade-painter/prefer-exact-intrinsic-size.html","searchKeys":["preferExactIntrinsicSize","val preferExactIntrinsicSize: Boolean","com.github.panpf.sketch.painter.CrossfadePainter.preferExactIntrinsicSize"]},{"name":"val preferExactIntrinsicSize: Boolean","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.preferExactIntrinsicSize","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/-factory/prefer-exact-intrinsic-size.html","searchKeys":["preferExactIntrinsicSize","val preferExactIntrinsicSize: Boolean","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.Factory.preferExactIntrinsicSize"]},{"name":"val preferExactIntrinsicSize: Boolean","description":"com.github.panpf.sketch.transition.ComposeCrossfadeTransition.preferExactIntrinsicSize","location":"sketch-compose-core/com.github.panpf.sketch.transition/-compose-crossfade-transition/prefer-exact-intrinsic-size.html","searchKeys":["preferExactIntrinsicSize","val preferExactIntrinsicSize: Boolean","com.github.panpf.sketch.transition.ComposeCrossfadeTransition.preferExactIntrinsicSize"]},{"name":"val result: ImageResult.Error","description":"com.github.panpf.sketch.PainterState.Error.result","location":"sketch-compose-core/com.github.panpf.sketch/-painter-state/-error/result.html","searchKeys":["result","val result: ImageResult.Error","com.github.panpf.sketch.PainterState.Error.result"]},{"name":"val result: ImageResult.Success","description":"com.github.panpf.sketch.PainterState.Success.result","location":"sketch-compose-core/com.github.panpf.sketch/-painter-state/-success/result.html","searchKeys":["result","val result: ImageResult.Success","com.github.panpf.sketch.PainterState.Success.result"]},{"name":"val scale: Scale","description":"com.github.panpf.sketch.painter.ResizePainter.scale","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-painter/scale.html","searchKeys":["scale","val scale: Scale","com.github.panpf.sketch.painter.ResizePainter.scale"]},{"name":"val size: Size","description":"com.github.panpf.sketch.painter.ResizePainter.size","location":"sketch-compose-core/com.github.panpf.sketch.painter/-resize-painter/size.html","searchKeys":["size","val size: Size","com.github.panpf.sketch.painter.ResizePainter.size"]},{"name":"val sizeState: MutableStateFlow<IntSize?>","description":"com.github.panpf.sketch.resize.AsyncImageSizeResolver.sizeState","location":"sketch-compose-core/com.github.panpf.sketch.resize/-async-image-size-resolver/size-state.html","searchKeys":["sizeState","val sizeState: MutableStateFlow<IntSize?>","com.github.panpf.sketch.resize.AsyncImageSizeResolver.sizeState"]},{"name":"val state: AsyncImageState","description":"com.github.panpf.sketch.AsyncImagePainter.state","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-painter/state.html","searchKeys":["state","val state: AsyncImageState","com.github.panpf.sketch.AsyncImagePainter.state"]},{"name":"var alignment: Alignment","description":"com.github.panpf.sketch.AsyncImageState.alignment","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/alignment.html","searchKeys":["alignment","var alignment: Alignment","com.github.panpf.sketch.AsyncImageState.alignment"]},{"name":"var contentScale: ContentScale","description":"com.github.panpf.sketch.AsyncImageState.contentScale","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/content-scale.html","searchKeys":["contentScale","var contentScale: ContentScale","com.github.panpf.sketch.AsyncImageState.contentScale"]},{"name":"var count: Int","description":"com.github.panpf.sketch.util.RememberedCounter.count","location":"sketch-compose-core/com.github.panpf.sketch.util/-remembered-counter/count.html","searchKeys":["count","var count: Int","com.github.panpf.sketch.util.RememberedCounter.count"]},{"name":"var filterQuality: FilterQuality","description":"com.github.panpf.sketch.AsyncImageState.filterQuality","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/filter-quality.html","searchKeys":["filterQuality","var filterQuality: FilterQuality","com.github.panpf.sketch.AsyncImageState.filterQuality"]},{"name":"var imageState: AsyncImageState?","description":"com.github.panpf.sketch.target.AsyncImageTarget.imageState","location":"sketch-compose-core/com.github.panpf.sketch.target/-async-image-target/image-state.html","searchKeys":["imageState","var imageState: AsyncImageState?","com.github.panpf.sketch.target.AsyncImageTarget.imageState"]},{"name":"var loadState: LoadState?","description":"com.github.panpf.sketch.AsyncImageState.loadState","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/load-state.html","searchKeys":["loadState","var loadState: LoadState?","com.github.panpf.sketch.AsyncImageState.loadState"]},{"name":"var onLoadState: (LoadState) -> Unit?","description":"com.github.panpf.sketch.AsyncImageState.onLoadState","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/on-load-state.html","searchKeys":["onLoadState","var onLoadState: (LoadState) -> Unit?","com.github.panpf.sketch.AsyncImageState.onLoadState"]},{"name":"var onPainterState: (PainterState) -> Unit?","description":"com.github.panpf.sketch.AsyncImageState.onPainterState","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/on-painter-state.html","searchKeys":["onPainterState","var onPainterState: (PainterState) -> Unit?","com.github.panpf.sketch.AsyncImageState.onPainterState"]},{"name":"var painter: Painter?","description":"com.github.panpf.sketch.AsyncImageState.painter","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/painter.html","searchKeys":["painter","var painter: Painter?","com.github.panpf.sketch.AsyncImageState.painter"]},{"name":"var painterState: PainterState?","description":"com.github.panpf.sketch.AsyncImageState.painterState","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/painter-state.html","searchKeys":["painterState","var painterState: PainterState?","com.github.panpf.sketch.AsyncImageState.painterState"]},{"name":"var progress: Progress?","description":"com.github.panpf.sketch.AsyncImageState.progress","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/progress.html","searchKeys":["progress","var progress: Progress?","com.github.panpf.sketch.AsyncImageState.progress"]},{"name":"var request: ImageRequest?","description":"com.github.panpf.sketch.AsyncImageState.request","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/request.html","searchKeys":["request","var request: ImageRequest?","com.github.panpf.sketch.AsyncImageState.request"]},{"name":"var result: ImageResult?","description":"com.github.panpf.sketch.AsyncImageState.result","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/result.html","searchKeys":["result","var result: ImageResult?","com.github.panpf.sketch.AsyncImageState.result"]},{"name":"var size: IntSize?","description":"com.github.panpf.sketch.AsyncImageState.size","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/size.html","searchKeys":["size","var size: IntSize?","com.github.panpf.sketch.AsyncImageState.size"]},{"name":"var sketch: Sketch?","description":"com.github.panpf.sketch.AsyncImageState.sketch","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/sketch.html","searchKeys":["sketch","var sketch: Sketch?","com.github.panpf.sketch.AsyncImageState.sketch"]},{"name":"var windowContainerSize: IntSize?","description":"com.github.panpf.sketch.AsyncImageState.windowContainerSize","location":"sketch-compose-core/com.github.panpf.sketch/-async-image-state/window-container-size.html","searchKeys":["windowContainerSize","var windowContainerSize: IntSize?","com.github.panpf.sketch.AsyncImageState.windowContainerSize"]},{"name":"fun AsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","description":"com.github.panpf.sketch.AsyncImage","location":"sketch-compose/com.github.panpf.sketch/-async-image.html","searchKeys":["AsyncImage","fun AsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","com.github.panpf.sketch.AsyncImage"]},{"name":"fun AsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true, keepContentNoneStartOnDraw: Boolean = false)","description":"com.github.panpf.sketch.AsyncImage","location":"sketch-compose/com.github.panpf.sketch/-async-image.html","searchKeys":["AsyncImage","fun AsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true, keepContentNoneStartOnDraw: Boolean = false)","com.github.panpf.sketch.AsyncImage"]},{"name":"fun AsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","description":"com.github.panpf.sketch.AsyncImage","location":"sketch-compose/com.github.panpf.sketch/-async-image.html","searchKeys":["AsyncImage","fun AsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","com.github.panpf.sketch.AsyncImage"]},{"name":"fun AsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true, keepContentNoneStartOnDraw: Boolean = false)","description":"com.github.panpf.sketch.AsyncImage","location":"sketch-compose/com.github.panpf.sketch/-async-image.html","searchKeys":["AsyncImage","fun AsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true, keepContentNoneStartOnDraw: Boolean = false)","com.github.panpf.sketch.AsyncImage"]},{"name":"fun SubcomposeAsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","description":"com.github.panpf.sketch.SubcomposeAsyncImage","location":"sketch-compose/com.github.panpf.sketch/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","com.github.panpf.sketch.SubcomposeAsyncImage"]},{"name":"fun SubcomposeAsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), loading: SubcomposeAsyncImageScope.(PainterState.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(PainterState.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","description":"com.github.panpf.sketch.SubcomposeAsyncImage","location":"sketch-compose/com.github.panpf.sketch/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(request: ImageRequest, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), loading: SubcomposeAsyncImageScope.(PainterState.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(PainterState.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","com.github.panpf.sketch.SubcomposeAsyncImage"]},{"name":"fun SubcomposeAsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","description":"com.github.panpf.sketch.SubcomposeAsyncImage","location":"sketch-compose/com.github.panpf.sketch/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","com.github.panpf.sketch.SubcomposeAsyncImage"]},{"name":"fun SubcomposeAsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), loading: SubcomposeAsyncImageScope.(PainterState.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(PainterState.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","description":"com.github.panpf.sketch.SubcomposeAsyncImage","location":"sketch-compose/com.github.panpf.sketch/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(uri: String?, contentDescription: String?, modifier: Modifier = Modifier, state: AsyncImageState = rememberAsyncImageState(), loading: SubcomposeAsyncImageScope.(PainterState.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(PainterState.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(PainterState.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, clipToBounds: Boolean = true)","com.github.panpf.sketch.SubcomposeAsyncImage"]},{"name":"fun rememberAsyncImagePainter(request: ImageRequest, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"com.github.panpf.sketch.rememberAsyncImagePainter","location":"sketch-compose/com.github.panpf.sketch/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(request: ImageRequest, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","com.github.panpf.sketch.rememberAsyncImagePainter"]},{"name":"fun rememberAsyncImagePainter(request: ImageRequest, state: AsyncImageState = rememberAsyncImageState(), contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"com.github.panpf.sketch.rememberAsyncImagePainter","location":"sketch-compose/com.github.panpf.sketch/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(request: ImageRequest, state: AsyncImageState = rememberAsyncImageState(), contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","com.github.panpf.sketch.rememberAsyncImagePainter"]},{"name":"fun rememberAsyncImagePainter(uri: String?, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"com.github.panpf.sketch.rememberAsyncImagePainter","location":"sketch-compose/com.github.panpf.sketch/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(uri: String?, state: AsyncImageState = rememberAsyncImageState(), alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","com.github.panpf.sketch.rememberAsyncImagePainter"]},{"name":"fun rememberAsyncImagePainter(uri: String?, state: AsyncImageState = rememberAsyncImageState(), contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"com.github.panpf.sketch.rememberAsyncImagePainter","location":"sketch-compose/com.github.panpf.sketch/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(uri: String?, state: AsyncImageState = rememberAsyncImageState(), contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","com.github.panpf.sketch.rememberAsyncImagePainter"]}]